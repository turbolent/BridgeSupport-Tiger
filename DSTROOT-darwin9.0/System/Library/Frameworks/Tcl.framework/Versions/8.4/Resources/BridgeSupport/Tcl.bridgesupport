<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<struct name='ActiveCommandTrace' type='{ActiveCommandTrace=&quot;cmdPtr&quot;^{Command}&quot;nextPtr&quot;^{ActiveCommandTrace}&quot;nextTracePtr&quot;^{CommandTrace}}'>
<field name='cmdPtr' declared_type='struct Command*' type='^{Command=^{Tcl_HashEntry}^{Namespace}ii^?^?^v^?^v^?^vi^{ImportRef}^{CommandTrace}}'/>
<field name='nextPtr' declared_type='struct ActiveCommandTrace*' type='^{ActiveCommandTrace=^{Command}^{ActiveCommandTrace}^{CommandTrace}}'/>
<field name='nextTracePtr' declared_type='CommandTrace*' type='^{CommandTrace=^?^vi^{CommandTrace}i}'/>
</struct>
<struct name='ActiveInterpTrace' type='{ActiveInterpTrace=&quot;nextPtr&quot;^{ActiveInterpTrace}&quot;nextTracePtr&quot;^{Trace}}'>
<field name='nextPtr' declared_type='struct ActiveInterpTrace*' type='^{ActiveInterpTrace=^{ActiveInterpTrace}^{Trace}}'/>
<field name='nextTracePtr' declared_type='Trace*' type='^{Trace=i^?^v^{Trace}i^?}'/>
</struct>
<struct name='ActiveVarTrace' type='{ActiveVarTrace=&quot;varPtr&quot;^{Var}&quot;nextPtr&quot;^{ActiveVarTrace}&quot;nextTracePtr&quot;^{VarTrace}}'>
<field name='varPtr' declared_type='struct Var*' type='^{Var=(?=^{Tcl_Obj}^{Tcl_HashTable}^{Var})*^{Namespace}^{Tcl_HashEntry}i^{VarTrace}^{ArraySearch}i}'/>
<field name='nextPtr' declared_type='struct ActiveVarTrace*' type='^{ActiveVarTrace=^{Var}^{ActiveVarTrace}^{VarTrace}}'/>
<field name='nextTracePtr' declared_type='VarTrace*' type='^{VarTrace=^?^vi^{VarTrace}}'/>
</struct>
<struct name='ArraySearch' type='{ArraySearch=&quot;id&quot;i&quot;varPtr&quot;^{Var}&quot;search&quot;{Tcl_HashSearch=&quot;tablePtr&quot;^{Tcl_HashTable}&quot;nextIndex&quot;i&quot;nextEntryPtr&quot;^{Tcl_HashEntry}}&quot;nextEntry&quot;^{Tcl_HashEntry}&quot;nextPtr&quot;^{ArraySearch}}'>
<field name='id' declared_type='int' type='i'/>
<field name='varPtr' declared_type='struct Var*' type='^{Var=(?=^{Tcl_Obj}^{Tcl_HashTable}^{Var})*^{Namespace}^{Tcl_HashEntry}i^{VarTrace}^{ArraySearch}i}'/>
<field name='search' declared_type='Tcl_HashSearch' type='{Tcl_HashSearch=&quot;tablePtr&quot;^{Tcl_HashTable}&quot;nextIndex&quot;i&quot;nextEntryPtr&quot;^{Tcl_HashEntry}}'/>
<field name='nextEntry' declared_type='Tcl_HashEntry*' type='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][4c])}'/>
<field name='nextPtr' declared_type='struct ArraySearch*' type='^{ArraySearch=i^{Var}{Tcl_HashSearch=^{Tcl_HashTable}i^{Tcl_HashEntry}}^{Tcl_HashEntry}^{ArraySearch}}'/>
</struct>
<struct name='AssocData' type='{AssocData=&quot;proc&quot;^?&quot;clientData&quot;^v}'>
<field name='proc' function_pointer='true' declared_type='Tcl_InterpDeleteProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='clientData' declared_type='ClientData' type='^v'/>
</struct>
<struct name='AuxData' type='{AuxData=&quot;type&quot;^{AuxDataType}&quot;clientData&quot;^v}'>
<field name='type' declared_type='AuxDataType*' type='^{AuxDataType=*^?^?}'/>
<field name='clientData' declared_type='ClientData' type='^v'/>
</struct>
<struct name='AuxDataType' type='{AuxDataType=&quot;name&quot;*&quot;dupProc&quot;^?&quot;freeProc&quot;^?}'>
<field name='name' declared_type='char*' type='*'/>
<field name='dupProc' function_pointer='true' declared_type='AuxDataDupProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='ClientData' type='^v'/>
</field>
<field name='freeProc' function_pointer='true' declared_type='AuxDataFreeProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
</struct>
<struct name='BuiltinFunc' type='{_BuiltinFunc=&quot;name&quot;*&quot;numArgs&quot;i&quot;argTypes&quot;[5i]&quot;proc&quot;^?&quot;clientData&quot;^v}'>
<field name='name' declared_type='char*' type='*'/>
<field name='numArgs' declared_type='int' type='i'/>
<field name='argTypes' declared_type='Tcl_ValueType*' type='[5i]'/>
<field name='proc' function_pointer='true' declared_type='CallBuiltinFuncProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='ExecEnv*' type='^{ExecEnv=^^{Tcl_Obj}ii^{Tcl_Obj}^{Tcl_Obj}}'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field name='clientData' declared_type='ClientData' type='^v'/>
</struct>
<struct name='ByteCode' type='{ByteCode=&quot;interpHandle&quot;^^v&quot;compileEpoch&quot;i&quot;nsPtr&quot;^{Namespace}&quot;nsEpoch&quot;i&quot;refCount&quot;i&quot;flags&quot;I&quot;source&quot;*&quot;procPtr&quot;^{Proc}&quot;structureSize&quot;I&quot;numCommands&quot;i&quot;numSrcBytes&quot;i&quot;numCodeBytes&quot;i&quot;numLitObjects&quot;i&quot;numExceptRanges&quot;i&quot;numAuxDataItems&quot;i&quot;numCmdLocBytes&quot;i&quot;maxExceptDepth&quot;i&quot;maxStackDepth&quot;i&quot;codeStart&quot;*&quot;objArrayPtr&quot;^^{Tcl_Obj}&quot;exceptArrayPtr&quot;^{ExceptionRange}&quot;auxDataArrayPtr&quot;^{AuxData}&quot;codeDeltaStart&quot;*&quot;codeLengthStart&quot;*&quot;srcDeltaStart&quot;*&quot;srcLengthStart&quot;*}' type64='{ByteCode=&quot;interpHandle&quot;^^v&quot;compileEpoch&quot;i&quot;nsPtr&quot;^{Namespace}&quot;nsEpoch&quot;i&quot;refCount&quot;i&quot;flags&quot;I&quot;source&quot;*&quot;procPtr&quot;^{Proc}&quot;structureSize&quot;Q&quot;numCommands&quot;i&quot;numSrcBytes&quot;i&quot;numCodeBytes&quot;i&quot;numLitObjects&quot;i&quot;numExceptRanges&quot;i&quot;numAuxDataItems&quot;i&quot;numCmdLocBytes&quot;i&quot;maxExceptDepth&quot;i&quot;maxStackDepth&quot;i&quot;codeStart&quot;*&quot;objArrayPtr&quot;^^{Tcl_Obj}&quot;exceptArrayPtr&quot;^{ExceptionRange}&quot;auxDataArrayPtr&quot;^{AuxData}&quot;codeDeltaStart&quot;*&quot;codeLengthStart&quot;*&quot;srcDeltaStart&quot;*&quot;srcLengthStart&quot;*}'>
<field name='interpHandle' declared_type='TclHandle' type='^^v'/>
<field name='compileEpoch' declared_type='int' type='i'/>
<field name='nsPtr' declared_type='Namespace*' type='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}l^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}' type64='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}q^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}'/>
<field name='nsEpoch' declared_type='int' type='i'/>
<field name='refCount' declared_type='int' type='i'/>
<field name='flags' declared_type='unsigned int' type='I'/>
<field name='source' declared_type='char*' type='*'/>
<field name='procPtr' declared_type='Proc*' type='^{Proc=^{Interp}i^{Command}^{Tcl_Obj}ii^{CompiledLocal}^{CompiledLocal}}'/>
<field name='structureSize' declared_type='size_t' type='L' type64='Q'/>
<field name='numCommands' declared_type='int' type='i'/>
<field name='numSrcBytes' declared_type='int' type='i'/>
<field name='numCodeBytes' declared_type='int' type='i'/>
<field name='numLitObjects' declared_type='int' type='i'/>
<field name='numExceptRanges' declared_type='int' type='i'/>
<field name='numAuxDataItems' declared_type='int' type='i'/>
<field name='numCmdLocBytes' declared_type='int' type='i'/>
<field name='maxExceptDepth' declared_type='int' type='i'/>
<field name='maxStackDepth' declared_type='int' type='i'/>
<field name='codeStart' declared_type='unsigned char*' type='*'/>
<field name='objArrayPtr' declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<field name='exceptArrayPtr' declared_type='ExceptionRange*' type='^{ExceptionRange=iiiiiii}'/>
<field name='auxDataArrayPtr' declared_type='AuxData*' type='^{AuxData=^{AuxDataType}^v}'/>
<field name='codeDeltaStart' declared_type='unsigned char*' type='*'/>
<field name='codeLengthStart' declared_type='unsigned char*' type='*'/>
<field name='srcDeltaStart' declared_type='unsigned char*' type='*'/>
<field name='srcLengthStart' declared_type='unsigned char*' type='*'/>
</struct>
<struct name='CallFrame' type='{CallFrame=&quot;nsPtr&quot;^{Namespace}&quot;isProcCallFrame&quot;i&quot;objc&quot;i&quot;objv&quot;^^{Tcl_Obj}&quot;callerPtr&quot;^{CallFrame}&quot;callerVarPtr&quot;^{CallFrame}&quot;level&quot;i&quot;procPtr&quot;^{Proc}&quot;varTablePtr&quot;^{Tcl_HashTable}&quot;numCompiledLocals&quot;i&quot;compiledLocals&quot;^{Var}}'>
<field name='nsPtr' declared_type='Namespace*' type='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}l^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}' type64='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}q^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}'/>
<field name='isProcCallFrame' declared_type='int' type='i'/>
<field name='objc' declared_type='int' type='i'/>
<field name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<field name='callerPtr' declared_type='struct CallFrame*' type='^{CallFrame=^{Namespace}ii^^{Tcl_Obj}^{CallFrame}^{CallFrame}i^{Proc}^{Tcl_HashTable}i^{Var}}'/>
<field name='callerVarPtr' declared_type='struct CallFrame*' type='^{CallFrame=^{Namespace}ii^^{Tcl_Obj}^{CallFrame}^{CallFrame}i^{Proc}^{Tcl_HashTable}i^{Var}}'/>
<field name='level' declared_type='int' type='i'/>
<field name='procPtr' declared_type='Proc*' type='^{Proc=^{Interp}i^{Command}^{Tcl_Obj}ii^{CompiledLocal}^{CompiledLocal}}'/>
<field name='varTablePtr' declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<field name='numCompiledLocals' declared_type='int' type='i'/>
<field name='compiledLocals' declared_type='Var*' type='^{Var=(?=^{Tcl_Obj}^{Tcl_HashTable}^{Var})*^{Namespace}^{Tcl_HashEntry}i^{VarTrace}^{ArraySearch}i}'/>
</struct>
<struct name='CmdLocation' type='{CmdLocation=&quot;codeOffset&quot;i&quot;numCodeBytes&quot;i&quot;srcOffset&quot;i&quot;numSrcBytes&quot;i}'>
<field name='codeOffset' declared_type='int' type='i'/>
<field name='numCodeBytes' declared_type='int' type='i'/>
<field name='srcOffset' declared_type='int' type='i'/>
<field name='numSrcBytes' declared_type='int' type='i'/>
</struct>
<struct name='Command' type='{Command=&quot;hPtr&quot;^{Tcl_HashEntry}&quot;nsPtr&quot;^{Namespace}&quot;refCount&quot;i&quot;cmdEpoch&quot;i&quot;compileProc&quot;^?&quot;objProc&quot;^?&quot;objClientData&quot;^v&quot;proc&quot;^?&quot;clientData&quot;^v&quot;deleteProc&quot;^?&quot;deleteData&quot;^v&quot;flags&quot;i&quot;importRefPtr&quot;^{ImportRef}&quot;tracePtr&quot;^{CommandTrace}}'>
<field name='hPtr' declared_type='Tcl_HashEntry*' type='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][4c])}'/>
<field name='nsPtr' declared_type='Namespace*' type='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}l^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}' type64='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}q^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}'/>
<field name='refCount' declared_type='int' type='i'/>
<field name='cmdEpoch' declared_type='int' type='i'/>
<field name='compileProc' function_pointer='true' declared_type='CompileProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='objProc' function_pointer='true' declared_type='Tcl_ObjCmdProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='struct Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='objClientData' declared_type='ClientData' type='^v'/>
<field name='proc' function_pointer='true' declared_type='Tcl_CmdProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char**' type='^*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='clientData' declared_type='ClientData' type='^v'/>
<field name='deleteProc' function_pointer='true' declared_type='Tcl_CmdDeleteProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='deleteData' declared_type='ClientData' type='^v'/>
<field name='flags' declared_type='int' type='i'/>
<field name='importRefPtr' declared_type='ImportRef*' type='^{ImportRef=^{Command}^{ImportRef}}'/>
<field name='tracePtr' declared_type='CommandTrace*' type='^{CommandTrace=^?^vi^{CommandTrace}i}'/>
</struct>
<struct name='CommandTrace' type='{CommandTrace=&quot;traceProc&quot;^?&quot;clientData&quot;^v&quot;flags&quot;i&quot;nextPtr&quot;^{CommandTrace}&quot;refCount&quot;i}'>
<field name='traceProc' function_pointer='true' declared_type='Tcl_CommandTraceProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='clientData' declared_type='ClientData' type='^v'/>
<field name='flags' declared_type='int' type='i'/>
<field name='nextPtr' declared_type='struct CommandTrace*' type='^{CommandTrace=^?^vi^{CommandTrace}i}'/>
<field name='refCount' declared_type='int' type='i'/>
</struct>
<struct name='CompileEnv' type='{CompileEnv=&quot;iPtr&quot;^{Interp}&quot;source&quot;*&quot;numSrcBytes&quot;i&quot;procPtr&quot;^{Proc}&quot;numCommands&quot;i&quot;exceptDepth&quot;i&quot;maxExceptDepth&quot;i&quot;maxStackDepth&quot;i&quot;currStackDepth&quot;i&quot;localLitTable&quot;{LiteralTable=&quot;buckets&quot;^^{LiteralEntry}&quot;staticBuckets&quot;[4^{LiteralEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;mask&quot;i}&quot;codeStart&quot;*&quot;codeNext&quot;*&quot;codeEnd&quot;*&quot;mallocedCodeArray&quot;i&quot;literalArrayPtr&quot;^{LiteralEntry}&quot;literalArrayNext&quot;i&quot;literalArrayEnd&quot;i&quot;mallocedLiteralArray&quot;i&quot;exceptArrayPtr&quot;^{ExceptionRange}&quot;exceptArrayNext&quot;i&quot;exceptArrayEnd&quot;i&quot;mallocedExceptArray&quot;i&quot;cmdMapPtr&quot;^{CmdLocation}&quot;cmdMapEnd&quot;i&quot;mallocedCmdMap&quot;i&quot;auxDataArrayPtr&quot;^{AuxData}&quot;auxDataArrayNext&quot;i&quot;auxDataArrayEnd&quot;i&quot;mallocedAuxDataArray&quot;i&quot;staticCodeSpace&quot;[250C]&quot;staticLiteralSpace&quot;[60{LiteralEntry=&quot;nextPtr&quot;^{LiteralEntry}&quot;objPtr&quot;^{Tcl_Obj}&quot;refCount&quot;i}]&quot;staticExceptArraySpace&quot;[5{ExceptionRange=&quot;type&quot;i&quot;nestingLevel&quot;i&quot;codeOffset&quot;i&quot;numCodeBytes&quot;i&quot;breakOffset&quot;i&quot;continueOffset&quot;i&quot;catchOffset&quot;i}]&quot;staticCmdMapSpace&quot;[40{CmdLocation=&quot;codeOffset&quot;i&quot;numCodeBytes&quot;i&quot;srcOffset&quot;i&quot;numSrcBytes&quot;i}]&quot;staticAuxDataArraySpace&quot;[5{AuxData=&quot;type&quot;^{AuxDataType}&quot;clientData&quot;^v}]}'>
<field name='iPtr' declared_type='Interp*' type='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}il^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}' type64='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}iq^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}'/>
<field name='source' declared_type='char*' type='*'/>
<field name='numSrcBytes' declared_type='int' type='i'/>
<field name='procPtr' declared_type='Proc*' type='^{Proc=^{Interp}i^{Command}^{Tcl_Obj}ii^{CompiledLocal}^{CompiledLocal}}'/>
<field name='numCommands' declared_type='int' type='i'/>
<field name='exceptDepth' declared_type='int' type='i'/>
<field name='maxExceptDepth' declared_type='int' type='i'/>
<field name='maxStackDepth' declared_type='int' type='i'/>
<field name='currStackDepth' declared_type='int' type='i'/>
<field name='localLitTable' declared_type='LiteralTable' type='{LiteralTable=&quot;buckets&quot;^^{LiteralEntry}&quot;staticBuckets&quot;[4^{LiteralEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;mask&quot;i}'/>
<field name='codeStart' declared_type='unsigned char*' type='*'/>
<field name='codeNext' declared_type='unsigned char*' type='*'/>
<field name='codeEnd' declared_type='unsigned char*' type='*'/>
<field name='mallocedCodeArray' declared_type='int' type='i'/>
<field name='literalArrayPtr' declared_type='LiteralEntry*' type='^{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}'/>
<field name='literalArrayNext' declared_type='int' type='i'/>
<field name='literalArrayEnd' declared_type='int' type='i'/>
<field name='mallocedLiteralArray' declared_type='int' type='i'/>
<field name='exceptArrayPtr' declared_type='ExceptionRange*' type='^{ExceptionRange=iiiiiii}'/>
<field name='exceptArrayNext' declared_type='int' type='i'/>
<field name='exceptArrayEnd' declared_type='int' type='i'/>
<field name='mallocedExceptArray' declared_type='int' type='i'/>
<field name='cmdMapPtr' declared_type='CmdLocation*' type='^{CmdLocation=iiii}'/>
<field name='cmdMapEnd' declared_type='int' type='i'/>
<field name='mallocedCmdMap' declared_type='int' type='i'/>
<field name='auxDataArrayPtr' declared_type='AuxData*' type='^{AuxData=^{AuxDataType}^v}'/>
<field name='auxDataArrayNext' declared_type='int' type='i'/>
<field name='auxDataArrayEnd' declared_type='int' type='i'/>
<field name='mallocedAuxDataArray' declared_type='int' type='i'/>
<field name='staticCodeSpace' declared_type='unsigned char*' type='[250C]'/>
<field name='staticLiteralSpace' declared_type='LiteralEntry*' type='[60{LiteralEntry=&quot;nextPtr&quot;^{LiteralEntry}&quot;objPtr&quot;^{Tcl_Obj}&quot;refCount&quot;i}]'/>
<field name='staticExceptArraySpace' declared_type='ExceptionRange*' type='[5{ExceptionRange=&quot;type&quot;i&quot;nestingLevel&quot;i&quot;codeOffset&quot;i&quot;numCodeBytes&quot;i&quot;breakOffset&quot;i&quot;continueOffset&quot;i&quot;catchOffset&quot;i}]'/>
<field name='staticCmdMapSpace' declared_type='CmdLocation*' type='[40{CmdLocation=&quot;codeOffset&quot;i&quot;numCodeBytes&quot;i&quot;srcOffset&quot;i&quot;numSrcBytes&quot;i}]'/>
<field name='staticAuxDataArraySpace' declared_type='AuxData*' type='[5{AuxData=&quot;type&quot;^{AuxDataType}&quot;clientData&quot;^v}]'/>
</struct>
<struct name='CompiledLocal' type='{CompiledLocal=&quot;nextPtr&quot;^{CompiledLocal}&quot;nameLength&quot;i&quot;frameIndex&quot;i&quot;flags&quot;i&quot;defValuePtr&quot;^{Tcl_Obj}&quot;resolveInfo&quot;^{Tcl_ResolvedVarInfo}&quot;name&quot;[4c]}'>
<field name='nextPtr' declared_type='struct CompiledLocal*' type='^{CompiledLocal=^{CompiledLocal}iii^{Tcl_Obj}^{Tcl_ResolvedVarInfo}[4c]}'/>
<field name='nameLength' declared_type='int' type='i'/>
<field name='frameIndex' declared_type='int' type='i'/>
<field name='flags' declared_type='int' type='i'/>
<field name='defValuePtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v})}'/>
<field name='resolveInfo' declared_type='Tcl_ResolvedVarInfo*' type='^{Tcl_ResolvedVarInfo=^?^?}'/>
<field name='name' declared_type='char*' type='[4c]'/>
</struct>
<struct name='ExceptionRange' type='{ExceptionRange=&quot;type&quot;i&quot;nestingLevel&quot;i&quot;codeOffset&quot;i&quot;numCodeBytes&quot;i&quot;breakOffset&quot;i&quot;continueOffset&quot;i&quot;catchOffset&quot;i}'>
<field name='type' declared_type='ExceptionRangeType' type='i'/>
<field name='nestingLevel' declared_type='int' type='i'/>
<field name='codeOffset' declared_type='int' type='i'/>
<field name='numCodeBytes' declared_type='int' type='i'/>
<field name='breakOffset' declared_type='int' type='i'/>
<field name='continueOffset' declared_type='int' type='i'/>
<field name='catchOffset' declared_type='int' type='i'/>
</struct>
<struct name='ExecEnv' type='{ExecEnv=&quot;stackPtr&quot;^^{Tcl_Obj}&quot;stackTop&quot;i&quot;stackEnd&quot;i&quot;errorInfo&quot;^{Tcl_Obj}&quot;errorCode&quot;^{Tcl_Obj}}'>
<field name='stackPtr' declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<field name='stackTop' declared_type='int' type='i'/>
<field name='stackEnd' declared_type='int' type='i'/>
<field name='errorInfo' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v})}'/>
<field name='errorCode' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v})}'/>
</struct>
<struct name='ForeachInfo' type='{ForeachInfo=&quot;numLists&quot;i&quot;firstValueTemp&quot;i&quot;loopCtTemp&quot;i&quot;varLists&quot;[1^{ForeachVarList}]}'>
<field name='numLists' declared_type='int' type='i'/>
<field name='firstValueTemp' declared_type='int' type='i'/>
<field name='loopCtTemp' declared_type='int' type='i'/>
<field name='varLists' declared_type='ForeachVarList**' type='[1^{ForeachVarList}]'/>
</struct>
<struct name='ForeachVarList' type='{ForeachVarList=&quot;numVars&quot;i&quot;varIndexes&quot;[1i]}'>
<field name='numVars' declared_type='int' type='i'/>
<field name='varIndexes' declared_type='int*' type='[1i]'/>
</struct>
<struct name='ImportRef' type='{ImportRef=&quot;importedCmdPtr&quot;^{Command}&quot;nextPtr&quot;^{ImportRef}}'>
<field name='importedCmdPtr' declared_type='struct Command*' type='^{Command=^{Tcl_HashEntry}^{Namespace}ii^?^?^v^?^v^?^vi^{ImportRef}^{CommandTrace}}'/>
<field name='nextPtr' declared_type='struct ImportRef*' type='^{ImportRef=^{Command}^{ImportRef}}'/>
</struct>
<struct name='ImportedCmdData' type='{ImportedCmdData=&quot;realCmdPtr&quot;^{Command}&quot;selfPtr&quot;^{Command}}'>
<field name='realCmdPtr' declared_type='struct Command*' type='^{Command=^{Tcl_HashEntry}^{Namespace}ii^?^?^v^?^v^?^vi^{ImportRef}^{CommandTrace}}'/>
<field name='selfPtr' declared_type='struct Command*' type='^{Command=^{Tcl_HashEntry}^{Namespace}ii^?^?^v^?^v^?^vi^{ImportRef}^{CommandTrace}}'/>
</struct>
<struct name='InstructionDesc' type='{InstructionDesc=&quot;name&quot;*&quot;numBytes&quot;i&quot;stackEffect&quot;i&quot;numOperands&quot;i&quot;opTypes&quot;[2i]}'>
<field name='name' declared_type='char*' type='*'/>
<field name='numBytes' declared_type='int' type='i'/>
<field name='stackEffect' declared_type='int' type='i'/>
<field name='numOperands' declared_type='int' type='i'/>
<field name='opTypes' declared_type='InstOperandType*' type='[2i]'/>
</struct>
<struct name='Interp' type='{Interp=&quot;result&quot;*&quot;freeProc&quot;^?&quot;errorLine&quot;i&quot;stubTable&quot;^{TclStubs}&quot;handle&quot;^^v&quot;globalNsPtr&quot;^{Namespace}&quot;hiddenCmdTablePtr&quot;^{Tcl_HashTable}&quot;interpInfo&quot;^v&quot;mathFuncTable&quot;{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}&quot;numLevels&quot;i&quot;maxNestingDepth&quot;i&quot;framePtr&quot;^{CallFrame}&quot;varFramePtr&quot;^{CallFrame}&quot;activeVarTracePtr&quot;^{ActiveVarTrace}&quot;returnCode&quot;i&quot;errorInfo&quot;*&quot;errorCode&quot;*&quot;appendResult&quot;*&quot;appendAvl&quot;i&quot;appendUsed&quot;i&quot;packageTable&quot;{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}&quot;packageUnknown&quot;*&quot;cmdCount&quot;i&quot;evalFlags&quot;i&quot;termOffset&quot;i&quot;literalTable&quot;{LiteralTable=&quot;buckets&quot;^^{LiteralEntry}&quot;staticBuckets&quot;[4^{LiteralEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;mask&quot;i}&quot;compileEpoch&quot;i&quot;compiledProcPtr&quot;^{Proc}&quot;resolverPtr&quot;^{ResolverScheme}&quot;scriptFile&quot;^{Tcl_Obj}&quot;flags&quot;i&quot;randSeed&quot;l&quot;tracePtr&quot;^{Trace}&quot;assocData&quot;^{Tcl_HashTable}&quot;execEnvPtr&quot;^{ExecEnv}&quot;emptyObjPtr&quot;^{Tcl_Obj}&quot;resultSpace&quot;[201c]&quot;objResultPtr&quot;^{Tcl_Obj}&quot;threadId&quot;^{Tcl_ThreadId_}&quot;activeCmdTracePtr&quot;^{ActiveCommandTrace}&quot;activeInterpTracePtr&quot;^{ActiveInterpTrace}&quot;tracesForbiddingInline&quot;i}' type64='{Interp=&quot;result&quot;*&quot;freeProc&quot;^?&quot;errorLine&quot;i&quot;stubTable&quot;^{TclStubs}&quot;handle&quot;^^v&quot;globalNsPtr&quot;^{Namespace}&quot;hiddenCmdTablePtr&quot;^{Tcl_HashTable}&quot;interpInfo&quot;^v&quot;mathFuncTable&quot;{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}&quot;numLevels&quot;i&quot;maxNestingDepth&quot;i&quot;framePtr&quot;^{CallFrame}&quot;varFramePtr&quot;^{CallFrame}&quot;activeVarTracePtr&quot;^{ActiveVarTrace}&quot;returnCode&quot;i&quot;errorInfo&quot;*&quot;errorCode&quot;*&quot;appendResult&quot;*&quot;appendAvl&quot;i&quot;appendUsed&quot;i&quot;packageTable&quot;{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}&quot;packageUnknown&quot;*&quot;cmdCount&quot;i&quot;evalFlags&quot;i&quot;termOffset&quot;i&quot;literalTable&quot;{LiteralTable=&quot;buckets&quot;^^{LiteralEntry}&quot;staticBuckets&quot;[4^{LiteralEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;mask&quot;i}&quot;compileEpoch&quot;i&quot;compiledProcPtr&quot;^{Proc}&quot;resolverPtr&quot;^{ResolverScheme}&quot;scriptFile&quot;^{Tcl_Obj}&quot;flags&quot;i&quot;randSeed&quot;q&quot;tracePtr&quot;^{Trace}&quot;assocData&quot;^{Tcl_HashTable}&quot;execEnvPtr&quot;^{ExecEnv}&quot;emptyObjPtr&quot;^{Tcl_Obj}&quot;resultSpace&quot;[201c]&quot;objResultPtr&quot;^{Tcl_Obj}&quot;threadId&quot;^{Tcl_ThreadId_}&quot;activeCmdTracePtr&quot;^{ActiveCommandTrace}&quot;activeInterpTracePtr&quot;^{ActiveInterpTrace}&quot;tracesForbiddingInline&quot;i}'>
<field name='result' declared_type='char*' type='*'/>
<field name='freeProc' function_pointer='true' declared_type='Tcl_FreeProc*' type='^?'>
<arg declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</field>
<field name='errorLine' declared_type='int' type='i'/>
<field name='stubTable' declared_type='struct TclStubs*' type='^{TclStubs=i^{TclStubHooks}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<field name='handle' declared_type='TclHandle' type='^^v'/>
<field name='globalNsPtr' declared_type='Namespace*' type='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}l^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}' type64='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}q^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}'/>
<field name='hiddenCmdTablePtr' declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<field name='interpInfo' declared_type='ClientData' type='^v'/>
<field name='mathFuncTable' declared_type='Tcl_HashTable' type='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field name='numLevels' declared_type='int' type='i'/>
<field name='maxNestingDepth' declared_type='int' type='i'/>
<field name='framePtr' declared_type='CallFrame*' type='^{CallFrame=^{Namespace}ii^^{Tcl_Obj}^{CallFrame}^{CallFrame}i^{Proc}^{Tcl_HashTable}i^{Var}}'/>
<field name='varFramePtr' declared_type='CallFrame*' type='^{CallFrame=^{Namespace}ii^^{Tcl_Obj}^{CallFrame}^{CallFrame}i^{Proc}^{Tcl_HashTable}i^{Var}}'/>
<field name='activeVarTracePtr' declared_type='ActiveVarTrace*' type='^{ActiveVarTrace=^{Var}^{ActiveVarTrace}^{VarTrace}}'/>
<field name='returnCode' declared_type='int' type='i'/>
<field name='errorInfo' declared_type='char*' type='*'/>
<field name='errorCode' declared_type='char*' type='*'/>
<field name='appendResult' declared_type='char*' type='*'/>
<field name='appendAvl' declared_type='int' type='i'/>
<field name='appendUsed' declared_type='int' type='i'/>
<field name='packageTable' declared_type='Tcl_HashTable' type='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field name='packageUnknown' declared_type='char*' type='*'/>
<field name='cmdCount' declared_type='int' type='i'/>
<field name='evalFlags' declared_type='int' type='i'/>
<field name='termOffset' declared_type='int' type='i'/>
<field name='literalTable' declared_type='LiteralTable' type='{LiteralTable=&quot;buckets&quot;^^{LiteralEntry}&quot;staticBuckets&quot;[4^{LiteralEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;mask&quot;i}'/>
<field name='compileEpoch' declared_type='int' type='i'/>
<field name='compiledProcPtr' declared_type='Proc*' type='^{Proc=^{Interp}i^{Command}^{Tcl_Obj}ii^{CompiledLocal}^{CompiledLocal}}'/>
<field name='resolverPtr' declared_type='ResolverScheme*' type='^{ResolverScheme=*^?^?^?^{ResolverScheme}}'/>
<field name='scriptFile' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v})}'/>
<field name='flags' declared_type='int' type='i'/>
<field name='randSeed' declared_type='long' type='l' type64='q'/>
<field name='tracePtr' declared_type='Trace*' type='^{Trace=i^?^v^{Trace}i^?}'/>
<field name='assocData' declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<field name='execEnvPtr' declared_type='struct ExecEnv*' type='^{ExecEnv=^^{Tcl_Obj}ii^{Tcl_Obj}^{Tcl_Obj}}'/>
<field name='emptyObjPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v})}'/>
<field name='resultSpace' declared_type='char*' type='[201c]'/>
<field name='objResultPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v})}'/>
<field name='threadId' declared_type='Tcl_ThreadId' type='^{Tcl_ThreadId_=}'/>
<field name='activeCmdTracePtr' declared_type='ActiveCommandTrace*' type='^{ActiveCommandTrace=^{Command}^{ActiveCommandTrace}^{CommandTrace}}'/>
<field name='activeInterpTracePtr' declared_type='ActiveInterpTrace*' type='^{ActiveInterpTrace=^{ActiveInterpTrace}^{Trace}}'/>
<field name='tracesForbiddingInline' declared_type='int' type='i'/>
</struct>
<struct name='JumpFixup' type='{JumpFixup=&quot;jumpType&quot;i&quot;codeOffset&quot;i&quot;cmdIndex&quot;i&quot;exceptIndex&quot;i}'>
<field name='jumpType' declared_type='TclJumpType' type='i'/>
<field name='codeOffset' declared_type='int' type='i'/>
<field name='cmdIndex' declared_type='int' type='i'/>
<field name='exceptIndex' declared_type='int' type='i'/>
</struct>
<struct name='JumpFixupArray' type='{JumpFixupArray=&quot;fixup&quot;^{JumpFixup}&quot;next&quot;i&quot;end&quot;i&quot;mallocedArray&quot;i&quot;staticFixupSpace&quot;[10{JumpFixup=&quot;jumpType&quot;i&quot;codeOffset&quot;i&quot;cmdIndex&quot;i&quot;exceptIndex&quot;i}]}'>
<field name='fixup' declared_type='JumpFixup*' type='^{JumpFixup=iiii}'/>
<field name='next' declared_type='int' type='i'/>
<field name='end' declared_type='int' type='i'/>
<field name='mallocedArray' declared_type='int' type='i'/>
<field name='staticFixupSpace' declared_type='JumpFixup*' type='[10{JumpFixup=&quot;jumpType&quot;i&quot;codeOffset&quot;i&quot;cmdIndex&quot;i&quot;exceptIndex&quot;i}]'/>
</struct>
<struct name='List' type='{List=&quot;maxElemCount&quot;i&quot;elemCount&quot;i&quot;elements&quot;^^{Tcl_Obj}}'>
<field name='maxElemCount' declared_type='int' type='i'/>
<field name='elemCount' declared_type='int' type='i'/>
<field name='elements' declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
</struct>
<struct name='LiteralEntry' type='{LiteralEntry=&quot;nextPtr&quot;^{LiteralEntry}&quot;objPtr&quot;^{Tcl_Obj}&quot;refCount&quot;i}'>
<field name='nextPtr' declared_type='struct LiteralEntry*' type='^{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}'/>
<field name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v})}'/>
<field name='refCount' declared_type='int' type='i'/>
</struct>
<struct name='LiteralTable' type='{LiteralTable=&quot;buckets&quot;^^{LiteralEntry}&quot;staticBuckets&quot;[4^{LiteralEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;mask&quot;i}'>
<field name='buckets' declared_type='LiteralEntry**' type='^^{LiteralEntry}'/>
<field name='staticBuckets' declared_type='LiteralEntry**' type='[4^{LiteralEntry}]'/>
<field name='numBuckets' declared_type='int' type='i'/>
<field name='numEntries' declared_type='int' type='i'/>
<field name='rebuildSize' declared_type='int' type='i'/>
<field name='mask' declared_type='int' type='i'/>
</struct>
<struct name='MathFunc' type='{MathFunc=&quot;builtinFuncIndex&quot;i&quot;numArgs&quot;i&quot;argTypes&quot;[5i]&quot;proc&quot;^?&quot;clientData&quot;^v}'>
<field name='builtinFuncIndex' declared_type='int' type='i'/>
<field name='numArgs' declared_type='int' type='i'/>
<field name='argTypes' declared_type='Tcl_ValueType*' type='[5i]'/>
<field name='proc' function_pointer='true' declared_type='Tcl_MathProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Value*' type='^{Tcl_Value=ildq}' type64='^{Tcl_Value=iqdq}'/>
<arg declared_type='Tcl_Value*' type='^{Tcl_Value=ildq}' type64='^{Tcl_Value=iqdq}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='clientData' declared_type='ClientData' type='^v'/>
</struct>
<struct name='Namespace' type='{Namespace=&quot;name&quot;*&quot;fullName&quot;*&quot;clientData&quot;^v&quot;deleteProc&quot;^?&quot;parentPtr&quot;^{Namespace}&quot;childTable&quot;{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}&quot;nsId&quot;l&quot;interp&quot;^{Tcl_Interp}&quot;flags&quot;i&quot;activationCount&quot;i&quot;refCount&quot;i&quot;cmdTable&quot;{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}&quot;varTable&quot;{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}&quot;exportArrayPtr&quot;^*&quot;numExportPatterns&quot;i&quot;maxExportPatterns&quot;i&quot;cmdRefEpoch&quot;i&quot;resolverEpoch&quot;i&quot;cmdResProc&quot;^?&quot;varResProc&quot;^?&quot;compiledVarResProc&quot;^?}' type64='{Namespace=&quot;name&quot;*&quot;fullName&quot;*&quot;clientData&quot;^v&quot;deleteProc&quot;^?&quot;parentPtr&quot;^{Namespace}&quot;childTable&quot;{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}&quot;nsId&quot;q&quot;interp&quot;^{Tcl_Interp}&quot;flags&quot;i&quot;activationCount&quot;i&quot;refCount&quot;i&quot;cmdTable&quot;{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}&quot;varTable&quot;{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}&quot;exportArrayPtr&quot;^*&quot;numExportPatterns&quot;i&quot;maxExportPatterns&quot;i&quot;cmdRefEpoch&quot;i&quot;resolverEpoch&quot;i&quot;cmdResProc&quot;^?&quot;varResProc&quot;^?&quot;compiledVarResProc&quot;^?}'>
<field name='name' declared_type='char*' type='*'/>
<field name='fullName' declared_type='char*' type='*'/>
<field name='clientData' declared_type='ClientData' type='^v'/>
<field name='deleteProc' function_pointer='true' declared_type='Tcl_NamespaceDeleteProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='parentPtr' declared_type='struct Namespace*' type='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}l^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}' type64='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}q^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}'/>
<field name='childTable' declared_type='Tcl_HashTable' type='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field name='nsId' declared_type='long' type='l' type64='q'/>
<field name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<field name='flags' declared_type='int' type='i'/>
<field name='activationCount' declared_type='int' type='i'/>
<field name='refCount' declared_type='int' type='i'/>
<field name='cmdTable' declared_type='Tcl_HashTable' type='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field name='varTable' declared_type='Tcl_HashTable' type='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field name='exportArrayPtr' declared_type='char**' type='^*'/>
<field name='numExportPatterns' declared_type='int' type='i'/>
<field name='maxExportPatterns' declared_type='int' type='i'/>
<field name='cmdRefEpoch' declared_type='int' type='i'/>
<field name='resolverEpoch' declared_type='int' type='i'/>
<field name='cmdResProc' function_pointer='true' declared_type='Tcl_ResolveCmdProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Command*' type='^^{Tcl_Command_}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='varResProc' function_pointer='true' declared_type='Tcl_ResolveVarProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Var*' type='^^{Tcl_Var_}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='compiledVarResProc' function_pointer='true' declared_type='Tcl_ResolveCompiledVarProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='Tcl_ResolvedVarInfo**' type='^^{Tcl_ResolvedVarInfo}'/>
<retval declared_type='int' type='i'/>
</field>
</struct>
<struct name='Proc' type='{Proc=&quot;iPtr&quot;^{Interp}&quot;refCount&quot;i&quot;cmdPtr&quot;^{Command}&quot;bodyPtr&quot;^{Tcl_Obj}&quot;numArgs&quot;i&quot;numCompiledLocals&quot;i&quot;firstLocalPtr&quot;^{CompiledLocal}&quot;lastLocalPtr&quot;^{CompiledLocal}}'>
<field name='iPtr' declared_type='struct Interp*' type='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}il^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}' type64='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}iq^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}'/>
<field name='refCount' declared_type='int' type='i'/>
<field name='cmdPtr' declared_type='struct Command*' type='^{Command=^{Tcl_HashEntry}^{Namespace}ii^?^?^v^?^v^?^vi^{ImportRef}^{CommandTrace}}'/>
<field name='bodyPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v})}'/>
<field name='numArgs' declared_type='int' type='i'/>
<field name='numCompiledLocals' declared_type='int' type='i'/>
<field name='firstLocalPtr' declared_type='CompiledLocal*' type='^{CompiledLocal=^{CompiledLocal}iii^{Tcl_Obj}^{Tcl_ResolvedVarInfo}[4c]}'/>
<field name='lastLocalPtr' declared_type='CompiledLocal*' type='^{CompiledLocal=^{CompiledLocal}iii^{Tcl_Obj}^{Tcl_ResolvedVarInfo}[4c]}'/>
</struct>
<struct name='ResolverScheme' type='{ResolverScheme=&quot;name&quot;*&quot;cmdResProc&quot;^?&quot;varResProc&quot;^?&quot;compiledVarResProc&quot;^?&quot;nextPtr&quot;^{ResolverScheme}}'>
<field name='name' declared_type='char*' type='*'/>
<field name='cmdResProc' function_pointer='true' declared_type='Tcl_ResolveCmdProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Command*' type='^^{Tcl_Command_}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='varResProc' function_pointer='true' declared_type='Tcl_ResolveVarProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Var*' type='^^{Tcl_Var_}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='compiledVarResProc' function_pointer='true' declared_type='Tcl_ResolveCompiledVarProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='Tcl_ResolvedVarInfo**' type='^^{Tcl_ResolvedVarInfo}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='nextPtr' declared_type='struct ResolverScheme*' type='^{ResolverScheme=*^?^?^?^{ResolverScheme}}'/>
</struct>
<struct name='TclFileAttrProcs' type='{TclFileAttrProcs=&quot;getProc&quot;^?&quot;setProc&quot;^?}'>
<field name='getProc' function_pointer='true' declared_type='TclGetFileAttrProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='setProc' function_pointer='true' declared_type='TclSetFileAttrProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
</struct>
<struct name='TclIntStubs' type='{TclIntStubs=&quot;magic&quot;i&quot;hooks&quot;^{TclIntStubHooks}&quot;reserved0&quot;^v&quot;tclAccessDeleteProc&quot;^?&quot;tclAccessInsertProc&quot;^?&quot;tclAllocateFreeObjects&quot;^?&quot;reserved4&quot;^v&quot;tclCleanupChildren&quot;^?&quot;tclCleanupCommand&quot;^?&quot;tclCopyAndCollapse&quot;^?&quot;tclCopyChannel&quot;^?&quot;tclCreatePipeline&quot;^?&quot;tclCreateProc&quot;^?&quot;tclDeleteCompiledLocalVars&quot;^?&quot;tclDeleteVars&quot;^?&quot;tclDoGlob&quot;^?&quot;tclDumpMemoryInfo&quot;^?&quot;reserved15&quot;^v&quot;tclExprFloatError&quot;^?&quot;reserved17&quot;^v&quot;reserved18&quot;^v&quot;reserved19&quot;^v&quot;reserved20&quot;^v&quot;reserved21&quot;^v&quot;tclFindElement&quot;^?&quot;tclFindProc&quot;^?&quot;tclFormatInt&quot;^?&quot;tclFreePackageInfo&quot;^?&quot;reserved26&quot;^v&quot;tclGetDate&quot;^?&quot;tclpGetDefaultStdChannel&quot;^?&quot;reserved29&quot;^v&quot;reserved30&quot;^v&quot;tclGetExtension&quot;^?&quot;tclGetFrame&quot;^?&quot;tclGetInterpProc&quot;^?&quot;tclGetIntForIndex&quot;^?&quot;reserved35&quot;^v&quot;tclGetLong&quot;^?&quot;tclGetLoadedPackages&quot;^?&quot;tclGetNamespaceForQualName&quot;^?&quot;tclGetObjInterpProc&quot;^?&quot;tclGetOpenMode&quot;^?&quot;tclGetOriginalCommand&quot;^?&quot;tclpGetUserHome&quot;^?&quot;tclGlobalInvoke&quot;^?&quot;tclGuessPackageName&quot;^?&quot;tclHideUnsafeCommands&quot;^?&quot;tclInExit&quot;^?&quot;reserved47&quot;^v&quot;reserved48&quot;^v&quot;tclIncrVar2&quot;^?&quot;tclInitCompiledLocals&quot;^?&quot;tclInterpInit&quot;^?&quot;tclInvoke&quot;^?&quot;tclInvokeObjectCommand&quot;^?&quot;tclInvokeStringCommand&quot;^?&quot;tclIsProc&quot;^?&quot;reserved56&quot;^v&quot;reserved57&quot;^v&quot;tclLookupVar&quot;^?&quot;reserved59&quot;^v&quot;tclNeedSpace&quot;^?&quot;tclNewProcBodyObj&quot;^?&quot;tclObjCommandComplete&quot;^?&quot;tclObjInterpProc&quot;^?&quot;tclObjInvoke&quot;^?&quot;tclObjInvokeGlobal&quot;^?&quot;tclOpenFileChannelDeleteProc&quot;^?&quot;tclOpenFileChannelInsertProc&quot;^?&quot;reserved68&quot;^v&quot;tclpAlloc&quot;^?&quot;reserved70&quot;^v&quot;reserved71&quot;^v&quot;reserved72&quot;^v&quot;reserved73&quot;^v&quot;tclpFree&quot;^?&quot;tclpGetClicks&quot;^?&quot;tclpGetSeconds&quot;^?&quot;tclpGetTime&quot;^?&quot;tclpGetTimeZone&quot;^?&quot;reserved79&quot;^v&quot;reserved80&quot;^v&quot;tclpRealloc&quot;^?&quot;reserved82&quot;^v&quot;reserved83&quot;^v&quot;reserved84&quot;^v&quot;reserved85&quot;^v&quot;reserved86&quot;^v&quot;reserved87&quot;^v&quot;tclPrecTraceProc&quot;^?&quot;tclPreventAliasLoop&quot;^?&quot;reserved90&quot;^v&quot;tclProcCleanupProc&quot;^?&quot;tclProcCompileProc&quot;^?&quot;tclProcDeleteProc&quot;^?&quot;tclProcInterpProc&quot;^?&quot;reserved95&quot;^v&quot;tclRenameCommand&quot;^?&quot;tclResetShadowedCmdRefs&quot;^?&quot;tclServiceIdle&quot;^?&quot;reserved99&quot;^v&quot;reserved100&quot;^v&quot;tclSetPreInitScript&quot;^?&quot;tclSetupEnv&quot;^?&quot;tclSockGetPort&quot;^?&quot;tclSockMinimumBuffers&quot;^?&quot;reserved105&quot;^v&quot;tclStatDeleteProc&quot;^?&quot;tclStatInsertProc&quot;^?&quot;tclTeardownNamespace&quot;^?&quot;tclUpdateReturnInfo&quot;^?&quot;reserved110&quot;^v&quot;tcl_AddInterpResolvers&quot;^?&quot;tcl_AppendExportList&quot;^?&quot;tcl_CreateNamespace&quot;^?&quot;tcl_DeleteNamespace&quot;^?&quot;tcl_Export&quot;^?&quot;tcl_FindCommand&quot;^?&quot;tcl_FindNamespace&quot;^?&quot;tcl_GetInterpResolvers&quot;^?&quot;tcl_GetNamespaceResolvers&quot;^?&quot;tcl_FindNamespaceVar&quot;^?&quot;tcl_ForgetImport&quot;^?&quot;tcl_GetCommandFromObj&quot;^?&quot;tcl_GetCommandFullName&quot;^?&quot;tcl_GetCurrentNamespace&quot;^?&quot;tcl_GetGlobalNamespace&quot;^?&quot;tcl_GetVariableFullName&quot;^?&quot;tcl_Import&quot;^?&quot;tcl_PopCallFrame&quot;^?&quot;tcl_PushCallFrame&quot;^?&quot;tcl_RemoveInterpResolvers&quot;^?&quot;tcl_SetNamespaceResolvers&quot;^?&quot;tclpHasSockets&quot;^?&quot;tclpGetDate&quot;^?&quot;tclpStrftime&quot;^?&quot;tclpCheckStackSpace&quot;^?&quot;reserved136&quot;^v&quot;reserved137&quot;^v&quot;tclGetEnv&quot;^?&quot;reserved139&quot;^v&quot;tclLooksLikeInt&quot;^?&quot;tclpGetCwd&quot;^?&quot;tclSetByteCodeFromAny&quot;^?&quot;tclAddLiteralObj&quot;^?&quot;tclHideLiteral&quot;^?&quot;tclGetAuxDataType&quot;^?&quot;tclHandleCreate&quot;^?&quot;tclHandleFree&quot;^?&quot;tclHandlePreserve&quot;^?&quot;tclHandleRelease&quot;^?&quot;tclRegAbout&quot;^?&quot;tclRegExpRangeUniChar&quot;^?&quot;tclSetLibraryPath&quot;^?&quot;tclGetLibraryPath&quot;^?&quot;reserved154&quot;^v&quot;reserved155&quot;^v&quot;tclRegError&quot;^?&quot;tclVarTraceExists&quot;^?&quot;tclSetStartupScriptFileName&quot;^?&quot;tclGetStartupScriptFileName&quot;^?&quot;reserved160&quot;^v&quot;tclChannelTransform&quot;^?&quot;tclChannelEventScriptInvoker&quot;^?&quot;tclGetInstructionTable&quot;^?&quot;tclExpandCodeArray&quot;^?&quot;tclpSetInitialEncodings&quot;^?&quot;tclListObjSetElement&quot;^?&quot;tclSetStartupScriptPath&quot;^?&quot;tclGetStartupScriptPath&quot;^?&quot;tclpUtfNcmp2&quot;^?&quot;tclCheckInterpTraces&quot;^?&quot;tclCheckExecutionTraces&quot;^?&quot;tclInThreadExit&quot;^?&quot;tclUniCharMatch&quot;^?&quot;reserved174&quot;^v&quot;reserved175&quot;^v&quot;reserved176&quot;^v&quot;reserved177&quot;^v&quot;reserved178&quot;^v&quot;reserved179&quot;^v&quot;reserved180&quot;^v&quot;reserved181&quot;^v&quot;tclpLocaltime&quot;^?&quot;tclpGmtime&quot;^?}'>
<field name='magic' declared_type='int' type='i'/>
<field name='hooks' declared_type='struct TclIntStubHooks*' type='^{TclIntStubHooks=}'/>
<field name='reserved0' declared_type='void*' type='^v'/>
<field name='tclAccessDeleteProc' function_pointer='true' declared_type='int (*)(TclAccessProc_ *)' type='^?'>
<arg declared_type='TclAccessProc_*' type='^?'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclAccessInsertProc' function_pointer='true' declared_type='int (*)(TclAccessProc_ *)' type='^?'>
<arg declared_type='TclAccessProc_*' type='^?'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclAllocateFreeObjects' function_pointer='true' declared_type='void (*)(void)' type='^?'>
<retval declared_type='void' type='v'/>
</field>
<field name='reserved4' declared_type='void*' type='^v'/>
<field name='tclCleanupChildren' function_pointer='true' declared_type='int (*)(Tcl_Interp *, int, Tcl_Pid *, Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Pid*' type='^^{Tcl_Pid_}'/>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclCleanupCommand' function_pointer='true' declared_type='void (*)(Command *)' type='^?'>
<arg declared_type='Command*' type='^{Command=^{Tcl_HashEntry}^{Namespace}ii^?^?^v^?^v^?^vi^{ImportRef}^{CommandTrace}}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclCopyAndCollapse' function_pointer='true' declared_type='int (*)(int, char *, char *)' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclCopyChannel' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Channel, Tcl_Channel, int, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclCreatePipeline' function_pointer='true' declared_type='int (*)(Tcl_Interp *, int, char **, Tcl_Pid **, TclFile *, TclFile *, TclFile *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char**' type='^*' const='true'/>
<arg declared_type='Tcl_Pid**' type='^^^{Tcl_Pid_}'/>
<arg declared_type='TclFile*' type='^^{TclFile_}'/>
<arg declared_type='TclFile*' type='^^{TclFile_}'/>
<arg declared_type='TclFile*' type='^^{TclFile_}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclCreateProc' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Namespace *, char *, Tcl_Obj *, Tcl_Obj *, Proc **)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Namespace*' type='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}l^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}' type64='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}q^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Proc**' type='^^{Proc}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclDeleteCompiledLocalVars' function_pointer='true' declared_type='void (*)(Interp *, CallFrame *)' type='^?'>
<arg declared_type='Interp*' type='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}il^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}' type64='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}iq^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}'/>
<arg declared_type='CallFrame*' type='^{CallFrame=^{Namespace}ii^^{Tcl_Obj}^{CallFrame}^{CallFrame}i^{Proc}^{Tcl_HashTable}i^{Var}}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclDeleteVars' function_pointer='true' declared_type='void (*)(Interp *, Tcl_HashTable *)' type='^?'>
<arg declared_type='Interp*' type='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}il^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}' type64='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}iq^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}'/>
<arg declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclDoGlob' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, Tcl_DString *, char *, Tcl_GlobTypeData *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='Tcl_GlobTypeData*' type='^{Tcl_GlobTypeData=ii^{Tcl_Obj}^{Tcl_Obj}}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclDumpMemoryInfo' function_pointer='true' declared_type='void (*)(FILE *)' type='^?'>
<arg declared_type='FILE*' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='reserved15' declared_type='void*' type='^v'/>
<field name='tclExprFloatError' function_pointer='true' declared_type='void (*)(Tcl_Interp *, double)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</field>
<field name='reserved17' declared_type='void*' type='^v'/>
<field name='reserved18' declared_type='void*' type='^v'/>
<field name='reserved19' declared_type='void*' type='^v'/>
<field name='reserved20' declared_type='void*' type='^v'/>
<field name='reserved21' declared_type='void*' type='^v'/>
<field name='tclFindElement' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, int, char **, char **, int *, int *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char**' type='^*' const='true'/>
<arg declared_type='char**' type='^*' const='true'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclFindProc' function_pointer='true' declared_type='Proc *(*)(Interp *, char *)' type='^?'>
<arg declared_type='Interp*' type='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}il^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}' type64='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}iq^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='Proc*' type='^{Proc=^{Interp}i^{Command}^{Tcl_Obj}ii^{CompiledLocal}^{CompiledLocal}}'/>
</field>
<field name='tclFormatInt' function_pointer='true' declared_type='int (*)(char *, long)' type='^?'>
<arg declared_type='char*' type='*'/>
<arg declared_type='long' type='l' type64='q'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclFreePackageInfo' function_pointer='true' declared_type='void (*)(Interp *)' type='^?'>
<arg declared_type='Interp*' type='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}il^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}' type64='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}iq^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='reserved26' declared_type='void*' type='^v'/>
<field name='tclGetDate' function_pointer='true' declared_type='int (*)(char *, unsigned long, long, unsigned long *)' type='^?'>
<arg declared_type='char*' type='*'/>
<arg declared_type='unsigned long' type='L' type64='Q'/>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='unsigned long*' type='^L' type64='^Q'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclpGetDefaultStdChannel' function_pointer='true' declared_type='Tcl_Channel (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</field>
<field name='reserved29' declared_type='void*' type='^v'/>
<field name='reserved30' declared_type='void*' type='^v'/>
<field name='tclGetExtension' function_pointer='true' declared_type='char *(*)(char *)' type='^?'>
<arg declared_type='char*' type='*'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tclGetFrame' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, CallFrame **)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='CallFrame**' type='^^{CallFrame}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclGetInterpProc' function_pointer='true' declared_type='TclCmdProcType (*)(void)' type='^?'>
<retval function_pointer='true' declared_type='TclCmdProcType' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char**' type='^*' const='true'/>
<retval declared_type='int' type='i'/>
</retval>
</field>
<field name='tclGetIntForIndex' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, int, int *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='reserved35' declared_type='void*' type='^v'/>
<field name='tclGetLong' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, long *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclGetLoadedPackages' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclGetNamespaceForQualName' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, Namespace *, int, Namespace **, Namespace **, Namespace **, char **)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Namespace*' type='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}l^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}' type64='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}q^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Namespace**' type='^^{Namespace}'/>
<arg declared_type='Namespace**' type='^^{Namespace}'/>
<arg declared_type='Namespace**' type='^^{Namespace}'/>
<arg declared_type='char**' type='^*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclGetObjInterpProc' function_pointer='true' declared_type='TclObjCmdProcType (*)(void)' type='^?'>
<retval function_pointer='true' declared_type='TclObjCmdProcType' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='struct Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</retval>
</field>
<field name='tclGetOpenMode' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, int *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclGetOriginalCommand' function_pointer='true' declared_type='Tcl_Command (*)(Tcl_Command)' type='^?'>
<arg declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
<retval declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
</field>
<field name='tclpGetUserHome' function_pointer='true' declared_type='char *(*)(char *, Tcl_DString *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tclGlobalInvoke' function_pointer='true' declared_type='int (*)(Tcl_Interp *, int, char **, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char**' type='^*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclGuessPackageName' function_pointer='true' declared_type='int (*)(char *, Tcl_DString *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclHideUnsafeCommands' function_pointer='true' declared_type='int (*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclInExit' function_pointer='true' declared_type='int (*)(void)' type='^?'>
<retval declared_type='int' type='i'/>
</field>
<field name='reserved47' declared_type='void*' type='^v'/>
<field name='reserved48' declared_type='void*' type='^v'/>
<field name='tclIncrVar2' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Interp *, Tcl_Obj *, Tcl_Obj *, long, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tclInitCompiledLocals' function_pointer='true' declared_type='void (*)(Tcl_Interp *, CallFrame *, Namespace *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='CallFrame*' type='^{CallFrame=^{Namespace}ii^^{Tcl_Obj}^{CallFrame}^{CallFrame}i^{Proc}^{Tcl_HashTable}i^{Var}}'/>
<arg declared_type='Namespace*' type='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}l^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}' type64='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}q^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclInterpInit' function_pointer='true' declared_type='int (*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclInvoke' function_pointer='true' declared_type='int (*)(Tcl_Interp *, int, char **, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char**' type='^*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclInvokeObjectCommand' function_pointer='true' declared_type='int (*)(ClientData, Tcl_Interp *, int, char **)' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char**' type='^*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclInvokeStringCommand' function_pointer='true' declared_type='int (*)(ClientData, Tcl_Interp *, int, Tcl_Obj * *)' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclIsProc' function_pointer='true' declared_type='Proc *(*)(Command *)' type='^?'>
<arg declared_type='Command*' type='^{Command=^{Tcl_HashEntry}^{Namespace}ii^?^?^v^?^v^?^vi^{ImportRef}^{CommandTrace}}'/>
<retval declared_type='Proc*' type='^{Proc=^{Interp}i^{Command}^{Tcl_Obj}ii^{CompiledLocal}^{CompiledLocal}}'/>
</field>
<field name='reserved56' declared_type='void*' type='^v'/>
<field name='reserved57' declared_type='void*' type='^v'/>
<field name='tclLookupVar' function_pointer='true' declared_type='Var *(*)(Tcl_Interp *, char *, char *, int, char *, int, int, Var **)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Var**' type='^^{Var}'/>
<retval declared_type='Var*' type='^{Var=(?=^{Tcl_Obj}^{Tcl_HashTable}^{Var})*^{Namespace}^{Tcl_HashEntry}i^{VarTrace}^{ArraySearch}i}'/>
</field>
<field name='reserved59' declared_type='void*' type='^v'/>
<field name='tclNeedSpace' function_pointer='true' declared_type='int (*)(char *, char *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclNewProcBodyObj' function_pointer='true' declared_type='Tcl_Obj *(*)(Proc *)' type='^?'>
<arg declared_type='Proc*' type='^{Proc=^{Interp}i^{Command}^{Tcl_Obj}ii^{CompiledLocal}^{CompiledLocal}}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tclObjCommandComplete' function_pointer='true' declared_type='int (*)(Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclObjInterpProc' function_pointer='true' declared_type='int (*)(ClientData, Tcl_Interp *, int, Tcl_Obj * *)' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclObjInvoke' function_pointer='true' declared_type='int (*)(Tcl_Interp *, int, Tcl_Obj * *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclObjInvokeGlobal' function_pointer='true' declared_type='int (*)(Tcl_Interp *, int, Tcl_Obj * *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclOpenFileChannelDeleteProc' function_pointer='true' declared_type='int (*)(TclOpenFileChannelProc_ *)' type='^?'>
<arg declared_type='TclOpenFileChannelProc_*' type='^?'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclOpenFileChannelInsertProc' function_pointer='true' declared_type='int (*)(TclOpenFileChannelProc_ *)' type='^?'>
<arg declared_type='TclOpenFileChannelProc_*' type='^?'/>
<retval declared_type='int' type='i'/>
</field>
<field name='reserved68' declared_type='void*' type='^v'/>
<field name='tclpAlloc' function_pointer='true' declared_type='char *(*)(unsigned int)' type='^?'>
<arg declared_type='unsigned int' type='I'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='reserved70' declared_type='void*' type='^v'/>
<field name='reserved71' declared_type='void*' type='^v'/>
<field name='reserved72' declared_type='void*' type='^v'/>
<field name='reserved73' declared_type='void*' type='^v'/>
<field name='tclpFree' function_pointer='true' declared_type='void (*)(char *)' type='^?'>
<arg declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclpGetClicks' function_pointer='true' declared_type='unsigned long (*)(void)' type='^?'>
<retval declared_type='unsigned long' type='L' type64='Q'/>
</field>
<field name='tclpGetSeconds' function_pointer='true' declared_type='unsigned long (*)(void)' type='^?'>
<retval declared_type='unsigned long' type='L' type64='Q'/>
</field>
<field name='tclpGetTime' function_pointer='true' declared_type='void (*)(Tcl_Time *)' type='^?'>
<arg declared_type='Tcl_Time*' type='^{Tcl_Time=ll}' type64='^{Tcl_Time=qq}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclpGetTimeZone' function_pointer='true' declared_type='int (*)(unsigned long)' type='^?'>
<arg declared_type='unsigned long' type='L' type64='Q'/>
<retval declared_type='int' type='i'/>
</field>
<field name='reserved79' declared_type='void*' type='^v'/>
<field name='reserved80' declared_type='void*' type='^v'/>
<field name='tclpRealloc' function_pointer='true' declared_type='char *(*)(char *, unsigned int)' type='^?'>
<arg declared_type='char*' type='*'/>
<arg declared_type='unsigned int' type='I'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='reserved82' declared_type='void*' type='^v'/>
<field name='reserved83' declared_type='void*' type='^v'/>
<field name='reserved84' declared_type='void*' type='^v'/>
<field name='reserved85' declared_type='void*' type='^v'/>
<field name='reserved86' declared_type='void*' type='^v'/>
<field name='reserved87' declared_type='void*' type='^v'/>
<field name='tclPrecTraceProc' function_pointer='true' declared_type='char *(*)(ClientData, Tcl_Interp *, char *, char *, int)' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tclPreventAliasLoop' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Interp *, Tcl_Command)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='reserved90' declared_type='void*' type='^v'/>
<field name='tclProcCleanupProc' function_pointer='true' declared_type='void (*)(Proc *)' type='^?'>
<arg declared_type='Proc*' type='^{Proc=^{Interp}i^{Command}^{Tcl_Obj}ii^{CompiledLocal}^{CompiledLocal}}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclProcCompileProc' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Proc *, Tcl_Obj *, Namespace *, char *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Proc*' type='^{Proc=^{Interp}i^{Command}^{Tcl_Obj}ii^{CompiledLocal}^{CompiledLocal}}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Namespace*' type='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}l^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}' type64='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}q^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclProcDeleteProc' function_pointer='true' declared_type='void (*)(ClientData)' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclProcInterpProc' function_pointer='true' declared_type='int (*)(ClientData, Tcl_Interp *, int, char **)' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char**' type='^*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='reserved95' declared_type='void*' type='^v'/>
<field name='tclRenameCommand' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclResetShadowedCmdRefs' function_pointer='true' declared_type='void (*)(Tcl_Interp *, Command *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Command*' type='^{Command=^{Tcl_HashEntry}^{Namespace}ii^?^?^v^?^v^?^vi^{ImportRef}^{CommandTrace}}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclServiceIdle' function_pointer='true' declared_type='int (*)(void)' type='^?'>
<retval declared_type='int' type='i'/>
</field>
<field name='reserved99' declared_type='void*' type='^v'/>
<field name='reserved100' declared_type='void*' type='^v'/>
<field name='tclSetPreInitScript' function_pointer='true' declared_type='char *(*)(char *)' type='^?'>
<arg declared_type='char*' type='*'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tclSetupEnv' function_pointer='true' declared_type='void (*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclSockGetPort' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, char *, int *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclSockMinimumBuffers' function_pointer='true' declared_type='int (*)(int, int)' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='reserved105' declared_type='void*' type='^v'/>
<field name='tclStatDeleteProc' function_pointer='true' declared_type='int (*)(TclStatProc_ *)' type='^?'>
<arg declared_type='TclStatProc_*' type='^?'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclStatInsertProc' function_pointer='true' declared_type='int (*)(TclStatProc_ *)' type='^?'>
<arg declared_type='TclStatProc_*' type='^?'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclTeardownNamespace' function_pointer='true' declared_type='void (*)(Namespace *)' type='^?'>
<arg declared_type='Namespace*' type='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}l^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}' type64='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}q^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclUpdateReturnInfo' function_pointer='true' declared_type='int (*)(Interp *)' type='^?'>
<arg declared_type='Interp*' type='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}il^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}' type64='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}iq^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='reserved110' declared_type='void*' type='^v'/>
<field name='tcl_AddInterpResolvers' function_pointer='true' declared_type='void (*)(Tcl_Interp *, char *, Tcl_ResolveCmdProc *, Tcl_ResolveVarProc *, Tcl_ResolveCompiledVarProc *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_ResolveCmdProc*' type='^?'/>
<arg declared_type='Tcl_ResolveVarProc*' type='^?'/>
<arg declared_type='Tcl_ResolveCompiledVarProc*' type='^?'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_AppendExportList' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Namespace *, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_CreateNamespace' function_pointer='true' declared_type='Tcl_Namespace *(*)(Tcl_Interp *, char *, ClientData, Tcl_NamespaceDeleteProc *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_NamespaceDeleteProc*' type='^?'/>
<retval declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
</field>
<field name='tcl_DeleteNamespace' function_pointer='true' declared_type='void (*)(Tcl_Namespace *)' type='^?'>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_Export' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Namespace *, char *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FindCommand' function_pointer='true' declared_type='Tcl_Command (*)(Tcl_Interp *, char *, Tcl_Namespace *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
</field>
<field name='tcl_FindNamespace' function_pointer='true' declared_type='Tcl_Namespace *(*)(Tcl_Interp *, char *, Tcl_Namespace *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
</field>
<field name='tcl_GetInterpResolvers' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, Tcl_ResolverInfo *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_ResolverInfo*' type='^{Tcl_ResolverInfo=^?^?^?}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetNamespaceResolvers' function_pointer='true' declared_type='int (*)(Tcl_Namespace *, Tcl_ResolverInfo *)' type='^?'>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='Tcl_ResolverInfo*' type='^{Tcl_ResolverInfo=^?^?^?}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FindNamespaceVar' function_pointer='true' declared_type='Tcl_Var (*)(Tcl_Interp *, char *, Tcl_Namespace *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Var' type='^{Tcl_Var_=}'/>
</field>
<field name='tcl_ForgetImport' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Namespace *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetCommandFromObj' function_pointer='true' declared_type='Tcl_Command (*)(Tcl_Interp *, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
</field>
<field name='tcl_GetCommandFullName' function_pointer='true' declared_type='void (*)(Tcl_Interp *, Tcl_Command, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_GetCurrentNamespace' function_pointer='true' declared_type='Tcl_Namespace *(*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
</field>
<field name='tcl_GetGlobalNamespace' function_pointer='true' declared_type='Tcl_Namespace *(*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
</field>
<field name='tcl_GetVariableFullName' function_pointer='true' declared_type='void (*)(Tcl_Interp *, Tcl_Var, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Var' type='^{Tcl_Var_=}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_Import' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Namespace *, char *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_PopCallFrame' function_pointer='true' declared_type='void (*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_PushCallFrame' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_CallFrame *, Tcl_Namespace *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_CallFrame*' type='^{Tcl_CallFrame=^{Tcl_Namespace}ii***i**i*}'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_RemoveInterpResolvers' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_SetNamespaceResolvers' function_pointer='true' declared_type='void (*)(Tcl_Namespace *, Tcl_ResolveCmdProc *, Tcl_ResolveVarProc *, Tcl_ResolveCompiledVarProc *)' type='^?'>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='Tcl_ResolveCmdProc*' type='^?'/>
<arg declared_type='Tcl_ResolveVarProc*' type='^?'/>
<arg declared_type='Tcl_ResolveCompiledVarProc*' type='^?'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclpHasSockets' function_pointer='true' declared_type='int (*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclpGetDate' function_pointer='true' declared_type='struct tm *(*)(TclpTime_t, int)' type='^?'>
<arg declared_type='TclpTime_t' type='^{TclpTime_t_=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='struct tm*' type='^{tm=iiiiiiiiil*}' type64='^{tm=iiiiiiiiiq*}'/>
</field>
<field name='tclpStrftime' function_pointer='true' declared_type='size_t (*)(char *, size_t, char *, struct tm *, int)' type='^?'>
<arg declared_type='char*' type='*'/>
<arg declared_type='size_t' type='L' type64='Q'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='struct tm*' type='^{tm=iiiiiiiiil*}' type64='^{tm=iiiiiiiiiq*}' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='size_t' type='L' type64='Q'/>
</field>
<field name='tclpCheckStackSpace' function_pointer='true' declared_type='int (*)(void)' type='^?'>
<retval declared_type='int' type='i'/>
</field>
<field name='reserved136' declared_type='void*' type='^v'/>
<field name='reserved137' declared_type='void*' type='^v'/>
<field name='tclGetEnv' function_pointer='true' declared_type='char *(*)(char *, Tcl_DString *)' type='^?' const='true'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='reserved139' declared_type='void*' type='^v'/>
<field name='tclLooksLikeInt' function_pointer='true' declared_type='int (*)(char *, int)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclpGetCwd' function_pointer='true' declared_type='char *(*)(Tcl_Interp *, Tcl_DString *)' type='^?' const='true'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tclSetByteCodeFromAny' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, CompileHookProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='CompileHookProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclAddLiteralObj' function_pointer='true' declared_type='int (*)(struct CompileEnv *, Tcl_Obj *, LiteralEntry **)' type='^?'>
<arg declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='LiteralEntry**' type='^^{LiteralEntry}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclHideLiteral' function_pointer='true' declared_type='void (*)(Tcl_Interp *, struct CompileEnv *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclGetAuxDataType' function_pointer='true' declared_type='struct AuxDataType *(*)(char *)' type='^?'>
<arg declared_type='char*' type='*'/>
<retval declared_type='struct AuxDataType*' type='^{AuxDataType=*^?^?}'/>
</field>
<field name='tclHandleCreate' function_pointer='true' declared_type='TclHandle (*)(void *)' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='TclHandle' type='^^v'/>
</field>
<field name='tclHandleFree' function_pointer='true' declared_type='void (*)(TclHandle)' type='^?'>
<arg declared_type='TclHandle' type='^^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclHandlePreserve' function_pointer='true' declared_type='TclHandle (*)(TclHandle)' type='^?'>
<arg declared_type='TclHandle' type='^^v'/>
<retval declared_type='TclHandle' type='^^v'/>
</field>
<field name='tclHandleRelease' function_pointer='true' declared_type='void (*)(TclHandle)' type='^?'>
<arg declared_type='TclHandle' type='^^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclRegAbout' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_RegExp)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_RegExp' type='^{Tcl_RegExp_=}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclRegExpRangeUniChar' function_pointer='true' declared_type='void (*)(Tcl_RegExp, int, int *, int *)' type='^?'>
<arg declared_type='Tcl_RegExp' type='^{Tcl_RegExp_=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclSetLibraryPath' function_pointer='true' declared_type='void (*)(Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclGetLibraryPath' function_pointer='true' declared_type='Tcl_Obj *(*)(void)' type='^?'>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='reserved154' declared_type='void*' type='^v'/>
<field name='reserved155' declared_type='void*' type='^v'/>
<field name='tclRegError' function_pointer='true' declared_type='void (*)(Tcl_Interp *, char *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclVarTraceExists' function_pointer='true' declared_type='Var *(*)(Tcl_Interp *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='Var*' type='^{Var=(?=^{Tcl_Obj}^{Tcl_HashTable}^{Var})*^{Namespace}^{Tcl_HashEntry}i^{VarTrace}^{ArraySearch}i}'/>
</field>
<field name='tclSetStartupScriptFileName' function_pointer='true' declared_type='void (*)(char *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclGetStartupScriptFileName' function_pointer='true' declared_type='char *(*)(void)' type='^?' const='true'>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='reserved160' declared_type='void*' type='^v'/>
<field name='tclChannelTransform' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Channel, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclChannelEventScriptInvoker' function_pointer='true' declared_type='void (*)(ClientData, int)' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclGetInstructionTable' function_pointer='true' declared_type='void *(*)(void)' type='^?'>
<retval declared_type='void*' type='^v'/>
</field>
<field name='tclExpandCodeArray' function_pointer='true' declared_type='void (*)(void *)' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclpSetInitialEncodings' function_pointer='true' declared_type='void (*)(void)' type='^?'>
<retval declared_type='void' type='v'/>
</field>
<field name='tclListObjSetElement' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, int, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclSetStartupScriptPath' function_pointer='true' declared_type='void (*)(Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tclGetStartupScriptPath' function_pointer='true' declared_type='Tcl_Obj *(*)(void)' type='^?'>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tclpUtfNcmp2' function_pointer='true' declared_type='int (*)(char *, char *, unsigned long)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='unsigned long' type='L' type64='Q'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclCheckInterpTraces' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, int, Command *, int, int, int, Tcl_Obj * *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Command*' type='^{Command=^{Tcl_HashEntry}^{Namespace}ii^?^?^v^?^v^?^vi^{ImportRef}^{CommandTrace}}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclCheckExecutionTraces' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, int, Command *, int, int, int, Tcl_Obj * *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Command*' type='^{Command=^{Tcl_HashEntry}^{Namespace}ii^?^?^v^?^v^?^vi^{ImportRef}^{CommandTrace}}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tclInThreadExit' function_pointer='true' declared_type='int (*)(void)' type='^?'>
<retval declared_type='int' type='i'/>
</field>
<field name='tclUniCharMatch' function_pointer='true' declared_type='int (*)(Tcl_UniChar *, int, Tcl_UniChar *, int, int)' type='^?'>
<arg declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='reserved174' declared_type='void*' type='^v'/>
<field name='reserved175' declared_type='void*' type='^v'/>
<field name='reserved176' declared_type='void*' type='^v'/>
<field name='reserved177' declared_type='void*' type='^v'/>
<field name='reserved178' declared_type='void*' type='^v'/>
<field name='reserved179' declared_type='void*' type='^v'/>
<field name='reserved180' declared_type='void*' type='^v'/>
<field name='reserved181' declared_type='void*' type='^v'/>
<field name='tclpLocaltime' function_pointer='true' declared_type='struct tm *(*)(TclpTime_t)' type='^?'>
<arg declared_type='TclpTime_t' type='^{TclpTime_t_=}'/>
<retval declared_type='struct tm*' type='^{tm=iiiiiiiiil*}' type64='^{tm=iiiiiiiiiq*}'/>
</field>
<field name='tclpGmtime' function_pointer='true' declared_type='struct tm *(*)(TclpTime_t)' type='^?'>
<arg declared_type='TclpTime_t' type='^{TclpTime_t_=}'/>
<retval declared_type='struct tm*' type='^{tm=iiiiiiiiil*}' type64='^{tm=iiiiiiiiiq*}'/>
</field>
</struct>
<struct name='TclPlatStubs' type='{TclPlatStubs=&quot;magic&quot;i&quot;hooks&quot;^{TclPlatStubHooks}}'>
<field name='magic' declared_type='int' type='i'/>
<field name='hooks' declared_type='struct TclPlatStubHooks*' type='^{TclPlatStubHooks=}'/>
</struct>
<struct name='TclStubHooks' type='{TclStubHooks=&quot;tclPlatStubs&quot;^{TclPlatStubs}&quot;tclIntStubs&quot;^{TclIntStubs}&quot;tclIntPlatStubs&quot;^{TclIntPlatStubs}}'>
<field name='tclPlatStubs' declared_type='struct TclPlatStubs*' type='^{TclPlatStubs=i^{TclPlatStubHooks}}'/>
<field name='tclIntStubs' declared_type='struct TclIntStubs*' type='^{TclIntStubs=i^{TclIntStubHooks}^v^?^?^?^v^?^?^?^?^?^?^?^?^?^?^v^?^v^v^v^v^v^?^?^?^?^v^?^?^v^v^?^?^?^?^v^?^?^?^?^?^?^?^?^?^?^?^v^v^?^?^?^?^?^?^?^v^v^?^v^?^?^?^?^?^?^?^?^v^?^v^v^v^v^?^?^?^?^?^v^v^?^v^v^v^v^v^v^?^?^v^?^?^?^?^v^?^?^?^v^v^?^?^?^?^v^?^?^?^?^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^v^v^?^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^v^v^?^?^?^?^v^?^?^?^?^?^?^?^?^?^?^?^?^?^v^v^v^v^v^v^v^v^?^?}'/>
<field name='tclIntPlatStubs' declared_type='struct TclIntPlatStubs*' type='^{TclIntPlatStubs=i^{TclIntPlatStubHooks}^?^?^?^?^?^v^?^?^?^?^?^?^?^?}'/>
</struct>
<struct name='TclStubs' type='{TclStubs=&quot;magic&quot;i&quot;hooks&quot;^{TclStubHooks}&quot;tcl_PkgProvideEx&quot;^?&quot;tcl_PkgRequireEx&quot;^?&quot;tcl_Panic&quot;^?&quot;tcl_Alloc&quot;^?&quot;tcl_Free&quot;^?&quot;tcl_Realloc&quot;^?&quot;tcl_DbCkalloc&quot;^?&quot;tcl_DbCkfree&quot;^?&quot;tcl_DbCkrealloc&quot;^?&quot;tcl_CreateFileHandler&quot;^?&quot;tcl_DeleteFileHandler&quot;^?&quot;tcl_SetTimer&quot;^?&quot;tcl_Sleep&quot;^?&quot;tcl_WaitForEvent&quot;^?&quot;tcl_AppendAllObjTypes&quot;^?&quot;tcl_AppendStringsToObj&quot;^?&quot;tcl_AppendToObj&quot;^?&quot;tcl_ConcatObj&quot;^?&quot;tcl_ConvertToType&quot;^?&quot;tcl_DbDecrRefCount&quot;^?&quot;tcl_DbIncrRefCount&quot;^?&quot;tcl_DbIsShared&quot;^?&quot;tcl_DbNewBooleanObj&quot;^?&quot;tcl_DbNewByteArrayObj&quot;^?&quot;tcl_DbNewDoubleObj&quot;^?&quot;tcl_DbNewListObj&quot;^?&quot;tcl_DbNewLongObj&quot;^?&quot;tcl_DbNewObj&quot;^?&quot;tcl_DbNewStringObj&quot;^?&quot;tcl_DuplicateObj&quot;^?&quot;tclFreeObj&quot;^?&quot;tcl_GetBoolean&quot;^?&quot;tcl_GetBooleanFromObj&quot;^?&quot;tcl_GetByteArrayFromObj&quot;^?&quot;tcl_GetDouble&quot;^?&quot;tcl_GetDoubleFromObj&quot;^?&quot;tcl_GetIndexFromObj&quot;^?&quot;tcl_GetInt&quot;^?&quot;tcl_GetIntFromObj&quot;^?&quot;tcl_GetLongFromObj&quot;^?&quot;tcl_GetObjType&quot;^?&quot;tcl_GetStringFromObj&quot;^?&quot;tcl_InvalidateStringRep&quot;^?&quot;tcl_ListObjAppendList&quot;^?&quot;tcl_ListObjAppendElement&quot;^?&quot;tcl_ListObjGetElements&quot;^?&quot;tcl_ListObjIndex&quot;^?&quot;tcl_ListObjLength&quot;^?&quot;tcl_ListObjReplace&quot;^?&quot;tcl_NewBooleanObj&quot;^?&quot;tcl_NewByteArrayObj&quot;^?&quot;tcl_NewDoubleObj&quot;^?&quot;tcl_NewIntObj&quot;^?&quot;tcl_NewListObj&quot;^?&quot;tcl_NewLongObj&quot;^?&quot;tcl_NewObj&quot;^?&quot;tcl_NewStringObj&quot;^?&quot;tcl_SetBooleanObj&quot;^?&quot;tcl_SetByteArrayLength&quot;^?&quot;tcl_SetByteArrayObj&quot;^?&quot;tcl_SetDoubleObj&quot;^?&quot;tcl_SetIntObj&quot;^?&quot;tcl_SetListObj&quot;^?&quot;tcl_SetLongObj&quot;^?&quot;tcl_SetObjLength&quot;^?&quot;tcl_SetStringObj&quot;^?&quot;tcl_AddErrorInfo&quot;^?&quot;tcl_AddObjErrorInfo&quot;^?&quot;tcl_AllowExceptions&quot;^?&quot;tcl_AppendElement&quot;^?&quot;tcl_AppendResult&quot;^?&quot;tcl_AsyncCreate&quot;^?&quot;tcl_AsyncDelete&quot;^?&quot;tcl_AsyncInvoke&quot;^?&quot;tcl_AsyncMark&quot;^?&quot;tcl_AsyncReady&quot;^?&quot;tcl_BackgroundError&quot;^?&quot;tcl_Backslash&quot;^?&quot;tcl_BadChannelOption&quot;^?&quot;tcl_CallWhenDeleted&quot;^?&quot;tcl_CancelIdleCall&quot;^?&quot;tcl_Close&quot;^?&quot;tcl_CommandComplete&quot;^?&quot;tcl_Concat&quot;^?&quot;tcl_ConvertElement&quot;^?&quot;tcl_ConvertCountedElement&quot;^?&quot;tcl_CreateAlias&quot;^?&quot;tcl_CreateAliasObj&quot;^?&quot;tcl_CreateChannel&quot;^?&quot;tcl_CreateChannelHandler&quot;^?&quot;tcl_CreateCloseHandler&quot;^?&quot;tcl_CreateCommand&quot;^?&quot;tcl_CreateEventSource&quot;^?&quot;tcl_CreateExitHandler&quot;^?&quot;tcl_CreateInterp&quot;^?&quot;tcl_CreateMathFunc&quot;^?&quot;tcl_CreateObjCommand&quot;^?&quot;tcl_CreateSlave&quot;^?&quot;tcl_CreateTimerHandler&quot;^?&quot;tcl_CreateTrace&quot;^?&quot;tcl_DeleteAssocData&quot;^?&quot;tcl_DeleteChannelHandler&quot;^?&quot;tcl_DeleteCloseHandler&quot;^?&quot;tcl_DeleteCommand&quot;^?&quot;tcl_DeleteCommandFromToken&quot;^?&quot;tcl_DeleteEvents&quot;^?&quot;tcl_DeleteEventSource&quot;^?&quot;tcl_DeleteExitHandler&quot;^?&quot;tcl_DeleteHashEntry&quot;^?&quot;tcl_DeleteHashTable&quot;^?&quot;tcl_DeleteInterp&quot;^?&quot;tcl_DetachPids&quot;^?&quot;tcl_DeleteTimerHandler&quot;^?&quot;tcl_DeleteTrace&quot;^?&quot;tcl_DontCallWhenDeleted&quot;^?&quot;tcl_DoOneEvent&quot;^?&quot;tcl_DoWhenIdle&quot;^?&quot;tcl_DStringAppend&quot;^?&quot;tcl_DStringAppendElement&quot;^?&quot;tcl_DStringEndSublist&quot;^?&quot;tcl_DStringFree&quot;^?&quot;tcl_DStringGetResult&quot;^?&quot;tcl_DStringInit&quot;^?&quot;tcl_DStringResult&quot;^?&quot;tcl_DStringSetLength&quot;^?&quot;tcl_DStringStartSublist&quot;^?&quot;tcl_Eof&quot;^?&quot;tcl_ErrnoId&quot;^?&quot;tcl_ErrnoMsg&quot;^?&quot;tcl_Eval&quot;^?&quot;tcl_EvalFile&quot;^?&quot;tcl_EvalObj&quot;^?&quot;tcl_EventuallyFree&quot;^?&quot;tcl_Exit&quot;^?&quot;tcl_ExposeCommand&quot;^?&quot;tcl_ExprBoolean&quot;^?&quot;tcl_ExprBooleanObj&quot;^?&quot;tcl_ExprDouble&quot;^?&quot;tcl_ExprDoubleObj&quot;^?&quot;tcl_ExprLong&quot;^?&quot;tcl_ExprLongObj&quot;^?&quot;tcl_ExprObj&quot;^?&quot;tcl_ExprString&quot;^?&quot;tcl_Finalize&quot;^?&quot;tcl_FindExecutable&quot;^?&quot;tcl_FirstHashEntry&quot;^?&quot;tcl_Flush&quot;^?&quot;tcl_FreeResult&quot;^?&quot;tcl_GetAlias&quot;^?&quot;tcl_GetAliasObj&quot;^?&quot;tcl_GetAssocData&quot;^?&quot;tcl_GetChannel&quot;^?&quot;tcl_GetChannelBufferSize&quot;^?&quot;tcl_GetChannelHandle&quot;^?&quot;tcl_GetChannelInstanceData&quot;^?&quot;tcl_GetChannelMode&quot;^?&quot;tcl_GetChannelName&quot;^?&quot;tcl_GetChannelOption&quot;^?&quot;tcl_GetChannelType&quot;^?&quot;tcl_GetCommandInfo&quot;^?&quot;tcl_GetCommandName&quot;^?&quot;tcl_GetErrno&quot;^?&quot;tcl_GetHostName&quot;^?&quot;tcl_GetInterpPath&quot;^?&quot;tcl_GetMaster&quot;^?&quot;tcl_GetNameOfExecutable&quot;^?&quot;tcl_GetObjResult&quot;^?&quot;tcl_GetOpenFile&quot;^?&quot;tcl_GetPathType&quot;^?&quot;tcl_Gets&quot;^?&quot;tcl_GetsObj&quot;^?&quot;tcl_GetServiceMode&quot;^?&quot;tcl_GetSlave&quot;^?&quot;tcl_GetStdChannel&quot;^?&quot;tcl_GetStringResult&quot;^?&quot;tcl_GetVar&quot;^?&quot;tcl_GetVar2&quot;^?&quot;tcl_GlobalEval&quot;^?&quot;tcl_GlobalEvalObj&quot;^?&quot;tcl_HideCommand&quot;^?&quot;tcl_Init&quot;^?&quot;tcl_InitHashTable&quot;^?&quot;tcl_InputBlocked&quot;^?&quot;tcl_InputBuffered&quot;^?&quot;tcl_InterpDeleted&quot;^?&quot;tcl_IsSafe&quot;^?&quot;tcl_JoinPath&quot;^?&quot;tcl_LinkVar&quot;^?&quot;reserved188&quot;^v&quot;tcl_MakeFileChannel&quot;^?&quot;tcl_MakeSafe&quot;^?&quot;tcl_MakeTcpClientChannel&quot;^?&quot;tcl_Merge&quot;^?&quot;tcl_NextHashEntry&quot;^?&quot;tcl_NotifyChannel&quot;^?&quot;tcl_ObjGetVar2&quot;^?&quot;tcl_ObjSetVar2&quot;^?&quot;tcl_OpenCommandChannel&quot;^?&quot;tcl_OpenFileChannel&quot;^?&quot;tcl_OpenTcpClient&quot;^?&quot;tcl_OpenTcpServer&quot;^?&quot;tcl_Preserve&quot;^?&quot;tcl_PrintDouble&quot;^?&quot;tcl_PutEnv&quot;^?&quot;tcl_PosixError&quot;^?&quot;tcl_QueueEvent&quot;^?&quot;tcl_Read&quot;^?&quot;tcl_ReapDetachedProcs&quot;^?&quot;tcl_RecordAndEval&quot;^?&quot;tcl_RecordAndEvalObj&quot;^?&quot;tcl_RegisterChannel&quot;^?&quot;tcl_RegisterObjType&quot;^?&quot;tcl_RegExpCompile&quot;^?&quot;tcl_RegExpExec&quot;^?&quot;tcl_RegExpMatch&quot;^?&quot;tcl_RegExpRange&quot;^?&quot;tcl_Release&quot;^?&quot;tcl_ResetResult&quot;^?&quot;tcl_ScanElement&quot;^?&quot;tcl_ScanCountedElement&quot;^?&quot;tcl_SeekOld&quot;^?&quot;tcl_ServiceAll&quot;^?&quot;tcl_ServiceEvent&quot;^?&quot;tcl_SetAssocData&quot;^?&quot;tcl_SetChannelBufferSize&quot;^?&quot;tcl_SetChannelOption&quot;^?&quot;tcl_SetCommandInfo&quot;^?&quot;tcl_SetErrno&quot;^?&quot;tcl_SetErrorCode&quot;^?&quot;tcl_SetMaxBlockTime&quot;^?&quot;tcl_SetPanicProc&quot;^?&quot;tcl_SetRecursionLimit&quot;^?&quot;tcl_SetResult&quot;^?&quot;tcl_SetServiceMode&quot;^?&quot;tcl_SetObjErrorCode&quot;^?&quot;tcl_SetObjResult&quot;^?&quot;tcl_SetStdChannel&quot;^?&quot;tcl_SetVar&quot;^?&quot;tcl_SetVar2&quot;^?&quot;tcl_SignalId&quot;^?&quot;tcl_SignalMsg&quot;^?&quot;tcl_SourceRCFile&quot;^?&quot;tcl_SplitList&quot;^?&quot;tcl_SplitPath&quot;^?&quot;tcl_StaticPackage&quot;^?&quot;tcl_StringMatch&quot;^?&quot;tcl_TellOld&quot;^?&quot;tcl_TraceVar&quot;^?&quot;tcl_TraceVar2&quot;^?&quot;tcl_TranslateFileName&quot;^?&quot;tcl_Ungets&quot;^?&quot;tcl_UnlinkVar&quot;^?&quot;tcl_UnregisterChannel&quot;^?&quot;tcl_UnsetVar&quot;^?&quot;tcl_UnsetVar2&quot;^?&quot;tcl_UntraceVar&quot;^?&quot;tcl_UntraceVar2&quot;^?&quot;tcl_UpdateLinkedVar&quot;^?&quot;tcl_UpVar&quot;^?&quot;tcl_UpVar2&quot;^?&quot;tcl_VarEval&quot;^?&quot;tcl_VarTraceInfo&quot;^?&quot;tcl_VarTraceInfo2&quot;^?&quot;tcl_Write&quot;^?&quot;tcl_WrongNumArgs&quot;^?&quot;tcl_DumpActiveMemory&quot;^?&quot;tcl_ValidateAllMemory&quot;^?&quot;tcl_AppendResultVA&quot;^?&quot;tcl_AppendStringsToObjVA&quot;^?&quot;tcl_HashStats&quot;^?&quot;tcl_ParseVar&quot;^?&quot;tcl_PkgPresent&quot;^?&quot;tcl_PkgPresentEx&quot;^?&quot;tcl_PkgProvide&quot;^?&quot;tcl_PkgRequire&quot;^?&quot;tcl_SetErrorCodeVA&quot;^?&quot;tcl_VarEvalVA&quot;^?&quot;tcl_WaitPid&quot;^?&quot;tcl_PanicVA&quot;^?&quot;tcl_GetVersion&quot;^?&quot;tcl_InitMemory&quot;^?&quot;tcl_StackChannel&quot;^?&quot;tcl_UnstackChannel&quot;^?&quot;tcl_GetStackedChannel&quot;^?&quot;tcl_SetMainLoop&quot;^?&quot;reserved285&quot;^v&quot;tcl_AppendObjToObj&quot;^?&quot;tcl_CreateEncoding&quot;^?&quot;tcl_CreateThreadExitHandler&quot;^?&quot;tcl_DeleteThreadExitHandler&quot;^?&quot;tcl_DiscardResult&quot;^?&quot;tcl_EvalEx&quot;^?&quot;tcl_EvalObjv&quot;^?&quot;tcl_EvalObjEx&quot;^?&quot;tcl_ExitThread&quot;^?&quot;tcl_ExternalToUtf&quot;^?&quot;tcl_ExternalToUtfDString&quot;^?&quot;tcl_FinalizeThread&quot;^?&quot;tcl_FinalizeNotifier&quot;^?&quot;tcl_FreeEncoding&quot;^?&quot;tcl_GetCurrentThread&quot;^?&quot;tcl_GetEncoding&quot;^?&quot;tcl_GetEncodingName&quot;^?&quot;tcl_GetEncodingNames&quot;^?&quot;tcl_GetIndexFromObjStruct&quot;^?&quot;tcl_GetThreadData&quot;^?&quot;tcl_GetVar2Ex&quot;^?&quot;tcl_InitNotifier&quot;^?&quot;tcl_MutexLock&quot;^?&quot;tcl_MutexUnlock&quot;^?&quot;tcl_ConditionNotify&quot;^?&quot;tcl_ConditionWait&quot;^?&quot;tcl_NumUtfChars&quot;^?&quot;tcl_ReadChars&quot;^?&quot;tcl_RestoreResult&quot;^?&quot;tcl_SaveResult&quot;^?&quot;tcl_SetSystemEncoding&quot;^?&quot;tcl_SetVar2Ex&quot;^?&quot;tcl_ThreadAlert&quot;^?&quot;tcl_ThreadQueueEvent&quot;^?&quot;tcl_UniCharAtIndex&quot;^?&quot;tcl_UniCharToLower&quot;^?&quot;tcl_UniCharToTitle&quot;^?&quot;tcl_UniCharToUpper&quot;^?&quot;tcl_UniCharToUtf&quot;^?&quot;tcl_UtfAtIndex&quot;^?&quot;tcl_UtfCharComplete&quot;^?&quot;tcl_UtfBackslash&quot;^?&quot;tcl_UtfFindFirst&quot;^?&quot;tcl_UtfFindLast&quot;^?&quot;tcl_UtfNext&quot;^?&quot;tcl_UtfPrev&quot;^?&quot;tcl_UtfToExternal&quot;^?&quot;tcl_UtfToExternalDString&quot;^?&quot;tcl_UtfToLower&quot;^?&quot;tcl_UtfToTitle&quot;^?&quot;tcl_UtfToUniChar&quot;^?&quot;tcl_UtfToUpper&quot;^?&quot;tcl_WriteChars&quot;^?&quot;tcl_WriteObj&quot;^?&quot;tcl_GetString&quot;^?&quot;tcl_GetDefaultEncodingDir&quot;^?&quot;tcl_SetDefaultEncodingDir&quot;^?&quot;tcl_AlertNotifier&quot;^?&quot;tcl_ServiceModeHook&quot;^?&quot;tcl_UniCharIsAlnum&quot;^?&quot;tcl_UniCharIsAlpha&quot;^?&quot;tcl_UniCharIsDigit&quot;^?&quot;tcl_UniCharIsLower&quot;^?&quot;tcl_UniCharIsSpace&quot;^?&quot;tcl_UniCharIsUpper&quot;^?&quot;tcl_UniCharIsWordChar&quot;^?&quot;tcl_UniCharLen&quot;^?&quot;tcl_UniCharNcmp&quot;^?&quot;tcl_UniCharToUtfDString&quot;^?&quot;tcl_UtfToUniCharDString&quot;^?&quot;tcl_GetRegExpFromObj&quot;^?&quot;tcl_EvalTokens&quot;^?&quot;tcl_FreeParse&quot;^?&quot;tcl_LogCommandInfo&quot;^?&quot;tcl_ParseBraces&quot;^?&quot;tcl_ParseCommand&quot;^?&quot;tcl_ParseExpr&quot;^?&quot;tcl_ParseQuotedString&quot;^?&quot;tcl_ParseVarName&quot;^?&quot;tcl_GetCwd&quot;^?&quot;tcl_Chdir&quot;^?&quot;tcl_Access&quot;^?&quot;tcl_Stat&quot;^?&quot;tcl_UtfNcmp&quot;^?&quot;tcl_UtfNcasecmp&quot;^?&quot;tcl_StringCaseMatch&quot;^?&quot;tcl_UniCharIsControl&quot;^?&quot;tcl_UniCharIsGraph&quot;^?&quot;tcl_UniCharIsPrint&quot;^?&quot;tcl_UniCharIsPunct&quot;^?&quot;tcl_RegExpExecObj&quot;^?&quot;tcl_RegExpGetInfo&quot;^?&quot;tcl_NewUnicodeObj&quot;^?&quot;tcl_SetUnicodeObj&quot;^?&quot;tcl_GetCharLength&quot;^?&quot;tcl_GetUniChar&quot;^?&quot;tcl_GetUnicode&quot;^?&quot;tcl_GetRange&quot;^?&quot;tcl_AppendUnicodeToObj&quot;^?&quot;tcl_RegExpMatchObj&quot;^?&quot;tcl_SetNotifier&quot;^?&quot;tcl_GetAllocMutex&quot;^?&quot;tcl_GetChannelNames&quot;^?&quot;tcl_GetChannelNamesEx&quot;^?&quot;tcl_ProcObjCmd&quot;^?&quot;tcl_ConditionFinalize&quot;^?&quot;tcl_MutexFinalize&quot;^?&quot;tcl_CreateThread&quot;^?&quot;tcl_ReadRaw&quot;^?&quot;tcl_WriteRaw&quot;^?&quot;tcl_GetTopChannel&quot;^?&quot;tcl_ChannelBuffered&quot;^?&quot;tcl_ChannelName&quot;^?&quot;tcl_ChannelVersion&quot;^?&quot;tcl_ChannelBlockModeProc&quot;^?&quot;tcl_ChannelCloseProc&quot;^?&quot;tcl_ChannelClose2Proc&quot;^?&quot;tcl_ChannelInputProc&quot;^?&quot;tcl_ChannelOutputProc&quot;^?&quot;tcl_ChannelSeekProc&quot;^?&quot;tcl_ChannelSetOptionProc&quot;^?&quot;tcl_ChannelGetOptionProc&quot;^?&quot;tcl_ChannelWatchProc&quot;^?&quot;tcl_ChannelGetHandleProc&quot;^?&quot;tcl_ChannelFlushProc&quot;^?&quot;tcl_ChannelHandlerProc&quot;^?&quot;tcl_JoinThread&quot;^?&quot;tcl_IsChannelShared&quot;^?&quot;tcl_IsChannelRegistered&quot;^?&quot;tcl_CutChannel&quot;^?&quot;tcl_SpliceChannel&quot;^?&quot;tcl_ClearChannelHandlers&quot;^?&quot;tcl_IsChannelExisting&quot;^?&quot;tcl_UniCharNcasecmp&quot;^?&quot;tcl_UniCharCaseMatch&quot;^?&quot;tcl_FindHashEntry&quot;^?&quot;tcl_CreateHashEntry&quot;^?&quot;tcl_InitCustomHashTable&quot;^?&quot;tcl_InitObjHashTable&quot;^?&quot;tcl_CommandTraceInfo&quot;^?&quot;tcl_TraceCommand&quot;^?&quot;tcl_UntraceCommand&quot;^?&quot;tcl_AttemptAlloc&quot;^?&quot;tcl_AttemptDbCkalloc&quot;^?&quot;tcl_AttemptRealloc&quot;^?&quot;tcl_AttemptDbCkrealloc&quot;^?&quot;tcl_AttemptSetObjLength&quot;^?&quot;tcl_GetChannelThread&quot;^?&quot;tcl_GetUnicodeFromObj&quot;^?&quot;tcl_GetMathFuncInfo&quot;^?&quot;tcl_ListMathFuncs&quot;^?&quot;tcl_SubstObj&quot;^?&quot;tcl_DetachChannel&quot;^?&quot;tcl_IsStandardChannel&quot;^?&quot;tcl_FSCopyFile&quot;^?&quot;tcl_FSCopyDirectory&quot;^?&quot;tcl_FSCreateDirectory&quot;^?&quot;tcl_FSDeleteFile&quot;^?&quot;tcl_FSLoadFile&quot;^?&quot;tcl_FSMatchInDirectory&quot;^?&quot;tcl_FSLink&quot;^?&quot;tcl_FSRemoveDirectory&quot;^?&quot;tcl_FSRenameFile&quot;^?&quot;tcl_FSLstat&quot;^?&quot;tcl_FSUtime&quot;^?&quot;tcl_FSFileAttrsGet&quot;^?&quot;tcl_FSFileAttrsSet&quot;^?&quot;tcl_FSFileAttrStrings&quot;^?&quot;tcl_FSStat&quot;^?&quot;tcl_FSAccess&quot;^?&quot;tcl_FSOpenFileChannel&quot;^?&quot;tcl_FSGetCwd&quot;^?&quot;tcl_FSChdir&quot;^?&quot;tcl_FSConvertToPathType&quot;^?&quot;tcl_FSJoinPath&quot;^?&quot;tcl_FSSplitPath&quot;^?&quot;tcl_FSEqualPaths&quot;^?&quot;tcl_FSGetNormalizedPath&quot;^?&quot;tcl_FSJoinToPath&quot;^?&quot;tcl_FSGetInternalRep&quot;^?&quot;tcl_FSGetTranslatedPath&quot;^?&quot;tcl_FSEvalFile&quot;^?&quot;tcl_FSNewNativePath&quot;^?&quot;tcl_FSGetNativePath&quot;^?&quot;tcl_FSFileSystemInfo&quot;^?&quot;tcl_FSPathSeparator&quot;^?&quot;tcl_FSListVolumes&quot;^?&quot;tcl_FSRegister&quot;^?&quot;tcl_FSUnregister&quot;^?&quot;tcl_FSData&quot;^?&quot;tcl_FSGetTranslatedStringPath&quot;^?&quot;tcl_FSGetFileSystemForPath&quot;^?&quot;tcl_FSGetPathType&quot;^?&quot;tcl_OutputBuffered&quot;^?&quot;tcl_FSMountsChanged&quot;^?&quot;tcl_EvalTokensStandard&quot;^?&quot;tcl_GetTime&quot;^?&quot;tcl_CreateObjTrace&quot;^?&quot;tcl_GetCommandInfoFromToken&quot;^?&quot;tcl_SetCommandInfoFromToken&quot;^?&quot;tcl_DbNewWideIntObj&quot;^?&quot;tcl_GetWideIntFromObj&quot;^?&quot;tcl_NewWideIntObj&quot;^?&quot;tcl_SetWideIntObj&quot;^?&quot;tcl_AllocStatBuf&quot;^?&quot;tcl_Seek&quot;^?&quot;tcl_Tell&quot;^?&quot;tcl_ChannelWideSeekProc&quot;^?}'>
<field name='magic' declared_type='int' type='i'/>
<field name='hooks' declared_type='struct TclStubHooks*' type='^{TclStubHooks=^{TclPlatStubs}^{TclIntStubs}^{TclIntPlatStubs}}'/>
<field name='tcl_PkgProvideEx' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, char *, ClientData)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_PkgRequireEx' function_pointer='true' declared_type='char *(*)(Tcl_Interp *, char *, char *, int, ClientData *)' type='^?' const='true'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='ClientData*' type='^^v'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_Panic' function_pointer='true' declared_type='void (*)(char *, ...)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_Alloc' function_pointer='true' declared_type='char *(*)(unsigned int)' type='^?'>
<arg declared_type='unsigned int' type='I'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tcl_Free' function_pointer='true' declared_type='void (*)(char *)' type='^?'>
<arg declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_Realloc' function_pointer='true' declared_type='char *(*)(char *, unsigned int)' type='^?'>
<arg declared_type='char*' type='*'/>
<arg declared_type='unsigned int' type='I'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tcl_DbCkalloc' function_pointer='true' declared_type='char *(*)(unsigned int, char *, int)' type='^?'>
<arg declared_type='unsigned int' type='I'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tcl_DbCkfree' function_pointer='true' declared_type='int (*)(char *, char *, int)' type='^?'>
<arg declared_type='char*' type='*'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_DbCkrealloc' function_pointer='true' declared_type='char *(*)(char *, unsigned int, char *, int)' type='^?'>
<arg declared_type='char*' type='*'/>
<arg declared_type='unsigned int' type='I'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tcl_CreateFileHandler' function_pointer='true' declared_type='void (*)(int, int, Tcl_FileProc *, ClientData)' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_FileProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DeleteFileHandler' function_pointer='true' declared_type='void (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SetTimer' function_pointer='true' declared_type='void (*)(Tcl_Time *)' type='^?'>
<arg declared_type='Tcl_Time*' type='^{Tcl_Time=ll}' type64='^{Tcl_Time=qq}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_Sleep' function_pointer='true' declared_type='void (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_WaitForEvent' function_pointer='true' declared_type='int (*)(Tcl_Time *)' type='^?'>
<arg declared_type='Tcl_Time*' type='^{Tcl_Time=ll}' type64='^{Tcl_Time=qq}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_AppendAllObjTypes' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_AppendStringsToObj' function_pointer='true' declared_type='void (*)(Tcl_Obj *, ...)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_AppendToObj' function_pointer='true' declared_type='void (*)(Tcl_Obj *, char *, int)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_ConcatObj' function_pointer='true' declared_type='Tcl_Obj *(*)(int, Tcl_Obj * *)' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_ConvertToType' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, Tcl_ObjType *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_ObjType*' type='^{Tcl_ObjType=*^?^?^?^?}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_DbDecrRefCount' function_pointer='true' declared_type='void (*)(Tcl_Obj *, char *, int)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DbIncrRefCount' function_pointer='true' declared_type='void (*)(Tcl_Obj *, char *, int)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DbIsShared' function_pointer='true' declared_type='int (*)(Tcl_Obj *, char *, int)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_DbNewBooleanObj' function_pointer='true' declared_type='Tcl_Obj *(*)(int, char *, int)' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_DbNewByteArrayObj' function_pointer='true' declared_type='Tcl_Obj *(*)(unsigned char *, int, char *, int)' type='^?'>
<arg declared_type='unsigned char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_DbNewDoubleObj' function_pointer='true' declared_type='Tcl_Obj *(*)(double, char *, int)' type='^?'>
<arg declared_type='double' type='d'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_DbNewListObj' function_pointer='true' declared_type='Tcl_Obj *(*)(int, Tcl_Obj * *, char *, int)' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_DbNewLongObj' function_pointer='true' declared_type='Tcl_Obj *(*)(long, char *, int)' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_DbNewObj' function_pointer='true' declared_type='Tcl_Obj *(*)(char *, int)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_DbNewStringObj' function_pointer='true' declared_type='Tcl_Obj *(*)(char *, int, char *, int)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_DuplicateObj' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tclFreeObj' function_pointer='true' declared_type='void (*)(Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_GetBoolean' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, int *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetBooleanFromObj' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, int *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetByteArrayFromObj' function_pointer='true' declared_type='unsigned char *(*)(Tcl_Obj *, int *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='unsigned char*' type='*'/>
</field>
<field name='tcl_GetDouble' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, double *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='double*' type='^d'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetDoubleFromObj' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, double *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='double*' type='^d'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetIndexFromObj' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, char **, char *, int, int *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='char**' type='^*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetInt' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, int *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetIntFromObj' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, int *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetLongFromObj' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, long *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetObjType' function_pointer='true' declared_type='Tcl_ObjType *(*)(char *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='Tcl_ObjType*' type='^{Tcl_ObjType=*^?^?^?^?}'/>
</field>
<field name='tcl_GetStringFromObj' function_pointer='true' declared_type='char *(*)(Tcl_Obj *, int *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tcl_InvalidateStringRep' function_pointer='true' declared_type='void (*)(Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_ListObjAppendList' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ListObjAppendElement' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ListObjGetElements' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, int *, Tcl_Obj ***)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='Tcl_Obj***' type='^^^{Tcl_Obj}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ListObjIndex' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, int, Tcl_Obj **)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ListObjLength' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, int *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ListObjReplace' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, int, int, int, Tcl_Obj * *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_NewBooleanObj' function_pointer='true' declared_type='Tcl_Obj *(*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_NewByteArrayObj' function_pointer='true' declared_type='Tcl_Obj *(*)(unsigned char *, int)' type='^?'>
<arg declared_type='unsigned char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_NewDoubleObj' function_pointer='true' declared_type='Tcl_Obj *(*)(double)' type='^?'>
<arg declared_type='double' type='d'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_NewIntObj' function_pointer='true' declared_type='Tcl_Obj *(*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_NewListObj' function_pointer='true' declared_type='Tcl_Obj *(*)(int, Tcl_Obj * *)' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_NewLongObj' function_pointer='true' declared_type='Tcl_Obj *(*)(long)' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_NewObj' function_pointer='true' declared_type='Tcl_Obj *(*)(void)' type='^?'>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_NewStringObj' function_pointer='true' declared_type='Tcl_Obj *(*)(char *, int)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_SetBooleanObj' function_pointer='true' declared_type='void (*)(Tcl_Obj *, int)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SetByteArrayLength' function_pointer='true' declared_type='unsigned char *(*)(Tcl_Obj *, int)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='unsigned char*' type='*'/>
</field>
<field name='tcl_SetByteArrayObj' function_pointer='true' declared_type='void (*)(Tcl_Obj *, unsigned char *, int)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='unsigned char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SetDoubleObj' function_pointer='true' declared_type='void (*)(Tcl_Obj *, double)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SetIntObj' function_pointer='true' declared_type='void (*)(Tcl_Obj *, int)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SetListObj' function_pointer='true' declared_type='void (*)(Tcl_Obj *, int, Tcl_Obj * *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SetLongObj' function_pointer='true' declared_type='void (*)(Tcl_Obj *, long)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='long' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SetObjLength' function_pointer='true' declared_type='void (*)(Tcl_Obj *, int)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SetStringObj' function_pointer='true' declared_type='void (*)(Tcl_Obj *, char *, int)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_AddErrorInfo' function_pointer='true' declared_type='void (*)(Tcl_Interp *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_AddObjErrorInfo' function_pointer='true' declared_type='void (*)(Tcl_Interp *, char *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_AllowExceptions' function_pointer='true' declared_type='void (*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_AppendElement' function_pointer='true' declared_type='void (*)(Tcl_Interp *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_AppendResult' function_pointer='true' declared_type='void (*)(Tcl_Interp *, ...)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_AsyncCreate' function_pointer='true' declared_type='Tcl_AsyncHandler (*)(Tcl_AsyncProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_AsyncProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='Tcl_AsyncHandler' type='^{Tcl_AsyncHandler_=}'/>
</field>
<field name='tcl_AsyncDelete' function_pointer='true' declared_type='void (*)(Tcl_AsyncHandler)' type='^?'>
<arg declared_type='Tcl_AsyncHandler' type='^{Tcl_AsyncHandler_=}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_AsyncInvoke' function_pointer='true' declared_type='int (*)(Tcl_Interp *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_AsyncMark' function_pointer='true' declared_type='void (*)(Tcl_AsyncHandler)' type='^?'>
<arg declared_type='Tcl_AsyncHandler' type='^{Tcl_AsyncHandler_=}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_AsyncReady' function_pointer='true' declared_type='int (*)(void)' type='^?'>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_BackgroundError' function_pointer='true' declared_type='void (*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_Backslash' function_pointer='true' declared_type='char (*)(char *, int *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='char' type='c'/>
</field>
<field name='tcl_BadChannelOption' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_CallWhenDeleted' function_pointer='true' declared_type='void (*)(Tcl_Interp *, Tcl_InterpDeleteProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_InterpDeleteProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_CancelIdleCall' function_pointer='true' declared_type='void (*)(Tcl_IdleProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_IdleProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_Close' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_CommandComplete' function_pointer='true' declared_type='int (*)(char *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_Concat' function_pointer='true' declared_type='char *(*)(int, char * *)' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='char **' type='^*' const='true'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tcl_ConvertElement' function_pointer='true' declared_type='int (*)(char *, char *, int)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ConvertCountedElement' function_pointer='true' declared_type='int (*)(char *, int, char *, int)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_CreateAlias' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, Tcl_Interp *, char *, int, char * *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char **' type='^*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_CreateAliasObj' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, Tcl_Interp *, char *, int, Tcl_Obj * *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_CreateChannel' function_pointer='true' declared_type='Tcl_Channel (*)(Tcl_ChannelType *, char *, ClientData, int)' type='^?'>
<arg declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</field>
<field name='tcl_CreateChannelHandler' function_pointer='true' declared_type='void (*)(Tcl_Channel, int, Tcl_ChannelProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_ChannelProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_CreateCloseHandler' function_pointer='true' declared_type='void (*)(Tcl_Channel, Tcl_CloseProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='Tcl_CloseProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_CreateCommand' function_pointer='true' declared_type='Tcl_Command (*)(Tcl_Interp *, char *, Tcl_CmdProc *, ClientData, Tcl_CmdDeleteProc *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_CmdProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_CmdDeleteProc*' type='^?'/>
<retval declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
</field>
<field name='tcl_CreateEventSource' function_pointer='true' declared_type='void (*)(Tcl_EventSetupProc *, Tcl_EventCheckProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_EventSetupProc*' type='^?'/>
<arg declared_type='Tcl_EventCheckProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_CreateExitHandler' function_pointer='true' declared_type='void (*)(Tcl_ExitProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_ExitProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_CreateInterp' function_pointer='true' declared_type='Tcl_Interp *(*)(void)' type='^?'>
<retval declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
</field>
<field name='tcl_CreateMathFunc' function_pointer='true' declared_type='void (*)(Tcl_Interp *, char *, int, Tcl_ValueType *, Tcl_MathProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_ValueType*' type='^i'/>
<arg declared_type='Tcl_MathProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_CreateObjCommand' function_pointer='true' declared_type='Tcl_Command (*)(Tcl_Interp *, char *, Tcl_ObjCmdProc *, ClientData, Tcl_CmdDeleteProc *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_ObjCmdProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_CmdDeleteProc*' type='^?'/>
<retval declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
</field>
<field name='tcl_CreateSlave' function_pointer='true' declared_type='Tcl_Interp *(*)(Tcl_Interp *, char *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
</field>
<field name='tcl_CreateTimerHandler' function_pointer='true' declared_type='Tcl_TimerToken (*)(int, Tcl_TimerProc *, ClientData)' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_TimerProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='Tcl_TimerToken' type='^{Tcl_TimerToken_=}'/>
</field>
<field name='tcl_CreateTrace' function_pointer='true' declared_type='Tcl_Trace (*)(Tcl_Interp *, int, Tcl_CmdTraceProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_CmdTraceProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='Tcl_Trace' type='^{Tcl_Trace_=}'/>
</field>
<field name='tcl_DeleteAssocData' function_pointer='true' declared_type='void (*)(Tcl_Interp *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DeleteChannelHandler' function_pointer='true' declared_type='void (*)(Tcl_Channel, Tcl_ChannelProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='Tcl_ChannelProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DeleteCloseHandler' function_pointer='true' declared_type='void (*)(Tcl_Channel, Tcl_CloseProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='Tcl_CloseProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DeleteCommand' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_DeleteCommandFromToken' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Command)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_DeleteEvents' function_pointer='true' declared_type='void (*)(Tcl_EventDeleteProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_EventDeleteProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DeleteEventSource' function_pointer='true' declared_type='void (*)(Tcl_EventSetupProc *, Tcl_EventCheckProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_EventSetupProc*' type='^?'/>
<arg declared_type='Tcl_EventCheckProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DeleteExitHandler' function_pointer='true' declared_type='void (*)(Tcl_ExitProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_ExitProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DeleteHashEntry' function_pointer='true' declared_type='void (*)(Tcl_HashEntry *)' type='^?'>
<arg declared_type='Tcl_HashEntry*' type='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][4c])}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DeleteHashTable' function_pointer='true' declared_type='void (*)(Tcl_HashTable *)' type='^?'>
<arg declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DeleteInterp' function_pointer='true' declared_type='void (*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DetachPids' function_pointer='true' declared_type='void (*)(int, Tcl_Pid *)' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Pid*' type='^^{Tcl_Pid_}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DeleteTimerHandler' function_pointer='true' declared_type='void (*)(Tcl_TimerToken)' type='^?'>
<arg declared_type='Tcl_TimerToken' type='^{Tcl_TimerToken_=}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DeleteTrace' function_pointer='true' declared_type='void (*)(Tcl_Interp *, Tcl_Trace)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Trace' type='^{Tcl_Trace_=}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DontCallWhenDeleted' function_pointer='true' declared_type='void (*)(Tcl_Interp *, Tcl_InterpDeleteProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_InterpDeleteProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DoOneEvent' function_pointer='true' declared_type='int (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_DoWhenIdle' function_pointer='true' declared_type='void (*)(Tcl_IdleProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_IdleProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DStringAppend' function_pointer='true' declared_type='char *(*)(Tcl_DString *, char *, int)' type='^?'>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tcl_DStringAppendElement' function_pointer='true' declared_type='char *(*)(Tcl_DString *, char *)' type='^?'>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tcl_DStringEndSublist' function_pointer='true' declared_type='void (*)(Tcl_DString *)' type='^?'>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DStringFree' function_pointer='true' declared_type='void (*)(Tcl_DString *)' type='^?'>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DStringGetResult' function_pointer='true' declared_type='void (*)(Tcl_Interp *, Tcl_DString *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DStringInit' function_pointer='true' declared_type='void (*)(Tcl_DString *)' type='^?'>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DStringResult' function_pointer='true' declared_type='void (*)(Tcl_Interp *, Tcl_DString *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DStringSetLength' function_pointer='true' declared_type='void (*)(Tcl_DString *, int)' type='^?'>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DStringStartSublist' function_pointer='true' declared_type='void (*)(Tcl_DString *)' type='^?'>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_Eof' function_pointer='true' declared_type='int (*)(Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ErrnoId' function_pointer='true' declared_type='char *(*)(void)' type='^?' const='true'>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_ErrnoMsg' function_pointer='true' declared_type='char *(*)(int)' type='^?' const='true'>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_Eval' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_EvalFile' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_EvalObj' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_EventuallyFree' function_pointer='true' declared_type='void (*)(ClientData, Tcl_FreeProc *)' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_FreeProc*' type='^?'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_Exit' function_pointer='true' declared_type='void (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_ExposeCommand' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ExprBoolean' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, int *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ExprBooleanObj' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, int *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ExprDouble' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, double *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='double*' type='^d'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ExprDoubleObj' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, double *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='double*' type='^d'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ExprLong' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, long *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ExprLongObj' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, long *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ExprObj' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, Tcl_Obj **)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ExprString' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_Finalize' function_pointer='true' declared_type='void (*)(void)' type='^?'>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_FindExecutable' function_pointer='true' declared_type='void (*)(char *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_FirstHashEntry' function_pointer='true' declared_type='Tcl_HashEntry *(*)(Tcl_HashTable *, Tcl_HashSearch *)' type='^?'>
<arg declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<arg declared_type='Tcl_HashSearch*' type='^{Tcl_HashSearch=^{Tcl_HashTable}i^{Tcl_HashEntry}}'/>
<retval declared_type='Tcl_HashEntry*' type='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][4c])}'/>
</field>
<field name='tcl_Flush' function_pointer='true' declared_type='int (*)(Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FreeResult' function_pointer='true' declared_type='void (*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_GetAlias' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, Tcl_Interp **, char **, int *, char ***)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Interp**' type='^^{Tcl_Interp}'/>
<arg declared_type='char**' type='^*' const='true'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='char***' type='^^*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetAliasObj' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, Tcl_Interp **, char **, int *, Tcl_Obj ***)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Interp**' type='^^{Tcl_Interp}'/>
<arg declared_type='char**' type='^*' const='true'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='Tcl_Obj***' type='^^^{Tcl_Obj}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetAssocData' function_pointer='true' declared_type='ClientData (*)(Tcl_Interp *, char *, Tcl_InterpDeleteProc **)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_InterpDeleteProc**' type='^^?'/>
<retval declared_type='ClientData' type='^v'/>
</field>
<field name='tcl_GetChannel' function_pointer='true' declared_type='Tcl_Channel (*)(Tcl_Interp *, char *, int *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</field>
<field name='tcl_GetChannelBufferSize' function_pointer='true' declared_type='int (*)(Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetChannelHandle' function_pointer='true' declared_type='int (*)(Tcl_Channel, int, ClientData *)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='ClientData*' type='^^v'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetChannelInstanceData' function_pointer='true' declared_type='ClientData (*)(Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='ClientData' type='^v'/>
</field>
<field name='tcl_GetChannelMode' function_pointer='true' declared_type='int (*)(Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetChannelName' function_pointer='true' declared_type='char *(*)(Tcl_Channel)' type='^?' const='true'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_GetChannelOption' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Channel, char *, Tcl_DString *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetChannelType' function_pointer='true' declared_type='Tcl_ChannelType *(*)(Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
</field>
<field name='tcl_GetCommandInfo' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, Tcl_CmdInfo *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_CmdInfo*' type='^{Tcl_CmdInfo=i^?^v^?^v^?^v^{Tcl_Namespace}}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetCommandName' function_pointer='true' declared_type='char *(*)(Tcl_Interp *, Tcl_Command)' type='^?' const='true'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_GetErrno' function_pointer='true' declared_type='int (*)(void)' type='^?'>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetHostName' function_pointer='true' declared_type='char *(*)(void)' type='^?' const='true'>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_GetInterpPath' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetMaster' function_pointer='true' declared_type='Tcl_Interp *(*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
</field>
<field name='tcl_GetNameOfExecutable' function_pointer='true' declared_type='char *(*)(void)' type='^?' const='true'>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_GetObjResult' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_GetOpenFile' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, int, int, ClientData *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='ClientData*' type='^^v'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetPathType' function_pointer='true' declared_type='Tcl_PathType (*)(char *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='Tcl_PathType' type='i'/>
</field>
<field name='tcl_Gets' function_pointer='true' declared_type='int (*)(Tcl_Channel, Tcl_DString *)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetsObj' function_pointer='true' declared_type='int (*)(Tcl_Channel, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetServiceMode' function_pointer='true' declared_type='int (*)(void)' type='^?'>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetSlave' function_pointer='true' declared_type='Tcl_Interp *(*)(Tcl_Interp *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
</field>
<field name='tcl_GetStdChannel' function_pointer='true' declared_type='Tcl_Channel (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</field>
<field name='tcl_GetStringResult' function_pointer='true' declared_type='char *(*)(Tcl_Interp *)' type='^?' const='true'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_GetVar' function_pointer='true' declared_type='char *(*)(Tcl_Interp *, char *, int)' type='^?' const='true'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_GetVar2' function_pointer='true' declared_type='char *(*)(Tcl_Interp *, char *, char *, int)' type='^?' const='true'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_GlobalEval' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GlobalEvalObj' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_HideCommand' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_Init' function_pointer='true' declared_type='int (*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_InitHashTable' function_pointer='true' declared_type='void (*)(Tcl_HashTable *, int)' type='^?'>
<arg declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_InputBlocked' function_pointer='true' declared_type='int (*)(Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_InputBuffered' function_pointer='true' declared_type='int (*)(Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_InterpDeleted' function_pointer='true' declared_type='int (*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_IsSafe' function_pointer='true' declared_type='int (*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_JoinPath' function_pointer='true' declared_type='char *(*)(int, char * *, Tcl_DString *)' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='char **' type='^*' const='true'/>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tcl_LinkVar' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, char *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='reserved188' declared_type='void*' type='^v'/>
<field name='tcl_MakeFileChannel' function_pointer='true' declared_type='Tcl_Channel (*)(ClientData, int)' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</field>
<field name='tcl_MakeSafe' function_pointer='true' declared_type='int (*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_MakeTcpClientChannel' function_pointer='true' declared_type='Tcl_Channel (*)(ClientData)' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</field>
<field name='tcl_Merge' function_pointer='true' declared_type='char *(*)(int, char * *)' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='char **' type='^*' const='true'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tcl_NextHashEntry' function_pointer='true' declared_type='Tcl_HashEntry *(*)(Tcl_HashSearch *)' type='^?'>
<arg declared_type='Tcl_HashSearch*' type='^{Tcl_HashSearch=^{Tcl_HashTable}i^{Tcl_HashEntry}}'/>
<retval declared_type='Tcl_HashEntry*' type='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][4c])}'/>
</field>
<field name='tcl_NotifyChannel' function_pointer='true' declared_type='void (*)(Tcl_Channel, int)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_ObjGetVar2' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Interp *, Tcl_Obj *, Tcl_Obj *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_ObjSetVar2' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Interp *, Tcl_Obj *, Tcl_Obj *, Tcl_Obj *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_OpenCommandChannel' function_pointer='true' declared_type='Tcl_Channel (*)(Tcl_Interp *, int, char **, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char**' type='^*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</field>
<field name='tcl_OpenFileChannel' function_pointer='true' declared_type='Tcl_Channel (*)(Tcl_Interp *, char *, char *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</field>
<field name='tcl_OpenTcpClient' function_pointer='true' declared_type='Tcl_Channel (*)(Tcl_Interp *, int, char *, char *, int, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</field>
<field name='tcl_OpenTcpServer' function_pointer='true' declared_type='Tcl_Channel (*)(Tcl_Interp *, int, char *, Tcl_TcpAcceptProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_TcpAcceptProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</field>
<field name='tcl_Preserve' function_pointer='true' declared_type='void (*)(ClientData)' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_PrintDouble' function_pointer='true' declared_type='void (*)(Tcl_Interp *, double, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='double' type='d'/>
<arg declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_PutEnv' function_pointer='true' declared_type='int (*)(char *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_PosixError' function_pointer='true' declared_type='char *(*)(Tcl_Interp *)' type='^?' const='true'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_QueueEvent' function_pointer='true' declared_type='void (*)(Tcl_Event *, Tcl_QueuePosition)' type='^?'>
<arg declared_type='Tcl_Event*' type='^{Tcl_Event=^?^{Tcl_Event}}'/>
<arg declared_type='Tcl_QueuePosition' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_Read' function_pointer='true' declared_type='int (*)(Tcl_Channel, char *, int)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ReapDetachedProcs' function_pointer='true' declared_type='void (*)(void)' type='^?'>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_RecordAndEval' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_RecordAndEvalObj' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_RegisterChannel' function_pointer='true' declared_type='void (*)(Tcl_Interp *, Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_RegisterObjType' function_pointer='true' declared_type='void (*)(Tcl_ObjType *)' type='^?'>
<arg declared_type='Tcl_ObjType*' type='^{Tcl_ObjType=*^?^?^?^?}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_RegExpCompile' function_pointer='true' declared_type='Tcl_RegExp (*)(Tcl_Interp *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='Tcl_RegExp' type='^{Tcl_RegExp_=}'/>
</field>
<field name='tcl_RegExpExec' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_RegExp, char *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_RegExp' type='^{Tcl_RegExp_=}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_RegExpMatch' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_RegExpRange' function_pointer='true' declared_type='void (*)(Tcl_RegExp, int, char **, char **)' type='^?'>
<arg declared_type='Tcl_RegExp' type='^{Tcl_RegExp_=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char**' type='^*' const='true'/>
<arg declared_type='char**' type='^*' const='true'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_Release' function_pointer='true' declared_type='void (*)(ClientData)' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_ResetResult' function_pointer='true' declared_type='void (*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_ScanElement' function_pointer='true' declared_type='int (*)(char *, int *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ScanCountedElement' function_pointer='true' declared_type='int (*)(char *, int, int *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_SeekOld' function_pointer='true' declared_type='int (*)(Tcl_Channel, int, int)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ServiceAll' function_pointer='true' declared_type='int (*)(void)' type='^?'>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ServiceEvent' function_pointer='true' declared_type='int (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_SetAssocData' function_pointer='true' declared_type='void (*)(Tcl_Interp *, char *, Tcl_InterpDeleteProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_InterpDeleteProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SetChannelBufferSize' function_pointer='true' declared_type='void (*)(Tcl_Channel, int)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SetChannelOption' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Channel, char *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_SetCommandInfo' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, Tcl_CmdInfo *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_CmdInfo*' type='^{Tcl_CmdInfo=i^?^v^?^v^?^v^{Tcl_Namespace}}' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_SetErrno' function_pointer='true' declared_type='void (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SetErrorCode' function_pointer='true' declared_type='void (*)(Tcl_Interp *, ...)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SetMaxBlockTime' function_pointer='true' declared_type='void (*)(Tcl_Time *)' type='^?'>
<arg declared_type='Tcl_Time*' type='^{Tcl_Time=ll}' type64='^{Tcl_Time=qq}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SetPanicProc' function_pointer='true' declared_type='void (*)(Tcl_PanicProc *)' type='^?'>
<arg declared_type='Tcl_PanicProc*' type='^?'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SetRecursionLimit' function_pointer='true' declared_type='int (*)(Tcl_Interp *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_SetResult' function_pointer='true' declared_type='void (*)(Tcl_Interp *, char *, Tcl_FreeProc *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='Tcl_FreeProc*' type='^?'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SetServiceMode' function_pointer='true' declared_type='int (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_SetObjErrorCode' function_pointer='true' declared_type='void (*)(Tcl_Interp *, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SetObjResult' function_pointer='true' declared_type='void (*)(Tcl_Interp *, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SetStdChannel' function_pointer='true' declared_type='void (*)(Tcl_Channel, int)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SetVar' function_pointer='true' declared_type='char *(*)(Tcl_Interp *, char *, char *, int)' type='^?' const='true'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_SetVar2' function_pointer='true' declared_type='char *(*)(Tcl_Interp *, char *, char *, char *, int)' type='^?' const='true'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_SignalId' function_pointer='true' declared_type='char *(*)(int)' type='^?' const='true'>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_SignalMsg' function_pointer='true' declared_type='char *(*)(int)' type='^?' const='true'>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_SourceRCFile' function_pointer='true' declared_type='void (*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SplitList' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, int *, char ***)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='char***' type='^^*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_SplitPath' function_pointer='true' declared_type='void (*)(char *, int *, char ***)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='char***' type='^^*' const='true'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_StaticPackage' function_pointer='true' declared_type='void (*)(Tcl_Interp *, char *, Tcl_PackageInitProc *, Tcl_PackageInitProc *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_PackageInitProc*' type='^?'/>
<arg declared_type='Tcl_PackageInitProc*' type='^?'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_StringMatch' function_pointer='true' declared_type='int (*)(char *, char *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_TellOld' function_pointer='true' declared_type='int (*)(Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_TraceVar' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, int, Tcl_VarTraceProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_VarTraceProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_TraceVar2' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, char *, int, Tcl_VarTraceProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_VarTraceProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_TranslateFileName' function_pointer='true' declared_type='char *(*)(Tcl_Interp *, char *, Tcl_DString *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tcl_Ungets' function_pointer='true' declared_type='int (*)(Tcl_Channel, char *, int, int)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UnlinkVar' function_pointer='true' declared_type='void (*)(Tcl_Interp *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_UnregisterChannel' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UnsetVar' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UnsetVar2' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, char *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UntraceVar' function_pointer='true' declared_type='void (*)(Tcl_Interp *, char *, int, Tcl_VarTraceProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_VarTraceProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_UntraceVar2' function_pointer='true' declared_type='void (*)(Tcl_Interp *, char *, char *, int, Tcl_VarTraceProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_VarTraceProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_UpdateLinkedVar' function_pointer='true' declared_type='void (*)(Tcl_Interp *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_UpVar' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, char *, char *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UpVar2' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, char *, char *, char *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_VarEval' function_pointer='true' declared_type='int (*)(Tcl_Interp *, ...)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_VarTraceInfo' function_pointer='true' declared_type='ClientData (*)(Tcl_Interp *, char *, int, Tcl_VarTraceProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_VarTraceProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='ClientData' type='^v'/>
</field>
<field name='tcl_VarTraceInfo2' function_pointer='true' declared_type='ClientData (*)(Tcl_Interp *, char *, char *, int, Tcl_VarTraceProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_VarTraceProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='ClientData' type='^v'/>
</field>
<field name='tcl_Write' function_pointer='true' declared_type='int (*)(Tcl_Channel, char *, int)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_WrongNumArgs' function_pointer='true' declared_type='void (*)(Tcl_Interp *, int, Tcl_Obj * *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DumpActiveMemory' function_pointer='true' declared_type='int (*)(char *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ValidateAllMemory' function_pointer='true' declared_type='void (*)(char *, int)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_AppendResultVA' function_pointer='true' declared_type='void (*)(Tcl_Interp *, va_list)' type='^?' declared_type64='void (*)(Tcl_Interp *, __va_list_tag *)'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_AppendStringsToObjVA' function_pointer='true' declared_type='void (*)(Tcl_Obj *, va_list)' type='^?' declared_type64='void (*)(Tcl_Obj *, __va_list_tag *)'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_HashStats' function_pointer='true' declared_type='char *(*)(Tcl_HashTable *)' type='^?' const='true'>
<arg declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_ParseVar' function_pointer='true' declared_type='char *(*)(Tcl_Interp *, char *, char **)' type='^?' const='true'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char**' type='^*' const='true'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_PkgPresent' function_pointer='true' declared_type='char *(*)(Tcl_Interp *, char *, char *, int)' type='^?' const='true'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_PkgPresentEx' function_pointer='true' declared_type='char *(*)(Tcl_Interp *, char *, char *, int, ClientData *)' type='^?' const='true'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='ClientData*' type='^^v'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_PkgProvide' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_PkgRequire' function_pointer='true' declared_type='char *(*)(Tcl_Interp *, char *, char *, int)' type='^?' const='true'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_SetErrorCodeVA' function_pointer='true' declared_type='void (*)(Tcl_Interp *, va_list)' type='^?' declared_type64='void (*)(Tcl_Interp *, __va_list_tag *)'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_VarEvalVA' function_pointer='true' declared_type='int (*)(Tcl_Interp *, va_list)' type='^?' declared_type64='int (*)(Tcl_Interp *, __va_list_tag *)'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_WaitPid' function_pointer='true' declared_type='Tcl_Pid (*)(Tcl_Pid, int *, int)' type='^?'>
<arg declared_type='Tcl_Pid' type='^{Tcl_Pid_=}'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Pid' type='^{Tcl_Pid_=}'/>
</field>
<field name='tcl_PanicVA' function_pointer='true' declared_type='void (*)(char *, va_list)' type='^?' declared_type64='void (*)(char *, __va_list_tag *)'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_GetVersion' function_pointer='true' declared_type='void (*)(int *, int *, int *, int *)' type='^?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_InitMemory' function_pointer='true' declared_type='void (*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_StackChannel' function_pointer='true' declared_type='Tcl_Channel (*)(Tcl_Interp *, Tcl_ChannelType *, ClientData, int, Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</field>
<field name='tcl_UnstackChannel' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetStackedChannel' function_pointer='true' declared_type='Tcl_Channel (*)(Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</field>
<field name='tcl_SetMainLoop' function_pointer='true' declared_type='void (*)(Tcl_MainLoopProc *)' type='^?'>
<arg declared_type='Tcl_MainLoopProc*' type='^?'/>
<retval declared_type='void' type='v'/>
</field>
<field name='reserved285' declared_type='void*' type='^v'/>
<field name='tcl_AppendObjToObj' function_pointer='true' declared_type='void (*)(Tcl_Obj *, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_CreateEncoding' function_pointer='true' declared_type='Tcl_Encoding (*)(Tcl_EncodingType *)' type='^?'>
<arg declared_type='Tcl_EncodingType*' type='^{Tcl_EncodingType=*^?^?^?^vi}'/>
<retval declared_type='Tcl_Encoding' type='^{Tcl_Encoding_=}'/>
</field>
<field name='tcl_CreateThreadExitHandler' function_pointer='true' declared_type='void (*)(Tcl_ExitProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_ExitProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DeleteThreadExitHandler' function_pointer='true' declared_type='void (*)(Tcl_ExitProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_ExitProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_DiscardResult' function_pointer='true' declared_type='void (*)(Tcl_SavedResult *)' type='^?'>
<arg declared_type='Tcl_SavedResult*' type='^{Tcl_SavedResult=*^?^{Tcl_Obj}*ii[201c]}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_EvalEx' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, int, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_EvalObjv' function_pointer='true' declared_type='int (*)(Tcl_Interp *, int, Tcl_Obj * *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_EvalObjEx' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ExitThread' function_pointer='true' declared_type='void (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_ExternalToUtf' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Encoding, char *, int, int, Tcl_EncodingState *, char *, int, int *, int *, int *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Encoding' type='^{Tcl_Encoding_=}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_EncodingState*' type='^^{Tcl_EncodingState_}'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ExternalToUtfDString' function_pointer='true' declared_type='char *(*)(Tcl_Encoding, char *, int, Tcl_DString *)' type='^?'>
<arg declared_type='Tcl_Encoding' type='^{Tcl_Encoding_=}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tcl_FinalizeThread' function_pointer='true' declared_type='void (*)(void)' type='^?'>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_FinalizeNotifier' function_pointer='true' declared_type='void (*)(ClientData)' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_FreeEncoding' function_pointer='true' declared_type='void (*)(Tcl_Encoding)' type='^?'>
<arg declared_type='Tcl_Encoding' type='^{Tcl_Encoding_=}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_GetCurrentThread' function_pointer='true' declared_type='Tcl_ThreadId (*)(void)' type='^?'>
<retval declared_type='Tcl_ThreadId' type='^{Tcl_ThreadId_=}'/>
</field>
<field name='tcl_GetEncoding' function_pointer='true' declared_type='Tcl_Encoding (*)(Tcl_Interp *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='Tcl_Encoding' type='^{Tcl_Encoding_=}'/>
</field>
<field name='tcl_GetEncodingName' function_pointer='true' declared_type='char *(*)(Tcl_Encoding)' type='^?' const='true'>
<arg declared_type='Tcl_Encoding' type='^{Tcl_Encoding_=}'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_GetEncodingNames' function_pointer='true' declared_type='void (*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_GetIndexFromObjStruct' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, void *, int, char *, int, int *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='void*' type='^v' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetThreadData' function_pointer='true' declared_type='void *(*)(Tcl_ThreadDataKey *, int)' type='^?'>
<arg declared_type='Tcl_ThreadDataKey*' type='^^{Tcl_ThreadDataKey_}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void*' type='^v'/>
</field>
<field name='tcl_GetVar2Ex' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Interp *, char *, char *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_InitNotifier' function_pointer='true' declared_type='ClientData (*)(void)' type='^?'>
<retval declared_type='ClientData' type='^v'/>
</field>
<field name='tcl_MutexLock' function_pointer='true' declared_type='void (*)(Tcl_Mutex *)' type='^?'>
<arg declared_type='Tcl_Mutex*' type='^^{Tcl_Mutex_}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_MutexUnlock' function_pointer='true' declared_type='void (*)(Tcl_Mutex *)' type='^?'>
<arg declared_type='Tcl_Mutex*' type='^^{Tcl_Mutex_}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_ConditionNotify' function_pointer='true' declared_type='void (*)(Tcl_Condition *)' type='^?'>
<arg declared_type='Tcl_Condition*' type='^^{Tcl_Condition_}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_ConditionWait' function_pointer='true' declared_type='void (*)(Tcl_Condition *, Tcl_Mutex *, Tcl_Time *)' type='^?'>
<arg declared_type='Tcl_Condition*' type='^^{Tcl_Condition_}'/>
<arg declared_type='Tcl_Mutex*' type='^^{Tcl_Mutex_}'/>
<arg declared_type='Tcl_Time*' type='^{Tcl_Time=ll}' type64='^{Tcl_Time=qq}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_NumUtfChars' function_pointer='true' declared_type='int (*)(char *, int)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ReadChars' function_pointer='true' declared_type='int (*)(Tcl_Channel, Tcl_Obj *, int, int)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_RestoreResult' function_pointer='true' declared_type='void (*)(Tcl_Interp *, Tcl_SavedResult *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_SavedResult*' type='^{Tcl_SavedResult=*^?^{Tcl_Obj}*ii[201c]}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SaveResult' function_pointer='true' declared_type='void (*)(Tcl_Interp *, Tcl_SavedResult *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_SavedResult*' type='^{Tcl_SavedResult=*^?^{Tcl_Obj}*ii[201c]}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SetSystemEncoding' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_SetVar2Ex' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Interp *, char *, char *, Tcl_Obj *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_ThreadAlert' function_pointer='true' declared_type='void (*)(Tcl_ThreadId)' type='^?'>
<arg declared_type='Tcl_ThreadId' type='^{Tcl_ThreadId_=}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_ThreadQueueEvent' function_pointer='true' declared_type='void (*)(Tcl_ThreadId, Tcl_Event *, Tcl_QueuePosition)' type='^?'>
<arg declared_type='Tcl_ThreadId' type='^{Tcl_ThreadId_=}'/>
<arg declared_type='Tcl_Event*' type='^{Tcl_Event=^?^{Tcl_Event}}'/>
<arg declared_type='Tcl_QueuePosition' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_UniCharAtIndex' function_pointer='true' declared_type='Tcl_UniChar (*)(char *, int)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_UniChar' type='S'/>
</field>
<field name='tcl_UniCharToLower' function_pointer='true' declared_type='Tcl_UniChar (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_UniChar' type='S'/>
</field>
<field name='tcl_UniCharToTitle' function_pointer='true' declared_type='Tcl_UniChar (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_UniChar' type='S'/>
</field>
<field name='tcl_UniCharToUpper' function_pointer='true' declared_type='Tcl_UniChar (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_UniChar' type='S'/>
</field>
<field name='tcl_UniCharToUtf' function_pointer='true' declared_type='int (*)(int, char *)' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UtfAtIndex' function_pointer='true' declared_type='char *(*)(char *, int)' type='^?' const='true'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_UtfCharComplete' function_pointer='true' declared_type='int (*)(char *, int)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UtfBackslash' function_pointer='true' declared_type='int (*)(char *, int *, char *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UtfFindFirst' function_pointer='true' declared_type='char *(*)(char *, int)' type='^?' const='true'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_UtfFindLast' function_pointer='true' declared_type='char *(*)(char *, int)' type='^?' const='true'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_UtfNext' function_pointer='true' declared_type='char *(*)(char *)' type='^?' const='true'>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_UtfPrev' function_pointer='true' declared_type='char *(*)(char *, char *)' type='^?' const='true'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_UtfToExternal' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Encoding, char *, int, int, Tcl_EncodingState *, char *, int, int *, int *, int *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Encoding' type='^{Tcl_Encoding_=}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_EncodingState*' type='^^{Tcl_EncodingState_}'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UtfToExternalDString' function_pointer='true' declared_type='char *(*)(Tcl_Encoding, char *, int, Tcl_DString *)' type='^?'>
<arg declared_type='Tcl_Encoding' type='^{Tcl_Encoding_=}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tcl_UtfToLower' function_pointer='true' declared_type='int (*)(char *)' type='^?'>
<arg declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UtfToTitle' function_pointer='true' declared_type='int (*)(char *)' type='^?'>
<arg declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UtfToUniChar' function_pointer='true' declared_type='int (*)(char *, Tcl_UniChar *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_UniChar*' type='^S'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UtfToUpper' function_pointer='true' declared_type='int (*)(char *)' type='^?'>
<arg declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_WriteChars' function_pointer='true' declared_type='int (*)(Tcl_Channel, char *, int)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_WriteObj' function_pointer='true' declared_type='int (*)(Tcl_Channel, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetString' function_pointer='true' declared_type='char *(*)(Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tcl_GetDefaultEncodingDir' function_pointer='true' declared_type='char *(*)(void)' type='^?' const='true'>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_SetDefaultEncodingDir' function_pointer='true' declared_type='void (*)(char *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_AlertNotifier' function_pointer='true' declared_type='void (*)(ClientData)' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_ServiceModeHook' function_pointer='true' declared_type='void (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_UniCharIsAlnum' function_pointer='true' declared_type='int (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UniCharIsAlpha' function_pointer='true' declared_type='int (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UniCharIsDigit' function_pointer='true' declared_type='int (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UniCharIsLower' function_pointer='true' declared_type='int (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UniCharIsSpace' function_pointer='true' declared_type='int (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UniCharIsUpper' function_pointer='true' declared_type='int (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UniCharIsWordChar' function_pointer='true' declared_type='int (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UniCharLen' function_pointer='true' declared_type='int (*)(Tcl_UniChar *)' type='^?'>
<arg declared_type='Tcl_UniChar*' type='^S' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UniCharNcmp' function_pointer='true' declared_type='int (*)(Tcl_UniChar *, Tcl_UniChar *, unsigned long)' type='^?'>
<arg declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg declared_type='unsigned long' type='L' type64='Q'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UniCharToUtfDString' function_pointer='true' declared_type='char *(*)(Tcl_UniChar *, int, Tcl_DString *)' type='^?'>
<arg declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tcl_UtfToUniCharDString' function_pointer='true' declared_type='Tcl_UniChar *(*)(char *, int, Tcl_DString *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='Tcl_UniChar*' type='^S'/>
</field>
<field name='tcl_GetRegExpFromObj' function_pointer='true' declared_type='Tcl_RegExp (*)(Tcl_Interp *, Tcl_Obj *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_RegExp' type='^{Tcl_RegExp_=}'/>
</field>
<field name='tcl_EvalTokens' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Interp *, Tcl_Token *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Token*' type='^{Tcl_Token=i*ii}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_FreeParse' function_pointer='true' declared_type='void (*)(Tcl_Parse *)' type='^?'>
<arg declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_LogCommandInfo' function_pointer='true' declared_type='void (*)(Tcl_Interp *, char *, char *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_ParseBraces' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, int, Tcl_Parse *, int, char **)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char**' type='^*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ParseCommand' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, int, int, Tcl_Parse *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ParseExpr' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, int, Tcl_Parse *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ParseQuotedString' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, int, Tcl_Parse *, int, char **)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char**' type='^*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ParseVarName' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, int, Tcl_Parse *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetCwd' function_pointer='true' declared_type='char *(*)(Tcl_Interp *, Tcl_DString *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tcl_Chdir' function_pointer='true' declared_type='int (*)(char *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_Access' function_pointer='true' declared_type='int (*)(char *, int)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_Stat' function_pointer='true' declared_type='int (*)(char *, struct stat *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='struct stat*' type='^{stat=iISSIIi{timespec=il}{timespec=il}{timespec=il}qqiIIi[2q]}' type64='^{stat=iISSIIi{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UtfNcmp' function_pointer='true' declared_type='int (*)(char *, char *, unsigned long)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='unsigned long' type='L' type64='Q'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UtfNcasecmp' function_pointer='true' declared_type='int (*)(char *, char *, unsigned long)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='unsigned long' type='L' type64='Q'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_StringCaseMatch' function_pointer='true' declared_type='int (*)(char *, char *, int)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UniCharIsControl' function_pointer='true' declared_type='int (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UniCharIsGraph' function_pointer='true' declared_type='int (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UniCharIsPrint' function_pointer='true' declared_type='int (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UniCharIsPunct' function_pointer='true' declared_type='int (*)(int)' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_RegExpExecObj' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_RegExp, Tcl_Obj *, int, int, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_RegExp' type='^{Tcl_RegExp_=}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_RegExpGetInfo' function_pointer='true' declared_type='void (*)(Tcl_RegExp, Tcl_RegExpInfo *)' type='^?'>
<arg declared_type='Tcl_RegExp' type='^{Tcl_RegExp_=}'/>
<arg declared_type='Tcl_RegExpInfo*' type='^{Tcl_RegExpInfo=i^{Tcl_RegExpIndices}ll}' type64='^{Tcl_RegExpInfo=i^{Tcl_RegExpIndices}qq}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_NewUnicodeObj' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_UniChar *, int)' type='^?'>
<arg declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_SetUnicodeObj' function_pointer='true' declared_type='void (*)(Tcl_Obj *, Tcl_UniChar *, int)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_GetCharLength' function_pointer='true' declared_type='int (*)(Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetUniChar' function_pointer='true' declared_type='Tcl_UniChar (*)(Tcl_Obj *, int)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_UniChar' type='S'/>
</field>
<field name='tcl_GetUnicode' function_pointer='true' declared_type='Tcl_UniChar *(*)(Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_UniChar*' type='^S'/>
</field>
<field name='tcl_GetRange' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Obj *, int, int)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_AppendUnicodeToObj' function_pointer='true' declared_type='void (*)(Tcl_Obj *, Tcl_UniChar *, int)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_RegExpMatchObj' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_SetNotifier' function_pointer='true' declared_type='void (*)(Tcl_NotifierProcs *)' type='^?'>
<arg declared_type='Tcl_NotifierProcs*' type='^{Tcl_NotifierProcs=^?^?^?^?^?^?^?^?}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_GetAllocMutex' function_pointer='true' declared_type='Tcl_Mutex *(*)(void)' type='^?'>
<retval declared_type='Tcl_Mutex*' type='^^{Tcl_Mutex_}'/>
</field>
<field name='tcl_GetChannelNames' function_pointer='true' declared_type='int (*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetChannelNamesEx' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ProcObjCmd' function_pointer='true' declared_type='int (*)(ClientData, Tcl_Interp *, int, Tcl_Obj * *)' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ConditionFinalize' function_pointer='true' declared_type='void (*)(Tcl_Condition *)' type='^?'>
<arg declared_type='Tcl_Condition*' type='^^{Tcl_Condition_}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_MutexFinalize' function_pointer='true' declared_type='void (*)(Tcl_Mutex *)' type='^?'>
<arg declared_type='Tcl_Mutex*' type='^^{Tcl_Mutex_}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_CreateThread' function_pointer='true' declared_type='int (*)(Tcl_ThreadId *, Tcl_ThreadCreateProc *, ClientData, int, int)' type='^?'>
<arg declared_type='Tcl_ThreadId*' type='^^{Tcl_ThreadId_}'/>
<arg declared_type='Tcl_ThreadCreateProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ReadRaw' function_pointer='true' declared_type='int (*)(Tcl_Channel, char *, int)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_WriteRaw' function_pointer='true' declared_type='int (*)(Tcl_Channel, char *, int)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetTopChannel' function_pointer='true' declared_type='Tcl_Channel (*)(Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</field>
<field name='tcl_ChannelBuffered' function_pointer='true' declared_type='int (*)(Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ChannelName' function_pointer='true' declared_type='char *(*)(Tcl_ChannelType *)' type='^?' const='true'>
<arg declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_ChannelVersion' function_pointer='true' declared_type='Tcl_ChannelTypeVersion (*)(Tcl_ChannelType *)' type='^?'>
<arg declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval declared_type='Tcl_ChannelTypeVersion' type='^{Tcl_ChannelTypeVersion_=}'/>
</field>
<field name='tcl_ChannelBlockModeProc' function_pointer='true' declared_type='Tcl_DriverBlockModeProc *(*)(Tcl_ChannelType *)' type='^?'>
<arg declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverBlockModeProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</retval>
</field>
<field name='tcl_ChannelCloseProc' function_pointer='true' declared_type='Tcl_DriverCloseProc *(*)(Tcl_ChannelType *)' type='^?'>
<arg declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverCloseProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</retval>
</field>
<field name='tcl_ChannelClose2Proc' function_pointer='true' declared_type='Tcl_DriverClose2Proc *(*)(Tcl_ChannelType *)' type='^?'>
<arg declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverClose2Proc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</retval>
</field>
<field name='tcl_ChannelInputProc' function_pointer='true' declared_type='Tcl_DriverInputProc *(*)(Tcl_ChannelType *)' type='^?'>
<arg declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverInputProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</retval>
</field>
<field name='tcl_ChannelOutputProc' function_pointer='true' declared_type='Tcl_DriverOutputProc *(*)(Tcl_ChannelType *)' type='^?'>
<arg declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverOutputProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</retval>
</field>
<field name='tcl_ChannelSeekProc' function_pointer='true' declared_type='Tcl_DriverSeekProc *(*)(Tcl_ChannelType *)' type='^?'>
<arg declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverSeekProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</retval>
</field>
<field name='tcl_ChannelSetOptionProc' function_pointer='true' declared_type='Tcl_DriverSetOptionProc *(*)(Tcl_ChannelType *)' type='^?'>
<arg declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverSetOptionProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</retval>
</field>
<field name='tcl_ChannelGetOptionProc' function_pointer='true' declared_type='Tcl_DriverGetOptionProc *(*)(Tcl_ChannelType *)' type='^?'>
<arg declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverGetOptionProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='int' type='i'/>
</retval>
</field>
<field name='tcl_ChannelWatchProc' function_pointer='true' declared_type='Tcl_DriverWatchProc *(*)(Tcl_ChannelType *)' type='^?'>
<arg declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverWatchProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</retval>
</field>
<field name='tcl_ChannelGetHandleProc' function_pointer='true' declared_type='Tcl_DriverGetHandleProc *(*)(Tcl_ChannelType *)' type='^?'>
<arg declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverGetHandleProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='ClientData*' type='^^v'/>
<retval declared_type='int' type='i'/>
</retval>
</field>
<field name='tcl_ChannelFlushProc' function_pointer='true' declared_type='Tcl_DriverFlushProc *(*)(Tcl_ChannelType *)' type='^?'>
<arg declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverFlushProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='int' type='i'/>
</retval>
</field>
<field name='tcl_ChannelHandlerProc' function_pointer='true' declared_type='Tcl_DriverHandlerProc *(*)(Tcl_ChannelType *)' type='^?'>
<arg declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverHandlerProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</retval>
</field>
<field name='tcl_JoinThread' function_pointer='true' declared_type='int (*)(Tcl_ThreadId, int *)' type='^?'>
<arg declared_type='Tcl_ThreadId' type='^{Tcl_ThreadId_=}'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_IsChannelShared' function_pointer='true' declared_type='int (*)(Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_IsChannelRegistered' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_CutChannel' function_pointer='true' declared_type='void (*)(Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_SpliceChannel' function_pointer='true' declared_type='void (*)(Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_ClearChannelHandlers' function_pointer='true' declared_type='void (*)(Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_IsChannelExisting' function_pointer='true' declared_type='int (*)(char *)' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UniCharNcasecmp' function_pointer='true' declared_type='int (*)(Tcl_UniChar *, Tcl_UniChar *, unsigned long)' type='^?'>
<arg declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg declared_type='unsigned long' type='L' type64='Q'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UniCharCaseMatch' function_pointer='true' declared_type='int (*)(Tcl_UniChar *, Tcl_UniChar *, int)' type='^?'>
<arg declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FindHashEntry' function_pointer='true' declared_type='Tcl_HashEntry *(*)(Tcl_HashTable *, char *)' type='^?'>
<arg declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='Tcl_HashEntry*' type='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][4c])}'/>
</field>
<field name='tcl_CreateHashEntry' function_pointer='true' declared_type='Tcl_HashEntry *(*)(Tcl_HashTable *, char *, int *)' type='^?'>
<arg declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='Tcl_HashEntry*' type='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][4c])}'/>
</field>
<field name='tcl_InitCustomHashTable' function_pointer='true' declared_type='void (*)(Tcl_HashTable *, int, Tcl_HashKeyType *)' type='^?'>
<arg declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_HashKeyType*' type='^{Tcl_HashKeyType=ii^?^?^?^?}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_InitObjHashTable' function_pointer='true' declared_type='void (*)(Tcl_HashTable *)' type='^?'>
<arg declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_CommandTraceInfo' function_pointer='true' declared_type='ClientData (*)(Tcl_Interp *, char *, int, Tcl_CommandTraceProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_CommandTraceProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='ClientData' type='^v'/>
</field>
<field name='tcl_TraceCommand' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, int, Tcl_CommandTraceProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_CommandTraceProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_UntraceCommand' function_pointer='true' declared_type='void (*)(Tcl_Interp *, char *, int, Tcl_CommandTraceProc *, ClientData)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_CommandTraceProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_AttemptAlloc' function_pointer='true' declared_type='char *(*)(unsigned int)' type='^?'>
<arg declared_type='unsigned int' type='I'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tcl_AttemptDbCkalloc' function_pointer='true' declared_type='char *(*)(unsigned int, char *, int)' type='^?'>
<arg declared_type='unsigned int' type='I'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tcl_AttemptRealloc' function_pointer='true' declared_type='char *(*)(char *, unsigned int)' type='^?'>
<arg declared_type='char*' type='*'/>
<arg declared_type='unsigned int' type='I'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tcl_AttemptDbCkrealloc' function_pointer='true' declared_type='char *(*)(char *, unsigned int, char *, int)' type='^?'>
<arg declared_type='char*' type='*'/>
<arg declared_type='unsigned int' type='I'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='tcl_AttemptSetObjLength' function_pointer='true' declared_type='int (*)(Tcl_Obj *, int)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetChannelThread' function_pointer='true' declared_type='Tcl_ThreadId (*)(Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='Tcl_ThreadId' type='^{Tcl_ThreadId_=}'/>
</field>
<field name='tcl_GetUnicodeFromObj' function_pointer='true' declared_type='Tcl_UniChar *(*)(Tcl_Obj *, int *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='Tcl_UniChar*' type='^S'/>
</field>
<field name='tcl_GetMathFuncInfo' function_pointer='true' declared_type='int (*)(Tcl_Interp *, char *, int *, Tcl_ValueType **, Tcl_MathProc **, ClientData *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='Tcl_ValueType**' type='^^i'/>
<arg declared_type='Tcl_MathProc**' type='^^?'/>
<arg declared_type='ClientData*' type='^^v'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_ListMathFuncs' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Interp *, char *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_SubstObj' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Interp *, Tcl_Obj *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_DetachChannel' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_IsStandardChannel' function_pointer='true' declared_type='int (*)(Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSCopyFile' function_pointer='true' declared_type='int (*)(Tcl_Obj *, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSCopyDirectory' function_pointer='true' declared_type='int (*)(Tcl_Obj *, Tcl_Obj *, Tcl_Obj **)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSCreateDirectory' function_pointer='true' declared_type='int (*)(Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSDeleteFile' function_pointer='true' declared_type='int (*)(Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSLoadFile' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, char *, char *, Tcl_PackageInitProc **, Tcl_PackageInitProc **, Tcl_LoadHandle *, Tcl_FSUnloadFileProc **)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_PackageInitProc**' type='^^?'/>
<arg declared_type='Tcl_PackageInitProc**' type='^^?'/>
<arg declared_type='Tcl_LoadHandle*' type='^^{Tcl_LoadHandle_}'/>
<arg declared_type='Tcl_FSUnloadFileProc**' type='^^?'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSMatchInDirectory' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, Tcl_Obj *, char *, Tcl_GlobTypeData *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_GlobTypeData*' type='^{Tcl_GlobTypeData=ii^{Tcl_Obj}^{Tcl_Obj}}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSLink' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Obj *, Tcl_Obj *, int)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_FSRemoveDirectory' function_pointer='true' declared_type='int (*)(Tcl_Obj *, int, Tcl_Obj **)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSRenameFile' function_pointer='true' declared_type='int (*)(Tcl_Obj *, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSLstat' function_pointer='true' declared_type='int (*)(Tcl_Obj *, Tcl_StatBuf *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_StatBuf*' type='^{stat=iISSIIi{timespec=il}{timespec=il}{timespec=il}qqiIIi[2q]}' type64='^{stat=iISSIIi{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSUtime' function_pointer='true' declared_type='int (*)(Tcl_Obj *, struct utimbuf *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='struct utimbuf*' type='^{utimbuf=ii}' type64='^{utimbuf=qq}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSFileAttrsGet' function_pointer='true' declared_type='int (*)(Tcl_Interp *, int, Tcl_Obj *, Tcl_Obj **)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSFileAttrsSet' function_pointer='true' declared_type='int (*)(Tcl_Interp *, int, Tcl_Obj *, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSFileAttrStrings' function_pointer='true' declared_type='char **(*)(Tcl_Obj *, Tcl_Obj **)' type='^?' const='true'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<retval declared_type='char**' type='^*' const='true'/>
</field>
<field name='tcl_FSStat' function_pointer='true' declared_type='int (*)(Tcl_Obj *, Tcl_StatBuf *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_StatBuf*' type='^{stat=iISSIIi{timespec=il}{timespec=il}{timespec=il}qqiIIi[2q]}' type64='^{stat=iISSIIi{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSAccess' function_pointer='true' declared_type='int (*)(Tcl_Obj *, int)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSOpenFileChannel' function_pointer='true' declared_type='Tcl_Channel (*)(Tcl_Interp *, Tcl_Obj *, char *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</field>
<field name='tcl_FSGetCwd' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Interp *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_FSChdir' function_pointer='true' declared_type='int (*)(Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSConvertToPathType' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSJoinPath' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Obj *, int)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_FSSplitPath' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Obj *, int *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_FSEqualPaths' function_pointer='true' declared_type='int (*)(Tcl_Obj *, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSGetNormalizedPath' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Interp *, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_FSJoinToPath' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Obj *, int, Tcl_Obj * *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_FSGetInternalRep' function_pointer='true' declared_type='ClientData (*)(Tcl_Obj *, Tcl_Filesystem *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Filesystem*' type='^{Tcl_Filesystem=*i^{Tcl_FSVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval declared_type='ClientData' type='^v'/>
</field>
<field name='tcl_FSGetTranslatedPath' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Interp *, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_FSEvalFile' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSNewNativePath' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Filesystem *, ClientData)' type='^?'>
<arg declared_type='Tcl_Filesystem*' type='^{Tcl_Filesystem=*i^{Tcl_FSVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_FSGetNativePath' function_pointer='true' declared_type='char *(*)(Tcl_Obj *)' type='^?' const='true'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_FSFileSystemInfo' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_FSPathSeparator' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_FSListVolumes' function_pointer='true' declared_type='Tcl_Obj *(*)(void)' type='^?'>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_FSRegister' function_pointer='true' declared_type='int (*)(ClientData, Tcl_Filesystem *)' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Filesystem*' type='^{Tcl_Filesystem=*i^{Tcl_FSVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSUnregister' function_pointer='true' declared_type='int (*)(Tcl_Filesystem *)' type='^?'>
<arg declared_type='Tcl_Filesystem*' type='^{Tcl_Filesystem=*i^{Tcl_FSVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSData' function_pointer='true' declared_type='ClientData (*)(Tcl_Filesystem *)' type='^?'>
<arg declared_type='Tcl_Filesystem*' type='^{Tcl_Filesystem=*i^{Tcl_FSVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval declared_type='ClientData' type='^v'/>
</field>
<field name='tcl_FSGetTranslatedStringPath' function_pointer='true' declared_type='char *(*)(Tcl_Interp *, Tcl_Obj *)' type='^?' const='true'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='char*' type='*' const='true'/>
</field>
<field name='tcl_FSGetFileSystemForPath' function_pointer='true' declared_type='Tcl_Filesystem *(*)(Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Filesystem*' type='^{Tcl_Filesystem=*i^{Tcl_FSVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
</field>
<field name='tcl_FSGetPathType' function_pointer='true' declared_type='Tcl_PathType (*)(Tcl_Obj *)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_PathType' type='i'/>
</field>
<field name='tcl_OutputBuffered' function_pointer='true' declared_type='int (*)(Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_FSMountsChanged' function_pointer='true' declared_type='void (*)(Tcl_Filesystem *)' type='^?'>
<arg declared_type='Tcl_Filesystem*' type='^{Tcl_Filesystem=*i^{Tcl_FSVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_EvalTokensStandard' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Token *, int)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Token*' type='^{Tcl_Token=i*ii}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_GetTime' function_pointer='true' declared_type='void (*)(Tcl_Time *)' type='^?'>
<arg declared_type='Tcl_Time*' type='^{Tcl_Time=ll}' type64='^{Tcl_Time=qq}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_CreateObjTrace' function_pointer='true' declared_type='Tcl_Trace (*)(Tcl_Interp *, int, int, Tcl_CmdObjTraceProc *, ClientData, Tcl_CmdObjTraceDeleteProc *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_CmdObjTraceProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_CmdObjTraceDeleteProc*' type='^?'/>
<retval declared_type='Tcl_Trace' type='^{Tcl_Trace_=}'/>
</field>
<field name='tcl_GetCommandInfoFromToken' function_pointer='true' declared_type='int (*)(Tcl_Command, Tcl_CmdInfo *)' type='^?'>
<arg declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
<arg declared_type='Tcl_CmdInfo*' type='^{Tcl_CmdInfo=i^?^v^?^v^?^v^{Tcl_Namespace}}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_SetCommandInfoFromToken' function_pointer='true' declared_type='int (*)(Tcl_Command, Tcl_CmdInfo *)' type='^?'>
<arg declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
<arg declared_type='Tcl_CmdInfo*' type='^{Tcl_CmdInfo=i^?^v^?^v^?^v^{Tcl_Namespace}}' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_DbNewWideIntObj' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_WideInt, char *, int)' type='^?'>
<arg declared_type='Tcl_WideInt' type='q'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_GetWideIntFromObj' function_pointer='true' declared_type='int (*)(Tcl_Interp *, Tcl_Obj *, Tcl_WideInt *)' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_WideInt*' type='^q'/>
<retval declared_type='int' type='i'/>
</field>
<field name='tcl_NewWideIntObj' function_pointer='true' declared_type='Tcl_Obj *(*)(Tcl_WideInt)' type='^?'>
<arg declared_type='Tcl_WideInt' type='q'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='tcl_SetWideIntObj' function_pointer='true' declared_type='void (*)(Tcl_Obj *, Tcl_WideInt)' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_WideInt' type='q'/>
<retval declared_type='void' type='v'/>
</field>
<field name='tcl_AllocStatBuf' function_pointer='true' declared_type='Tcl_StatBuf *(*)(void)' type='^?'>
<retval declared_type='Tcl_StatBuf*' type='^{stat=iISSIIi{timespec=il}{timespec=il}{timespec=il}qqiIIi[2q]}' type64='^{stat=iISSIIi{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}'/>
</field>
<field name='tcl_Seek' function_pointer='true' declared_type='Tcl_WideInt (*)(Tcl_Channel, Tcl_WideInt, int)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='Tcl_WideInt' type='q'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_WideInt' type='q'/>
</field>
<field name='tcl_Tell' function_pointer='true' declared_type='Tcl_WideInt (*)(Tcl_Channel)' type='^?'>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='Tcl_WideInt' type='q'/>
</field>
<field name='tcl_ChannelWideSeekProc' function_pointer='true' declared_type='Tcl_DriverWideSeekProc *(*)(Tcl_ChannelType *)' type='^?'>
<arg declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverWideSeekProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_WideInt' type='q'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='Tcl_WideInt' type='q'/>
</retval>
</field>
</struct>
<struct name='Tcl_CallFrame' type='{Tcl_CallFrame=&quot;nsPtr&quot;^{Tcl_Namespace}&quot;dummy1&quot;i&quot;dummy2&quot;i&quot;dummy3&quot;*&quot;dummy4&quot;*&quot;dummy5&quot;*&quot;dummy6&quot;i&quot;dummy7&quot;*&quot;dummy8&quot;*&quot;dummy9&quot;i&quot;dummy10&quot;*}'>
<field name='nsPtr' declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<field name='dummy1' declared_type='int' type='i'/>
<field name='dummy2' declared_type='int' type='i'/>
<field name='dummy3' declared_type='char*' type='*'/>
<field name='dummy4' declared_type='char*' type='*'/>
<field name='dummy5' declared_type='char*' type='*'/>
<field name='dummy6' declared_type='int' type='i'/>
<field name='dummy7' declared_type='char*' type='*'/>
<field name='dummy8' declared_type='char*' type='*'/>
<field name='dummy9' declared_type='int' type='i'/>
<field name='dummy10' declared_type='char*' type='*'/>
</struct>
<struct name='Tcl_ChannelType' type='{Tcl_ChannelType=&quot;typeName&quot;*&quot;version&quot;^{Tcl_ChannelTypeVersion_}&quot;closeProc&quot;^?&quot;inputProc&quot;^?&quot;outputProc&quot;^?&quot;seekProc&quot;^?&quot;setOptionProc&quot;^?&quot;getOptionProc&quot;^?&quot;watchProc&quot;^?&quot;getHandleProc&quot;^?&quot;close2Proc&quot;^?&quot;blockModeProc&quot;^?&quot;flushProc&quot;^?&quot;handlerProc&quot;^?&quot;wideSeekProc&quot;^?}'>
<field name='typeName' declared_type='char*' type='*'/>
<field name='version' declared_type='Tcl_ChannelTypeVersion' type='^{Tcl_ChannelTypeVersion_=}'/>
<field name='closeProc' function_pointer='true' declared_type='Tcl_DriverCloseProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='inputProc' function_pointer='true' declared_type='Tcl_DriverInputProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='outputProc' function_pointer='true' declared_type='Tcl_DriverOutputProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='seekProc' function_pointer='true' declared_type='Tcl_DriverSeekProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='setOptionProc' function_pointer='true' declared_type='Tcl_DriverSetOptionProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='getOptionProc' function_pointer='true' declared_type='Tcl_DriverGetOptionProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='watchProc' function_pointer='true' declared_type='Tcl_DriverWatchProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='getHandleProc' function_pointer='true' declared_type='Tcl_DriverGetHandleProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='ClientData*' type='^^v'/>
<retval declared_type='int' type='i'/>
</field>
<field name='close2Proc' function_pointer='true' declared_type='Tcl_DriverClose2Proc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='blockModeProc' function_pointer='true' declared_type='Tcl_DriverBlockModeProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='flushProc' function_pointer='true' declared_type='Tcl_DriverFlushProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field name='handlerProc' function_pointer='true' declared_type='Tcl_DriverHandlerProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='wideSeekProc' function_pointer='true' declared_type='Tcl_DriverWideSeekProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_WideInt' type='q'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='Tcl_WideInt' type='q'/>
</field>
</struct>
<struct name='Tcl_CmdInfo' type='{Tcl_CmdInfo=&quot;isNativeObjectProc&quot;i&quot;objProc&quot;^?&quot;objClientData&quot;^v&quot;proc&quot;^?&quot;clientData&quot;^v&quot;deleteProc&quot;^?&quot;deleteData&quot;^v&quot;namespacePtr&quot;^{Tcl_Namespace}}'>
<field name='isNativeObjectProc' declared_type='int' type='i'/>
<field name='objProc' function_pointer='true' declared_type='Tcl_ObjCmdProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='struct Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='objClientData' declared_type='ClientData' type='^v'/>
<field name='proc' function_pointer='true' declared_type='Tcl_CmdProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char**' type='^*' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='clientData' declared_type='ClientData' type='^v'/>
<field name='deleteProc' function_pointer='true' declared_type='Tcl_CmdDeleteProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='deleteData' declared_type='ClientData' type='^v'/>
<field name='namespacePtr' declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
</struct>
<struct name='Tcl_DString' type='{Tcl_DString=&quot;string&quot;*&quot;length&quot;i&quot;spaceAvl&quot;i&quot;staticSpace&quot;[200c]}'>
<field name='string' declared_type='char*' type='*'/>
<field name='length' declared_type='int' type='i'/>
<field name='spaceAvl' declared_type='int' type='i'/>
<field name='staticSpace' declared_type='char*' type='[200c]'/>
</struct>
<struct name='Tcl_DirEntry' type='{dirent=&quot;d_ino&quot;I&quot;d_reclen&quot;S&quot;d_type&quot;C&quot;d_namlen&quot;C&quot;d_name&quot;[256c]}'>
<field name='d_ino' declared_type='ino_t' type='I'/>
<field name='d_reclen' declared_type='__uint16_t' type='S'/>
<field name='d_type' declared_type='__uint8_t' type='C'/>
<field name='d_namlen' declared_type='__uint8_t' type='C'/>
<field name='d_name' declared_type='char*' type='[256c]'/>
</struct>
<struct name='Tcl_EncodingType' type='{Tcl_EncodingType=&quot;encodingName&quot;*&quot;toUtfProc&quot;^?&quot;fromUtfProc&quot;^?&quot;freeProc&quot;^?&quot;clientData&quot;^v&quot;nullSize&quot;i}'>
<field name='encodingName' declared_type='char*' type='*' const='true'/>
<field name='toUtfProc' function_pointer='true' declared_type='Tcl_EncodingConvertProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_EncodingState*' type='^^{Tcl_EncodingState_}'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='fromUtfProc' function_pointer='true' declared_type='Tcl_EncodingConvertProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_EncodingState*' type='^^{Tcl_EncodingState_}'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='freeProc' function_pointer='true' declared_type='Tcl_EncodingFreeProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='clientData' declared_type='ClientData' type='^v'/>
<field name='nullSize' declared_type='int' type='i'/>
</struct>
<struct name='Tcl_Event' type='{Tcl_Event=&quot;proc&quot;^?&quot;nextPtr&quot;^{Tcl_Event}}'>
<field name='proc' function_pointer='true' declared_type='Tcl_EventProc*' type='^?'>
<arg declared_type='Tcl_Event*' type='^{Tcl_Event=^?^{Tcl_Event}}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='nextPtr' declared_type='struct Tcl_Event*' type='^{Tcl_Event=^?^{Tcl_Event}}'/>
</struct>
<struct name='Tcl_Filesystem' type='{Tcl_Filesystem=&quot;typeName&quot;*&quot;structureLength&quot;i&quot;version&quot;^{Tcl_FSVersion_}&quot;pathInFilesystemProc&quot;^?&quot;dupInternalRepProc&quot;^?&quot;freeInternalRepProc&quot;^?&quot;internalToNormalizedProc&quot;^?&quot;createInternalRepProc&quot;^?&quot;normalizePathProc&quot;^?&quot;filesystemPathTypeProc&quot;^?&quot;filesystemSeparatorProc&quot;^?&quot;statProc&quot;^?&quot;accessProc&quot;^?&quot;openFileChannelProc&quot;^?&quot;matchInDirectoryProc&quot;^?&quot;utimeProc&quot;^?&quot;linkProc&quot;^?&quot;listVolumesProc&quot;^?&quot;fileAttrStringsProc&quot;^?&quot;fileAttrsGetProc&quot;^?&quot;fileAttrsSetProc&quot;^?&quot;createDirectoryProc&quot;^?&quot;removeDirectoryProc&quot;^?&quot;deleteFileProc&quot;^?&quot;copyFileProc&quot;^?&quot;renameFileProc&quot;^?&quot;copyDirectoryProc&quot;^?&quot;lstatProc&quot;^?&quot;loadFileProc&quot;^?&quot;getCwdProc&quot;^?&quot;chdirProc&quot;^?}'>
<field name='typeName' declared_type='char*' type='*' const='true'/>
<field name='structureLength' declared_type='int' type='i'/>
<field name='version' declared_type='Tcl_FSVersion' type='^{Tcl_FSVersion_=}'/>
<field name='pathInFilesystemProc' function_pointer='true' declared_type='Tcl_FSPathInFilesystemProc*' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='ClientData*' type='^^v'/>
<retval declared_type='int' type='i'/>
</field>
<field name='dupInternalRepProc' function_pointer='true' declared_type='Tcl_FSDupInternalRepProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='ClientData' type='^v'/>
</field>
<field name='freeInternalRepProc' function_pointer='true' declared_type='Tcl_FSFreeInternalRepProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='internalToNormalizedProc' function_pointer='true' declared_type='Tcl_FSInternalToNormalizedProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='createInternalRepProc' function_pointer='true' declared_type='Tcl_FSCreateInternalRepProc*' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='ClientData' type='^v'/>
</field>
<field name='normalizePathProc' function_pointer='true' declared_type='Tcl_FSNormalizePathProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='filesystemPathTypeProc' function_pointer='true' declared_type='Tcl_FSFilesystemPathTypeProc*' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='filesystemSeparatorProc' function_pointer='true' declared_type='Tcl_FSFilesystemSeparatorProc*' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='statProc' function_pointer='true' declared_type='Tcl_FSStatProc*' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_StatBuf*' type='^{stat=iISSIIi{timespec=il}{timespec=il}{timespec=il}qqiIIi[2q]}' type64='^{stat=iISSIIi{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='accessProc' function_pointer='true' declared_type='Tcl_FSAccessProc*' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field name='openFileChannelProc' function_pointer='true' declared_type='Tcl_FSOpenFileChannelProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</field>
<field name='matchInDirectoryProc' function_pointer='true' declared_type='Tcl_FSMatchInDirectoryProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_GlobTypeData*' type='^{Tcl_GlobTypeData=ii^{Tcl_Obj}^{Tcl_Obj}}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='utimeProc' function_pointer='true' declared_type='Tcl_FSUtimeProc*' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='struct utimbuf*' type='^{utimbuf=ii}' type64='^{utimbuf=qq}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='linkProc' function_pointer='true' declared_type='Tcl_FSLinkProc*' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='listVolumesProc' function_pointer='true' declared_type='Tcl_FSListVolumesProc*' type='^?'>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='fileAttrStringsProc' function_pointer='true' declared_type='Tcl_FSFileAttrStringsProc*' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<retval declared_type='char**' type='^*' const='true'/>
</field>
<field name='fileAttrsGetProc' function_pointer='true' declared_type='Tcl_FSFileAttrsGetProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='fileAttrsSetProc' function_pointer='true' declared_type='Tcl_FSFileAttrsSetProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='createDirectoryProc' function_pointer='true' declared_type='Tcl_FSCreateDirectoryProc*' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='removeDirectoryProc' function_pointer='true' declared_type='Tcl_FSRemoveDirectoryProc*' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='deleteFileProc' function_pointer='true' declared_type='Tcl_FSDeleteFileProc*' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='copyFileProc' function_pointer='true' declared_type='Tcl_FSCopyFileProc*' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='renameFileProc' function_pointer='true' declared_type='Tcl_FSRenameFileProc*' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='copyDirectoryProc' function_pointer='true' declared_type='Tcl_FSCopyDirectoryProc*' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='lstatProc' function_pointer='true' declared_type='Tcl_FSLstatProc*' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_StatBuf*' type='^{stat=iISSIIi{timespec=il}{timespec=il}{timespec=il}qqiIIi[2q]}' type64='^{stat=iISSIIi{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='loadFileProc' function_pointer='true' declared_type='Tcl_FSLoadFileProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='Tcl_LoadHandle*' type='^^{Tcl_LoadHandle_}'/>
<arg declared_type='Tcl_FSUnloadFileProc**' type='^^?'/>
<retval declared_type='int' type='i'/>
</field>
<field name='getCwdProc' function_pointer='true' declared_type='Tcl_FSGetCwdProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</field>
<field name='chdirProc' function_pointer='true' declared_type='Tcl_FSChdirProc*' type='^?'>
<arg declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
</struct>
<struct name='Tcl_GlobTypeData' type='{Tcl_GlobTypeData=&quot;type&quot;i&quot;perm&quot;i&quot;macType&quot;^{Tcl_Obj}&quot;macCreator&quot;^{Tcl_Obj}}'>
<field name='type' declared_type='int' type='i'/>
<field name='perm' declared_type='int' type='i'/>
<field name='macType' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v})}'/>
<field name='macCreator' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v})}'/>
</struct>
<struct name='Tcl_HashEntry' type='{Tcl_HashEntry=&quot;nextPtr&quot;^{Tcl_HashEntry}&quot;tablePtr&quot;^{Tcl_HashTable}&quot;hash&quot;^v&quot;clientData&quot;^v&quot;key&quot;(?=&quot;oneWordValue&quot;*&quot;objPtr&quot;^{Tcl_Obj}&quot;words&quot;[1i]&quot;string&quot;[4c])}'>
<field name='nextPtr' declared_type='Tcl_HashEntry*' type='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][4c])}'/>
<field name='tablePtr' declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<field name='hash' declared_type='void*' type='^v'/>
<field name='clientData' declared_type='ClientData' type='^v'/>
<field name='key' declared_type='union Tcl_HashEntry::' type='(?=&quot;oneWordValue&quot;*&quot;objPtr&quot;^{Tcl_Obj}&quot;words&quot;[1i]&quot;string&quot;[4c])'/>
</struct>
<struct name='Tcl_HashKeyType' type='{Tcl_HashKeyType=&quot;version&quot;i&quot;flags&quot;i&quot;hashKeyProc&quot;^?&quot;compareKeysProc&quot;^?&quot;allocEntryProc&quot;^?&quot;freeEntryProc&quot;^?}'>
<field name='version' declared_type='int' type='i'/>
<field name='flags' declared_type='int' type='i'/>
<field name='hashKeyProc' function_pointer='true' declared_type='Tcl_HashKeyProc*' type='^?'>
<arg declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='unsigned int' type='I'/>
</field>
<field name='compareKeysProc' function_pointer='true' declared_type='Tcl_CompareHashKeysProc*' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='Tcl_HashEntry*' type='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][4c])}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='allocEntryProc' function_pointer='true' declared_type='Tcl_AllocHashEntryProc*' type='^?'>
<arg declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='Tcl_HashEntry*' type='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][4c])}'/>
</field>
<field name='freeEntryProc' function_pointer='true' declared_type='Tcl_FreeHashEntryProc*' type='^?'>
<arg declared_type='Tcl_HashEntry*' type='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][4c])}'/>
<retval declared_type='void' type='v'/>
</field>
</struct>
<struct name='Tcl_HashSearch' type='{Tcl_HashSearch=&quot;tablePtr&quot;^{Tcl_HashTable}&quot;nextIndex&quot;i&quot;nextEntryPtr&quot;^{Tcl_HashEntry}}'>
<field name='tablePtr' declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<field name='nextIndex' declared_type='int' type='i'/>
<field name='nextEntryPtr' declared_type='Tcl_HashEntry*' type='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][4c])}'/>
</struct>
<struct name='Tcl_HashTable' type='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'>
<field name='buckets' declared_type='Tcl_HashEntry**' type='^^{Tcl_HashEntry}'/>
<field name='staticBuckets' declared_type='Tcl_HashEntry**' type='[4^{Tcl_HashEntry}]'/>
<field name='numBuckets' declared_type='int' type='i'/>
<field name='numEntries' declared_type='int' type='i'/>
<field name='rebuildSize' declared_type='int' type='i'/>
<field name='downShift' declared_type='int' type='i'/>
<field name='mask' declared_type='int' type='i'/>
<field name='keyType' declared_type='int' type='i'/>
<field name='findProc' function_pointer='true' declared_type='Tcl_HashEntry *(*)(Tcl_HashTable *, char *)' type='^?'>
<arg declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='Tcl_HashEntry*' type='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][4c])}'/>
</field>
<field name='createProc' function_pointer='true' declared_type='Tcl_HashEntry *(*)(Tcl_HashTable *, char *, int *)' type='^?'>
<arg declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='Tcl_HashEntry*' type='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][4c])}'/>
</field>
<field name='typePtr' declared_type='Tcl_HashKeyType*' type='^{Tcl_HashKeyType=ii^?^?^?^?}'/>
</struct>
<struct name='Tcl_Interp' type='{Tcl_Interp=&quot;result&quot;*&quot;freeProc&quot;^?&quot;errorLine&quot;i}'>
<field name='result' declared_type='char*' type='*'/>
<field name='freeProc' function_pointer='true' declared_type='void (*)(char *)' type='^?'>
<arg declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</field>
<field name='errorLine' declared_type='int' type='i'/>
</struct>
<struct name='Tcl_Namespace' type='{Tcl_Namespace=&quot;name&quot;*&quot;fullName&quot;*&quot;clientData&quot;^v&quot;deleteProc&quot;^?&quot;parentPtr&quot;^{Tcl_Namespace}}'>
<field name='name' declared_type='char*' type='*'/>
<field name='fullName' declared_type='char*' type='*'/>
<field name='clientData' declared_type='ClientData' type='^v'/>
<field name='deleteProc' function_pointer='true' declared_type='Tcl_NamespaceDeleteProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='parentPtr' declared_type='struct Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
</struct>
<struct name='Tcl_NotifierProcs' type='{Tcl_NotifierProcs=&quot;setTimerProc&quot;^?&quot;waitForEventProc&quot;^?&quot;createFileHandlerProc&quot;^?&quot;deleteFileHandlerProc&quot;^?&quot;initNotifierProc&quot;^?&quot;finalizeNotifierProc&quot;^?&quot;alertNotifierProc&quot;^?&quot;serviceModeHookProc&quot;^?}'>
<field name='setTimerProc' function_pointer='true' declared_type='Tcl_SetTimerProc*' type='^?'>
<arg declared_type='Tcl_Time*' type='^{Tcl_Time=ll}' type64='^{Tcl_Time=qq}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='waitForEventProc' function_pointer='true' declared_type='Tcl_WaitForEventProc*' type='^?'>
<arg declared_type='Tcl_Time*' type='^{Tcl_Time=ll}' type64='^{Tcl_Time=qq}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='createFileHandlerProc' function_pointer='true' declared_type='Tcl_CreateFileHandlerProc*' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_FileProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='deleteFileHandlerProc' function_pointer='true' declared_type='Tcl_DeleteFileHandlerProc*' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field name='initNotifierProc' function_pointer='true' declared_type='Tcl_InitNotifierProc*' type='^?'>
<retval declared_type='ClientData' type='^v'/>
</field>
<field name='finalizeNotifierProc' function_pointer='true' declared_type='Tcl_FinalizeNotifierProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='alertNotifierProc' function_pointer='true' declared_type='Tcl_AlertNotifierProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field name='serviceModeHookProc' function_pointer='true' declared_type='Tcl_ServiceModeHookProc*' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
</struct>
<struct name='Tcl_Obj' type='{Tcl_Obj=&quot;refCount&quot;i&quot;bytes&quot;*&quot;length&quot;i&quot;typePtr&quot;^{Tcl_ObjType=&quot;name&quot;*&quot;freeIntRepProc&quot;^?&quot;dupIntRepProc&quot;^?&quot;updateStringProc&quot;^?&quot;setFromAnyProc&quot;^?}&quot;internalRep&quot;(?=&quot;longValue&quot;l&quot;doubleValue&quot;d&quot;otherValuePtr&quot;^v&quot;wideValue&quot;q&quot;twoPtrValue&quot;{?=&quot;ptr1&quot;^v&quot;ptr2&quot;^v})}' type64='{Tcl_Obj=&quot;refCount&quot;i&quot;bytes&quot;*&quot;length&quot;i&quot;typePtr&quot;^{Tcl_ObjType=&quot;name&quot;*&quot;freeIntRepProc&quot;^?&quot;dupIntRepProc&quot;^?&quot;updateStringProc&quot;^?&quot;setFromAnyProc&quot;^?}&quot;internalRep&quot;(?=&quot;longValue&quot;q&quot;doubleValue&quot;d&quot;otherValuePtr&quot;^v&quot;wideValue&quot;q&quot;twoPtrValue&quot;{?=&quot;ptr1&quot;^v&quot;ptr2&quot;^v})}'>
<field name='refCount' declared_type='int' type='i'/>
<field name='bytes' declared_type='char*' type='*'/>
<field name='length' declared_type='int' type='i'/>
<field name='typePtr' declared_type='Tcl_ObjType*' type='^{Tcl_ObjType=&quot;name&quot;*&quot;freeIntRepProc&quot;^?&quot;dupIntRepProc&quot;^?&quot;updateStringProc&quot;^?&quot;setFromAnyProc&quot;^?}'/>
<field name='internalRep' declared_type='union Tcl_Obj::' type='(?=&quot;longValue&quot;l&quot;doubleValue&quot;d&quot;otherValuePtr&quot;^v&quot;wideValue&quot;q&quot;twoPtrValue&quot;{?=&quot;ptr1&quot;^v&quot;ptr2&quot;^v})' type64='(?=&quot;longValue&quot;q&quot;doubleValue&quot;d&quot;otherValuePtr&quot;^v&quot;wideValue&quot;q&quot;twoPtrValue&quot;{?=&quot;ptr1&quot;^v&quot;ptr2&quot;^v})'/>
</struct>
<struct name='Tcl_ObjType' type='{Tcl_ObjType=&quot;name&quot;*&quot;freeIntRepProc&quot;^?&quot;dupIntRepProc&quot;^?&quot;updateStringProc&quot;^?&quot;setFromAnyProc&quot;^?}'>
<field name='name' declared_type='char*' type='*'/>
<field name='freeIntRepProc' function_pointer='true' declared_type='Tcl_FreeInternalRepProc*' type='^?'>
<arg declared_type='struct Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='dupIntRepProc' function_pointer='true' declared_type='Tcl_DupInternalRepProc*' type='^?'>
<arg declared_type='struct Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v})}'/>
<arg declared_type='struct Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='updateStringProc' function_pointer='true' declared_type='Tcl_UpdateStringProc*' type='^?'>
<arg declared_type='struct Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</field>
<field name='setFromAnyProc' function_pointer='true' declared_type='Tcl_SetFromAnyProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='struct Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</field>
</struct>
<struct name='Tcl_OldStat_' type='{stat=&quot;st_dev&quot;i&quot;st_ino&quot;I&quot;st_mode&quot;S&quot;st_nlink&quot;S&quot;st_uid&quot;I&quot;st_gid&quot;I&quot;st_rdev&quot;i&quot;st_atimespec&quot;{timespec=&quot;tv_sec&quot;i&quot;tv_nsec&quot;l}&quot;st_mtimespec&quot;{timespec=&quot;tv_sec&quot;i&quot;tv_nsec&quot;l}&quot;st_ctimespec&quot;{timespec=&quot;tv_sec&quot;i&quot;tv_nsec&quot;l}&quot;st_size&quot;q&quot;st_blocks&quot;q&quot;st_blksize&quot;i&quot;st_flags&quot;I&quot;st_gen&quot;I&quot;st_lspare&quot;i&quot;st_qspare&quot;[2q]}' type64='{stat=&quot;st_dev&quot;i&quot;st_ino&quot;I&quot;st_mode&quot;S&quot;st_nlink&quot;S&quot;st_uid&quot;I&quot;st_gid&quot;I&quot;st_rdev&quot;i&quot;st_atimespec&quot;{timespec=&quot;tv_sec&quot;q&quot;tv_nsec&quot;q}&quot;st_mtimespec&quot;{timespec=&quot;tv_sec&quot;q&quot;tv_nsec&quot;q}&quot;st_ctimespec&quot;{timespec=&quot;tv_sec&quot;q&quot;tv_nsec&quot;q}&quot;st_size&quot;q&quot;st_blocks&quot;q&quot;st_blksize&quot;i&quot;st_flags&quot;I&quot;st_gen&quot;I&quot;st_lspare&quot;i&quot;st_qspare&quot;[2q]}'>
<field name='st_dev' declared_type='dev_t' type='i'/>
<field name='st_ino' declared_type='ino_t' type='I'/>
<field name='st_mode' declared_type='mode_t' type='S'/>
<field name='st_nlink' declared_type='nlink_t' type='S'/>
<field name='st_uid' declared_type='uid_t' type='I'/>
<field name='st_gid' declared_type='gid_t' type='I'/>
<field name='st_rdev' declared_type='dev_t' type='i'/>
<field name='st_atimespec' declared_type='struct timespec' type='{timespec=&quot;tv_sec&quot;i&quot;tv_nsec&quot;l}' type64='{timespec=&quot;tv_sec&quot;q&quot;tv_nsec&quot;q}'/>
<field name='st_mtimespec' declared_type='struct timespec' type='{timespec=&quot;tv_sec&quot;i&quot;tv_nsec&quot;l}' type64='{timespec=&quot;tv_sec&quot;q&quot;tv_nsec&quot;q}'/>
<field name='st_ctimespec' declared_type='struct timespec' type='{timespec=&quot;tv_sec&quot;i&quot;tv_nsec&quot;l}' type64='{timespec=&quot;tv_sec&quot;q&quot;tv_nsec&quot;q}'/>
<field name='st_size' declared_type='off_t' type='q'/>
<field name='st_blocks' declared_type='blkcnt_t' type='q'/>
<field name='st_blksize' declared_type='blksize_t' type='i'/>
<field name='st_flags' declared_type='__uint32_t' type='I'/>
<field name='st_gen' declared_type='__uint32_t' type='I'/>
<field name='st_lspare' declared_type='__int32_t' type='i'/>
<field name='st_qspare' declared_type='__int64_t*' type='[2q]'/>
</struct>
<struct name='Tcl_Parse' type='{Tcl_Parse=&quot;commentStart&quot;*&quot;commentSize&quot;i&quot;commandStart&quot;*&quot;commandSize&quot;i&quot;numWords&quot;i&quot;tokenPtr&quot;^{Tcl_Token}&quot;numTokens&quot;i&quot;tokensAvailable&quot;i&quot;errorType&quot;i&quot;string&quot;*&quot;end&quot;*&quot;interp&quot;^{Tcl_Interp}&quot;term&quot;*&quot;incomplete&quot;i&quot;staticTokens&quot;[20{Tcl_Token=&quot;type&quot;i&quot;start&quot;*&quot;size&quot;i&quot;numComponents&quot;i}]}'>
<field name='commentStart' declared_type='char*' type='*' const='true'/>
<field name='commentSize' declared_type='int' type='i'/>
<field name='commandStart' declared_type='char*' type='*' const='true'/>
<field name='commandSize' declared_type='int' type='i'/>
<field name='numWords' declared_type='int' type='i'/>
<field name='tokenPtr' declared_type='Tcl_Token*' type='^{Tcl_Token=i*ii}'/>
<field name='numTokens' declared_type='int' type='i'/>
<field name='tokensAvailable' declared_type='int' type='i'/>
<field name='errorType' declared_type='int' type='i'/>
<field name='string' declared_type='char*' type='*' const='true'/>
<field name='end' declared_type='char*' type='*' const='true'/>
<field name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<field name='term' declared_type='char*' type='*' const='true'/>
<field name='incomplete' declared_type='int' type='i'/>
<field name='staticTokens' declared_type='Tcl_Token*' type='[20{Tcl_Token=&quot;type&quot;i&quot;start&quot;*&quot;size&quot;i&quot;numComponents&quot;i}]'/>
</struct>
<struct name='Tcl_RegExpIndices' type='{Tcl_RegExpIndices=&quot;start&quot;l&quot;end&quot;l}' type64='{Tcl_RegExpIndices=&quot;start&quot;q&quot;end&quot;q}'>
<field name='start' declared_type='long' type='l' type64='q'/>
<field name='end' declared_type='long' type='l' type64='q'/>
</struct>
<struct name='Tcl_RegExpInfo' type='{Tcl_RegExpInfo=&quot;nsubs&quot;i&quot;matches&quot;^{Tcl_RegExpIndices}&quot;extendStart&quot;l&quot;reserved&quot;l}' type64='{Tcl_RegExpInfo=&quot;nsubs&quot;i&quot;matches&quot;^{Tcl_RegExpIndices}&quot;extendStart&quot;q&quot;reserved&quot;q}'>
<field name='nsubs' declared_type='int' type='i'/>
<field name='matches' declared_type='Tcl_RegExpIndices*' type='^{Tcl_RegExpIndices=ll}' type64='^{Tcl_RegExpIndices=qq}'/>
<field name='extendStart' declared_type='long' type='l' type64='q'/>
<field name='reserved' declared_type='long' type='l' type64='q'/>
</struct>
<struct name='Tcl_ResolvedVarInfo' type='{Tcl_ResolvedVarInfo=&quot;fetchProc&quot;^?&quot;deleteProc&quot;^?}'>
<field name='fetchProc' function_pointer='true' declared_type='Tcl_ResolveRuntimeVarProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='struct Tcl_ResolvedVarInfo*' type='^{Tcl_ResolvedVarInfo=^?^?}'/>
<retval declared_type='Tcl_Var' type='^{Tcl_Var_=}'/>
</field>
<field name='deleteProc' function_pointer='true' declared_type='Tcl_ResolveVarDeleteProc*' type='^?'>
<arg declared_type='struct Tcl_ResolvedVarInfo*' type='^{Tcl_ResolvedVarInfo=^?^?}'/>
<retval declared_type='void' type='v'/>
</field>
</struct>
<struct name='Tcl_ResolverInfo' type='{Tcl_ResolverInfo=&quot;cmdResProc&quot;^?&quot;varResProc&quot;^?&quot;compiledVarResProc&quot;^?}'>
<field name='cmdResProc' function_pointer='true' declared_type='Tcl_ResolveCmdProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Command*' type='^^{Tcl_Command_}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='varResProc' function_pointer='true' declared_type='Tcl_ResolveVarProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Var*' type='^^{Tcl_Var_}'/>
<retval declared_type='int' type='i'/>
</field>
<field name='compiledVarResProc' function_pointer='true' declared_type='Tcl_ResolveCompiledVarProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='Tcl_ResolvedVarInfo**' type='^^{Tcl_ResolvedVarInfo}'/>
<retval declared_type='int' type='i'/>
</field>
</struct>
<struct name='Tcl_SavedResult' type='{Tcl_SavedResult=&quot;result&quot;*&quot;freeProc&quot;^?&quot;objResultPtr&quot;^{Tcl_Obj}&quot;appendResult&quot;*&quot;appendAvl&quot;i&quot;appendUsed&quot;i&quot;resultSpace&quot;[201c]}'>
<field name='result' declared_type='char*' type='*'/>
<field name='freeProc' function_pointer='true' declared_type='Tcl_FreeProc*' type='^?'>
<arg declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</field>
<field name='objResultPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v})}'/>
<field name='appendResult' declared_type='char*' type='*'/>
<field name='appendAvl' declared_type='int' type='i'/>
<field name='appendUsed' declared_type='int' type='i'/>
<field name='resultSpace' declared_type='char*' type='[201c]'/>
</struct>
<struct name='Tcl_StatBuf' type='{stat=&quot;st_dev&quot;i&quot;st_ino&quot;I&quot;st_mode&quot;S&quot;st_nlink&quot;S&quot;st_uid&quot;I&quot;st_gid&quot;I&quot;st_rdev&quot;i&quot;st_atimespec&quot;{timespec=&quot;tv_sec&quot;i&quot;tv_nsec&quot;l}&quot;st_mtimespec&quot;{timespec=&quot;tv_sec&quot;i&quot;tv_nsec&quot;l}&quot;st_ctimespec&quot;{timespec=&quot;tv_sec&quot;i&quot;tv_nsec&quot;l}&quot;st_size&quot;q&quot;st_blocks&quot;q&quot;st_blksize&quot;i&quot;st_flags&quot;I&quot;st_gen&quot;I&quot;st_lspare&quot;i&quot;st_qspare&quot;[2q]}' type64='{stat=&quot;st_dev&quot;i&quot;st_ino&quot;I&quot;st_mode&quot;S&quot;st_nlink&quot;S&quot;st_uid&quot;I&quot;st_gid&quot;I&quot;st_rdev&quot;i&quot;st_atimespec&quot;{timespec=&quot;tv_sec&quot;q&quot;tv_nsec&quot;q}&quot;st_mtimespec&quot;{timespec=&quot;tv_sec&quot;q&quot;tv_nsec&quot;q}&quot;st_ctimespec&quot;{timespec=&quot;tv_sec&quot;q&quot;tv_nsec&quot;q}&quot;st_size&quot;q&quot;st_blocks&quot;q&quot;st_blksize&quot;i&quot;st_flags&quot;I&quot;st_gen&quot;I&quot;st_lspare&quot;i&quot;st_qspare&quot;[2q]}'>
<field name='st_dev' declared_type='dev_t' type='i'/>
<field name='st_ino' declared_type='ino_t' type='I'/>
<field name='st_mode' declared_type='mode_t' type='S'/>
<field name='st_nlink' declared_type='nlink_t' type='S'/>
<field name='st_uid' declared_type='uid_t' type='I'/>
<field name='st_gid' declared_type='gid_t' type='I'/>
<field name='st_rdev' declared_type='dev_t' type='i'/>
<field name='st_atimespec' declared_type='struct timespec' type='{timespec=&quot;tv_sec&quot;i&quot;tv_nsec&quot;l}' type64='{timespec=&quot;tv_sec&quot;q&quot;tv_nsec&quot;q}'/>
<field name='st_mtimespec' declared_type='struct timespec' type='{timespec=&quot;tv_sec&quot;i&quot;tv_nsec&quot;l}' type64='{timespec=&quot;tv_sec&quot;q&quot;tv_nsec&quot;q}'/>
<field name='st_ctimespec' declared_type='struct timespec' type='{timespec=&quot;tv_sec&quot;i&quot;tv_nsec&quot;l}' type64='{timespec=&quot;tv_sec&quot;q&quot;tv_nsec&quot;q}'/>
<field name='st_size' declared_type='off_t' type='q'/>
<field name='st_blocks' declared_type='blkcnt_t' type='q'/>
<field name='st_blksize' declared_type='blksize_t' type='i'/>
<field name='st_flags' declared_type='__uint32_t' type='I'/>
<field name='st_gen' declared_type='__uint32_t' type='I'/>
<field name='st_lspare' declared_type='__int32_t' type='i'/>
<field name='st_qspare' declared_type='__int64_t*' type='[2q]'/>
</struct>
<struct name='Tcl_Time' type='{Tcl_Time=&quot;sec&quot;l&quot;usec&quot;l}' type64='{Tcl_Time=&quot;sec&quot;q&quot;usec&quot;q}'>
<field name='sec' declared_type='long' type='l' type64='q'/>
<field name='usec' declared_type='long' type='l' type64='q'/>
</struct>
<struct name='Tcl_Token' type='{Tcl_Token=&quot;type&quot;i&quot;start&quot;*&quot;size&quot;i&quot;numComponents&quot;i}'>
<field name='type' declared_type='int' type='i'/>
<field name='start' declared_type='char*' type='*' const='true'/>
<field name='size' declared_type='int' type='i'/>
<field name='numComponents' declared_type='int' type='i'/>
</struct>
<struct name='Tcl_Value' type='{Tcl_Value=&quot;type&quot;i&quot;intValue&quot;l&quot;doubleValue&quot;d&quot;wideValue&quot;q}' type64='{Tcl_Value=&quot;type&quot;i&quot;intValue&quot;q&quot;doubleValue&quot;d&quot;wideValue&quot;q}'>
<field name='type' declared_type='Tcl_ValueType' type='i'/>
<field name='intValue' declared_type='long' type='l' type64='q'/>
<field name='doubleValue' declared_type='double' type='d'/>
<field name='wideValue' declared_type='Tcl_WideInt' type='q'/>
</struct>
<struct name='Trace' type='{Trace=&quot;level&quot;i&quot;proc&quot;^?&quot;clientData&quot;^v&quot;nextPtr&quot;^{Trace}&quot;flags&quot;i&quot;delProc&quot;^?}'>
<field name='level' declared_type='int' type='i'/>
<field name='proc' function_pointer='true' declared_type='Tcl_CmdObjTraceProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='struct Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</field>
<field name='clientData' declared_type='ClientData' type='^v'/>
<field name='nextPtr' declared_type='struct Trace*' type='^{Trace=i^?^v^{Trace}i^?}'/>
<field name='flags' declared_type='int' type='i'/>
<field name='delProc' function_pointer='true' declared_type='Tcl_CmdObjTraceDeleteProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
</struct>
<struct name='Var' type='{Var=&quot;value&quot;(?=&quot;objPtr&quot;^{Tcl_Obj}&quot;tablePtr&quot;^{Tcl_HashTable}&quot;linkPtr&quot;^{Var})&quot;name&quot;*&quot;nsPtr&quot;^{Namespace}&quot;hPtr&quot;^{Tcl_HashEntry}&quot;refCount&quot;i&quot;tracePtr&quot;^{VarTrace}&quot;searchPtr&quot;^{ArraySearch}&quot;flags&quot;i}'>
<field name='value' declared_type='union Var::' type='(?=&quot;objPtr&quot;^{Tcl_Obj}&quot;tablePtr&quot;^{Tcl_HashTable}&quot;linkPtr&quot;^{Var})'/>
<field name='name' declared_type='char*' type='*'/>
<field name='nsPtr' declared_type='Namespace*' type='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}l^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}' type64='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}q^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}'/>
<field name='hPtr' declared_type='Tcl_HashEntry*' type='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][4c])}'/>
<field name='refCount' declared_type='int' type='i'/>
<field name='tracePtr' declared_type='VarTrace*' type='^{VarTrace=^?^vi^{VarTrace}}'/>
<field name='searchPtr' declared_type='ArraySearch*' type='^{ArraySearch=i^{Var}{Tcl_HashSearch=^{Tcl_HashTable}i^{Tcl_HashEntry}}^{Tcl_HashEntry}^{ArraySearch}}'/>
<field name='flags' declared_type='int' type='i'/>
</struct>
<struct name='VarTrace' type='{VarTrace=&quot;traceProc&quot;^?&quot;clientData&quot;^v&quot;flags&quot;i&quot;nextPtr&quot;^{VarTrace}}'>
<field name='traceProc' function_pointer='true' declared_type='Tcl_VarTraceProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</field>
<field name='clientData' declared_type='ClientData' type='^v'/>
<field name='flags' declared_type='int' type='i'/>
<field name='nextPtr' declared_type='struct VarTrace*' type='^{VarTrace=^?^vi^{VarTrace}}'/>
</struct>
<opaque name='TclFile' type='^{TclFile_=}'/>
<opaque name='TclIntPlatStubs' type='^{TclIntPlatStubs=}'/>
<opaque name='Tcl_AsyncHandler' type='^{Tcl_AsyncHandler_=}'/>
<opaque name='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<opaque name='Tcl_ChannelTypeVersion' type='^{Tcl_ChannelTypeVersion_=}'/>
<opaque name='Tcl_Command' type='^{Tcl_Command_=}'/>
<opaque name='Tcl_Condition' type='^{Tcl_Condition_=}'/>
<opaque name='Tcl_Encoding' type='^{Tcl_Encoding_=}'/>
<opaque name='Tcl_EncodingState' type='^{Tcl_EncodingState_=}'/>
<opaque name='Tcl_FSVersion' type='^{Tcl_FSVersion_=}'/>
<opaque name='Tcl_LoadHandle' type='^{Tcl_LoadHandle_=}'/>
<opaque name='Tcl_Mutex' type='^{Tcl_Mutex_=}'/>
<opaque name='Tcl_Pid' type='^{Tcl_Pid_=}'/>
<opaque name='Tcl_RegExp' type='^{Tcl_RegExp_=}'/>
<opaque name='Tcl_ThreadDataKey' type='^{Tcl_ThreadDataKey_=}'/>
<opaque name='Tcl_ThreadId' type='^{Tcl_ThreadId_=}'/>
<opaque name='Tcl_TimerToken' type='^{Tcl_TimerToken_=}'/>
<opaque name='Tcl_Trace' type='^{Tcl_Trace_=}'/>
<opaque name='Tcl_Var' type='^{Tcl_Var_=}'/>
<opaque name='TclpTime_t' type='^{TclpTime_t_=}'/>
<constant name='tclArrayHashKeyType' declared_type='Tcl_HashKeyType' type='{Tcl_HashKeyType=ii^?^?^?^?}'/>
<constant name='tclArraySearchType' declared_type='Tcl_ObjType' type='{Tcl_ObjType=*^?^?^?^?}'/>
<constant name='tclBlockTime' declared_type='Tcl_Time' type='{Tcl_Time=ll}' type64='{Tcl_Time=qq}'/>
<constant name='tclBlockTimeSet' declared_type='int' type='i'/>
<constant name='tclBooleanType' declared_type='Tcl_ObjType' type='{Tcl_ObjType=*^?^?^?^?}'/>
<constant name='tclBuiltinFuncTable' declared_type='BuiltinFunc*' type='^{_BuiltinFunc=*i[5i]^?^v}'/>
<constant name='tclByteArrayType' declared_type='Tcl_ObjType' type='{Tcl_ObjType=*^?^?^?^?}'/>
<constant name='tclByteCodeType' declared_type='Tcl_ObjType' type='{Tcl_ObjType=*^?^?^?^?}'/>
<constant name='tclDefaultEncodingDir' declared_type='char*' type='*'/>
<constant name='tclDoubleType' declared_type='Tcl_ObjType' type='{Tcl_ObjType=*^?^?^?^?}'/>
<constant name='tclEmptyString' declared_type='char' type='c'/>
<constant name='tclEmptyStringRep' declared_type='char*' type='*'/>
<constant name='tclEndOffsetType' declared_type='Tcl_ObjType' type='{Tcl_ObjType=*^?^?^?^?}'/>
<constant name='tclExecutableName' declared_type='char*' type='*'/>
<constant name='tclFileChannelType' declared_type='Tcl_ChannelType' type='{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<constant name='tclForeachInfoType' declared_type='AuxDataType' type='{AuxDataType=*^?^?}'/>
<constant name='tclFreeObjList' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<constant name='tclIndexType' declared_type='Tcl_ObjType' type='{Tcl_ObjType=*^?^?^?^?}'/>
<constant name='tclInstructionTable' declared_type='InstructionDesc*' type='^{InstructionDesc=*iii[2i]}'/>
<constant name='tclIntPlatStubsPtr' declared_type='TclIntPlatStubs*' type='^{TclIntPlatStubs=i^{TclIntPlatStubHooks}^?^?^?^?^?^v^?^?^?^?^?^?^?^?}'/>
<constant name='tclIntStubsPtr' declared_type='TclIntStubs*' type='^{TclIntStubs=i^{TclIntStubHooks}^v^?^?^?^v^?^?^?^?^?^?^?^?^?^?^v^?^v^v^v^v^v^?^?^?^?^v^?^?^v^v^?^?^?^?^v^?^?^?^?^?^?^?^?^?^?^?^v^v^?^?^?^?^?^?^?^v^v^?^v^?^?^?^?^?^?^?^?^v^?^v^v^v^v^?^?^?^?^?^v^v^?^v^v^v^v^v^v^?^?^v^?^?^?^?^v^?^?^?^v^v^?^?^?^?^v^?^?^?^?^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^v^v^?^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^v^v^?^?^?^?^v^?^?^?^?^?^?^?^?^?^?^?^?^?^v^v^v^v^v^v^v^v^?^?}'/>
<constant name='tclIntType' declared_type='Tcl_ObjType' type='{Tcl_ObjType=*^?^?^?^?}'/>
<constant name='tclListType' declared_type='Tcl_ObjType' type='{Tcl_ObjType=*^?^?^?^?}'/>
<constant name='tclMemDumpFileName' declared_type='char*' type='*'/>
<constant name='tclNativeExecutableName' declared_type='char*' type='*'/>
<constant name='tclNsNameType' declared_type='Tcl_ObjType' type='{Tcl_ObjType=*^?^?^?^?}'/>
<constant name='tclObjHashKeyType' declared_type='Tcl_HashKeyType' type='{Tcl_HashKeyType=ii^?^?^?^?}'/>
<constant name='tclOneWordHashKeyType' declared_type='Tcl_HashKeyType' type='{Tcl_HashKeyType=ii^?^?^?^?}'/>
<constant name='tclOriginalNotifier' declared_type='Tcl_NotifierProcs' type='{Tcl_NotifierProcs=^?^?^?^?^?^?^?^?}'/>
<constant name='tclPlatStubsPtr' declared_type='TclPlatStubs*' type='^{TclPlatStubs=i^{TclPlatStubHooks}}'/>
<constant name='tclPlatform' declared_type='TclPlatformType' type='i'/>
<constant name='tclProcBodyType' declared_type='Tcl_ObjType' type='{Tcl_ObjType=*^?^?^?^?}'/>
<constant name='tclStringHashKeyType' declared_type='Tcl_HashKeyType' type='{Tcl_HashKeyType=ii^?^?^?^?}'/>
<constant name='tclStringType' declared_type='Tcl_ObjType' type='{Tcl_ObjType=*^?^?^?^?}'/>
<constant name='tclStubsPtr' declared_type='TclStubs*' type='^{TclStubs=i^{TclStubHooks}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<constant name='tclWideIntType' declared_type='Tcl_ObjType' type='{Tcl_ObjType=*^?^?^?^?}'/>
<string_constant name='TCL_LL_MODIFIER' value64='l' value='ll'/>
<string_constant name='TCL_PATCH_LEVEL' value='8.4.7'/>
<string_constant name='TCL_VERSION' value='8.4'/>
<enum name='BUILTIN_FUNC_ABS' value='19'/>
<enum name='BUILTIN_FUNC_ACOS' value='0'/>
<enum name='BUILTIN_FUNC_ASIN' value='1'/>
<enum name='BUILTIN_FUNC_ATAN' value='2'/>
<enum name='BUILTIN_FUNC_ATAN2' value='3'/>
<enum name='BUILTIN_FUNC_CEIL' value='4'/>
<enum name='BUILTIN_FUNC_COS' value='5'/>
<enum name='BUILTIN_FUNC_COSH' value='6'/>
<enum name='BUILTIN_FUNC_DOUBLE' value='20'/>
<enum name='BUILTIN_FUNC_EXP' value='7'/>
<enum name='BUILTIN_FUNC_FLOOR' value='8'/>
<enum name='BUILTIN_FUNC_FMOD' value='9'/>
<enum name='BUILTIN_FUNC_HYPOT' value='10'/>
<enum name='BUILTIN_FUNC_INT' value='21'/>
<enum name='BUILTIN_FUNC_LOG' value='11'/>
<enum name='BUILTIN_FUNC_LOG10' value='12'/>
<enum name='BUILTIN_FUNC_POW' value='13'/>
<enum name='BUILTIN_FUNC_RAND' value='22'/>
<enum name='BUILTIN_FUNC_ROUND' value='23'/>
<enum name='BUILTIN_FUNC_SIN' value='14'/>
<enum name='BUILTIN_FUNC_SINH' value='15'/>
<enum name='BUILTIN_FUNC_SQRT' value='16'/>
<enum name='BUILTIN_FUNC_SRAND' value='24'/>
<enum name='BUILTIN_FUNC_TAN' value='17'/>
<enum name='BUILTIN_FUNC_TANH' value='18'/>
<enum name='BUILTIN_FUNC_WIDE' value='25'/>
<enum name='CATCH_EXCEPTION_RANGE' value='1'/>
<enum name='CMD_HAS_EXEC_TRACES' value='4'/>
<enum name='CMD_IS_DELETED' value='1'/>
<enum name='CMD_TRACE_ACTIVE' value='2'/>
<enum name='COMPILEENV_INIT_AUX_DATA_SIZE' value='5'/>
<enum name='COMPILEENV_INIT_CMD_MAP_SIZE' value='40'/>
<enum name='COMPILEENV_INIT_CODE_BYTES' value='250'/>
<enum name='COMPILEENV_INIT_EXCEPT_RANGES' value='5'/>
<enum name='COMPILEENV_INIT_NUM_OBJECTS' value='60'/>
<enum name='CREATE_NS_IF_UNKNOWN' value='2048'/>
<enum name='DELETED' value='1'/>
<enum name='DONT_COMPILE_CMDS_INLINE' value='32'/>
<enum name='ERROR_CODE_SET' value='8'/>
<enum name='ERR_ALREADY_LOGGED' value='4'/>
<enum name='ERR_IN_PROGRESS' value='2'/>
<enum name='EXPR_INITIALIZED' value='16'/>
<enum name='INST_ADD' value='53'/>
<enum name='INST_APPEND_ARRAY1' value='84'/>
<enum name='INST_APPEND_ARRAY4' value='85'/>
<enum name='INST_APPEND_ARRAY_STK' value='86'/>
<enum name='INST_APPEND_SCALAR1' value='82'/>
<enum name='INST_APPEND_SCALAR4' value='83'/>
<enum name='INST_APPEND_STK' value='87'/>
<enum name='INST_BEGIN_CATCH4' value='69'/>
<enum name='INST_BITAND' value='44'/>
<enum name='INST_BITNOT' value='60'/>
<enum name='INST_BITOR' value='42'/>
<enum name='INST_BITXOR' value='43'/>
<enum name='INST_BREAK' value='65'/>
<enum name='INST_CALL_BUILTIN_FUNC1' value='62'/>
<enum name='INST_CALL_FUNC1' value='63'/>
<enum name='INST_CONCAT1' value='5'/>
<enum name='INST_CONTINUE' value='66'/>
<enum name='INST_DIV' value='56'/>
<enum name='INST_DONE' value='0'/>
<enum name='INST_DUP' value='4'/>
<enum name='INST_END_CATCH' value='70'/>
<enum name='INST_EQ' value='45'/>
<enum name='INST_EVAL_STK' value='8'/>
<enum name='INST_EXPR_STK' value='9'/>
<enum name='INST_FOREACH_START4' value='67'/>
<enum name='INST_FOREACH_STEP4' value='68'/>
<enum name='INST_GE' value='50'/>
<enum name='INST_GT' value='48'/>
<enum name='INST_INCR_ARRAY1' value='26'/>
<enum name='INST_INCR_ARRAY1_IMM' value='31'/>
<enum name='INST_INCR_ARRAY_STK' value='27'/>
<enum name='INST_INCR_ARRAY_STK_IMM' value='32'/>
<enum name='INST_INCR_SCALAR1' value='24'/>
<enum name='INST_INCR_SCALAR1_IMM' value='29'/>
<enum name='INST_INCR_SCALAR_STK' value='25'/>
<enum name='INST_INCR_SCALAR_STK_IMM' value='30'/>
<enum name='INST_INCR_STK' value='28'/>
<enum name='INST_INCR_STK_IMM' value='33'/>
<enum name='INST_INVOKE_STK1' value='6'/>
<enum name='INST_INVOKE_STK4' value='7'/>
<enum name='INST_JUMP1' value='34'/>
<enum name='INST_JUMP4' value='35'/>
<enum name='INST_JUMP_FALSE1' value='38'/>
<enum name='INST_JUMP_FALSE4' value='39'/>
<enum name='INST_JUMP_TRUE1' value='36'/>
<enum name='INST_JUMP_TRUE4' value='37'/>
<enum name='INST_LAND' value='41'/>
<enum name='INST_LAPPEND_ARRAY1' value='90'/>
<enum name='INST_LAPPEND_ARRAY4' value='91'/>
<enum name='INST_LAPPEND_ARRAY_STK' value='92'/>
<enum name='INST_LAPPEND_SCALAR1' value='88'/>
<enum name='INST_LAPPEND_SCALAR4' value='89'/>
<enum name='INST_LAPPEND_STK' value='93'/>
<enum name='INST_LE' value='49'/>
<enum name='INST_LIST' value='79'/>
<enum name='INST_LIST_INDEX' value='80'/>
<enum name='INST_LIST_INDEX_MULTI' value='94'/>
<enum name='INST_LIST_LENGTH' value='81'/>
<enum name='INST_LNOT' value='61'/>
<enum name='INST_LOAD_ARRAY1' value='13'/>
<enum name='INST_LOAD_ARRAY4' value='14'/>
<enum name='INST_LOAD_ARRAY_STK' value='15'/>
<enum name='INST_LOAD_SCALAR1' value='10'/>
<enum name='INST_LOAD_SCALAR4' value='11'/>
<enum name='INST_LOAD_SCALAR_STK' value='12'/>
<enum name='INST_LOAD_STK' value='16'/>
<enum name='INST_LOR' value='40'/>
<enum name='INST_LSET_FLAT' value='97'/>
<enum name='INST_LSET_LIST' value='96'/>
<enum name='INST_LSHIFT' value='51'/>
<enum name='INST_LT' value='47'/>
<enum name='INST_MOD' value='57'/>
<enum name='INST_MULT' value='55'/>
<enum name='INST_NEQ' value='46'/>
<enum name='INST_OVER' value='95'/>
<enum name='INST_POP' value='3'/>
<enum name='INST_PUSH1' value='1'/>
<enum name='INST_PUSH4' value='2'/>
<enum name='INST_PUSH_RESULT' value='71'/>
<enum name='INST_PUSH_RETURN_CODE' value='72'/>
<enum name='INST_RSHIFT' value='52'/>
<enum name='INST_STORE_ARRAY1' value='20'/>
<enum name='INST_STORE_ARRAY4' value='21'/>
<enum name='INST_STORE_ARRAY_STK' value='22'/>
<enum name='INST_STORE_SCALAR1' value='17'/>
<enum name='INST_STORE_SCALAR4' value='18'/>
<enum name='INST_STORE_SCALAR_STK' value='19'/>
<enum name='INST_STORE_STK' value='23'/>
<enum name='INST_STR_CMP' value='75'/>
<enum name='INST_STR_EQ' value='73'/>
<enum name='INST_STR_INDEX' value='77'/>
<enum name='INST_STR_LEN' value='76'/>
<enum name='INST_STR_MATCH' value='78'/>
<enum name='INST_STR_NEQ' value='74'/>
<enum name='INST_SUB' value='54'/>
<enum name='INST_TRY_CVT_TO_NUMERIC' value='64'/>
<enum name='INST_UMINUS' value='59'/>
<enum name='INST_UPLUS' value='58'/>
<enum name='INTERP_TRACE_IN_PROGRESS' value='512'/>
<enum name='JUMPFIXUP_INIT_ENTRIES' value='10'/>
<enum name='LAST_BUILTIN_FUNC' value='25'/>
<enum name='LAST_INST_OPCODE' value='97'/>
<enum name='LOOP_EXCEPTION_RANGE' value='0'/>
<enum name='MASK_SIZE' value='32'/>
<enum name='MAXPATHLEN' value='1024'/>
<enum name='MAX_INSTRUCTION_OPERANDS' value='2'/>
<enum name='MAX_MATH_ARGS' value='5'/>
<enum name='MAX_NESTING_DEPTH' value='1000'/>
<enum name='NBIO_FLAG' value='4'/>
<enum name='NS_DEAD' value='2'/>
<enum name='NS_DYING' value='1'/>
<enum name='NUM_STATIC_TOKENS' value='20'/>
<enum name='OPERAND_INT1' value='1'/>
<enum name='OPERAND_INT4' value='2'/>
<enum name='OPERAND_NONE' value='0'/>
<enum name='OPERAND_UINT1' value='3'/>
<enum name='OPERAND_UINT4' value='4'/>
<enum name='RAND_SEED_INITIALIZED' value='64'/>
<enum name='SAFE_INTERP' value='128'/>
<enum name='TCL_ALLOW_EXCEPTIONS' value='4'/>
<enum name='TCL_ALLOW_INLINE_COMPILATION' value='131072'/>
<enum name='TCL_ALL_EVENTS' value='-3'/>
<enum name='TCL_ALPHA_RELEASE' value='0'/>
<enum name='TCL_APPEND_VALUE' value='4'/>
<enum name='TCL_BETA_RELEASE' value='1'/>
<enum name='TCL_BRACKET_TERM' value='1'/>
<enum name='TCL_BREAK' value='3'/>
<enum name='TCL_BYTECODE_PRECOMPILED' value='1'/>
<enum name='TCL_CLOSE_READ' value='2'/>
<enum name='TCL_CLOSE_WRITE' value='4'/>
<enum name='TCL_CONTINUE' value='4'/>
<enum name='TCL_CONVERT_MULTIBYTE' value='-1'/>
<enum name='TCL_CONVERT_NOSPACE' value='-4'/>
<enum name='TCL_CONVERT_SYNTAX' value='-2'/>
<enum name='TCL_CONVERT_UNKNOWN' value='-3'/>
<enum name='TCL_CREATE_HARD_LINK' value='2'/>
<enum name='TCL_CREATE_SYMBOLIC_LINK' value='1'/>
<enum name='TCL_CUSTOM_PTR_KEYS' value='-1'/>
<enum name='TCL_CUSTOM_TYPE_KEYS' value='-2'/>
<enum name='TCL_DONT_USE_BRACES' value='1'/>
<enum name='TCL_DONT_WAIT' value='2'/>
<enum name='TCL_DOUBLE' value='1'/>
<enum name='TCL_DOUBLE_SPACE' value='27'/>
<enum name='TCL_DSTRING_STATIC_SIZE' value='200'/>
<enum name='TCL_EITHER' value='2'/>
<enum name='TCL_ENCODING_END' value='2'/>
<enum name='TCL_ENCODING_START' value='1'/>
<enum name='TCL_ENCODING_STOPONERROR' value='4'/>
<enum name='TCL_ENFORCE_MODE' value='16'/>
<enum name='TCL_ERROR' value='1'/>
<enum name='TCL_EVAL_DIRECT' value='262144'/>
<enum name='TCL_EVAL_GLOBAL' value='131072'/>
<enum name='TCL_EVAL_INVOKE' value='524288'/>
<enum name='TCL_EXACT' value='1'/>
<enum name='TCL_EXCEPTION' value='8'/>
<enum name='TCL_FALSE_JUMP' value='2'/>
<enum name='TCL_FILE_EVENTS' value='8'/>
<enum name='TCL_FINAL_RELEASE' value='2'/>
<enum name='TCL_GLOBAL_ONLY' value='1'/>
<enum name='TCL_GLOBMODE_DIR' value='4'/>
<enum name='TCL_GLOBMODE_JOIN' value='2'/>
<enum name='TCL_GLOBMODE_NO_COMPLAIN' value='1'/>
<enum name='TCL_GLOBMODE_TAILS' value='8'/>
<enum name='TCL_GLOB_PERM_HIDDEN' value='2'/>
<enum name='TCL_GLOB_PERM_R' value='4'/>
<enum name='TCL_GLOB_PERM_RONLY' value='1'/>
<enum name='TCL_GLOB_PERM_W' value='8'/>
<enum name='TCL_GLOB_PERM_X' value='16'/>
<enum name='TCL_GLOB_TYPE_BLOCK' value='1'/>
<enum name='TCL_GLOB_TYPE_CHAR' value='2'/>
<enum name='TCL_GLOB_TYPE_DIR' value='4'/>
<enum name='TCL_GLOB_TYPE_FILE' value='16'/>
<enum name='TCL_GLOB_TYPE_LINK' value='32'/>
<enum name='TCL_GLOB_TYPE_MOUNT' value='128'/>
<enum name='TCL_GLOB_TYPE_PIPE' value='8'/>
<enum name='TCL_GLOB_TYPE_SOCK' value='64'/>
<enum name='TCL_HASH_KEY_RANDOMIZE_HASH' value='1'/>
<enum name='TCL_HASH_KEY_STORE_HASH' value='1'/>
<enum name='TCL_HASH_KEY_TYPE_VERSION' value='1'/>
<enum name='TCL_IDLE_EVENTS' value='32'/>
<enum name='TCL_INT' value='0'/>
<enum name='TCL_INTEGER_SPACE' value='24'/>
<enum name='TCL_INTERP_DESTROYED' value='256'/>
<enum name='TCL_INVOKE_HIDDEN' value='1'/>
<enum name='TCL_INVOKE_NO_TRACEBACK' value='4'/>
<enum name='TCL_INVOKE_NO_UNKNOWN' value='2'/>
<enum name='TCL_LEAVE_ERR_MSG' value='512'/>
<enum name='TCL_LINK_BOOLEAN' value='3'/>
<enum name='TCL_LINK_DOUBLE' value='2'/>
<enum name='TCL_LINK_INT' value='1'/>
<enum name='TCL_LINK_READ_ONLY' value='128'/>
<enum name='TCL_LINK_STRING' value='4'/>
<enum name='TCL_LINK_WIDE_INT' value='5'/>
<enum name='TCL_LIST_ELEMENT' value='8'/>
<enum name='TCL_LL_MODIFIER_SIZE' value64='1' value='2'/>
<enum name='TCL_MAJOR_VERSION' value='8'/>
<enum name='TCL_MAX_PREC' value='17'/>
<enum name='TCL_MINOR_VERSION' value='4'/>
<enum name='TCL_MODE_BLOCKING' value='0'/>
<enum name='TCL_MODE_NONBLOCKING' value='1'/>
<enum name='TCL_NAMESPACE_ONLY' value='2'/>
<enum name='TCL_NO_EVAL' value='65536'/>
<enum name='TCL_OK' value='0'/>
<enum name='TCL_ONE_WORD_KEYS' value='1'/>
<enum name='TCL_OUT_LINE_COMPILE' value='5'/>
<enum name='TCL_PARSE_BAD_NUMBER' value='9'/>
<enum name='TCL_PARSE_BRACE_EXTRA' value='2'/>
<enum name='TCL_PARSE_MISSING_BRACE' value='3'/>
<enum name='TCL_PARSE_MISSING_BRACKET' value='4'/>
<enum name='TCL_PARSE_MISSING_PAREN' value='5'/>
<enum name='TCL_PARSE_MISSING_QUOTE' value='6'/>
<enum name='TCL_PARSE_MISSING_VAR_BRACE' value='7'/>
<enum name='TCL_PARSE_PART1' value='1024'/>
<enum name='TCL_PARSE_QUOTE_EXTRA' value='1'/>
<enum name='TCL_PARSE_SUCCESS' value='0'/>
<enum name='TCL_PARSE_SYNTAX' value='8'/>
<enum name='TCL_PATH_ABSOLUTE' value='0'/>
<enum name='TCL_PATH_RELATIVE' value='1'/>
<enum name='TCL_PATH_VOLUME_RELATIVE' value='2'/>
<enum name='TCL_PLATFORM_MAC' value='1'/>
<enum name='TCL_PLATFORM_TRANSLATION' value='2'/>
<enum name='TCL_PLATFORM_UNIX' value='0'/>
<enum name='TCL_PLATFORM_WINDOWS' value='2'/>
<enum name='TCL_PRESERVE_BINARY_COMPATABILITY' value='1'/>
<enum name='TCL_QUEUE_HEAD' value='1'/>
<enum name='TCL_QUEUE_MARK' value='2'/>
<enum name='TCL_QUEUE_TAIL' value='0'/>
<enum name='TCL_READABLE' value='2'/>
<enum name='TCL_REG_ADVANCED' value='3'/>
<enum name='TCL_REG_ADVF' value='2'/>
<enum name='TCL_REG_BASIC' value='0'/>
<enum name='TCL_REG_BOSONLY' value='1024'/>
<enum name='TCL_REG_CANMATCH' value='512'/>
<enum name='TCL_REG_EXPANDED' value='32'/>
<enum name='TCL_REG_EXTENDED' value='1'/>
<enum name='TCL_REG_NEWLINE' value='192'/>
<enum name='TCL_REG_NLANCH' value='128'/>
<enum name='TCL_REG_NLSTOP' value='64'/>
<enum name='TCL_REG_NOCASE' value='8'/>
<enum name='TCL_REG_NOSUB' value='16'/>
<enum name='TCL_REG_NOTBOL' value='1'/>
<enum name='TCL_REG_NOTEOL' value='2'/>
<enum name='TCL_REG_QUOTE' value='4'/>
<enum name='TCL_RELEASE_LEVEL' value='2'/>
<enum name='TCL_RELEASE_SERIAL' value='7'/>
<enum name='TCL_RESULT_SIZE' value='200'/>
<enum name='TCL_RETURN' value='2'/>
<enum name='TCL_SERVICE_ALL' value='1'/>
<enum name='TCL_SERVICE_NONE' value='0'/>
<enum name='TCL_SMALL_HASH_TABLE' value='4'/>
<enum name='TCL_STDERR' value='8'/>
<enum name='TCL_STDIN' value='2'/>
<enum name='TCL_STDOUT' value='4'/>
<enum name='TCL_STRING_KEYS' value='0'/>
<enum name='TCL_STUB_MAGIC' value='-56378673'/>
<enum name='TCL_SUBST_ALL' value='7'/>
<enum name='TCL_SUBST_BACKSLASHES' value='4'/>
<enum name='TCL_SUBST_COMMANDS' value='1'/>
<enum name='TCL_SUBST_VARIABLES' value='2'/>
<enum name='TCL_THREAD_JOINABLE' value='1'/>
<enum name='TCL_THREAD_NOFLAGS' value='0'/>
<enum name='TCL_THREAD_STACK_DEFAULT' value='0'/>
<enum name='TCL_TIMER_EVENTS' value='16'/>
<enum name='TCL_TOKEN_BS' value='8'/>
<enum name='TCL_TOKEN_COMMAND' value='16'/>
<enum name='TCL_TOKEN_OPERATOR' value='128'/>
<enum name='TCL_TOKEN_SIMPLE_WORD' value='2'/>
<enum name='TCL_TOKEN_SUB_EXPR' value='64'/>
<enum name='TCL_TOKEN_TEXT' value='4'/>
<enum name='TCL_TOKEN_VARIABLE' value='32'/>
<enum name='TCL_TOKEN_WORD' value='1'/>
<enum name='TCL_TRACE_ARRAY' value='2048'/>
<enum name='TCL_TRACE_DELETE' value='16384'/>
<enum name='TCL_TRACE_DESTROYED' value='128'/>
<enum name='TCL_TRACE_ENTER_EXEC' value='1'/>
<enum name='TCL_TRACE_LEAVE_EXEC' value='2'/>
<enum name='TCL_TRACE_OLD_STYLE' value='4096'/>
<enum name='TCL_TRACE_READS' value='16'/>
<enum name='TCL_TRACE_RENAME' value='8192'/>
<enum name='TCL_TRACE_RESULT_DYNAMIC' value='32768'/>
<enum name='TCL_TRACE_RESULT_OBJECT' value='65536'/>
<enum name='TCL_TRACE_UNSETS' value='64'/>
<enum name='TCL_TRACE_WRITES' value='32'/>
<enum name='TCL_TRANSLATE_AUTO' value='0'/>
<enum name='TCL_TRANSLATE_CR' value='1'/>
<enum name='TCL_TRANSLATE_CRLF' value='3'/>
<enum name='TCL_TRANSLATE_LF' value='2'/>
<enum name='TCL_TRUE_JUMP' value='1'/>
<enum name='TCL_UNCONDITIONAL_JUMP' value='0'/>
<enum name='TCL_UTF_MAX' value='3'/>
<enum name='TCL_WIDE_INT' value='3'/>
<enum name='TCL_WIDE_INT_IS_LONG' value64='1'/>
<enum name='TCL_WINDOW_EVENTS' value='4'/>
<enum name='TCL_WRITABLE' value='4'/>
<enum name='USE_EVAL_DIRECT' value='256'/>
<enum name='USE_PUTENV' value='1'/>
<enum name='USE_TERMIOS' value='1'/>
<enum name='VAR_ARGUMENT' value='256'/>
<enum name='VAR_ARRAY' value='2'/>
<enum name='VAR_ARRAY_ELEMENT' value='64'/>
<enum name='VAR_IN_HASHTABLE' value='16'/>
<enum name='VAR_LINK' value='4'/>
<enum name='VAR_NAMESPACE_VAR' value='128'/>
<enum name='VAR_RESOLVED' value='1024'/>
<enum name='VAR_SCALAR' value='1'/>
<enum name='VAR_TEMPORARY' value='512'/>
<enum name='VAR_TRACE_ACTIVE' value='32'/>
<enum name='VAR_UNDEFINED' value='8'/>
<function name='TclAccessDeleteProc'>
<arg name='proc' function_pointer='true' declared_type='TclAccessProc_*' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='TclAccessInsertProc'>
<arg name='proc' function_pointer='true' declared_type='TclAccessProc_*' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='TclAddLiteralObj'>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='litPtrPtr' declared_type='LiteralEntry**' type='^^{LiteralEntry}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclAllocateFreeObjects'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclArraySet'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='arrayNameObj' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='arrayElemObj' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclChannelEventScriptInvoker'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclChannelTransform'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='cmdObjPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCheckBadOctal'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='value' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCheckExecutionTraces'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='command' declared_type='char*' type='*' const='true'/>
<arg name='numChars' declared_type='int' type='i'/>
<arg name='cmdPtr' declared_type='Command*' type='^{Command=^{Tcl_HashEntry}^{Namespace}ii^?^?^v^?^v^?^vi^{ImportRef}^{CommandTrace}}'/>
<arg name='result' declared_type='int' type='i'/>
<arg name='traceFlags' declared_type='int' type='i'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCheckInterpTraces'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='command' declared_type='char*' type='*' const='true'/>
<arg name='numChars' declared_type='int' type='i'/>
<arg name='cmdPtr' declared_type='Command*' type='^{Command=^{Tcl_HashEntry}^{Namespace}ii^?^?^v^?^v^?^vi^{ImportRef}^{CommandTrace}}'/>
<arg name='result' declared_type='int' type='i'/>
<arg name='traceFlags' declared_type='int' type='i'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCleanupByteCode'>
<arg name='codePtr' declared_type='ByteCode*' type='^{ByteCode=^^vi^{Namespace}iiI*^{Proc}Iiiiiiiiii*^^{Tcl_Obj}^{ExceptionRange}^{AuxData}****}' type64='^{ByteCode=^^vi^{Namespace}iiI*^{Proc}Qiiiiiiiii*^^{Tcl_Obj}^{ExceptionRange}^{AuxData}****}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclCleanupChildren'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='numPids' declared_type='int' type='i'/>
<arg name='pidPtr' declared_type='Tcl_Pid*' type='^^{Tcl_Pid_}'/>
<arg name='errorChan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCleanupCommand'>
<arg name='cmdPtr' declared_type='Command*' type='^{Command=^{Tcl_HashEntry}^{Namespace}ii^?^?^v^?^v^?^vi^{ImportRef}^{CommandTrace}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclCompEvalObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileAppendCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileBreakCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileCatchCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileCmdWord'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='tokenPtr' declared_type='Tcl_Token*' type='^{Tcl_Token=i*ii}'/>
<arg name='count' declared_type='int' type='i'/>
<arg name='envPtr' declared_type='CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileContinueCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileExpr'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='script' declared_type='char*' type='*' const='true'/>
<arg name='numBytes' declared_type='int' type='i'/>
<arg name='envPtr' declared_type='CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileExprCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileExprWords'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='tokenPtr' declared_type='Tcl_Token*' type='^{Tcl_Token=i*ii}'/>
<arg name='numWords' declared_type='int' type='i'/>
<arg name='envPtr' declared_type='CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileForCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileForeachCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileIfCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileIncrCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileLappendCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileLindexCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileListCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileLlengthCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileLsetCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileRegexpCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileReturnCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileScript'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='script' declared_type='char*' type='*' const='true'/>
<arg name='numBytes' declared_type='int' type='i'/>
<arg name='nested' declared_type='int' type='i'/>
<arg name='envPtr' declared_type='CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileSetCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileStringCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileTokens'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='tokenPtr' declared_type='Tcl_Token*' type='^{Tcl_Token=i*ii}'/>
<arg name='count' declared_type='int' type='i'/>
<arg name='envPtr' declared_type='CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileVariableCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='envPtr' declared_type='CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCompileWhileCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCopyAndCollapse'>
<arg name='count' declared_type='int' type='i'/>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='dst' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCopyChannel'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='inChan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='outChan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='toRead' declared_type='int' type='i'/>
<arg name='cmdPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCreateAuxData'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='typePtr' declared_type='AuxDataType*' type='^{AuxDataType=*^?^?}'/>
<arg name='envPtr' declared_type='CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCreateExceptRange'>
<arg name='type' declared_type='ExceptionRangeType' type='i'/>
<arg name='envPtr' declared_type='CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCreateExecEnv'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='ExecEnv*' type='^{ExecEnv=^^{Tcl_Obj}ii^{Tcl_Obj}^{Tcl_Obj}}'/>
</function>
<function name='TclCreatePipeline'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='argc' declared_type='int' type='i'/>
<arg name='argv' declared_type='char**' type='^*' const='true'/>
<arg name='pidArrayPtr' declared_type='Tcl_Pid**' type='^^^{Tcl_Pid_}'/>
<arg name='inPipePtr' declared_type='TclFile*' type='^^{TclFile_}'/>
<arg name='outPipePtr' declared_type='TclFile*' type='^^{TclFile_}'/>
<arg name='errFilePtr' declared_type='TclFile*' type='^^{TclFile_}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCreateProc'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='nsPtr' declared_type='Namespace*' type='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}l^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}' type64='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}q^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}'/>
<arg name='procName' declared_type='char*' type='*' const='true'/>
<arg name='argsPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='bodyPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='procPtrPtr' declared_type='Proc**' type='^^{Proc}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclCrossFilesystemCopy'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='source' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='target' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclDeleteCompiledLocalVars'>
<arg name='iPtr' declared_type='Interp*' type='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}il^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}' type64='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}iq^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}'/>
<arg name='framePtr' declared_type='CallFrame*' type='^{CallFrame=^{Namespace}ii^^{Tcl_Obj}^{CallFrame}^{CallFrame}i^{Proc}^{Tcl_HashTable}i^{Var}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclDeleteExecEnv'>
<arg name='eePtr' declared_type='ExecEnv*' type='^{ExecEnv=^^{Tcl_Obj}ii^{Tcl_Obj}^{Tcl_Obj}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclDeleteLiteralTable'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='tablePtr' declared_type='LiteralTable*' type='^{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclDeleteVars'>
<arg name='iPtr' declared_type='Interp*' type='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}il^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}' type64='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}iq^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}'/>
<arg name='tablePtr' declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclDoGlob'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='separators' declared_type='char*' type='*'/>
<arg name='headPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<arg name='tail' declared_type='char*' type='*'/>
<arg name='types' declared_type='Tcl_GlobTypeData*' type='^{Tcl_GlobTypeData=ii^{Tcl_Obj}^{Tcl_Obj}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclDumpMemoryInfo'>
<arg name='outFile' declared_type='FILE*' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclEmitForwardJump'>
<arg name='envPtr' declared_type='CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<arg name='jumpType' declared_type='TclJumpType' type='i'/>
<arg name='jumpFixupPtr' declared_type='JumpFixup*' type='^{JumpFixup=iiii}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclEvalObjvInternal'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<arg name='command' declared_type='char*' type='*' const='true'/>
<arg name='length' declared_type='int' type='i'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclExpandCodeArray'>
<arg name='envPtr' declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclExpandJumpFixupArray'>
<arg name='fixupArrayPtr' declared_type='JumpFixupArray*' type='^{JumpFixupArray=^{JumpFixup}iii[10{JumpFixup=iiii}]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclExpandTokenArray'>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclExprFloatError'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='value' declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclFileAttrsCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclFileCopyCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclFileDeleteCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclFileDirname'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='TclFileMakeDirsCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclFileRenameCmd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclFinalizeAllocSubsystem'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclFinalizeAsync'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclFinalizeAuxDataTypeTable'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclFinalizeCompExecEnv'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclFinalizeCompilation'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclFinalizeEncodingSubsystem'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclFinalizeEnvironment'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclFinalizeExecution'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclFinalizeFilesystem'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclFinalizeIOSubsystem'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclFinalizeLoad'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclFinalizeLock'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclFinalizeMemorySubsystem'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclFinalizeNotifier'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclFinalizeSynchronization'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclFinalizeThreadData'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclFindCompiledLocal'>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='nameChars' declared_type='int' type='i'/>
<arg name='create' declared_type='int' type='i'/>
<arg name='flags' declared_type='int' type='i'/>
<arg name='procPtr' declared_type='Proc*' type='^{Proc=^{Interp}i^{Command}^{Tcl_Obj}ii^{CompiledLocal}^{CompiledLocal}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclFindElement'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='listStr' declared_type='char*' type='*' const='true'/>
<arg name='listLength' declared_type='int' type='i'/>
<arg name='elementPtr' declared_type='char**' type='^*' const='true'/>
<arg name='nextPtr' declared_type='char**' type='^*' const='true'/>
<arg name='sizePtr' declared_type='int*' type='^i'/>
<arg name='bracePtr' declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclFindProc'>
<arg name='iPtr' declared_type='Interp*' type='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}il^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}' type64='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}iq^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}'/>
<arg name='procName' declared_type='char*' type='*' const='true'/>
<retval declared_type='Proc*' type='^{Proc=^{Interp}i^{Command}^{Tcl_Obj}ii^{CompiledLocal}^{CompiledLocal}}'/>
</function>
<function name='TclFixupForwardJump'>
<arg name='envPtr' declared_type='CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<arg name='jumpFixupPtr' declared_type='JumpFixup*' type='^{JumpFixup=iiii}'/>
<arg name='jumpDist' declared_type='int' type='i'/>
<arg name='distThreshold' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclFormatInt'>
<arg name='buffer' declared_type='char*' type='*'/>
<arg name='n' declared_type='long' type='l' type64='q'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclFreeCompileEnv'>
<arg name='envPtr' declared_type='CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclFreeJumpFixupArray'>
<arg name='fixupArrayPtr' declared_type='JumpFixupArray*' type='^{JumpFixupArray=^{JumpFixup}iii[10{JumpFixup=iiii}]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclFreeObj'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclFreePackageInfo'>
<arg name='iPtr' declared_type='Interp*' type='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}il^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}' type64='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}iq^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclGetAndDetachPids'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclGetAuxDataType'>
<arg name='typeName' declared_type='char*' type='*'/>
<retval declared_type='struct AuxDataType*' type='^{AuxDataType=*^?^?}'/>
</function>
<function name='TclGetDate'>
<arg name='p' declared_type='char*' type='*'/>
<arg name='now' declared_type='unsigned long' type='L' type64='Q'/>
<arg name='zone' declared_type='long' type='l' type64='q'/>
<arg name='timePtr' declared_type='unsigned long*' type='^L' type64='^Q'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclGetEnv'>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='valuePtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='TclGetExceptionRangeForPc'>
<arg name='pc' declared_type='unsigned char*' type='*'/>
<arg name='catchOnly' declared_type='int' type='i'/>
<arg name='codePtr' declared_type='ByteCode*' type='^{ByteCode=^^vi^{Namespace}iiI*^{Proc}Iiiiiiiiii*^^{Tcl_Obj}^{ExceptionRange}^{AuxData}****}' type64='^{ByteCode=^^vi^{Namespace}iiI*^{Proc}Qiiiiiiiii*^^{Tcl_Obj}^{ExceptionRange}^{AuxData}****}'/>
<retval declared_type='ExceptionRange*' type='^{ExceptionRange=iiiiiii}'/>
</function>
<function name='TclGetExtension'>
<arg name='name' declared_type='char*' type='*'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='TclGetFrame'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='str' declared_type='char*' type='*' const='true'/>
<arg name='framePtrPtr' declared_type='CallFrame**' type='^^{CallFrame}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclGetInstructionTable'>
<retval declared_type='void*' type='^v'/>
</function>
<function name='TclGetIntForIndex'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='endValue' declared_type='int' type='i'/>
<arg name='indexPtr' declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclGetInterpProc'>
<retval function_pointer='true' declared_type='TclCmdProcType' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char**' type='^*' const='true'/>
<retval declared_type='int' type='i'/>
</retval>
</function>
<function name='TclGetLibraryPath'>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='TclGetLoadedPackages'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='targetName' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclGetLong'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='str' declared_type='char*' type='*' const='true'/>
<arg name='longPtr' declared_type='long*' type='^l' type64='^q'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclGetNamespaceForQualName'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='qualName' declared_type='char*' type='*' const='true'/>
<arg name='cxtNsPtr' declared_type='Namespace*' type='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}l^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}' type64='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}q^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}'/>
<arg name='flags' declared_type='int' type='i'/>
<arg name='nsPtrPtr' declared_type='Namespace**' type='^^{Namespace}'/>
<arg name='altNsPtrPtr' declared_type='Namespace**' type='^^{Namespace}'/>
<arg name='actualCxtPtrPtr' declared_type='Namespace**' type='^^{Namespace}'/>
<arg name='simpleNamePtr' declared_type='char**' type='^*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclGetObjInterpProc'>
<retval function_pointer='true' declared_type='TclObjCmdProcType' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='struct Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</retval>
</function>
<function name='TclGetOpenMode'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='str' declared_type='char*' type='*' const='true'/>
<arg name='seekFlagPtr' declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclGetOriginalCommand'>
<arg name='command' declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
<retval declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
</function>
<function name='TclGetStartupScriptFileName'>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='TclGetStartupScriptPath'>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='TclGlob'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='pattern' declared_type='char*' type='*'/>
<arg name='unquotedPrefix' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='globFlags' declared_type='int' type='i'/>
<arg name='types' declared_type='Tcl_GlobTypeData*' type='^{Tcl_GlobTypeData=ii^{Tcl_Obj}^{Tcl_Obj}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclGlobalInvoke'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='argc' declared_type='int' type='i'/>
<arg name='argv' declared_type='char**' type='^*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclGuessPackageName'>
<arg name='fileName' declared_type='char*' type='*' const='true'/>
<arg name='bufPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclHandleCreate'>
<arg name='ptr' declared_type='void*' type='^v'/>
<retval declared_type='TclHandle' type='^^v'/>
</function>
<function name='TclHandleFree'>
<arg name='handle' declared_type='TclHandle' type='^^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclHandlePreserve'>
<arg name='handle' declared_type='TclHandle' type='^^v'/>
<retval declared_type='TclHandle' type='^^v'/>
</function>
<function name='TclHandleRelease'>
<arg name='handle' declared_type='TclHandle' type='^^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclHideLiteral'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='envPtr' declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<arg name='index' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclHideUnsafeCommands'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclInExit'>
<retval declared_type='int' type='i'/>
</function>
<function name='TclInThreadExit'>
<retval declared_type='int' type='i'/>
</function>
<function name='TclIncrVar2'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='part1Ptr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='part2Ptr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='incrAmount' declared_type='long' type='l' type64='q'/>
<arg name='part1NotParsed' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='TclInitAlloc'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclInitAuxDataTypeTable'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclInitByteCodeObj'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='envPtr' declared_type='CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclInitCompilation'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclInitCompileEnv'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='envPtr' declared_type='CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<arg name='string' declared_type='char*' type='*'/>
<arg name='numBytes' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclInitCompiledLocals'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='framePtr' declared_type='CallFrame*' type='^{CallFrame=^{Namespace}ii^^{Tcl_Obj}^{CallFrame}^{CallFrame}i^{Proc}^{Tcl_HashTable}i^{Var}}'/>
<arg name='nsPtr' declared_type='Namespace*' type='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}l^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}' type64='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}q^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclInitDbCkalloc'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclInitEncodingSubsystem'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclInitIOSubsystem'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclInitJumpFixupArray'>
<arg name='fixupArrayPtr' declared_type='JumpFixupArray*' type='^{JumpFixupArray=^{JumpFixup}iii[10{JumpFixup=iiii}]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclInitLiteralTable'>
<arg name='tablePtr' declared_type='LiteralTable*' type='^{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclInitNamespaceSubsystem'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclInitNotifier'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclInitObjSubsystem'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclInitSubsystems'>
<arg name='argv0' declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclInterpInit'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclInterpReady'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclInvoke'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='argc' declared_type='int' type='i'/>
<arg name='argv' declared_type='char**' type='^*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclInvokeObjectCommand'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='argc' declared_type='int' type='i'/>
<arg name='argv' declared_type='char**' type='^*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclInvokeStringCommand'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclIsLocalScalar'>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='len' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclIsProc'>
<arg name='cmdPtr' declared_type='Command*' type='^{Command=^{Tcl_HashEntry}^{Namespace}ii^?^?^v^?^v^?^vi^{ImportRef}^{CommandTrace}}'/>
<retval declared_type='Proc*' type='^{Proc=^{Interp}i^{Command}^{Tcl_Obj}ii^{CompiledLocal}^{CompiledLocal}}'/>
</function>
<function name='TclJoinThread'>
<arg name='id' declared_type='Tcl_ThreadId' type='^{Tcl_ThreadId_=}'/>
<arg name='result' declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclLindexFlat'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='listPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='indexCount' declared_type='int' type='i'/>
<arg name='indexArray' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='TclLindexList'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='listPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='argPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='TclListObjSetElement'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='listPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='index' declared_type='int' type='i'/>
<arg name='valuePtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclLooksLikeInt'>
<arg name='bytes' declared_type='char*' type='*' const='true'/>
<arg name='length' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclLookupArrayElement'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='arrayName' declared_type='char*' type='*' const='true'/>
<arg name='elName' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i' const='true'/>
<arg name='msg' declared_type='char*' type='*' const='true'/>
<arg name='createPart1' declared_type='int' type='i' const='true'/>
<arg name='createPart2' declared_type='int' type='i' const='true'/>
<arg name='arrayPtr' declared_type='Var*' type='^{Var=(?=^{Tcl_Obj}^{Tcl_HashTable}^{Var})*^{Namespace}^{Tcl_HashEntry}i^{VarTrace}^{ArraySearch}i}'/>
<retval declared_type='Var*' type='^{Var=(?=^{Tcl_Obj}^{Tcl_HashTable}^{Var})*^{Namespace}^{Tcl_HashEntry}i^{VarTrace}^{ArraySearch}i}'/>
</function>
<function name='TclLookupLiteralEntry'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='LiteralEntry*' type='^{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}'/>
</function>
<function name='TclLookupVar'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='part1' declared_type='char*' type='*' const='true'/>
<arg name='part2' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<arg name='msg' declared_type='char*' type='*' const='true'/>
<arg name='createPart1' declared_type='int' type='i'/>
<arg name='createPart2' declared_type='int' type='i'/>
<arg name='arrayPtrPtr' declared_type='Var**' type='^^{Var}'/>
<retval declared_type='Var*' type='^{Var=(?=^{Tcl_Obj}^{Tcl_HashTable}^{Var})*^{Namespace}^{Tcl_HashEntry}i^{VarTrace}^{ArraySearch}i}'/>
</function>
<function name='TclLsetFlat'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='listPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='indexCount' declared_type='int' type='i'/>
<arg name='indexArray' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<arg name='valuePtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='TclLsetList'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='listPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='indexPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='valuePtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='TclNeedSpace'>
<arg name='start' declared_type='char*' type='*' const='true'/>
<arg name='end' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclNewFSPathObj'>
<arg name='dirPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='addStrRep' declared_type='char*' type='*' const='true'/>
<arg name='len' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='TclNewProcBodyObj'>
<arg name='procPtr' declared_type='Proc*' type='^{Proc=^{Interp}i^{Command}^{Tcl_Obj}ii^{CompiledLocal}^{CompiledLocal}}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='TclObjCommandComplete'>
<arg name='cmdPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclObjInterpProc'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclObjInvoke'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclObjInvokeGlobal'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclObjLookupVar'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='part1Ptr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='part2' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<arg name='msg' declared_type='char*' type='*' const='true'/>
<arg name='createPart1' declared_type='int' type='i' const='true'/>
<arg name='createPart2' declared_type='int' type='i' const='true'/>
<arg name='arrayPtrPtr' declared_type='Var**' type='^^{Var}'/>
<retval declared_type='Var*' type='^{Var=(?=^{Tcl_Obj}^{Tcl_HashTable}^{Var})*^{Namespace}^{Tcl_HashEntry}i^{VarTrace}^{ArraySearch}i}'/>
</function>
<function name='TclOpenFileChannelDeleteProc'>
<arg name='proc' function_pointer='true' declared_type='TclOpenFileChannelProc_*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='TclOpenFileChannelInsertProc'>
<arg name='proc' function_pointer='true' declared_type='TclOpenFileChannelProc_*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='TclParseBackslash'>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='numBytes' declared_type='int' type='i'/>
<arg name='readPtr' declared_type='int*' type='^i'/>
<arg name='dst' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclParseHex'>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='numBytes' declared_type='int' type='i'/>
<arg name='resultPtr' declared_type='Tcl_UniChar*' type='^S'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclParseInteger'>
<arg name='string' declared_type='char*' type='*' const='true'/>
<arg name='numBytes' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclParseWhiteSpace'>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='numBytes' declared_type='int' type='i'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='typePtr' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclPrecTraceProc'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name1' declared_type='char*' type='*' const='true'/>
<arg name='name2' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='TclPreventAliasLoop'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='cmdInterp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='cmd' declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclPrintInstruction'>
<arg name='codePtr' declared_type='ByteCode*' type='^{ByteCode=^^vi^{Namespace}iiI*^{Proc}Iiiiiiiiii*^^{Tcl_Obj}^{ExceptionRange}^{AuxData}****}' type64='^{ByteCode=^^vi^{Namespace}iiI*^{Proc}Qiiiiiiiii*^^{Tcl_Obj}^{ExceptionRange}^{AuxData}****}'/>
<arg name='pc' declared_type='unsigned char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclPrintObject'>
<arg name='outFile' declared_type='FILE*' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='maxChars' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclPrintSource'>
<arg name='outFile' declared_type='FILE*' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg name='string' declared_type='char*' type='*' const='true'/>
<arg name='maxChars' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclProcCleanupProc'>
<arg name='procPtr' declared_type='Proc*' type='^{Proc=^{Interp}i^{Command}^{Tcl_Obj}ii^{CompiledLocal}^{CompiledLocal}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclProcCompileProc'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='procPtr' declared_type='Proc*' type='^{Proc=^{Interp}i^{Command}^{Tcl_Obj}ii^{CompiledLocal}^{CompiledLocal}}'/>
<arg name='bodyPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='nsPtr' declared_type='Namespace*' type='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}l^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}' type64='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}q^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}'/>
<arg name='description' declared_type='char*' type='*' const='true'/>
<arg name='procName' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclProcDeleteProc'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclProcInterpProc'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='argc' declared_type='int' type='i'/>
<arg name='argv' declared_type='char**' type='^*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclPtrGetVar'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='varPtr' declared_type='Var*' type='^{Var=(?=^{Tcl_Obj}^{Tcl_HashTable}^{Var})*^{Namespace}^{Tcl_HashEntry}i^{VarTrace}^{ArraySearch}i}'/>
<arg name='arrayPtr' declared_type='Var*' type='^{Var=(?=^{Tcl_Obj}^{Tcl_HashTable}^{Var})*^{Namespace}^{Tcl_HashEntry}i^{VarTrace}^{ArraySearch}i}'/>
<arg name='part1' declared_type='char*' type='*' const='true'/>
<arg name='part2' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i' const='true'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='TclPtrIncrVar'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='varPtr' declared_type='Var*' type='^{Var=(?=^{Tcl_Obj}^{Tcl_HashTable}^{Var})*^{Namespace}^{Tcl_HashEntry}i^{VarTrace}^{ArraySearch}i}'/>
<arg name='arrayPtr' declared_type='Var*' type='^{Var=(?=^{Tcl_Obj}^{Tcl_HashTable}^{Var})*^{Namespace}^{Tcl_HashEntry}i^{VarTrace}^{ArraySearch}i}'/>
<arg name='part1' declared_type='char*' type='*' const='true'/>
<arg name='part2' declared_type='char*' type='*' const='true'/>
<arg name='i' declared_type='long' type='l' type64='q' const='true'/>
<arg name='flags' declared_type='int' type='i' const='true'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='TclPtrSetVar'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='varPtr' declared_type='Var*' type='^{Var=(?=^{Tcl_Obj}^{Tcl_HashTable}^{Var})*^{Namespace}^{Tcl_HashEntry}i^{VarTrace}^{ArraySearch}i}'/>
<arg name='arrayPtr' declared_type='Var*' type='^{Var=(?=^{Tcl_Obj}^{Tcl_HashTable}^{Var})*^{Namespace}^{Tcl_HashEntry}i^{VarTrace}^{ArraySearch}i}'/>
<arg name='part1' declared_type='char*' type='*' const='true'/>
<arg name='part2' declared_type='char*' type='*' const='true'/>
<arg name='newValuePtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='flags' declared_type='int' type='i' const='true'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='TclRegAbout'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='re' declared_type='Tcl_RegExp' type='^{Tcl_RegExp_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclRegError'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='msg' declared_type='char*' type='*' const='true'/>
<arg name='status' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclRegExpRangeUniChar'>
<arg name='re' declared_type='Tcl_RegExp' type='^{Tcl_RegExp_=}'/>
<arg name='index' declared_type='int' type='i'/>
<arg name='startPtr' declared_type='int*' type='^i'/>
<arg name='endPtr' declared_type='int*' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclRegisterAuxDataType'>
<arg name='typePtr' declared_type='AuxDataType*' type='^{AuxDataType=*^?^?}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclRegisterLiteral'>
<arg name='envPtr' declared_type='CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<arg name='bytes' declared_type='char*' type='*'/>
<arg name='length' declared_type='int' type='i'/>
<arg name='onHeap' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclReleaseLiteral'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclRememberCondition'>
<arg name='mutex' declared_type='Tcl_Condition*' type='^^{Tcl_Condition_}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclRememberDataKey'>
<arg name='mutex' declared_type='Tcl_ThreadDataKey*' type='^^{Tcl_ThreadDataKey_}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclRememberJoinableThread'>
<arg name='id' declared_type='Tcl_ThreadId' type='^{Tcl_ThreadId_=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclRememberMutex'>
<arg name='mutex' declared_type='Tcl_Mutex*' type='^^{Tcl_Mutex_}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclRenameCommand'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='oldName' declared_type='char*' type='*'/>
<arg name='newName' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclResetFilesystem'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclResetShadowedCmdRefs'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='newCmdPtr' declared_type='Command*' type='^{Command=^{Tcl_HashEntry}^{Namespace}ii^?^?^v^?^v^?^vi^{ImportRef}^{CommandTrace}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclServiceIdle'>
<retval declared_type='int' type='i'/>
</function>
<function name='TclSetByteCodeFromAny'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='hookProc' function_pointer='true' declared_type='CompileHookProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='struct CompileEnv*' type='^{CompileEnv=^{Interp}*i^{Proc}iiiii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}***i^{LiteralEntry}iii^{ExceptionRange}iii^{CmdLocation}ii^{AuxData}iii[250C][60{LiteralEntry=^{LiteralEntry}^{Tcl_Obj}i}][5{ExceptionRange=iiiiiii}][40{CmdLocation=iiii}][5{AuxData=^{AuxDataType}^v}]}'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='int' type='i'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclSetCmdNameObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='cmdPtr' declared_type='Command*' type='^{Command=^{Tcl_HashEntry}^{Namespace}ii^?^?^v^?^v^?^vi^{ImportRef}^{CommandTrace}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclSetLibraryPath'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclSetPreInitScript'>
<arg name='string' declared_type='char*' type='*'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='TclSetStartupScriptFileName'>
<arg name='filename' declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclSetStartupScriptPath'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclSetupEnv'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclSignalExitThread'>
<arg name='id' declared_type='Tcl_ThreadId' type='^{Tcl_ThreadId_=}'/>
<arg name='result' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclSockGetPort'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='str' declared_type='char*' type='*'/>
<arg name='proto' declared_type='char*' type='*'/>
<arg name='portPtr' declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclSockMinimumBuffers'>
<arg name='sock' declared_type='int' type='i'/>
<arg name='size' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclStatDeleteProc'>
<arg name='proc' function_pointer='true' declared_type='TclStatProc_*' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='struct stat*' type='^{stat=iISSIIi{timespec=il}{timespec=il}{timespec=il}qqiIIi[2q]}' type64='^{stat=iISSIIi{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='TclStatInsertProc'>
<arg name='proc' function_pointer='true' declared_type='TclStatProc_*' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='struct stat*' type='^{stat=iISSIIi{timespec=il}{timespec=il}{timespec=il}qqiIIi[2q]}' type64='^{stat=iISSIIi{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='TclTeardownNamespace'>
<arg name='nsPtr' declared_type='Namespace*' type='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}l^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}' type64='^{Namespace=**^v^?^{Namespace}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}q^{Tcl_Interp}iii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}^*iiii^?^?^?}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclThreadDataKeyGet'>
<arg name='keyPtr' declared_type='Tcl_ThreadDataKey*' type='^^{Tcl_ThreadDataKey_}'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='TclThreadDataKeySet'>
<arg name='keyPtr' declared_type='Tcl_ThreadDataKey*' type='^^{Tcl_ThreadDataKey_}'/>
<arg name='data' declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclTransferResult'>
<arg name='sourceInterp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='result' declared_type='int' type='i'/>
<arg name='targetInterp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclUniCharMatch'>
<arg name='string' declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg name='strLen' declared_type='int' type='i'/>
<arg name='pattern' declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg name='ptnLen' declared_type='int' type='i'/>
<arg name='nocase' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclUnixWaitForFile'>
<arg name='fd' declared_type='int' type='i'/>
<arg name='mask' declared_type='int' type='i'/>
<arg name='timeout' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclUpdateReturnInfo'>
<arg name='iPtr' declared_type='Interp*' type='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}il^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}' type64='^{Interp=*^?i^{TclStubs}^^v^{Namespace}^{Tcl_HashTable}^v{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}ii^{CallFrame}^{CallFrame}^{ActiveVarTrace}i***ii{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}*iii{LiteralTable=^^{LiteralEntry}[4^{LiteralEntry}]iiii}i^{Proc}^{ResolverScheme}^{Tcl_Obj}iq^{Trace}^{Tcl_HashTable}^{ExecEnv}^{Tcl_Obj}[201c]^{Tcl_Obj}^{Tcl_ThreadId_}^{ActiveCommandTrace}^{ActiveInterpTrace}i}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclVarTraceExists'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='varName' declared_type='char*' type='*' const='true'/>
<retval declared_type='Var*' type='^{Var=(?=^{Tcl_Obj}^{Tcl_HashTable}^{Var})*^{Namespace}^{Tcl_HashEntry}i^{VarTrace}^{ArraySearch}i}'/>
</function>
<function name='Tcl_Access'>
<arg name='path' declared_type='char*' type='*' const='true'/>
<arg name='mode' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_AddErrorInfo'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='message' declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_AddInterpResolvers'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='cmdProc' function_pointer='true' declared_type='Tcl_ResolveCmdProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Command*' type='^^{Tcl_Command_}'/>
<retval declared_type='int' type='i'/>
</arg>
<arg name='varProc' function_pointer='true' declared_type='Tcl_ResolveVarProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Var*' type='^^{Tcl_Var_}'/>
<retval declared_type='int' type='i'/>
</arg>
<arg name='compiledVarProc' function_pointer='true' declared_type='Tcl_ResolveCompiledVarProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='Tcl_ResolvedVarInfo**' type='^^{Tcl_ResolvedVarInfo}'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_AddObjErrorInfo'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='message' declared_type='char*' type='*' const='true'/>
<arg name='length' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_AfterObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_AlertNotifier'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_Alloc'>
<arg name='size' declared_type='unsigned int' type='I'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='Tcl_AllocStatBuf'>
<retval declared_type='Tcl_StatBuf*' type='^{stat=iISSIIi{timespec=il}{timespec=il}{timespec=il}qqiIIi[2q]}' type64='^{stat=iISSIIi{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}'/>
</function>
<function name='Tcl_AllowExceptions'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_AppInit'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_AppendAllObjTypes'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_AppendElement'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='string' declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_AppendExportList'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='nsPtr' declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_AppendObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_AppendObjToObj'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='appendObjPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_AppendResult' variadic='true'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_AppendResultVA'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='argList' declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_AppendStringsToObj' variadic='true'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_AppendStringsToObjVA'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='argList' declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_AppendToObj'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='bytes' declared_type='char*' type='*' const='true'/>
<arg name='length' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_AppendUnicodeToObj'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='unicode' declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg name='length' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_ArrayObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_AsyncCreate'>
<arg name='proc' function_pointer='true' declared_type='Tcl_AsyncProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='Tcl_AsyncHandler' type='^{Tcl_AsyncHandler_=}'/>
</function>
<function name='Tcl_AsyncDelete'>
<arg name='async' declared_type='Tcl_AsyncHandler' type='^{Tcl_AsyncHandler_=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_AsyncInvoke'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='code' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_AsyncMark'>
<arg name='async' declared_type='Tcl_AsyncHandler' type='^{Tcl_AsyncHandler_=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_AsyncReady'>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_AttemptAlloc'>
<arg name='size' declared_type='unsigned int' type='I'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='Tcl_AttemptDbCkalloc'>
<arg name='size' declared_type='unsigned int' type='I'/>
<arg name='file' declared_type='char*' type='*' const='true'/>
<arg name='line' declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='Tcl_AttemptDbCkrealloc'>
<arg name='ptr' declared_type='char*' type='*'/>
<arg name='size' declared_type='unsigned int' type='I'/>
<arg name='file' declared_type='char*' type='*' const='true'/>
<arg name='line' declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='Tcl_AttemptRealloc'>
<arg name='ptr' declared_type='char*' type='*'/>
<arg name='size' declared_type='unsigned int' type='I'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='Tcl_AttemptSetObjLength'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='length' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_BackgroundError'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_Backslash'>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='readPtr' declared_type='int*' type='^i'/>
<retval declared_type='char' type='c'/>
</function>
<function name='Tcl_BadChannelOption'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='optionName' declared_type='char*' type='*' const='true'/>
<arg name='optionList' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_BinaryObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_BreakObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_CallWhenDeleted'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_InterpDeleteProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_CancelIdleCall'>
<arg name='idleProc' function_pointer='true' declared_type='Tcl_IdleProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_CaseObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_CatchObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_CdObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ChannelBlockModeProc'>
<arg name='chanTypePtr' declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverBlockModeProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</retval>
</function>
<function name='Tcl_ChannelBuffered'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ChannelClose2Proc'>
<arg name='chanTypePtr' declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverClose2Proc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</retval>
</function>
<function name='Tcl_ChannelCloseProc'>
<arg name='chanTypePtr' declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverCloseProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</retval>
</function>
<function name='Tcl_ChannelFlushProc'>
<arg name='chanTypePtr' declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverFlushProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='int' type='i'/>
</retval>
</function>
<function name='Tcl_ChannelGetHandleProc'>
<arg name='chanTypePtr' declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverGetHandleProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='ClientData*' type='^^v'/>
<retval declared_type='int' type='i'/>
</retval>
</function>
<function name='Tcl_ChannelGetOptionProc'>
<arg name='chanTypePtr' declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverGetOptionProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='int' type='i'/>
</retval>
</function>
<function name='Tcl_ChannelHandlerProc'>
<arg name='chanTypePtr' declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverHandlerProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</retval>
</function>
<function name='Tcl_ChannelInputProc'>
<arg name='chanTypePtr' declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverInputProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</retval>
</function>
<function name='Tcl_ChannelName'>
<arg name='chanTypePtr' declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_ChannelOutputProc'>
<arg name='chanTypePtr' declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverOutputProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</retval>
</function>
<function name='Tcl_ChannelSeekProc'>
<arg name='chanTypePtr' declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverSeekProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</retval>
</function>
<function name='Tcl_ChannelSetOptionProc'>
<arg name='chanTypePtr' declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverSetOptionProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</retval>
</function>
<function name='Tcl_ChannelVersion'>
<arg name='chanTypePtr' declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval declared_type='Tcl_ChannelTypeVersion' type='^{Tcl_ChannelTypeVersion_=}'/>
</function>
<function name='Tcl_ChannelWatchProc'>
<arg name='chanTypePtr' declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverWatchProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</retval>
</function>
<function name='Tcl_ChannelWideSeekProc'>
<arg name='chanTypePtr' declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval function_pointer='true' declared_type='Tcl_DriverWideSeekProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_WideInt' type='q'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='Tcl_WideInt' type='q'/>
</retval>
</function>
<function name='Tcl_Chdir'>
<arg name='dirName' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ClearChannelHandlers'>
<arg name='channel' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_ClockObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_Close'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_CloseObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_CommandComplete'>
<arg name='cmd' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_CommandTraceInfo'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='varName' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<arg name='procPtr' function_pointer='true' declared_type='Tcl_CommandTraceProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='prevClientData' declared_type='ClientData' type='^v'/>
<retval declared_type='ClientData' type='^v'/>
</function>
<function name='Tcl_Concat'>
<arg name='argc' declared_type='int' type='i'/>
<arg name='argv' declared_type='char **' type='^*' const='true'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='Tcl_ConcatObj'>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_ConcatObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ConditionFinalize'>
<arg name='condPtr' declared_type='Tcl_Condition*' type='^^{Tcl_Condition_}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_ConditionNotify'>
<arg name='condPtr' declared_type='Tcl_Condition*' type='^^{Tcl_Condition_}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_ConditionWait'>
<arg name='condPtr' declared_type='Tcl_Condition*' type='^^{Tcl_Condition_}'/>
<arg name='mutexPtr' declared_type='Tcl_Mutex*' type='^^{Tcl_Mutex_}'/>
<arg name='timePtr' declared_type='Tcl_Time*' type='^{Tcl_Time=ll}' type64='^{Tcl_Time=qq}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_ContinueObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ConvertCountedElement'>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='length' declared_type='int' type='i'/>
<arg name='dst' declared_type='char*' type='*'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ConvertElement'>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='dst' declared_type='char*' type='*'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ConvertToType'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='typePtr' declared_type='Tcl_ObjType*' type='^{Tcl_ObjType=*^?^?^?^?}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_CreateAlias'>
<arg name='slave' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='slaveCmd' declared_type='char*' type='*' const='true'/>
<arg name='target' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='targetCmd' declared_type='char*' type='*' const='true'/>
<arg name='argc' declared_type='int' type='i'/>
<arg name='argv' declared_type='char **' type='^*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_CreateAliasObj'>
<arg name='slave' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='slaveCmd' declared_type='char*' type='*' const='true'/>
<arg name='target' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='targetCmd' declared_type='char*' type='*' const='true'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_CreateChannel'>
<arg name='typePtr' declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg name='chanName' declared_type='char*' type='*' const='true'/>
<arg name='instanceData' declared_type='ClientData' type='^v'/>
<arg name='mask' declared_type='int' type='i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</function>
<function name='Tcl_CreateChannelHandler'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='mask' declared_type='int' type='i'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_ChannelProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_CreateCloseHandler'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_CloseProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_CreateCommand'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='cmdName' declared_type='char*' type='*' const='true'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_CmdProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char**' type='^*' const='true'/>
<retval declared_type='int' type='i'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='deleteProc' function_pointer='true' declared_type='Tcl_CmdDeleteProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
</function>
<function name='Tcl_CreateEncoding'>
<arg name='typePtr' declared_type='Tcl_EncodingType*' type='^{Tcl_EncodingType=*^?^?^?^vi}'/>
<retval declared_type='Tcl_Encoding' type='^{Tcl_Encoding_=}'/>
</function>
<function name='Tcl_CreateEventSource'>
<arg name='setupProc' function_pointer='true' declared_type='Tcl_EventSetupProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='checkProc' function_pointer='true' declared_type='Tcl_EventCheckProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_CreateExitHandler'>
<arg name='proc' function_pointer='true' declared_type='Tcl_ExitProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_CreateFileHandler'>
<arg name='fd' declared_type='int' type='i'/>
<arg name='mask' declared_type='int' type='i'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_FileProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_CreateHashEntry'>
<arg name='tablePtr' declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<arg name='key' declared_type='char*' type='*' const='true'/>
<arg name='newPtr' declared_type='int*' type='^i'/>
<retval declared_type='Tcl_HashEntry*' type='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][4c])}'/>
</function>
<function name='Tcl_CreateInterp'>
<retval declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
</function>
<function name='Tcl_CreateMathFunc'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='numArgs' declared_type='int' type='i'/>
<arg name='argTypes' declared_type='Tcl_ValueType*' type='^i'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_MathProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='Tcl_Value*' type='^{Tcl_Value=ildq}' type64='^{Tcl_Value=iqdq}'/>
<arg declared_type='Tcl_Value*' type='^{Tcl_Value=ildq}' type64='^{Tcl_Value=iqdq}'/>
<retval declared_type='int' type='i'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_CreateNamespace'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='deleteProc' function_pointer='true' declared_type='Tcl_NamespaceDeleteProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
</function>
<function name='Tcl_CreateObjCommand'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='cmdName' declared_type='char*' type='*' const='true'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_ObjCmdProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='struct Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='deleteProc' function_pointer='true' declared_type='Tcl_CmdDeleteProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
</function>
<function name='Tcl_CreateObjTrace'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='level' declared_type='int' type='i'/>
<arg name='flags' declared_type='int' type='i'/>
<arg name='objProc' function_pointer='true' declared_type='Tcl_CmdObjTraceProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='struct Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='delProc' function_pointer='true' declared_type='Tcl_CmdObjTraceDeleteProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='Tcl_Trace' type='^{Tcl_Trace_=}'/>
</function>
<function name='Tcl_CreateSlave'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='slaveName' declared_type='char*' type='*' const='true'/>
<arg name='isSafe' declared_type='int' type='i'/>
<retval declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
</function>
<function name='Tcl_CreateThread'>
<arg name='idPtr' declared_type='Tcl_ThreadId*' type='^^{Tcl_ThreadId_}'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_ThreadCreateProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='stackSize' declared_type='int' type='i'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_CreateThreadExitHandler'>
<arg name='proc' function_pointer='true' declared_type='Tcl_ExitProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_CreateTimerHandler'>
<arg name='milliseconds' declared_type='int' type='i'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_TimerProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='Tcl_TimerToken' type='^{Tcl_TimerToken_=}'/>
</function>
<function name='Tcl_CreateTrace'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='level' declared_type='int' type='i'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_CmdTraceProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='Tcl_CmdProc*' type='^?'/>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char**' type='^*' const='true'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='Tcl_Trace' type='^{Tcl_Trace_=}'/>
</function>
<function name='Tcl_CutChannel'>
<arg name='channel' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DStringAppend'>
<arg name='dsPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<arg name='str' declared_type='char*' type='*' const='true'/>
<arg name='length' declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='Tcl_DStringAppendElement'>
<arg name='dsPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<arg name='string' declared_type='char*' type='*' const='true'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='Tcl_DStringEndSublist'>
<arg name='dsPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DStringFree'>
<arg name='dsPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DStringGetResult'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='dsPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DStringInit'>
<arg name='dsPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DStringResult'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='dsPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DStringSetLength'>
<arg name='dsPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<arg name='length' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DStringStartSublist'>
<arg name='dsPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DbCkalloc'>
<arg name='size' declared_type='unsigned int' type='I'/>
<arg name='file' declared_type='char*' type='*' const='true'/>
<arg name='line' declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='Tcl_DbCkfree'>
<arg name='ptr' declared_type='char*' type='*'/>
<arg name='file' declared_type='char*' type='*' const='true'/>
<arg name='line' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_DbCkrealloc'>
<arg name='ptr' declared_type='char*' type='*'/>
<arg name='size' declared_type='unsigned int' type='I'/>
<arg name='file' declared_type='char*' type='*' const='true'/>
<arg name='line' declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='Tcl_DbDecrRefCount'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='file' declared_type='char*' type='*' const='true'/>
<arg name='line' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DbIncrRefCount'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='file' declared_type='char*' type='*' const='true'/>
<arg name='line' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DbIsShared'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='file' declared_type='char*' type='*' const='true'/>
<arg name='line' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_DbNewBooleanObj'>
<arg name='boolValue' declared_type='int' type='i'/>
<arg name='file' declared_type='char*' type='*' const='true'/>
<arg name='line' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_DbNewByteArrayObj'>
<arg name='bytes' declared_type='unsigned char*' type='*' const='true'/>
<arg name='length' declared_type='int' type='i'/>
<arg name='file' declared_type='char*' type='*' const='true'/>
<arg name='line' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_DbNewDoubleObj'>
<arg name='doubleValue' declared_type='double' type='d'/>
<arg name='file' declared_type='char*' type='*' const='true'/>
<arg name='line' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_DbNewListObj'>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<arg name='file' declared_type='char*' type='*' const='true'/>
<arg name='line' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_DbNewLongObj'>
<arg name='longValue' declared_type='long' type='l' type64='q'/>
<arg name='file' declared_type='char*' type='*' const='true'/>
<arg name='line' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_DbNewObj'>
<arg name='file' declared_type='char*' type='*' const='true'/>
<arg name='line' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_DbNewStringObj'>
<arg name='bytes' declared_type='char*' type='*' const='true'/>
<arg name='length' declared_type='int' type='i'/>
<arg name='file' declared_type='char*' type='*' const='true'/>
<arg name='line' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_DbNewWideIntObj'>
<arg name='wideValue' declared_type='Tcl_WideInt' type='q'/>
<arg name='file' declared_type='char*' type='*' const='true'/>
<arg name='line' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_DecrRefCount'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DeleteAssocData'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DeleteChannelHandler'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_ChannelProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DeleteCloseHandler'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_CloseProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DeleteCommand'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='cmdName' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_DeleteCommandFromToken'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='command' declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_DeleteEventSource'>
<arg name='setupProc' function_pointer='true' declared_type='Tcl_EventSetupProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='checkProc' function_pointer='true' declared_type='Tcl_EventCheckProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DeleteEvents'>
<arg name='proc' function_pointer='true' declared_type='Tcl_EventDeleteProc*' type='^?'>
<arg declared_type='Tcl_Event*' type='^{Tcl_Event=^?^{Tcl_Event}}'/>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='int' type='i'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DeleteExitHandler'>
<arg name='proc' function_pointer='true' declared_type='Tcl_ExitProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DeleteFileHandler'>
<arg name='fd' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DeleteHashEntry'>
<arg name='entryPtr' declared_type='Tcl_HashEntry*' type='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][4c])}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DeleteHashTable'>
<arg name='tablePtr' declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DeleteInterp'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DeleteNamespace'>
<arg name='nsPtr' declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DeleteThreadExitHandler'>
<arg name='proc' function_pointer='true' declared_type='Tcl_ExitProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DeleteTimerHandler'>
<arg name='token' declared_type='Tcl_TimerToken' type='^{Tcl_TimerToken_=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DeleteTrace'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='trace' declared_type='Tcl_Trace' type='^{Tcl_Trace_=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DetachChannel'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='channel' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_DetachPids'>
<arg name='numPids' declared_type='int' type='i'/>
<arg name='pidPtr' declared_type='Tcl_Pid*' type='^^{Tcl_Pid_}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DiscardResult'>
<arg name='statePtr' declared_type='Tcl_SavedResult*' type='^{Tcl_SavedResult=*^?^{Tcl_Obj}*ii[201c]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DoOneEvent'>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_DoWhenIdle'>
<arg name='proc' function_pointer='true' declared_type='Tcl_IdleProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DontCallWhenDeleted'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_InterpDeleteProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_DumpActiveMemory'>
<arg name='fileName' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_DuplicateObj'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_EncodingObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_Eof'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_EofObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ErrnoId'>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_ErrnoMsg'>
<arg name='err' declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_ErrorObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_Eval'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='string' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_EvalEx'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='script' declared_type='char*' type='*' const='true'/>
<arg name='numBytes' declared_type='int' type='i'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_EvalFile'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='fileName' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_EvalObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_EvalObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_EvalObjEx'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_EvalObjv'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_EvalTokens'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='tokenPtr' declared_type='Tcl_Token*' type='^{Tcl_Token=i*ii}'/>
<arg name='count' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_EvalTokensStandard'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='tokenPtr' declared_type='Tcl_Token*' type='^{Tcl_Token=i*ii}'/>
<arg name='count' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_EventuallyFree'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='freeProc' function_pointer='true' declared_type='Tcl_FreeProc*' type='^?'>
<arg declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_ExecObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_Exit'>
<arg name='status' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_ExitObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ExitThread'>
<arg name='status' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_Export'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='nsPtr' declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg name='pattern' declared_type='char*' type='*' const='true'/>
<arg name='resetListFirst' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ExposeCommand'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='hiddenCmdToken' declared_type='char*' type='*' const='true'/>
<arg name='cmdName' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ExprBoolean'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='str' declared_type='char*' type='*' const='true'/>
<arg name='ptr' declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ExprBooleanObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='ptr' declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ExprDouble'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='str' declared_type='char*' type='*' const='true'/>
<arg name='ptr' declared_type='double*' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ExprDoubleObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='ptr' declared_type='double*' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ExprLong'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='str' declared_type='char*' type='*' const='true'/>
<arg name='ptr' declared_type='long*' type='^l' type64='^q'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ExprLongObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='ptr' declared_type='long*' type='^l' type64='^q'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ExprObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='resultPtrPtr' declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ExprObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ExprString'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='string' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ExternalToUtf'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='encoding' declared_type='Tcl_Encoding' type='^{Tcl_Encoding_=}'/>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='srcLen' declared_type='int' type='i'/>
<arg name='flags' declared_type='int' type='i'/>
<arg name='statePtr' declared_type='Tcl_EncodingState*' type='^^{Tcl_EncodingState_}'/>
<arg name='dst' declared_type='char*' type='*'/>
<arg name='dstLen' declared_type='int' type='i'/>
<arg name='srcReadPtr' declared_type='int*' type='^i'/>
<arg name='dstWrotePtr' declared_type='int*' type='^i'/>
<arg name='dstCharsPtr' declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ExternalToUtfDString'>
<arg name='encoding' declared_type='Tcl_Encoding' type='^{Tcl_Encoding_=}'/>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='srcLen' declared_type='int' type='i'/>
<arg name='dsPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='Tcl_FSAccess'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='mode' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FSChdir'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FSConvertToPathType'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FSCopyDirectory'>
<arg name='srcPathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='destPathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='errorPtr' declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FSCopyFile'>
<arg name='srcPathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='destPathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FSCreateDirectory'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FSData'>
<arg name='fsPtr' declared_type='Tcl_Filesystem*' type='^{Tcl_Filesystem=*i^{Tcl_FSVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval declared_type='ClientData' type='^v'/>
</function>
<function name='Tcl_FSDeleteFile'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FSEqualPaths'>
<arg name='firstPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='secondPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FSEvalFile'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='fileName' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FSFileAttrStrings'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='objPtrRef' declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<retval declared_type='char**' type='^*' const='true'/>
</function>
<function name='Tcl_FSFileAttrsGet'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='index' declared_type='int' type='i'/>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='objPtrRef' declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FSFileAttrsSet'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='index' declared_type='int' type='i'/>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FSFileSystemInfo'>
<arg name='pathObjPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_FSGetCwd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_FSGetFileSystemForPath'>
<arg name='pathObjPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Filesystem*' type='^{Tcl_Filesystem=*i^{Tcl_FSVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
</function>
<function name='Tcl_FSGetInternalRep'>
<arg name='pathObjPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='fsPtr' declared_type='Tcl_Filesystem*' type='^{Tcl_Filesystem=*i^{Tcl_FSVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval declared_type='ClientData' type='^v'/>
</function>
<function name='Tcl_FSGetNativePath'>
<arg name='pathObjPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_FSGetNormalizedPath'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='pathObjPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_FSGetPathType'>
<arg name='pathObjPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_PathType' type='i'/>
</function>
<function name='Tcl_FSGetTranslatedPath'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_FSGetTranslatedStringPath'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_FSJoinPath'>
<arg name='listObj' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='elements' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_FSJoinToPath'>
<arg name='basePtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_FSLink'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='toPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='linkAction' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_FSListVolumes'>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_FSLoadFile'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='sym1' declared_type='char*' type='*' const='true'/>
<arg name='sym2' declared_type='char*' type='*' const='true'/>
<arg name='proc1Ptr' declared_type='Tcl_PackageInitProc**' type='^^?'/>
<arg name='proc2Ptr' declared_type='Tcl_PackageInitProc**' type='^^?'/>
<arg name='handlePtr' declared_type='Tcl_LoadHandle*' type='^^{Tcl_LoadHandle_}'/>
<arg name='unloadProcPtr' declared_type='Tcl_FSUnloadFileProc**' type='^^?'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FSLstat'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='buf' declared_type='Tcl_StatBuf*' type='^{stat=iISSIIi{timespec=il}{timespec=il}{timespec=il}qqiIIi[2q]}' type64='^{stat=iISSIIi{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FSMatchInDirectory'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='result' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='pattern' declared_type='char*' type='*' const='true'/>
<arg name='types' declared_type='Tcl_GlobTypeData*' type='^{Tcl_GlobTypeData=ii^{Tcl_Obj}^{Tcl_Obj}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FSMountsChanged'>
<arg name='fsPtr' declared_type='Tcl_Filesystem*' type='^{Tcl_Filesystem=*i^{Tcl_FSVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_FSNewNativePath'>
<arg name='fromFilesystem' declared_type='Tcl_Filesystem*' type='^{Tcl_Filesystem=*i^{Tcl_FSVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_FSOpenFileChannel'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='modeString' declared_type='char*' type='*' const='true'/>
<arg name='permissions' declared_type='int' type='i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</function>
<function name='Tcl_FSPathSeparator'>
<arg name='pathObjPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_FSRegister'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='fsPtr' declared_type='Tcl_Filesystem*' type='^{Tcl_Filesystem=*i^{Tcl_FSVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FSRemoveDirectory'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='recursive' declared_type='int' type='i'/>
<arg name='errorPtr' declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FSRenameFile'>
<arg name='srcPathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='destPathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FSSplitPath'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='lenPtr' declared_type='int*' type='^i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_FSStat'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='buf' declared_type='Tcl_StatBuf*' type='^{stat=iISSIIi{timespec=il}{timespec=il}{timespec=il}qqiIIi[2q]}' type64='^{stat=iISSIIi{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FSUnregister'>
<arg name='fsPtr' declared_type='Tcl_Filesystem*' type='^{Tcl_Filesystem=*i^{Tcl_FSVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FSUtime'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='tval' declared_type='struct utimbuf*' type='^{utimbuf=ii}' type64='^{utimbuf=qq}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FblockedObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FconfigureObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FcopyObjCmd'>
<arg name='dummy' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FileEventObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FileObjCmd'>
<arg name='dummy' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_Finalize'>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_FinalizeNotifier'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_FinalizeThread'>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_FindCommand'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='contextNsPtr' declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
</function>
<function name='Tcl_FindExecutable'>
<arg name='argv0' declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_FindHashEntry'>
<arg name='tablePtr' declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<arg name='key' declared_type='char*' type='*' const='true'/>
<retval declared_type='Tcl_HashEntry*' type='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][4c])}'/>
</function>
<function name='Tcl_FindNamespace'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='contextNsPtr' declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
</function>
<function name='Tcl_FindNamespaceVar'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='contextNsPtr' declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='Tcl_Var' type='^{Tcl_Var_=}'/>
</function>
<function name='Tcl_FirstHashEntry'>
<arg name='tablePtr' declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<arg name='searchPtr' declared_type='Tcl_HashSearch*' type='^{Tcl_HashSearch=^{Tcl_HashTable}i^{Tcl_HashEntry}}'/>
<retval declared_type='Tcl_HashEntry*' type='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][4c])}'/>
</function>
<function name='Tcl_Flush'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FlushObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ForObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ForeachObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ForgetImport'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='nsPtr' declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg name='pattern' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_FormatObjCmd'>
<arg name='dummy' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_Free'>
<arg name='ptr' declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_FreeEncoding'>
<arg name='encoding' declared_type='Tcl_Encoding' type='^{Tcl_Encoding_=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_FreeParse'>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_FreeResult'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_GetAlias'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='slaveCmd' declared_type='char*' type='*' const='true'/>
<arg name='targetInterpPtr' declared_type='Tcl_Interp**' type='^^{Tcl_Interp}'/>
<arg name='targetCmdPtr' declared_type='char**' type='^*' const='true'/>
<arg name='argcPtr' declared_type='int*' type='^i'/>
<arg name='argvPtr' declared_type='char***' type='^^*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetAliasObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='slaveCmd' declared_type='char*' type='*' const='true'/>
<arg name='targetInterpPtr' declared_type='Tcl_Interp**' type='^^{Tcl_Interp}'/>
<arg name='targetCmdPtr' declared_type='char**' type='^*' const='true'/>
<arg name='objcPtr' declared_type='int*' type='^i'/>
<arg name='objv' declared_type='Tcl_Obj***' type='^^^{Tcl_Obj}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetAllocMutex'>
<retval declared_type='Tcl_Mutex*' type='^^{Tcl_Mutex_}'/>
</function>
<function name='Tcl_GetAssocData'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='procPtr' declared_type='Tcl_InterpDeleteProc**' type='^^?'/>
<retval declared_type='ClientData' type='^v'/>
</function>
<function name='Tcl_GetBoolean'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='str' declared_type='char*' type='*' const='true'/>
<arg name='boolPtr' declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetBooleanFromObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='boolPtr' declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetByteArrayFromObj'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='lengthPtr' declared_type='int*' type='^i'/>
<retval declared_type='unsigned char*' type='*'/>
</function>
<function name='Tcl_GetChannel'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='chanName' declared_type='char*' type='*' const='true'/>
<arg name='modePtr' declared_type='int*' type='^i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</function>
<function name='Tcl_GetChannelBufferSize'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetChannelHandle'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='direction' declared_type='int' type='i'/>
<arg name='handlePtr' declared_type='ClientData*' type='^^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetChannelInstanceData'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='ClientData' type='^v'/>
</function>
<function name='Tcl_GetChannelMode'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetChannelName'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_GetChannelNames'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetChannelNamesEx'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='pattern' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetChannelOption'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='optionName' declared_type='char*' type='*' const='true'/>
<arg name='dsPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetChannelThread'>
<arg name='channel' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='Tcl_ThreadId' type='^{Tcl_ThreadId_=}'/>
</function>
<function name='Tcl_GetChannelType'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
</function>
<function name='Tcl_GetCharLength'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetCommandFromObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
</function>
<function name='Tcl_GetCommandFullName'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='command' declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_GetCommandInfo'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='cmdName' declared_type='char*' type='*' const='true'/>
<arg name='infoPtr' declared_type='Tcl_CmdInfo*' type='^{Tcl_CmdInfo=i^?^v^?^v^?^v^{Tcl_Namespace}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetCommandInfoFromToken'>
<arg name='token' declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
<arg name='infoPtr' declared_type='Tcl_CmdInfo*' type='^{Tcl_CmdInfo=i^?^v^?^v^?^v^{Tcl_Namespace}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetCommandName'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='command' declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_GetCurrentNamespace'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
</function>
<function name='Tcl_GetCurrentThread'>
<retval declared_type='Tcl_ThreadId' type='^{Tcl_ThreadId_=}'/>
</function>
<function name='Tcl_GetCwd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='cwdPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='Tcl_GetDefaultEncodingDir'>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_GetDouble'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='str' declared_type='char*' type='*' const='true'/>
<arg name='doublePtr' declared_type='double*' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetDoubleFromObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='doublePtr' declared_type='double*' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetEncoding'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<retval declared_type='Tcl_Encoding' type='^{Tcl_Encoding_=}'/>
</function>
<function name='Tcl_GetEncodingName'>
<arg name='encoding' declared_type='Tcl_Encoding' type='^{Tcl_Encoding_=}'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_GetEncodingNames'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_GetErrno'>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetGlobalNamespace'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
</function>
<function name='Tcl_GetHostName'>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_GetIndexFromObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='tablePtr' declared_type='char**' type='^*' const='true'/>
<arg name='msg' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<arg name='indexPtr' declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetIndexFromObjStruct'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='tablePtr' declared_type='void*' type='^v' const='true'/>
<arg name='offset' declared_type='int' type='i'/>
<arg name='msg' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<arg name='indexPtr' declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetInt'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='str' declared_type='char*' type='*' const='true'/>
<arg name='intPtr' declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetIntFromObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='intPtr' declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetInterpPath'>
<arg name='askInterp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='slaveInterp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetInterpResolvers'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='resInfo' declared_type='Tcl_ResolverInfo*' type='^{Tcl_ResolverInfo=^?^?^?}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetLongFromObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='longPtr' declared_type='long*' type='^l' type64='^q'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetMaster'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
</function>
<function name='Tcl_GetMathFuncInfo'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='numArgsPtr' declared_type='int*' type='^i'/>
<arg name='argTypesPtr' declared_type='Tcl_ValueType**' type='^^i'/>
<arg name='procPtr' declared_type='Tcl_MathProc**' type='^^?'/>
<arg name='clientDataPtr' declared_type='ClientData*' type='^^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetNameOfExecutable'>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_GetNamespaceResolvers'>
<arg name='namespacePtr' declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg name='resInfo' declared_type='Tcl_ResolverInfo*' type='^{Tcl_ResolverInfo=^?^?^?}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetObjResult'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_GetObjType'>
<arg name='typeName' declared_type='char*' type='*' const='true'/>
<retval declared_type='Tcl_ObjType*' type='^{Tcl_ObjType=*^?^?^?^?}'/>
</function>
<function name='Tcl_GetOpenFile'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='str' declared_type='char*' type='*' const='true'/>
<arg name='forWriting' declared_type='int' type='i'/>
<arg name='checkUsage' declared_type='int' type='i'/>
<arg name='filePtr' declared_type='ClientData*' type='^^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetPathType'>
<arg name='path' declared_type='char*' type='*' const='true'/>
<retval declared_type='Tcl_PathType' type='i'/>
</function>
<function name='Tcl_GetRange'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='first' declared_type='int' type='i'/>
<arg name='last' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_GetRegExpFromObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='patObj' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='Tcl_RegExp' type='^{Tcl_RegExp_=}'/>
</function>
<function name='Tcl_GetServiceMode'>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetSlave'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='slaveName' declared_type='char*' type='*' const='true'/>
<retval declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
</function>
<function name='Tcl_GetStackedChannel'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</function>
<function name='Tcl_GetStdChannel'>
<arg name='type' declared_type='int' type='i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</function>
<function name='Tcl_GetString'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='Tcl_GetStringFromObj'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='lengthPtr' declared_type='int*' type='^i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='Tcl_GetStringResult'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_GetThreadData'>
<arg name='keyPtr' declared_type='Tcl_ThreadDataKey*' type='^^{Tcl_ThreadDataKey_}'/>
<arg name='size' declared_type='int' type='i'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='Tcl_GetTime'>
<arg name='timeBuf' declared_type='Tcl_Time*' type='^{Tcl_Time=ll}' type64='^{Tcl_Time=qq}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_GetTopChannel'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</function>
<function name='Tcl_GetUniChar'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='index' declared_type='int' type='i'/>
<retval declared_type='Tcl_UniChar' type='S'/>
</function>
<function name='Tcl_GetUnicode'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_UniChar*' type='^S'/>
</function>
<function name='Tcl_GetUnicodeFromObj'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='lengthPtr' declared_type='int*' type='^i'/>
<retval declared_type='Tcl_UniChar*' type='^S'/>
</function>
<function name='Tcl_GetVar'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='varName' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_GetVar2'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='part1' declared_type='char*' type='*' const='true'/>
<arg name='part2' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_GetVar2Ex'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='part1' declared_type='char*' type='*' const='true'/>
<arg name='part2' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_GetVariableFullName'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='variable' declared_type='Tcl_Var' type='^{Tcl_Var_=}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_GetVersion'>
<arg name='major' declared_type='int*' type='^i'/>
<arg name='minor' declared_type='int*' type='^i'/>
<arg name='patchLevel' declared_type='int*' type='^i'/>
<arg name='type' declared_type='int*' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_GetWideIntFromObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='widePtr' declared_type='Tcl_WideInt*' type='^q'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_Gets'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='dsPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetsObj'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GetsObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GlobObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GlobalEval'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='command' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GlobalEvalObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_GlobalObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_HashStats'>
<arg name='tablePtr' declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_HideCommand'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='cmdName' declared_type='char*' type='*' const='true'/>
<arg name='hiddenCmdToken' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_IfObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_Import'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='nsPtr' declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg name='pattern' declared_type='char*' type='*' const='true'/>
<arg name='allowOverwrite' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_IncrObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_IncrRefCount'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_InfoObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_Init'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_InitCustomHashTable'>
<arg name='tablePtr' declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<arg name='keyType' declared_type='int' type='i'/>
<arg name='typePtr' declared_type='Tcl_HashKeyType*' type='^{Tcl_HashKeyType=ii^?^?^?^?}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_InitHashTable'>
<arg name='tablePtr' declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<arg name='keyType' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_InitMemory'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_InitNotifier'>
<retval declared_type='ClientData' type='^v'/>
</function>
<function name='Tcl_InitObjHashTable'>
<arg name='tablePtr' declared_type='Tcl_HashTable*' type='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_InitStubs'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='version' declared_type='char*' type='*' const='true'/>
<arg name='exact' declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_InputBlocked'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_InputBuffered'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_InterpDeleted'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_InterpObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='argc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_InvalidateStringRep'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_IsChannelExisting'>
<arg name='channelName' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_IsChannelRegistered'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='channel' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_IsChannelShared'>
<arg name='channel' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_IsSafe'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_IsShared'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_IsStandardChannel'>
<arg name='channel' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_JoinObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_JoinPath'>
<arg name='argc' declared_type='int' type='i'/>
<arg name='argv' declared_type='char **' type='^*' const='true'/>
<arg name='resultPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='Tcl_JoinThread'>
<arg name='threadId' declared_type='Tcl_ThreadId' type='^{Tcl_ThreadId_=}'/>
<arg name='result' declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_LappendObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_LindexObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_LinkVar'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='varName' declared_type='char*' type='*' const='true'/>
<arg name='addr' declared_type='char*' type='*'/>
<arg name='type' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_LinsertObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ListMathFuncs'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='pattern' declared_type='char*' type='*' const='true'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_ListObjAppendElement'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='listPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ListObjAppendList'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='listPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='elemListPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ListObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ListObjGetElements'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='listPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='objcPtr' declared_type='int*' type='^i'/>
<arg name='objvPtr' declared_type='Tcl_Obj***' type='^^^{Tcl_Obj}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ListObjIndex'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='listPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='index' declared_type='int' type='i'/>
<arg name='objPtrPtr' declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ListObjLength'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='listPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='lengthPtr' declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ListObjReplace'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='listPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='first' declared_type='int' type='i'/>
<arg name='count' declared_type='int' type='i'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_LlengthObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_LoadObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_LogCommandInfo'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='script' declared_type='char*' type='*' const='true'/>
<arg name='command' declared_type='char*' type='*' const='true'/>
<arg name='length' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_LrangeObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_LreplaceObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_LsearchObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_LsetObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_LsortObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_Main'>
<arg name='argc' declared_type='int' type='i'/>
<arg name='argv' declared_type='char**' type='^*'/>
<arg name='appInitProc' function_pointer='true' declared_type='Tcl_AppInitProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_MakeFileChannel'>
<arg name='handle' declared_type='ClientData' type='^v'/>
<arg name='mode' declared_type='int' type='i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</function>
<function name='Tcl_MakeSafe'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_MakeTcpClientChannel'>
<arg name='tcpSocket' declared_type='ClientData' type='^v'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</function>
<function name='Tcl_Merge'>
<arg name='argc' declared_type='int' type='i'/>
<arg name='argv' declared_type='char **' type='^*' const='true'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='Tcl_MutexFinalize'>
<arg name='mutex' declared_type='Tcl_Mutex*' type='^^{Tcl_Mutex_}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_MutexLock'>
<arg name='mutexPtr' declared_type='Tcl_Mutex*' type='^^{Tcl_Mutex_}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_MutexUnlock'>
<arg name='mutexPtr' declared_type='Tcl_Mutex*' type='^^{Tcl_Mutex_}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_NamespaceObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_NewBooleanObj'>
<arg name='boolValue' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_NewByteArrayObj'>
<arg name='bytes' declared_type='unsigned char*' type='*' const='true'/>
<arg name='length' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_NewDoubleObj'>
<arg name='doubleValue' declared_type='double' type='d'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_NewIntObj'>
<arg name='intValue' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_NewListObj'>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_NewLongObj'>
<arg name='longValue' declared_type='long' type='l' type64='q'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_NewObj'>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_NewStringObj'>
<arg name='bytes' declared_type='char*' type='*' const='true'/>
<arg name='length' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_NewUnicodeObj'>
<arg name='unicode' declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg name='numChars' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_NewWideIntObj'>
<arg name='wideValue' declared_type='Tcl_WideInt' type='q'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_NextHashEntry'>
<arg name='searchPtr' declared_type='Tcl_HashSearch*' type='^{Tcl_HashSearch=^{Tcl_HashTable}i^{Tcl_HashEntry}}'/>
<retval declared_type='Tcl_HashEntry*' type='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][4c])}'/>
</function>
<function name='Tcl_NotifyChannel'>
<arg name='channel' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='mask' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_NumUtfChars'>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='len' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ObjGetVar2'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='part1Ptr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='part2Ptr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_ObjSetVar2'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='part1Ptr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='part2Ptr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='newValuePtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_OpenCommandChannel'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='argc' declared_type='int' type='i'/>
<arg name='argv' declared_type='char**' type='^*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</function>
<function name='Tcl_OpenFileChannel'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='fileName' declared_type='char*' type='*' const='true'/>
<arg name='modeString' declared_type='char*' type='*' const='true'/>
<arg name='permissions' declared_type='int' type='i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</function>
<function name='Tcl_OpenObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_OpenTcpClient'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='port' declared_type='int' type='i'/>
<arg name='address' declared_type='char*' type='*' const='true'/>
<arg name='myaddr' declared_type='char*' type='*' const='true'/>
<arg name='myport' declared_type='int' type='i'/>
<arg name='async' declared_type='int' type='i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</function>
<function name='Tcl_OpenTcpServer'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='port' declared_type='int' type='i'/>
<arg name='host' declared_type='char*' type='*' const='true'/>
<arg name='acceptProc' function_pointer='true' declared_type='Tcl_TcpAcceptProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='callbackData' declared_type='ClientData' type='^v'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</function>
<function name='Tcl_OutputBuffered'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_PackageObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_Panic' variadic='true'>
<arg name='format' declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_PanicVA'>
<arg name='format' declared_type='char*' type='*' const='true'/>
<arg name='argList' declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_ParseBraces'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='string' declared_type='char*' type='*' const='true'/>
<arg name='numBytes' declared_type='int' type='i'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='append' declared_type='int' type='i'/>
<arg name='termPtr' declared_type='char**' type='^*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ParseCommand'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='string' declared_type='char*' type='*' const='true'/>
<arg name='numBytes' declared_type='int' type='i'/>
<arg name='nested' declared_type='int' type='i'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ParseExpr'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='string' declared_type='char*' type='*' const='true'/>
<arg name='numBytes' declared_type='int' type='i'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ParseQuotedString'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='string' declared_type='char*' type='*' const='true'/>
<arg name='numBytes' declared_type='int' type='i'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='append' declared_type='int' type='i'/>
<arg name='termPtr' declared_type='char**' type='^*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ParseVar'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='str' declared_type='char*' type='*' const='true'/>
<arg name='termPtr' declared_type='char**' type='^*' const='true'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_ParseVarName'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='string' declared_type='char*' type='*' const='true'/>
<arg name='numBytes' declared_type='int' type='i'/>
<arg name='parsePtr' declared_type='Tcl_Parse*' type='^{Tcl_Parse=*i*ii^{Tcl_Token}iii**^{Tcl_Interp}*i[20{Tcl_Token=i*ii}]}'/>
<arg name='append' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_PidObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_PkgPresent'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='version' declared_type='char*' type='*' const='true'/>
<arg name='exact' declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_PkgPresentEx'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='version' declared_type='char*' type='*' const='true'/>
<arg name='exact' declared_type='int' type='i'/>
<arg name='clientDataPtr' declared_type='ClientData*' type='^^v'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_PkgProvide'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='version' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_PkgProvideEx'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='version' declared_type='char*' type='*' const='true'/>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_PkgRequire'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='version' declared_type='char*' type='*' const='true'/>
<arg name='exact' declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_PkgRequireEx'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='version' declared_type='char*' type='*' const='true'/>
<arg name='exact' declared_type='int' type='i'/>
<arg name='clientDataPtr' declared_type='ClientData*' type='^^v'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_PopCallFrame'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_PosixError'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_Preserve'>
<arg name='data' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_PrintDouble'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='value' declared_type='double' type='d'/>
<arg name='dst' declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_ProcObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_PushCallFrame'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='framePtr' declared_type='Tcl_CallFrame*' type='^{Tcl_CallFrame=^{Tcl_Namespace}ii***i**i*}'/>
<arg name='nsPtr' declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg name='isProcCallFrame' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_PutEnv'>
<arg name='string' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_PutsObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_PwdObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_QueueEvent'>
<arg name='evPtr' declared_type='Tcl_Event*' type='^{Tcl_Event=^?^{Tcl_Event}}'/>
<arg name='position' declared_type='Tcl_QueuePosition' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_Read'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='bufPtr' declared_type='char*' type='*'/>
<arg name='toRead' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ReadChars'>
<arg name='channel' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='charsToRead' declared_type='int' type='i'/>
<arg name='appendFlag' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ReadObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ReadRaw'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='dst' declared_type='char*' type='*'/>
<arg name='bytesToRead' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_Realloc'>
<arg name='ptr' declared_type='char*' type='*'/>
<arg name='size' declared_type='unsigned int' type='I'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='Tcl_ReapDetachedProcs'>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_RecordAndEval'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='cmd' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_RecordAndEvalObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='cmdPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_RegExpCompile'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='string' declared_type='char*' type='*' const='true'/>
<retval declared_type='Tcl_RegExp' type='^{Tcl_RegExp_=}'/>
</function>
<function name='Tcl_RegExpExec'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='regexp' declared_type='Tcl_RegExp' type='^{Tcl_RegExp_=}'/>
<arg name='str' declared_type='char*' type='*' const='true'/>
<arg name='start' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_RegExpExecObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='regexp' declared_type='Tcl_RegExp' type='^{Tcl_RegExp_=}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='offset' declared_type='int' type='i'/>
<arg name='nmatches' declared_type='int' type='i'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_RegExpGetInfo'>
<arg name='regexp' declared_type='Tcl_RegExp' type='^{Tcl_RegExp_=}'/>
<arg name='infoPtr' declared_type='Tcl_RegExpInfo*' type='^{Tcl_RegExpInfo=i^{Tcl_RegExpIndices}ll}' type64='^{Tcl_RegExpInfo=i^{Tcl_RegExpIndices}qq}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_RegExpMatch'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='str' declared_type='char*' type='*' const='true'/>
<arg name='pattern' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_RegExpMatchObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='stringObj' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='patternObj' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_RegExpRange'>
<arg name='regexp' declared_type='Tcl_RegExp' type='^{Tcl_RegExp_=}'/>
<arg name='index' declared_type='int' type='i'/>
<arg name='startPtr' declared_type='char**' type='^*' const='true'/>
<arg name='endPtr' declared_type='char**' type='^*' const='true'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_RegexpObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_RegisterChannel'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_RegisterObjType'>
<arg name='typePtr' declared_type='Tcl_ObjType*' type='^{Tcl_ObjType=*^?^?^?^?}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_RegsubObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_Release'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_RemoveInterpResolvers'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_RenameObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ResetResult'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_RestoreResult'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='statePtr' declared_type='Tcl_SavedResult*' type='^{Tcl_SavedResult=*^?^{Tcl_Obj}*ii[201c]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_ReturnObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_SaveResult'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='statePtr' declared_type='Tcl_SavedResult*' type='^{Tcl_SavedResult=*^?^{Tcl_Obj}*ii[201c]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_ScanCountedElement'>
<arg name='str' declared_type='char*' type='*' const='true'/>
<arg name='length' declared_type='int' type='i'/>
<arg name='flagPtr' declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ScanElement'>
<arg name='str' declared_type='char*' type='*' const='true'/>
<arg name='flagPtr' declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ScanObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_Seek'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='offset' declared_type='Tcl_WideInt' type='q'/>
<arg name='mode' declared_type='int' type='i'/>
<retval declared_type='Tcl_WideInt' type='q'/>
</function>
<function name='Tcl_SeekObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_SeekOld'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='offset' declared_type='int' type='i'/>
<arg name='mode' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ServiceAll'>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ServiceEvent'>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ServiceModeHook'>
<arg name='mode' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetAssocData'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_InterpDeleteProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetBooleanObj'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='boolValue' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetByteArrayLength'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='length' declared_type='int' type='i'/>
<retval declared_type='unsigned char*' type='*'/>
</function>
<function name='Tcl_SetByteArrayObj'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='bytes' declared_type='unsigned char*' type='*' const='true'/>
<arg name='length' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetChannelBufferSize'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='sz' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetChannelOption'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='optionName' declared_type='char*' type='*' const='true'/>
<arg name='newValue' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_SetCommandInfo'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='cmdName' declared_type='char*' type='*' const='true'/>
<arg name='infoPtr' declared_type='Tcl_CmdInfo*' type='^{Tcl_CmdInfo=i^?^v^?^v^?^v^{Tcl_Namespace}}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_SetCommandInfoFromToken'>
<arg name='token' declared_type='Tcl_Command' type='^{Tcl_Command_=}'/>
<arg name='infoPtr' declared_type='Tcl_CmdInfo*' type='^{Tcl_CmdInfo=i^?^v^?^v^?^v^{Tcl_Namespace}}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_SetDefaultEncodingDir'>
<arg name='path' declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetDoubleObj'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='doubleValue' declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetErrno'>
<arg name='err' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetErrorCode' variadic='true'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetErrorCodeVA'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='argList' declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetIntObj'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='intValue' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetListObj'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetLongObj'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='longValue' declared_type='long' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetMainLoop'>
<arg name='proc' function_pointer='true' declared_type='Tcl_MainLoopProc*' type='^?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetMaxBlockTime'>
<arg name='timePtr' declared_type='Tcl_Time*' type='^{Tcl_Time=ll}' type64='^{Tcl_Time=qq}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetNamespaceResolvers'>
<arg name='namespacePtr' declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg name='cmdProc' function_pointer='true' declared_type='Tcl_ResolveCmdProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Command*' type='^^{Tcl_Command_}'/>
<retval declared_type='int' type='i'/>
</arg>
<arg name='varProc' function_pointer='true' declared_type='Tcl_ResolveVarProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Var*' type='^^{Tcl_Var_}'/>
<retval declared_type='int' type='i'/>
</arg>
<arg name='compiledVarProc' function_pointer='true' declared_type='Tcl_ResolveCompiledVarProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Tcl_Namespace*' type='^{Tcl_Namespace=**^v^?^{Tcl_Namespace}}'/>
<arg declared_type='Tcl_ResolvedVarInfo**' type='^^{Tcl_ResolvedVarInfo}'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetNotifier'>
<arg name='notifierProcPtr' declared_type='Tcl_NotifierProcs*' type='^{Tcl_NotifierProcs=^?^?^?^?^?^?^?^?}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_SetObjErrorCode'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='errorObjPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetObjLength'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='length' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetObjResult'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='resultObjPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetPanicProc'>
<arg name='panicProc' function_pointer='true' declared_type='Tcl_PanicProc*' type='^?'>
<arg declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetRecursionLimit'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='depth' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_SetResult'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='str' declared_type='char*' type='*'/>
<arg name='freeProc' function_pointer='true' declared_type='Tcl_FreeProc*' type='^?'>
<arg declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetServiceMode'>
<arg name='mode' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_SetStdChannel'>
<arg name='channel' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='type' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetStringObj'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='bytes' declared_type='char*' type='*' const='true'/>
<arg name='length' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetSystemEncoding'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_SetTimer'>
<arg name='timePtr' declared_type='Tcl_Time*' type='^{Tcl_Time=ll}' type64='^{Tcl_Time=qq}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetUnicodeObj'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='unicode' declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg name='numChars' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SetVar'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='varName' declared_type='char*' type='*' const='true'/>
<arg name='newValue' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_SetVar2'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='part1' declared_type='char*' type='*' const='true'/>
<arg name='part2' declared_type='char*' type='*' const='true'/>
<arg name='newValue' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_SetVar2Ex'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='part1' declared_type='char*' type='*' const='true'/>
<arg name='part2' declared_type='char*' type='*' const='true'/>
<arg name='newValuePtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_SetWideIntObj'>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='wideValue' declared_type='Tcl_WideInt' type='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SignalId'>
<arg name='sig' declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_SignalMsg'>
<arg name='sig' declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_Sleep'>
<arg name='ms' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SocketObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_SourceObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_SourceRCFile'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SpliceChannel'>
<arg name='channel' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_SplitList'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='listStr' declared_type='char*' type='*' const='true'/>
<arg name='argcPtr' declared_type='int*' type='^i'/>
<arg name='argvPtr' declared_type='char***' type='^^*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_SplitObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_SplitPath'>
<arg name='path' declared_type='char*' type='*' const='true'/>
<arg name='argcPtr' declared_type='int*' type='^i'/>
<arg name='argvPtr' declared_type='char***' type='^^*' const='true'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_StackChannel'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='typePtr' declared_type='Tcl_ChannelType*' type='^{Tcl_ChannelType=*^{Tcl_ChannelTypeVersion_}^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg name='instanceData' declared_type='ClientData' type='^v'/>
<arg name='mask' declared_type='int' type='i'/>
<arg name='prevChan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</function>
<function name='Tcl_Stat'>
<arg name='path' declared_type='char*' type='*' const='true'/>
<arg name='bufPtr' declared_type='struct stat*' type='^{stat=iISSIIi{timespec=il}{timespec=il}{timespec=il}qqiIIi[2q]}' type64='^{stat=iISSIIi{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_StaticPackage'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='pkgName' declared_type='char*' type='*' const='true'/>
<arg name='initProc' function_pointer='true' declared_type='Tcl_PackageInitProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</arg>
<arg name='safeInitProc' function_pointer='true' declared_type='Tcl_PackageInitProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_StringCaseMatch'>
<arg name='str' declared_type='char*' type='*' const='true'/>
<arg name='pattern' declared_type='char*' type='*' const='true'/>
<arg name='nocase' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_StringMatch'>
<arg name='str' declared_type='char*' type='*' const='true'/>
<arg name='pattern' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_StringObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_SubstObj'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='Tcl_SubstObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_SwitchObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_Tell'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='Tcl_WideInt' type='q'/>
</function>
<function name='Tcl_TellObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_TellOld'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ThreadAlert'>
<arg name='threadId' declared_type='Tcl_ThreadId' type='^{Tcl_ThreadId_=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_ThreadQueueEvent'>
<arg name='threadId' declared_type='Tcl_ThreadId' type='^{Tcl_ThreadId_=}'/>
<arg name='evPtr' declared_type='Tcl_Event*' type='^{Tcl_Event=^?^{Tcl_Event}}'/>
<arg name='position' declared_type='Tcl_QueuePosition' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_TimeObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_TraceCommand'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='varName' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_CommandTraceProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_TraceObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_TraceVar'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='varName' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_VarTraceProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_TraceVar2'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='part1' declared_type='char*' type='*' const='true'/>
<arg name='part2' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_VarTraceProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_TranslateFileName'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='bufferPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='Tcl_Ungets'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='str' declared_type='char*' type='*' const='true'/>
<arg name='len' declared_type='int' type='i'/>
<arg name='atHead' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UniCharAtIndex'>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='index' declared_type='int' type='i'/>
<retval declared_type='Tcl_UniChar' type='S'/>
</function>
<function name='Tcl_UniCharCaseMatch'>
<arg name='ustr' declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg name='pattern' declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg name='nocase' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UniCharIsAlnum'>
<arg name='ch' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UniCharIsAlpha'>
<arg name='ch' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UniCharIsControl'>
<arg name='ch' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UniCharIsDigit'>
<arg name='ch' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UniCharIsGraph'>
<arg name='ch' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UniCharIsLower'>
<arg name='ch' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UniCharIsPrint'>
<arg name='ch' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UniCharIsPunct'>
<arg name='ch' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UniCharIsSpace'>
<arg name='ch' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UniCharIsUpper'>
<arg name='ch' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UniCharIsWordChar'>
<arg name='ch' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UniCharLen'>
<arg name='str' declared_type='Tcl_UniChar*' type='^S' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UniCharNcasecmp'>
<arg name='cs' declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg name='ct' declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg name='n' declared_type='unsigned long' type='L' type64='Q'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UniCharNcmp'>
<arg name='cs' declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg name='ct' declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg name='n' declared_type='unsigned long' type='L' type64='Q'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UniCharToLower'>
<arg name='ch' declared_type='int' type='i'/>
<retval declared_type='Tcl_UniChar' type='S'/>
</function>
<function name='Tcl_UniCharToTitle'>
<arg name='ch' declared_type='int' type='i'/>
<retval declared_type='Tcl_UniChar' type='S'/>
</function>
<function name='Tcl_UniCharToUpper'>
<arg name='ch' declared_type='int' type='i'/>
<retval declared_type='Tcl_UniChar' type='S'/>
</function>
<function name='Tcl_UniCharToUtf'>
<arg name='ch' declared_type='int' type='i'/>
<arg name='buf' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UniCharToUtfDString'>
<arg name='string' declared_type='Tcl_UniChar*' type='^S' const='true'/>
<arg name='numChars' declared_type='int' type='i'/>
<arg name='dsPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='Tcl_UnlinkVar'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='varName' declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_UnregisterChannel'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UnsetObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UnsetVar'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='varName' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UnsetVar2'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='part1' declared_type='char*' type='*' const='true'/>
<arg name='part2' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UnstackChannel'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UntraceCommand'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='varName' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_CommandTraceProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_UntraceVar'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='varName' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_VarTraceProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_UntraceVar2'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='part1' declared_type='char*' type='*' const='true'/>
<arg name='part2' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_VarTraceProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_UpVar'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='frameName' declared_type='char*' type='*' const='true'/>
<arg name='varName' declared_type='char*' type='*' const='true'/>
<arg name='localName' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UpVar2'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='frameName' declared_type='char*' type='*' const='true'/>
<arg name='part1' declared_type='char*' type='*' const='true'/>
<arg name='part2' declared_type='char*' type='*' const='true'/>
<arg name='localName' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UpdateLinkedVar'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='varName' declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_UpdateObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UplevelObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UpvarObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UtfAtIndex'>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='index' declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_UtfBackslash'>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='readPtr' declared_type='int*' type='^i'/>
<arg name='dst' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UtfCharComplete'>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='len' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UtfFindFirst'>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='ch' declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_UtfFindLast'>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='ch' declared_type='int' type='i'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_UtfNcasecmp'>
<arg name='s1' declared_type='char*' type='*' const='true'/>
<arg name='s2' declared_type='char*' type='*' const='true'/>
<arg name='n' declared_type='unsigned long' type='L' type64='Q'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UtfNcmp'>
<arg name='s1' declared_type='char*' type='*' const='true'/>
<arg name='s2' declared_type='char*' type='*' const='true'/>
<arg name='n' declared_type='unsigned long' type='L' type64='Q'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UtfNext'>
<arg name='src' declared_type='char*' type='*' const='true'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_UtfPrev'>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='start' declared_type='char*' type='*' const='true'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='Tcl_UtfToExternal'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='encoding' declared_type='Tcl_Encoding' type='^{Tcl_Encoding_=}'/>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='srcLen' declared_type='int' type='i'/>
<arg name='flags' declared_type='int' type='i'/>
<arg name='statePtr' declared_type='Tcl_EncodingState*' type='^^{Tcl_EncodingState_}'/>
<arg name='dst' declared_type='char*' type='*'/>
<arg name='dstLen' declared_type='int' type='i'/>
<arg name='srcReadPtr' declared_type='int*' type='^i'/>
<arg name='dstWrotePtr' declared_type='int*' type='^i'/>
<arg name='dstCharsPtr' declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UtfToExternalDString'>
<arg name='encoding' declared_type='Tcl_Encoding' type='^{Tcl_Encoding_=}'/>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='srcLen' declared_type='int' type='i'/>
<arg name='dsPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='Tcl_UtfToLower'>
<arg name='src' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UtfToTitle'>
<arg name='src' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UtfToUniChar'>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='chPtr' declared_type='Tcl_UniChar*' type='^S'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_UtfToUniCharDString'>
<arg name='string' declared_type='char*' type='*' const='true'/>
<arg name='length' declared_type='int' type='i'/>
<arg name='dsPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='Tcl_UniChar*' type='^S'/>
</function>
<function name='Tcl_UtfToUpper'>
<arg name='src' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_ValidateAllMemory'>
<arg name='file' declared_type='char*' type='*' const='true'/>
<arg name='line' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Tcl_VarEval' variadic='true'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_VarEvalVA'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='argList' declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_VarTraceInfo'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='varName' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<arg name='procPtr' function_pointer='true' declared_type='Tcl_VarTraceProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</arg>
<arg name='prevClientData' declared_type='ClientData' type='^v'/>
<retval declared_type='ClientData' type='^v'/>
</function>
<function name='Tcl_VarTraceInfo2'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='part1' declared_type='char*' type='*' const='true'/>
<arg name='part2' declared_type='char*' type='*' const='true'/>
<arg name='flags' declared_type='int' type='i'/>
<arg name='procPtr' function_pointer='true' declared_type='Tcl_VarTraceProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</arg>
<arg name='prevClientData' declared_type='ClientData' type='^v'/>
<retval declared_type='ClientData' type='^v'/>
</function>
<function name='Tcl_VariableObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_VwaitObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_WaitForEvent'>
<arg name='timePtr' declared_type='Tcl_Time*' type='^{Tcl_Time=ll}' type64='^{Tcl_Time=qq}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_WaitPid'>
<arg name='pid' declared_type='Tcl_Pid' type='^{Tcl_Pid_=}'/>
<arg name='statPtr' declared_type='int*' type='^i'/>
<arg name='options' declared_type='int' type='i'/>
<retval declared_type='Tcl_Pid' type='^{Tcl_Pid_=}'/>
</function>
<function name='Tcl_WhileObjCmd'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_Write'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='s' declared_type='char*' type='*' const='true'/>
<arg name='slen' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_WriteChars'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='srcLen' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_WriteObj'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='objPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_WriteRaw'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='src' declared_type='char*' type='*' const='true'/>
<arg name='srcLen' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Tcl_WrongNumArgs'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='objc' declared_type='int' type='i'/>
<arg name='objv' declared_type='Tcl_Obj **' type='^^{Tcl_Obj}' const='true'/>
<arg name='message' declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpAlloc'>
<arg name='size' declared_type='unsigned int' type='I'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='TclpCheckStackSpace'>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpCloseFile'>
<arg name='file' declared_type='TclFile' type='^{TclFile_=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpCreateCommandChannel'>
<arg name='readFile' declared_type='TclFile' type='^{TclFile_=}'/>
<arg name='writeFile' declared_type='TclFile' type='^{TclFile_=}'/>
<arg name='errorFile' declared_type='TclFile' type='^{TclFile_=}'/>
<arg name='numPids' declared_type='int' type='i'/>
<arg name='pidPtr' declared_type='Tcl_Pid*' type='^^{Tcl_Pid_}'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</function>
<function name='TclpCreatePipe'>
<arg name='readPipe' declared_type='TclFile*' type='^^{TclFile_}'/>
<arg name='writePipe' declared_type='TclFile*' type='^^{TclFile_}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpCreateProcess'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='argc' declared_type='int' type='i'/>
<arg name='argv' declared_type='char**' type='^*' const='true'/>
<arg name='inputFile' declared_type='TclFile' type='^{TclFile_=}'/>
<arg name='outputFile' declared_type='TclFile' type='^{TclFile_=}'/>
<arg name='errorFile' declared_type='TclFile' type='^{TclFile_=}'/>
<arg name='pidPtr' declared_type='Tcl_Pid*' type='^^{Tcl_Pid_}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpCreateTempFile'>
<arg name='contents' declared_type='char*' type='*' const='true'/>
<retval declared_type='TclFile' type='^{TclFile_=}'/>
</function>
<function name='TclpCutFileChannel'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpDeleteFile'>
<arg name='path' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpDlopen'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='loadHandle' declared_type='Tcl_LoadHandle*' type='^^{Tcl_LoadHandle_}'/>
<arg name='unloadProcPtr' declared_type='Tcl_FSUnloadFileProc**' type='^^?'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpFilesystemPathType'>
<arg name='pathObjPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='TclpFinalizeCondition'>
<arg name='condPtr' declared_type='Tcl_Condition*' type='^^{Tcl_Condition_}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpFinalizeMutex'>
<arg name='mutexPtr' declared_type='Tcl_Mutex*' type='^^{Tcl_Mutex_}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpFinalizeThreadData'>
<arg name='keyPtr' declared_type='Tcl_ThreadDataKey*' type='^^{Tcl_ThreadDataKey_}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpFinalizeThreadDataKey'>
<arg name='keyPtr' declared_type='Tcl_ThreadDataKey*' type='^^{Tcl_ThreadDataKey_}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpFindExecutable'>
<arg name='argv0' declared_type='char*' type='*' const='true'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='TclpFindSymbol'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='loadHandle' declared_type='Tcl_LoadHandle' type='^{Tcl_LoadHandle_=}'/>
<arg name='symbol' declared_type='char*' type='*' const='true'/>
<retval function_pointer='true' declared_type='Tcl_PackageInitProc*' type='^?'>
<arg declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</retval>
</function>
<function name='TclpFindVariable'>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='lengthPtr' declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpFree'>
<arg name='ptr' declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpGetClicks'>
<retval declared_type='unsigned long' type='L' type64='Q'/>
</function>
<function name='TclpGetCwd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='cwdPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='TclpGetDate'>
<arg name='time' declared_type='TclpTime_t' type='^{TclpTime_t_=}'/>
<arg name='useGMT' declared_type='int' type='i'/>
<retval declared_type='struct tm*' type='^{tm=iiiiiiiiil*}' type64='^{tm=iiiiiiiiiq*}'/>
</function>
<function name='TclpGetDefaultStdChannel'>
<arg name='type' declared_type='int' type='i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</function>
<function name='TclpGetNativePathType'>
<arg name='pathObjPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='driveNameLengthPtr' declared_type='int*' type='^i'/>
<arg name='driveNameRef' declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<retval declared_type='Tcl_PathType' type='i'/>
</function>
<function name='TclpGetSeconds'>
<retval declared_type='unsigned long' type='L' type64='Q'/>
</function>
<function name='TclpGetTime'>
<arg name='time' declared_type='Tcl_Time*' type='^{Tcl_Time=ll}' type64='^{Tcl_Time=qq}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpGetTimeZone'>
<arg name='time' declared_type='unsigned long' type='L' type64='Q'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpGetUserHome'>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='bufferPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='TclpGmtime'>
<arg name='clock' declared_type='TclpTime_t' type='^{TclpTime_t_=}'/>
<retval declared_type='struct tm*' type='^{tm=iiiiiiiiil*}' type64='^{tm=iiiiiiiiiq*}'/>
</function>
<function name='TclpGmtime_unix'>
<arg name='clock' declared_type='TclpTime_t' type='^{TclpTime_t_=}'/>
<retval declared_type='struct tm*' type='^{tm=iiiiiiiiil*}' type64='^{tm=iiiiiiiiiq*}'/>
</function>
<function name='TclpHasSockets'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpInetNtoa'>
<arg name='addr' declared_type='struct in_addr' type='{in_addr=}'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='TclpInitLibraryPath'>
<arg name='argv0' declared_type='char*' type='*' const='true'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpInitLock'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpInitPlatform'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpInitUnlock'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpLoadFile'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='sym1' declared_type='char*' type='*' const='true'/>
<arg name='sym2' declared_type='char*' type='*' const='true'/>
<arg name='proc1Ptr' declared_type='Tcl_PackageInitProc**' type='^^?'/>
<arg name='proc2Ptr' declared_type='Tcl_PackageInitProc**' type='^^?'/>
<arg name='clientDataPtr' declared_type='ClientData*' type='^^v'/>
<arg name='unloadProcPtr' declared_type='Tcl_FSUnloadFileProc**' type='^^?'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpLocaltime'>
<arg name='clock' declared_type='TclpTime_t' type='^{TclpTime_t_=}'/>
<retval declared_type='struct tm*' type='^{tm=iiiiiiiiil*}' type64='^{tm=iiiiiiiiiq*}'/>
</function>
<function name='TclpLocaltime_unix'>
<arg name='clock' declared_type='TclpTime_t' type='^{TclpTime_t_=}'/>
<retval declared_type='struct tm*' type='^{tm=iiiiiiiiil*}' type64='^{tm=iiiiiiiiiq*}'/>
</function>
<function name='TclpMakeFile'>
<arg name='channel' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<arg name='direction' declared_type='int' type='i'/>
<retval declared_type='TclFile' type='^{TclFile_=}'/>
</function>
<function name='TclpMasterLock'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpMasterUnlock'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpMatchFiles'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='separators' declared_type='char*' type='*'/>
<arg name='dirPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<arg name='pattern' declared_type='char*' type='*'/>
<arg name='tail' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpMatchInDirectory'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='resultPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='pattern' declared_type='char*' type='*' const='true'/>
<arg name='types' declared_type='Tcl_GlobTypeData*' type='^{Tcl_GlobTypeData=ii^{Tcl_Obj}^{Tcl_Obj}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpNativeJoinPath'>
<arg name='prefix' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='joining' declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpNativeSplitPath'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='lenPtr' declared_type='int*' type='^i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='TclpNativeToNormalized'>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='TclpObjAccess'>
<arg name='filename' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='mode' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpObjChdir'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpObjCopyDirectory'>
<arg name='srcPathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='destPathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='errorPtr' declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpObjCopyFile'>
<arg name='srcPathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='destPathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpObjCreateDirectory'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpObjDeleteFile'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpObjGetCwd'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='TclpObjLink'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='toPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='linkType' declared_type='int' type='i'/>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='TclpObjListVolumes'>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='TclpObjLstat'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='buf' declared_type='Tcl_StatBuf*' type='^{stat=iISSIIi{timespec=il}{timespec=il}{timespec=il}qqiIIi[2q]}' type64='^{stat=iISSIIi{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpObjNormalizePath'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='nextCheckpoint' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpObjRemoveDirectory'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='recursive' declared_type='int' type='i'/>
<arg name='errorPtr' declared_type='Tcl_Obj**' type='^^{Tcl_Obj}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpObjRenameFile'>
<arg name='srcPathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='destPathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpObjStat'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='buf' declared_type='Tcl_StatBuf*' type='^{stat=iISSIIi{timespec=il}{timespec=il}{timespec=il}qqiIIi[2q]}' type64='^{stat=iISSIIi{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpOpenFile'>
<arg name='fname' declared_type='char*' type='*' const='true'/>
<arg name='mode' declared_type='int' type='i'/>
<retval declared_type='TclFile' type='^{TclFile_=}'/>
</function>
<function name='TclpOpenFileChannel'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='mode' declared_type='int' type='i'/>
<arg name='permissions' declared_type='int' type='i'/>
<retval declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
</function>
<function name='TclpPanic' variadic='true'>
<arg name='format' declared_type='char*' type='*' const='true'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpReaddir'>
<arg name='dir' declared_type='int*' type='^i'/>
<retval declared_type='int*' type='^i'/>
</function>
<function name='TclpReadlink'>
<arg name='fileName' declared_type='char*' type='*' const='true'/>
<arg name='linkPtr' declared_type='Tcl_DString*' type='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='TclpRealloc'>
<arg name='ptr' declared_type='char*' type='*'/>
<arg name='size' declared_type='unsigned int' type='I'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='TclpReleaseFile'>
<arg name='file' declared_type='TclFile' type='^{TclFile_=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpSetInitialEncodings'>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpSetVariables'>
<arg name='interp' declared_type='Tcl_Interp*' type='^{Tcl_Interp=*^?i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpSpliceFileChannel'>
<arg name='chan' declared_type='Tcl_Channel' type='^{Tcl_Channel_=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpStrftime'>
<arg name='s' declared_type='char*' type='*'/>
<arg name='maxsize' declared_type='size_t' type='L' type64='Q'/>
<arg name='format' declared_type='char*' type='*' const='true'/>
<arg name='t' declared_type='struct tm*' type='^{tm=iiiiiiiiil*}' type64='^{tm=iiiiiiiiiq*}' const='true'/>
<arg name='useGMT' declared_type='int' type='i'/>
<retval declared_type='size_t' type='L' type64='Q'/>
</function>
<function name='TclpTempFileName'>
<retval declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
</function>
<function name='TclpThreadCreate'>
<arg name='idPtr' declared_type='Tcl_ThreadId*' type='^^{Tcl_ThreadId_}'/>
<arg name='proc' function_pointer='true' declared_type='Tcl_ThreadCreateProc*' type='^?'>
<arg declared_type='ClientData' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='clientData' declared_type='ClientData' type='^v'/>
<arg name='stackSize' declared_type='int' type='i'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpThreadDataKeyGet'>
<arg name='keyPtr' declared_type='Tcl_ThreadDataKey*' type='^^{Tcl_ThreadDataKey_}'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='TclpThreadDataKeyInit'>
<arg name='keyPtr' declared_type='Tcl_ThreadDataKey*' type='^^{Tcl_ThreadDataKey_}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpThreadDataKeySet'>
<arg name='keyPtr' declared_type='Tcl_ThreadDataKey*' type='^^{Tcl_ThreadDataKey_}'/>
<arg name='data' declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpThreadExit'>
<arg name='status' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpUnloadFile'>
<arg name='loadHandle' declared_type='Tcl_LoadHandle' type='^{Tcl_LoadHandle_=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TclpUtfNcmp2'>
<arg name='s1' declared_type='char*' type='*' const='true'/>
<arg name='s2' declared_type='char*' type='*' const='true'/>
<arg name='n' declared_type='unsigned long' type='L' type64='Q'/>
<retval declared_type='int' type='i'/>
</function>
<function name='TclpUtime'>
<arg name='pathPtr' declared_type='Tcl_Obj*' type='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=ld^vq{?=^v^v})}' type64='^{Tcl_Obj=i*i^{Tcl_ObjType=*^?^?^?^?}(?=qd^vq{?=^v^v})}'/>
<arg name='tval' declared_type='struct utimbuf*' type='^{utimbuf=ii}' type64='^{utimbuf=qq}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='strtod'>
<arg declared_type='char*' type='*' const='true'/>
<arg declared_type='char**' type='^*'/>
<retval declared_type='double' type='d'/>
</function>
<function_alias name='TclOSlstat' original='lstat'/>
<function_alias name='TclOSopen' original='open'/>
<function_alias name='TclOSreaddir' original='readdir'/>
<function_alias name='TclOSreaddir_r' original='readdir_r'/>
<function_alias name='TclOSseek' original='lseek'/>
<function_alias name='TclOSstat' original='stat'/>
<function_alias name='TclUniCharNcmp' original='Tcl_UniCharNcmp'/>
<function_alias name='Tcl_Ckalloc' original='Tcl_Alloc'/>
<function_alias name='Tcl_Ckfree' original='Tcl_Free'/>
<function_alias name='Tcl_Ckrealloc' original='Tcl_Realloc'/>
<function_alias name='Tcl_DStringTrunc' original='Tcl_DStringSetLength'/>
<function_alias name='Tcl_Return' original='Tcl_SetResult'/>
<function_alias name='Tcl_TildeSubst' original='Tcl_TranslateFileName'/>
<function_alias name='TclpExit' original='exit'/>
<function_alias name='panic' original='Tcl_Panic'/>
<function_alias name='panicVA' original='Tcl_PanicVA'/>
</signatures>
