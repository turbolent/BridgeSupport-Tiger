<?xml version='1.0'?>
<signatures version='1.0'>
  <depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
  <depends_on path='/System/Library/Frameworks/IOKit.framework'/>
  <depends_on path='/System/Library/Frameworks/Security.framework'/>
  <cftype name='DAApprovalSessionRef' gettypeid_func='DAApprovalSessionGetTypeID' type='^{__DAApprovalSession=}'/>
  <cftype name='DADiskRef' gettypeid_func='DADiskGetTypeID' type='^{__DADisk=}'/>
  <cftype name='DADissenterRef' type='^{__DADissenter=}'/>
  <cftype name='DASessionRef' gettypeid_func='DASessionGetTypeID' type='^{__DASession=}'/>
  <constant name='kDADiskDescriptionBusNameKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionBusPathKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionDeviceGUIDKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionDeviceInternalKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionDeviceModelKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionDevicePathKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionDeviceProtocolKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionDeviceRevisionKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionDeviceUnitKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionDeviceVendorKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionMatchMediaUnformatted' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
  <constant name='kDADiskDescriptionMatchMediaWhole' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
  <constant name='kDADiskDescriptionMatchVolumeMountable' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
  <constant name='kDADiskDescriptionMatchVolumeUnrecognized' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
  <constant name='kDADiskDescriptionMediaBSDMajorKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionMediaBSDMinorKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionMediaBSDNameKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionMediaBSDUnitKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionMediaBlockSizeKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionMediaContentKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionMediaEjectableKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionMediaIconKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionMediaKindKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionMediaLeafKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionMediaNameKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionMediaPathKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionMediaRemovableKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionMediaSizeKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionMediaTypeKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionMediaWholeKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionMediaWritableKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionVolumeKindKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionVolumeMountableKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionVolumeNameKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionVolumeNetworkKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionVolumePathKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionVolumeUUIDKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kDADiskDescriptionWatchVolumeName' declared_type='CFArrayRef' type='^{__CFArray=}'/>
  <constant name='kDADiskDescriptionWatchVolumePath' declared_type='CFArrayRef' type='^{__CFArray=}'/>
  <enum name='err_local_diskarbitration' value='14286848'/>
  <enum name='kDADiskClaimOptionDefault' value='0'/>
  <enum name='kDADiskEjectOptionDefault' value='0'/>
  <enum name='kDADiskMountOptionDefault' value='0'/>
  <enum name='kDADiskMountOptionWhole' value='1'/>
  <enum name='kDADiskOptionDefault' value='0'/>
  <enum name='kDADiskOptionEjectUponLogout' value='1'/>
  <enum name='kDADiskOptionMountAutomatic' value='16'/>
  <enum name='kDADiskOptionMountAutomaticNoDefer' value='32'/>
  <enum name='kDADiskOptionPrivate' value='256'/>
  <enum name='kDADiskRenameOptionDefault' value='0'/>
  <enum name='kDADiskUnmountOptionDefault' value='0'/>
  <enum name='kDADiskUnmountOptionForce' value='524288'/>
  <enum name='kDADiskUnmountOptionWhole' value='1'/>
  <enum name='kDAReturnBadArgument' value='-119930877'/>
  <enum name='kDAReturnBusy' value='-119930878'/>
  <enum name='kDAReturnError' value='-119930879'/>
  <enum name='kDAReturnExclusiveAccess' value='-119930876'/>
  <enum name='kDAReturnNoResources' value='-119930875'/>
  <enum name='kDAReturnNotFound' value='-119930874'/>
  <enum name='kDAReturnNotMounted' value='-119930873'/>
  <enum name='kDAReturnNotPermitted' value='-119930872'/>
  <enum name='kDAReturnNotPrivileged' value='-119930871'/>
  <enum name='kDAReturnNotReady' value='-119930870'/>
  <enum name='kDAReturnNotWritable' value='-119930869'/>
  <enum name='kDAReturnSuccess' value='0'/>
  <enum name='kDAReturnUnsupported' value='-119930868'/>
  <function name='DAApprovalSessionCreate'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <retval declared_type='DAApprovalSessionRef' already_retained='true' type='^{__DAApprovalSession=}'/>
  </function>
  <function name='DAApprovalSessionGetTypeID'>
    <retval declared_type='CFTypeID' type='L' type64='I'/>
  </function>
  <function name='DAApprovalSessionScheduleWithRunLoop'>
    <arg name='session' declared_type='DAApprovalSessionRef' type='^{__DAApprovalSession=}'/>
    <arg name='runLoop' declared_type='CFRunLoopRef' type='^{__CFRunLoop=}'/>
    <arg name='runLoopMode' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DAApprovalSessionUnscheduleFromRunLoop'>
    <arg name='session' declared_type='DAApprovalSessionRef' type='^{__DAApprovalSession=}'/>
    <arg name='runLoop' declared_type='CFRunLoopRef' type='^{__CFRunLoop=}'/>
    <arg name='runLoopMode' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DADiskClaim'>
    <arg name='disk' declared_type='DADiskRef' type='^{__DADisk=}'/>
    <arg name='options' declared_type='DADiskClaimOptions' type='L' type64='I'/>
    <arg name='release' function_pointer='true' declared_type='DADiskClaimReleaseCallback' type='^?'>
      <arg declared_type='DADiskRef' type='^{__DADisk=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='DADissenterRef' type='^{__DADissenter=}'/>
    </arg>
    <arg name='releaseContext' declared_type='void*' type='^v'/>
    <arg name='callback' function_pointer='true' declared_type='DADiskClaimCallback' type='^?'>
      <arg declared_type='DADiskRef' type='^{__DADisk=}'/>
      <arg declared_type='DADissenterRef' type='^{__DADissenter=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='callbackContext' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DADiskCopyDescription'>
    <arg name='disk' declared_type='DADiskRef' type='^{__DADisk=}'/>
    <retval declared_type='CFDictionaryRef' already_retained='true' type='^{__CFDictionary=}'/>
  </function>
  <function name='DADiskCopyIOMedia'>
    <arg name='disk' declared_type='DADiskRef' type='^{__DADisk=}'/>
    <retval declared_type='io_service_t' type='I'/>
  </function>
  <function name='DADiskCopyWholeDisk'>
    <arg name='disk' declared_type='DADiskRef' type='^{__DADisk=}'/>
    <retval declared_type='DADiskRef' already_retained='true' type='^{__DADisk=}'/>
  </function>
  <function name='DADiskCreateFromBSDName'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='session' declared_type='DASessionRef' type='^{__DASession=}'/>
    <arg name='name' declared_type='char*' type='*' const='true'/>
    <retval declared_type='DADiskRef' already_retained='true' type='^{__DADisk=}'/>
  </function>
  <function name='DADiskCreateFromIOMedia'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='session' declared_type='DASessionRef' type='^{__DASession=}'/>
    <arg name='media' declared_type='io_service_t' type='I'/>
    <retval declared_type='DADiskRef' already_retained='true' type='^{__DADisk=}'/>
  </function>
  <function name='DADiskEject'>
    <arg name='disk' declared_type='DADiskRef' type='^{__DADisk=}'/>
    <arg name='options' declared_type='DADiskEjectOptions' type='L' type64='I'/>
    <arg name='callback' function_pointer='true' declared_type='DADiskEjectCallback' type='^?'>
      <arg declared_type='DADiskRef' type='^{__DADisk=}'/>
      <arg declared_type='DADissenterRef' type='^{__DADissenter=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='context' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DADiskGetBSDName'>
    <arg name='disk' declared_type='DADiskRef' type='^{__DADisk=}'/>
    <retval declared_type='char*' type='*' const='true'/>
  </function>
  <function name='DADiskGetOptions'>
    <arg name='disk' declared_type='DADiskRef' type='^{__DADisk=}'/>
    <retval declared_type='DADiskOptions' type='L' type64='I'/>
  </function>
  <function name='DADiskGetTypeID'>
    <retval declared_type='CFTypeID' type='L' type64='I'/>
  </function>
  <function name='DADiskIsClaimed'>
    <arg name='disk' declared_type='DADiskRef' type='^{__DADisk=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='DADiskMount'>
    <arg name='disk' declared_type='DADiskRef' type='^{__DADisk=}'/>
    <arg name='path' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <arg name='options' declared_type='DADiskMountOptions' type='L' type64='I'/>
    <arg name='callback' function_pointer='true' declared_type='DADiskMountCallback' type='^?'>
      <arg declared_type='DADiskRef' type='^{__DADisk=}'/>
      <arg declared_type='DADissenterRef' type='^{__DADissenter=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='context' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DADiskMountWithArguments'>
    <arg name='disk' declared_type='DADiskRef' type='^{__DADisk=}'/>
    <arg name='path' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <arg name='options' declared_type='DADiskMountOptions' type='L' type64='I'/>
    <arg name='callback' function_pointer='true' declared_type='DADiskMountCallback' type='^?'>
      <arg declared_type='DADiskRef' type='^{__DADisk=}'/>
      <arg declared_type='DADissenterRef' type='^{__DADissenter=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='context' declared_type='void*' type='^v'/>
    <arg name='arguments' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DADiskRename'>
    <arg name='disk' declared_type='DADiskRef' type='^{__DADisk=}'/>
    <arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='options' declared_type='DADiskRenameOptions' type='L' type64='I'/>
    <arg name='callback' function_pointer='true' declared_type='DADiskRenameCallback' type='^?'>
      <arg declared_type='DADiskRef' type='^{__DADisk=}'/>
      <arg declared_type='DADissenterRef' type='^{__DADissenter=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='context' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DADiskSetOptions'>
    <arg name='disk' declared_type='DADiskRef' type='^{__DADisk=}'/>
    <arg name='options' declared_type='DADiskOptions' type='L' type64='I'/>
    <arg name='value' declared_type='Boolean' type='B'/>
    <retval declared_type='DAReturn' type='i'/>
  </function>
  <function name='DADiskUnclaim'>
    <arg name='disk' declared_type='DADiskRef' type='^{__DADisk=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DADiskUnmount'>
    <arg name='disk' declared_type='DADiskRef' type='^{__DADisk=}'/>
    <arg name='options' declared_type='DADiskUnmountOptions' type='L' type64='I'/>
    <arg name='callback' function_pointer='true' declared_type='DADiskUnmountCallback' type='^?'>
      <arg declared_type='DADiskRef' type='^{__DADisk=}'/>
      <arg declared_type='DADissenterRef' type='^{__DADissenter=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='context' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DADissenterCreate'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='status' declared_type='DAReturn' type='i'/>
    <arg name='string' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='DADissenterRef' already_retained='true' type='^{__DADissenter=}'/>
  </function>
  <function name='DADissenterGetStatus'>
    <arg name='dissenter' declared_type='DADissenterRef' type='^{__DADissenter=}'/>
    <retval declared_type='DAReturn' type='i'/>
  </function>
  <function name='DADissenterGetStatusString'>
    <arg name='dissenter' declared_type='DADissenterRef' type='^{__DADissenter=}'/>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='DARegisterDiskAppearedCallback'>
    <arg name='session' declared_type='DASessionRef' type='^{__DASession=}'/>
    <arg name='match' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <arg name='callback' function_pointer='true' declared_type='DADiskAppearedCallback' type='^?'>
      <arg declared_type='DADiskRef' type='^{__DADisk=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='context' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DARegisterDiskDescriptionChangedCallback'>
    <arg name='session' declared_type='DASessionRef' type='^{__DASession=}'/>
    <arg name='match' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <arg name='watch' declared_type='CFArrayRef' type='^{__CFArray=}'/>
    <arg name='callback' function_pointer='true' declared_type='DADiskDescriptionChangedCallback' type='^?'>
      <arg declared_type='DADiskRef' type='^{__DADisk=}'/>
      <arg declared_type='CFArrayRef' type='^{__CFArray=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='context' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DARegisterDiskDisappearedCallback'>
    <arg name='session' declared_type='DASessionRef' type='^{__DASession=}'/>
    <arg name='match' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <arg name='callback' function_pointer='true' declared_type='DADiskDisappearedCallback' type='^?'>
      <arg declared_type='DADiskRef' type='^{__DADisk=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='context' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DARegisterDiskEjectApprovalCallback'>
    <arg name='session' declared_type='DAApprovalSessionRef' type='^{__DAApprovalSession=}'/>
    <arg name='match' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <arg name='callback' function_pointer='true' declared_type='DADiskEjectApprovalCallback' type='^?'>
      <arg declared_type='DADiskRef' type='^{__DADisk=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='DADissenterRef' type='^{__DADissenter=}'/>
    </arg>
    <arg name='context' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DARegisterDiskMountApprovalCallback'>
    <arg name='session' declared_type='DAApprovalSessionRef' type='^{__DAApprovalSession=}'/>
    <arg name='match' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <arg name='callback' function_pointer='true' declared_type='DADiskMountApprovalCallback' type='^?'>
      <arg declared_type='DADiskRef' type='^{__DADisk=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='DADissenterRef' type='^{__DADissenter=}'/>
    </arg>
    <arg name='context' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DARegisterDiskPeekCallback'>
    <arg name='session' declared_type='DASessionRef' type='^{__DASession=}'/>
    <arg name='match' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <arg name='order' declared_type='CFIndex' type='l' type64='i'/>
    <arg name='callback' function_pointer='true' declared_type='DADiskPeekCallback' type='^?'>
      <arg declared_type='DADiskRef' type='^{__DADisk=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='context' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DARegisterDiskUnmountApprovalCallback'>
    <arg name='session' declared_type='DAApprovalSessionRef' type='^{__DAApprovalSession=}'/>
    <arg name='match' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <arg name='callback' function_pointer='true' declared_type='DADiskUnmountApprovalCallback' type='^?'>
      <arg declared_type='DADiskRef' type='^{__DADisk=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='DADissenterRef' type='^{__DADissenter=}'/>
    </arg>
    <arg name='context' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DASessionCreate'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <retval declared_type='DASessionRef' already_retained='true' type='^{__DASession=}'/>
  </function>
  <function name='DASessionGetTypeID'>
    <retval declared_type='CFTypeID' type='L' type64='I'/>
  </function>
  <function name='DASessionScheduleWithRunLoop'>
    <arg name='session' declared_type='DASessionRef' type='^{__DASession=}'/>
    <arg name='runLoop' declared_type='CFRunLoopRef' type='^{__CFRunLoop=}'/>
    <arg name='runLoopMode' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DASessionUnscheduleFromRunLoop'>
    <arg name='session' declared_type='DASessionRef' type='^{__DASession=}'/>
    <arg name='runLoop' declared_type='CFRunLoopRef' type='^{__CFRunLoop=}'/>
    <arg name='runLoopMode' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DAUnregisterApprovalCallback'>
    <arg name='session' declared_type='DAApprovalSessionRef' type='^{__DAApprovalSession=}'/>
    <arg name='callback' declared_type='void*' type='^v'/>
    <arg name='context' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DAUnregisterCallback'>
    <arg name='session' declared_type='DASessionRef' type='^{__DASession=}'/>
    <arg name='callback' declared_type='void*' type='^v'/>
    <arg name='context' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
</signatures>
