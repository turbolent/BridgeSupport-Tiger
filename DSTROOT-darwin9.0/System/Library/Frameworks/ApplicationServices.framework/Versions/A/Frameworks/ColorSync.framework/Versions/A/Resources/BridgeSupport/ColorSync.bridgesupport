<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<struct name='CM2Header' type='{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2L]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}' type64='{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2I]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}'>
<field name='size' declared_type='UInt32' type='L' type64='I'/>
<field name='CMMType' declared_type='OSType' type='L' type64='I'/>
<field name='profileVersion' declared_type='UInt32' type='L' type64='I'/>
<field name='profileClass' declared_type='OSType' type='L' type64='I'/>
<field name='dataColorSpace' declared_type='OSType' type='L' type64='I'/>
<field name='profileConnectionSpace' declared_type='OSType' type='L' type64='I'/>
<field name='dateTime' declared_type='CMDateTime' type='{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}'/>
<field name='CS2profileSignature' declared_type='OSType' type='L' type64='I'/>
<field name='platform' declared_type='OSType' type='L' type64='I'/>
<field name='flags' declared_type='UInt32' type='L' type64='I'/>
<field name='deviceManufacturer' declared_type='OSType' type='L' type64='I'/>
<field name='deviceModel' declared_type='UInt32' type='L' type64='I'/>
<field name='deviceAttributes' declared_type='UInt32*' type='[2L]' type64='[2I]'/>
<field name='renderingIntent' declared_type='UInt32' type='L' type64='I'/>
<field name='white' declared_type='CMFixedXYZColor' type='{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}'/>
<field name='creator' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='char*' type='[44c]'/>
</struct>
<struct name='CM2Profile' type='{CM2Profile=&quot;header&quot;{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2L]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}&quot;tagTable&quot;{CMTagElemTable=&quot;count&quot;I&quot;tagList&quot;[1{CMTagRecord=&quot;tag&quot;I&quot;elementOffset&quot;I&quot;elementSize&quot;I}]}&quot;elemData&quot;[1c]}' type64='{CM2Profile=&quot;header&quot;{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2I]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}&quot;tagTable&quot;{CMTagElemTable=&quot;count&quot;I&quot;tagList&quot;[1{CMTagRecord=&quot;tag&quot;I&quot;elementOffset&quot;I&quot;elementSize&quot;I}]}&quot;elemData&quot;[1c]}'>
<field name='header' declared_type='CM2Header' type='{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2L]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}' type64='{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2I]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}'/>
<field name='tagTable' declared_type='CMTagElemTable' type='{CMTagElemTable=&quot;count&quot;I&quot;tagList&quot;[1{CMTagRecord=&quot;tag&quot;I&quot;elementOffset&quot;I&quot;elementSize&quot;I}]}'/>
<field name='elemData' declared_type='char*' type='[1c]'/>
</struct>
<struct name='CM2ProfilePtr' type='{CM2Profile=&quot;header&quot;{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2L]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}&quot;tagTable&quot;{CMTagElemTable=&quot;count&quot;I&quot;tagList&quot;[1{CMTagRecord=&quot;tag&quot;I&quot;elementOffset&quot;I&quot;elementSize&quot;I}]}&quot;elemData&quot;[1c]}' type64='{CM2Profile=&quot;header&quot;{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2I]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}&quot;tagTable&quot;{CMTagElemTable=&quot;count&quot;I&quot;tagList&quot;[1{CMTagRecord=&quot;tag&quot;I&quot;elementOffset&quot;I&quot;elementSize&quot;I}]}&quot;elemData&quot;[1c]}'>
<field name='header' declared_type='CM2Header' type='{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2L]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}' type64='{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2I]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}'/>
<field name='tagTable' declared_type='CMTagElemTable' type='{CMTagElemTable=&quot;count&quot;I&quot;tagList&quot;[1{CMTagRecord=&quot;tag&quot;I&quot;elementOffset&quot;I&quot;elementSize&quot;I}]}'/>
<field name='elemData' declared_type='char*' type='[1c]'/>
</struct>
<struct name='CM4Header' type='{CM4Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2L]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;digest&quot;[16C]&quot;reserved&quot;[28c]}' type64='{CM4Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2I]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;digest&quot;[16C]&quot;reserved&quot;[28c]}'>
<field name='size' declared_type='UInt32' type='L' type64='I'/>
<field name='CMMType' declared_type='OSType' type='L' type64='I'/>
<field name='profileVersion' declared_type='UInt32' type='L' type64='I'/>
<field name='profileClass' declared_type='OSType' type='L' type64='I'/>
<field name='dataColorSpace' declared_type='OSType' type='L' type64='I'/>
<field name='profileConnectionSpace' declared_type='OSType' type='L' type64='I'/>
<field name='dateTime' declared_type='CMDateTime' type='{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}'/>
<field name='CS2profileSignature' declared_type='OSType' type='L' type64='I'/>
<field name='platform' declared_type='OSType' type='L' type64='I'/>
<field name='flags' declared_type='UInt32' type='L' type64='I'/>
<field name='deviceManufacturer' declared_type='OSType' type='L' type64='I'/>
<field name='deviceModel' declared_type='UInt32' type='L' type64='I'/>
<field name='deviceAttributes' declared_type='UInt32*' type='[2L]' type64='[2I]'/>
<field name='renderingIntent' declared_type='UInt32' type='L' type64='I'/>
<field name='white' declared_type='CMFixedXYZColor' type='{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}'/>
<field name='creator' declared_type='OSType' type='L' type64='I'/>
<field name='digest' declared_type='CMProfileMD5' type='[16C]'/>
<field name='reserved' declared_type='char*' type='[28c]'/>
</struct>
<struct name='CMAdaptationMatrixType' type='{CMAdaptationMatrixType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;adaptationMatrix&quot;[9l]}' type64='{CMAdaptationMatrixType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;adaptationMatrix&quot;[9i]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='adaptationMatrix' declared_type='Fixed*' type='[9l]' type64='[9i]'/>
</struct>
<struct name='CMBitmap' type='{CMBitmap=&quot;image&quot;*&quot;width&quot;I&quot;height&quot;I&quot;rowBytes&quot;I&quot;pixelSize&quot;I&quot;space&quot;I&quot;user1&quot;I&quot;user2&quot;I}' type64='{CMBitmap=&quot;image&quot;*&quot;width&quot;Q&quot;height&quot;Q&quot;rowBytes&quot;Q&quot;pixelSize&quot;Q&quot;space&quot;I&quot;user1&quot;I&quot;user2&quot;I}'>
<field name='image' declared_type='char*' type='*'/>
<field name='width' declared_type='size_t' type='L' type64='Q'/>
<field name='height' declared_type='size_t' type='L' type64='Q'/>
<field name='rowBytes' declared_type='size_t' type='L' type64='Q'/>
<field name='pixelSize' declared_type='size_t' type='L' type64='Q'/>
<field name='space' declared_type='CMBitmapColorSpace' type='L' type64='I'/>
<field name='user1' declared_type='UInt32' type='L' type64='I'/>
<field name='user2' declared_type='UInt32' type='L' type64='I'/>
</struct>
<struct name='CMBufferLocation' type='{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I}'>
<field name='buffer' declared_type='void*' type='^v'/>
<field name='size' declared_type='UInt32' type='L' type64='I'/>
</struct>
<struct name='CMCMYColor' type='{CMCMYColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S}'>
<field name='cyan' declared_type='UInt16' type='S'/>
<field name='magenta' declared_type='UInt16' type='S'/>
<field name='yellow' declared_type='UInt16' type='S'/>
</struct>
<struct name='CMCMYKColor' type='{CMCMYKColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S&quot;black&quot;S}'>
<field name='cyan' declared_type='UInt16' type='S'/>
<field name='magenta' declared_type='UInt16' type='S'/>
<field name='yellow' declared_type='UInt16' type='S'/>
<field name='black' declared_type='UInt16' type='S'/>
</struct>
<struct name='CMConcatProfileSet' type='{CMConcatProfileSet=&quot;keyIndex&quot;S&quot;count&quot;S&quot;profileSet&quot;[1^{OpaqueCMProfileRef}]}'>
<field name='keyIndex' declared_type='UInt16' type='S'/>
<field name='count' declared_type='UInt16' type='S'/>
<field name='profileSet' declared_type='CMProfileRef*' type='[1^{OpaqueCMProfileRef}]'/>
</struct>
<struct name='CMCurveType' type='{CMCurveType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;countValue&quot;I&quot;data&quot;[1S]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='countValue' declared_type='UInt32' type='L' type64='I'/>
<field name='data' declared_type='UInt16*' type='[1S]'/>
</struct>
<struct name='CMDataType' type='{CMDataType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;dataFlag&quot;I&quot;data&quot;[1c]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='dataFlag' declared_type='UInt32' type='L' type64='I'/>
<field name='data' declared_type='char*' type='[1c]'/>
</struct>
<struct name='CMDateTime' type='{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}'>
<field name='year' declared_type='UInt16' type='S'/>
<field name='month' declared_type='UInt16' type='S'/>
<field name='dayOfTheMonth' declared_type='UInt16' type='S'/>
<field name='hours' declared_type='UInt16' type='S'/>
<field name='minutes' declared_type='UInt16' type='S'/>
<field name='seconds' declared_type='UInt16' type='S'/>
</struct>
<struct name='CMDateTimeType' type='{CMDateTimeType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='dateTime' declared_type='CMDateTime' type='{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}'/>
</struct>
<struct name='CMDeviceInfo' type='{CMDeviceInfo=&quot;dataVersion&quot;I&quot;deviceClass&quot;I&quot;deviceID&quot;I&quot;deviceScope&quot;{CMDeviceScope=&quot;deviceUser&quot;^{__CFString}&quot;deviceHost&quot;^{__CFString}}&quot;deviceState&quot;I&quot;defaultProfileID&quot;I&quot;deviceName&quot;^^{__CFDictionary}&quot;profileCount&quot;I&quot;reserved&quot;I}'>
<field name='dataVersion' declared_type='UInt32' type='L' type64='I'/>
<field name='deviceClass' declared_type='CMDeviceClass' type='L' type64='I'/>
<field name='deviceID' declared_type='CMDeviceID' type='L' type64='I'/>
<field name='deviceScope' declared_type='CMDeviceScope' type='{CMDeviceScope=&quot;deviceUser&quot;^{__CFString}&quot;deviceHost&quot;^{__CFString}}'/>
<field name='deviceState' declared_type='CMDeviceState' type='L' type64='I'/>
<field name='defaultProfileID' declared_type='CMDeviceProfileID' type='L' type64='I'/>
<field name='deviceName' declared_type='CFDictionaryRef*' type='^^{__CFDictionary}'/>
<field name='profileCount' declared_type='UInt32' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
</struct>
<struct name='CMDeviceInfoPtr' type='{CMDeviceInfo=&quot;dataVersion&quot;I&quot;deviceClass&quot;I&quot;deviceID&quot;I&quot;deviceScope&quot;{CMDeviceScope=&quot;deviceUser&quot;^{__CFString}&quot;deviceHost&quot;^{__CFString}}&quot;deviceState&quot;I&quot;defaultProfileID&quot;I&quot;deviceName&quot;^^{__CFDictionary}&quot;profileCount&quot;I&quot;reserved&quot;I}'>
<field name='dataVersion' declared_type='UInt32' type='L' type64='I'/>
<field name='deviceClass' declared_type='CMDeviceClass' type='L' type64='I'/>
<field name='deviceID' declared_type='CMDeviceID' type='L' type64='I'/>
<field name='deviceScope' declared_type='CMDeviceScope' type='{CMDeviceScope=&quot;deviceUser&quot;^{__CFString}&quot;deviceHost&quot;^{__CFString}}'/>
<field name='deviceState' declared_type='CMDeviceState' type='L' type64='I'/>
<field name='defaultProfileID' declared_type='CMDeviceProfileID' type='L' type64='I'/>
<field name='deviceName' declared_type='CFDictionaryRef*' type='^^{__CFDictionary}'/>
<field name='profileCount' declared_type='UInt32' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
</struct>
<struct name='CMDeviceProfileArray' type='{CMDeviceProfileArray=&quot;profileCount&quot;I&quot;profiles&quot;[1{CMDeviceProfileInfo=&quot;dataVersion&quot;I&quot;profileID&quot;I&quot;profileLoc&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;fileLoc&quot;{CMFileLocation=&quot;spec&quot;{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;i&quot;name&quot;[64C]}}&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;ptrLoc&quot;{CMPtrLocation=&quot;p&quot;*}&quot;procLoc&quot;{CMProcedureLocation=&quot;proc&quot;^?&quot;refCon&quot;^v}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[256c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;profileName&quot;^{__CFDictionary}&quot;reserved&quot;I}]}' type64='{CMDeviceProfileArray=&quot;profileCount&quot;I&quot;profiles&quot;[1{CMDeviceProfileInfo=&quot;dataVersion&quot;I&quot;profileID&quot;I&quot;profileLoc&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;profileName&quot;^{__CFDictionary}&quot;reserved&quot;I}]}'>
<field name='profileCount' declared_type='UInt32' type='L' type64='I'/>
<field name='profiles' declared_type='CMDeviceProfileInfo*' type='[1{CMDeviceProfileInfo=&quot;dataVersion&quot;I&quot;profileID&quot;I&quot;profileLoc&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;fileLoc&quot;{CMFileLocation=&quot;spec&quot;{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;i&quot;name&quot;[64C]}}&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;ptrLoc&quot;{CMPtrLocation=&quot;p&quot;*}&quot;procLoc&quot;{CMProcedureLocation=&quot;proc&quot;^?&quot;refCon&quot;^v}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[256c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;profileName&quot;^{__CFDictionary}&quot;reserved&quot;I}]' type64='[1{CMDeviceProfileInfo=&quot;dataVersion&quot;I&quot;profileID&quot;I&quot;profileLoc&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;profileName&quot;^{__CFDictionary}&quot;reserved&quot;I}]'/>
</struct>
<struct name='CMDeviceProfileArrayPtr' type='{CMDeviceProfileArray=&quot;profileCount&quot;I&quot;profiles&quot;[1{CMDeviceProfileInfo=&quot;dataVersion&quot;I&quot;profileID&quot;I&quot;profileLoc&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;fileLoc&quot;{CMFileLocation=&quot;spec&quot;{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;i&quot;name&quot;[64C]}}&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;ptrLoc&quot;{CMPtrLocation=&quot;p&quot;*}&quot;procLoc&quot;{CMProcedureLocation=&quot;proc&quot;^?&quot;refCon&quot;^v}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[256c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;profileName&quot;^{__CFDictionary}&quot;reserved&quot;I}]}' type64='{CMDeviceProfileArray=&quot;profileCount&quot;I&quot;profiles&quot;[1{CMDeviceProfileInfo=&quot;dataVersion&quot;I&quot;profileID&quot;I&quot;profileLoc&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;profileName&quot;^{__CFDictionary}&quot;reserved&quot;I}]}'>
<field name='profileCount' declared_type='UInt32' type='L' type64='I'/>
<field name='profiles' declared_type='CMDeviceProfileInfo*' type='[1{CMDeviceProfileInfo=&quot;dataVersion&quot;I&quot;profileID&quot;I&quot;profileLoc&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;fileLoc&quot;{CMFileLocation=&quot;spec&quot;{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;i&quot;name&quot;[64C]}}&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;ptrLoc&quot;{CMPtrLocation=&quot;p&quot;*}&quot;procLoc&quot;{CMProcedureLocation=&quot;proc&quot;^?&quot;refCon&quot;^v}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[256c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;profileName&quot;^{__CFDictionary}&quot;reserved&quot;I}]' type64='[1{CMDeviceProfileInfo=&quot;dataVersion&quot;I&quot;profileID&quot;I&quot;profileLoc&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;profileName&quot;^{__CFDictionary}&quot;reserved&quot;I}]'/>
</struct>
<struct name='CMDeviceProfileInfo' type='{CMDeviceProfileInfo=&quot;dataVersion&quot;I&quot;profileID&quot;I&quot;profileLoc&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;fileLoc&quot;{CMFileLocation=&quot;spec&quot;{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;i&quot;name&quot;[64C]}}&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;ptrLoc&quot;{CMPtrLocation=&quot;p&quot;*}&quot;procLoc&quot;{CMProcedureLocation=&quot;proc&quot;^?&quot;refCon&quot;^v}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[256c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;profileName&quot;^{__CFDictionary}&quot;reserved&quot;I}' type64='{CMDeviceProfileInfo=&quot;dataVersion&quot;I&quot;profileID&quot;I&quot;profileLoc&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;profileName&quot;^{__CFDictionary}&quot;reserved&quot;I}'>
<field name='dataVersion' declared_type='UInt32' type='L' type64='I'/>
<field name='profileID' declared_type='CMDeviceProfileID' type='L' type64='I'/>
<field name='profileLoc' declared_type='CMProfileLocation' type='{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;fileLoc&quot;{CMFileLocation=&quot;spec&quot;{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;i&quot;name&quot;[64C]}}&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;ptrLoc&quot;{CMPtrLocation=&quot;p&quot;*}&quot;procLoc&quot;{CMProcedureLocation=&quot;proc&quot;^?&quot;refCon&quot;^v}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[256c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}' type64='{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}'/>
<field name='profileName' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
</struct>
<struct name='CMDeviceProfileScope' type='{CMDeviceScope=&quot;deviceUser&quot;^{__CFString}&quot;deviceHost&quot;^{__CFString}}'>
<field name='deviceUser' declared_type='CFStringRef' type='^{__CFString=}'/>
<field name='deviceHost' declared_type='CFStringRef' type='^{__CFString=}'/>
</struct>
<struct name='CMDeviceScope' type='{CMDeviceScope=&quot;deviceUser&quot;^{__CFString}&quot;deviceHost&quot;^{__CFString}}'>
<field name='deviceUser' declared_type='CFStringRef' type='^{__CFString=}'/>
<field name='deviceHost' declared_type='CFStringRef' type='^{__CFString=}'/>
</struct>
<struct name='CMFixedXYColor' type='{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}'>
<field name='x' declared_type='Fixed' type='l' type64='i'/>
<field name='y' declared_type='Fixed' type='l' type64='i'/>
</struct>
<struct name='CMFixedXYZColor' type='{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}'>
<field name='X' declared_type='Fixed' type='l' type64='i'/>
<field name='Y' declared_type='Fixed' type='l' type64='i'/>
<field name='Z' declared_type='Fixed' type='l' type64='i'/>
</struct>
<struct name='CMFloatBitmap' type='{CMFloatBitmap=&quot;version&quot;L&quot;buffers&quot;[16^f]&quot;height&quot;I&quot;width&quot;I&quot;rowStride&quot;i&quot;colStride&quot;i&quot;space&quot;I&quot;flags&quot;i}' type64='{CMFloatBitmap=&quot;version&quot;Q&quot;buffers&quot;[16^f]&quot;height&quot;Q&quot;width&quot;Q&quot;rowStride&quot;q&quot;colStride&quot;q&quot;space&quot;I&quot;flags&quot;i}'>
<field name='version' declared_type='unsigned long' type='L' type64='Q'/>
<field name='buffers' declared_type='float**' type='[16^f]'/>
<field name='height' declared_type='size_t' type='L' type64='Q'/>
<field name='width' declared_type='size_t' type='L' type64='Q'/>
<field name='rowStride' declared_type='ptrdiff_t' type='i' type64='q'/>
<field name='colStride' declared_type='ptrdiff_t' type='i' type64='q'/>
<field name='space' declared_type='OSType' type='L' type64='I'/>
<field name='flags' declared_type='CMFloatBitmapFlags' type='i'/>
</struct>
<struct name='CMGrayColor' type='{CMGrayColor=&quot;gray&quot;S}'>
<field name='gray' declared_type='UInt16' type='S'/>
</struct>
<struct name='CMHLSColor' type='{CMHLSColor=&quot;hue&quot;S&quot;lightness&quot;S&quot;saturation&quot;S}'>
<field name='hue' declared_type='UInt16' type='S'/>
<field name='lightness' declared_type='UInt16' type='S'/>
<field name='saturation' declared_type='UInt16' type='S'/>
</struct>
<struct name='CMHSVColor' type='{CMHSVColor=&quot;hue&quot;S&quot;saturation&quot;S&quot;value&quot;S}'>
<field name='hue' declared_type='UInt16' type='S'/>
<field name='saturation' declared_type='UInt16' type='S'/>
<field name='value' declared_type='UInt16' type='S'/>
</struct>
<struct name='CMHandleLocation' type='{CMHandleLocation=&quot;h&quot;^*}'>
<field name='h' declared_type='Handle' type='^*'/>
</struct>
<struct name='CMIntentCRDVMSize' type='{CMIntentCRDVMSize=&quot;renderingIntent&quot;I&quot;VMSize&quot;I}'>
<field name='renderingIntent' declared_type='UInt32' type='L' type64='I'/>
<field name='VMSize' declared_type='UInt32' type='L' type64='I'/>
</struct>
<struct name='CMLabColor' type='{CMLabColor=&quot;L&quot;S&quot;a&quot;S&quot;b&quot;S}'>
<field name='L' declared_type='UInt16' type='S'/>
<field name='a' declared_type='UInt16' type='S'/>
<field name='b' declared_type='UInt16' type='S'/>
</struct>
<struct name='CMLut16Type' type='{CMLut16Type=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;inputChannels&quot;C&quot;outputChannels&quot;C&quot;gridPoints&quot;C&quot;reserved2&quot;C&quot;matrix&quot;[3[3l]]&quot;inputTableEntries&quot;S&quot;outputTableEntries&quot;S&quot;inputTable&quot;[1S]}' type64='{CMLut16Type=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;inputChannels&quot;C&quot;outputChannels&quot;C&quot;gridPoints&quot;C&quot;reserved2&quot;C&quot;matrix&quot;[3[3i]]&quot;inputTableEntries&quot;S&quot;outputTableEntries&quot;S&quot;inputTable&quot;[1S]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='inputChannels' declared_type='UInt8' type='C'/>
<field name='outputChannels' declared_type='UInt8' type='C'/>
<field name='gridPoints' declared_type='UInt8' type='C'/>
<field name='reserved2' declared_type='UInt8' type='C'/>
<field name='matrix' declared_type='Fixed**' type='[3[3l]]' type64='[3[3i]]'/>
<field name='inputTableEntries' declared_type='UInt16' type='S'/>
<field name='outputTableEntries' declared_type='UInt16' type='S'/>
<field name='inputTable' declared_type='UInt16*' type='[1S]'/>
</struct>
<struct name='CMLut8Type' type='{CMLut8Type=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;inputChannels&quot;C&quot;outputChannels&quot;C&quot;gridPoints&quot;C&quot;reserved2&quot;C&quot;matrix&quot;[3[3l]]&quot;inputTable&quot;[1C]}' type64='{CMLut8Type=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;inputChannels&quot;C&quot;outputChannels&quot;C&quot;gridPoints&quot;C&quot;reserved2&quot;C&quot;matrix&quot;[3[3i]]&quot;inputTable&quot;[1C]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='inputChannels' declared_type='UInt8' type='C'/>
<field name='outputChannels' declared_type='UInt8' type='C'/>
<field name='gridPoints' declared_type='UInt8' type='C'/>
<field name='reserved2' declared_type='UInt8' type='C'/>
<field name='matrix' declared_type='Fixed**' type='[3[3l]]' type64='[3[3i]]'/>
<field name='inputTable' declared_type='UInt8*' type='[1C]'/>
</struct>
<struct name='CMLuvColor' type='{CMLuvColor=&quot;L&quot;S&quot;u&quot;S&quot;v&quot;S}'>
<field name='L' declared_type='UInt16' type='S'/>
<field name='u' declared_type='UInt16' type='S'/>
<field name='v' declared_type='UInt16' type='S'/>
</struct>
<struct name='CMMInfo' type='{CMMInfo=&quot;dataSize&quot;I&quot;CMMType&quot;I&quot;CMMMfr&quot;I&quot;CMMVersion&quot;I&quot;ASCIIName&quot;[32C]&quot;ASCIIDesc&quot;[256C]&quot;UniCodeNameCount&quot;I&quot;UniCodeName&quot;[32S]&quot;UniCodeDescCount&quot;I&quot;UniCodeDesc&quot;[256S]}' type64='{CMMInfo=&quot;dataSize&quot;Q&quot;CMMType&quot;I&quot;CMMMfr&quot;I&quot;CMMVersion&quot;I&quot;ASCIIName&quot;[32C]&quot;ASCIIDesc&quot;[256C]&quot;UniCodeNameCount&quot;Q&quot;UniCodeName&quot;[32S]&quot;UniCodeDescCount&quot;Q&quot;UniCodeDesc&quot;[256S]}'>
<field name='dataSize' declared_type='size_t' type='L' type64='Q'/>
<field name='CMMType' declared_type='OSType' type='L' type64='I'/>
<field name='CMMMfr' declared_type='OSType' type='L' type64='I'/>
<field name='CMMVersion' declared_type='UInt32' type='L' type64='I'/>
<field name='ASCIIName' declared_type='unsigned char*' type='[32C]'/>
<field name='ASCIIDesc' declared_type='unsigned char*' type='[256C]'/>
<field name='UniCodeNameCount' declared_type='UniCharCount' type='L' type64='Q'/>
<field name='UniCodeName' declared_type='UniChar*' type='[32S]'/>
<field name='UniCodeDescCount' declared_type='UniCharCount' type='L' type64='Q'/>
<field name='UniCodeDesc' declared_type='UniChar*' type='[256S]'/>
</struct>
<struct name='CMMakeAndModel' type='{CMMakeAndModel=&quot;manufacturer&quot;I&quot;model&quot;I&quot;serialNumber&quot;I&quot;manufactureDate&quot;I&quot;reserved1&quot;I&quot;reserved2&quot;I&quot;reserved3&quot;I&quot;reserved4&quot;I}'>
<field name='manufacturer' declared_type='OSType' type='L' type64='I'/>
<field name='model' declared_type='UInt32' type='L' type64='I'/>
<field name='serialNumber' declared_type='UInt32' type='L' type64='I'/>
<field name='manufactureDate' declared_type='UInt32' type='L' type64='I'/>
<field name='reserved1' declared_type='UInt32' type='L' type64='I'/>
<field name='reserved2' declared_type='UInt32' type='L' type64='I'/>
<field name='reserved3' declared_type='UInt32' type='L' type64='I'/>
<field name='reserved4' declared_type='UInt32' type='L' type64='I'/>
</struct>
<struct name='CMMakeAndModelType' type='{CMMakeAndModelType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;makeAndModel&quot;{CMMakeAndModel=&quot;manufacturer&quot;I&quot;model&quot;I&quot;serialNumber&quot;I&quot;manufactureDate&quot;I&quot;reserved1&quot;I&quot;reserved2&quot;I&quot;reserved3&quot;I&quot;reserved4&quot;I}}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='makeAndModel' declared_type='CMMakeAndModel' type='{CMMakeAndModel=&quot;manufacturer&quot;I&quot;model&quot;I&quot;serialNumber&quot;I&quot;manufactureDate&quot;I&quot;reserved1&quot;I&quot;reserved2&quot;I&quot;reserved3&quot;I&quot;reserved4&quot;I}'/>
</struct>
<struct name='CMMeasurementType' type='{CMMeasurementType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;standardObserver&quot;I&quot;backingXYZ&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;geometry&quot;I&quot;flare&quot;I&quot;illuminant&quot;I}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='standardObserver' declared_type='UInt32' type='L' type64='I'/>
<field name='backingXYZ' declared_type='CMFixedXYZColor' type='{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}'/>
<field name='geometry' declared_type='UInt32' type='L' type64='I'/>
<field name='flare' declared_type='UInt32' type='L' type64='I'/>
<field name='illuminant' declared_type='UInt32' type='L' type64='I'/>
</struct>
<struct name='CMMultiFunctCLUTType' type='{CMMultiFunctCLUTType=&quot;gridPoints&quot;[16C]&quot;entrySize&quot;C&quot;reserved&quot;[3C]&quot;data&quot;[2C]}'>
<field name='gridPoints' declared_type='UInt8*' type='[16C]'/>
<field name='entrySize' declared_type='UInt8' type='C'/>
<field name='reserved' declared_type='UInt8*' type='[3C]'/>
<field name='data' declared_type='UInt8*' type='[2C]'/>
</struct>
<struct name='CMMultiFunctLutA2BType' type='{CMMultiFunctLutType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;inputChannels&quot;C&quot;outputChannels&quot;C&quot;reserved2&quot;S&quot;offsetBcurves&quot;I&quot;offsetMatrix&quot;I&quot;offsetMcurves&quot;I&quot;offsetCLUT&quot;I&quot;offsetAcurves&quot;I&quot;data&quot;[1C]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='inputChannels' declared_type='UInt8' type='C'/>
<field name='outputChannels' declared_type='UInt8' type='C'/>
<field name='reserved2' declared_type='UInt16' type='S'/>
<field name='offsetBcurves' declared_type='UInt32' type='L' type64='I'/>
<field name='offsetMatrix' declared_type='UInt32' type='L' type64='I'/>
<field name='offsetMcurves' declared_type='UInt32' type='L' type64='I'/>
<field name='offsetCLUT' declared_type='UInt32' type='L' type64='I'/>
<field name='offsetAcurves' declared_type='UInt32' type='L' type64='I'/>
<field name='data' declared_type='UInt8*' type='[1C]'/>
</struct>
<struct name='CMMultiFunctLutB2AType' type='{CMMultiFunctLutType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;inputChannels&quot;C&quot;outputChannels&quot;C&quot;reserved2&quot;S&quot;offsetBcurves&quot;I&quot;offsetMatrix&quot;I&quot;offsetMcurves&quot;I&quot;offsetCLUT&quot;I&quot;offsetAcurves&quot;I&quot;data&quot;[1C]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='inputChannels' declared_type='UInt8' type='C'/>
<field name='outputChannels' declared_type='UInt8' type='C'/>
<field name='reserved2' declared_type='UInt16' type='S'/>
<field name='offsetBcurves' declared_type='UInt32' type='L' type64='I'/>
<field name='offsetMatrix' declared_type='UInt32' type='L' type64='I'/>
<field name='offsetMcurves' declared_type='UInt32' type='L' type64='I'/>
<field name='offsetCLUT' declared_type='UInt32' type='L' type64='I'/>
<field name='offsetAcurves' declared_type='UInt32' type='L' type64='I'/>
<field name='data' declared_type='UInt8*' type='[1C]'/>
</struct>
<struct name='CMMultiFunctLutType' type='{CMMultiFunctLutType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;inputChannels&quot;C&quot;outputChannels&quot;C&quot;reserved2&quot;S&quot;offsetBcurves&quot;I&quot;offsetMatrix&quot;I&quot;offsetMcurves&quot;I&quot;offsetCLUT&quot;I&quot;offsetAcurves&quot;I&quot;data&quot;[1C]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='inputChannels' declared_type='UInt8' type='C'/>
<field name='outputChannels' declared_type='UInt8' type='C'/>
<field name='reserved2' declared_type='UInt16' type='S'/>
<field name='offsetBcurves' declared_type='UInt32' type='L' type64='I'/>
<field name='offsetMatrix' declared_type='UInt32' type='L' type64='I'/>
<field name='offsetMcurves' declared_type='UInt32' type='L' type64='I'/>
<field name='offsetCLUT' declared_type='UInt32' type='L' type64='I'/>
<field name='offsetAcurves' declared_type='UInt32' type='L' type64='I'/>
<field name='data' declared_type='UInt8*' type='[1C]'/>
</struct>
<struct name='CMMultiLocalizedUniCodeEntryRec' type='{CMMultiLocalizedUniCodeEntryRec=&quot;languageCode&quot;[2c]&quot;regionCode&quot;[2c]&quot;textLength&quot;I&quot;textOffset&quot;I}'>
<field name='languageCode' declared_type='char*' type='[2c]'/>
<field name='regionCode' declared_type='char*' type='[2c]'/>
<field name='textLength' declared_type='UInt32' type='L' type64='I'/>
<field name='textOffset' declared_type='UInt32' type='L' type64='I'/>
</struct>
<struct name='CMMultiLocalizedUniCodeType' type='{CMMultiLocalizedUniCodeType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;entryCount&quot;I&quot;entrySize&quot;I}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='entryCount' declared_type='UInt32' type='L' type64='I'/>
<field name='entrySize' declared_type='UInt32' type='L' type64='I'/>
</struct>
<struct name='CMMultichannel5Color' type='{CMMultichannel5Color=&quot;components&quot;[5C]}'>
<field name='components' declared_type='UInt8*' type='[5C]'/>
</struct>
<struct name='CMMultichannel6Color' type='{CMMultichannel6Color=&quot;components&quot;[6C]}'>
<field name='components' declared_type='UInt8*' type='[6C]'/>
</struct>
<struct name='CMMultichannel7Color' type='{CMMultichannel7Color=&quot;components&quot;[7C]}'>
<field name='components' declared_type='UInt8*' type='[7C]'/>
</struct>
<struct name='CMMultichannel8Color' type='{CMMultichannel8Color=&quot;components&quot;[8C]}'>
<field name='components' declared_type='UInt8*' type='[8C]'/>
</struct>
<struct name='CMNamedColor' type='{CMNamedColor=&quot;namedColorIndex&quot;I}'>
<field name='namedColorIndex' declared_type='UInt32' type='L' type64='I'/>
</struct>
<struct name='CMNamedColor2EntryType' type='{CMNamedColor2EntryType=&quot;rootName&quot;[32C]&quot;PCSColorCoords&quot;[3S]&quot;DeviceColorCoords&quot;[1S]}'>
<field name='rootName' declared_type='UInt8*' type='[32C]'/>
<field name='PCSColorCoords' declared_type='UInt16*' type='[3S]'/>
<field name='DeviceColorCoords' declared_type='UInt16*' type='[1S]'/>
</struct>
<struct name='CMNamedColor2Type' type='{CMNamedColor2Type=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;vendorFlag&quot;I&quot;count&quot;I&quot;deviceChannelCount&quot;I&quot;prefixName&quot;[32C]&quot;suffixName&quot;[32C]&quot;data&quot;[1c]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='vendorFlag' declared_type='UInt32' type='L' type64='I'/>
<field name='count' declared_type='UInt32' type='L' type64='I'/>
<field name='deviceChannelCount' declared_type='UInt32' type='L' type64='I'/>
<field name='prefixName' declared_type='UInt8*' type='[32C]'/>
<field name='suffixName' declared_type='UInt8*' type='[32C]'/>
<field name='data' declared_type='char*' type='[1c]'/>
</struct>
<struct name='CMNamedColorType' type='{CMNamedColorType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;vendorFlag&quot;I&quot;count&quot;I&quot;prefixName&quot;[1C]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='vendorFlag' declared_type='UInt32' type='L' type64='I'/>
<field name='count' declared_type='UInt32' type='L' type64='I'/>
<field name='prefixName' declared_type='UInt8*' type='[1C]'/>
</struct>
<struct name='CMNativeDisplayInfo' type='{CMNativeDisplayInfo=&quot;dataSize&quot;I&quot;redPhosphor&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;greenPhosphor&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;bluePhosphor&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;whitePoint&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;redGammaValue&quot;i&quot;greenGammaValue&quot;i&quot;blueGammaValue&quot;i&quot;gammaChannels&quot;S&quot;gammaEntryCount&quot;S&quot;gammaEntrySize&quot;S&quot;gammaData&quot;[1c]}'>
<field name='dataSize' declared_type='UInt32' type='L' type64='I'/>
<field name='redPhosphor' declared_type='CMFixedXYColor' type='{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}'/>
<field name='greenPhosphor' declared_type='CMFixedXYColor' type='{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}'/>
<field name='bluePhosphor' declared_type='CMFixedXYColor' type='{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}'/>
<field name='whitePoint' declared_type='CMFixedXYColor' type='{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}'/>
<field name='redGammaValue' declared_type='Fixed' type='l' type64='i'/>
<field name='greenGammaValue' declared_type='Fixed' type='l' type64='i'/>
<field name='blueGammaValue' declared_type='Fixed' type='l' type64='i'/>
<field name='gammaChannels' declared_type='UInt16' type='S'/>
<field name='gammaEntryCount' declared_type='UInt16' type='S'/>
<field name='gammaEntrySize' declared_type='UInt16' type='S'/>
<field name='gammaData' declared_type='char*' type='[1c]'/>
</struct>
<struct name='CMNativeDisplayInfoType' type='{CMNativeDisplayInfoType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;nativeDisplayInfo&quot;{CMNativeDisplayInfo=&quot;dataSize&quot;I&quot;redPhosphor&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;greenPhosphor&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;bluePhosphor&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;whitePoint&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;redGammaValue&quot;i&quot;greenGammaValue&quot;i&quot;blueGammaValue&quot;i&quot;gammaChannels&quot;S&quot;gammaEntryCount&quot;S&quot;gammaEntrySize&quot;S&quot;gammaData&quot;[1c]}}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='nativeDisplayInfo' declared_type='CMNativeDisplayInfo' type='{CMNativeDisplayInfo=&quot;dataSize&quot;I&quot;redPhosphor&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;greenPhosphor&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;bluePhosphor&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;whitePoint&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;redGammaValue&quot;i&quot;greenGammaValue&quot;i&quot;blueGammaValue&quot;i&quot;gammaChannels&quot;S&quot;gammaEntryCount&quot;S&quot;gammaEntrySize&quot;S&quot;gammaData&quot;[1c]}'/>
</struct>
<struct name='CMPS2CRDVMSizeType' type='{CMPS2CRDVMSizeType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;count&quot;I&quot;intentCRD&quot;[1{CMIntentCRDVMSize=&quot;renderingIntent&quot;I&quot;VMSize&quot;I}]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='count' declared_type='UInt32' type='L' type64='I'/>
<field name='intentCRD' declared_type='CMIntentCRDVMSize*' type='[1{CMIntentCRDVMSize=&quot;renderingIntent&quot;I&quot;VMSize&quot;I}]'/>
</struct>
<struct name='CMParametricCurveType' type='{CMParametricCurveType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;functionType&quot;S&quot;reserved2&quot;S&quot;value&quot;[1l]}' type64='{CMParametricCurveType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;functionType&quot;S&quot;reserved2&quot;S&quot;value&quot;[1i]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='functionType' declared_type='UInt16' type='S'/>
<field name='reserved2' declared_type='UInt16' type='S'/>
<field name='value' declared_type='Fixed*' type='[1l]' type64='[1i]'/>
</struct>
<struct name='CMPathLocation' type='{CMPathLocation=&quot;path&quot;[256c]}' type64='{CMPathLocation=&quot;path&quot;[1024c]}'>
<field name='path' declared_type='char*' type='[256c]' type64='[1024c]'/>
</struct>
<struct name='CMProfileIterateData' type='{CMProfileIterateData=&quot;dataVersion&quot;I&quot;header&quot;{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2L]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}&quot;code&quot;s&quot;name&quot;[256C]&quot;location&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;fileLoc&quot;{CMFileLocation=&quot;spec&quot;{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;i&quot;name&quot;[64C]}}&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;ptrLoc&quot;{CMPtrLocation=&quot;p&quot;*}&quot;procLoc&quot;{CMProcedureLocation=&quot;proc&quot;^?&quot;refCon&quot;^v}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[256c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;uniCodeNameCount&quot;I&quot;uniCodeName&quot;^S&quot;asciiName&quot;*&quot;makeAndModel&quot;^{CMMakeAndModel}&quot;digest&quot;^[16C]}' type64='{CMProfileIterateData=&quot;dataVersion&quot;I&quot;header&quot;{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2I]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}&quot;code&quot;s&quot;name&quot;[256C]&quot;location&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;uniCodeNameCount&quot;Q&quot;uniCodeName&quot;^S&quot;asciiName&quot;*&quot;makeAndModel&quot;^{CMMakeAndModel}&quot;digest&quot;^[16C]}'>
<field name='dataVersion' declared_type='UInt32' type='L' type64='I'/>
<field name='header' declared_type='CM2Header' type='{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2L]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}' type64='{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2I]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}'/>
<field name='code' declared_type='ScriptCode' type='s'/>
<field name='name' declared_type='Str255' type='[256C]'/>
<field name='location' declared_type='CMProfileLocation' type='{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;fileLoc&quot;{CMFileLocation=&quot;spec&quot;{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;i&quot;name&quot;[64C]}}&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;ptrLoc&quot;{CMPtrLocation=&quot;p&quot;*}&quot;procLoc&quot;{CMProcedureLocation=&quot;proc&quot;^?&quot;refCon&quot;^v}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[256c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}' type64='{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}'/>
<field name='uniCodeNameCount' declared_type='UniCharCount' type='L' type64='Q'/>
<field name='uniCodeName' declared_type='UniChar*' type='^S'/>
<field name='asciiName' declared_type='unsigned char*' type='*'/>
<field name='makeAndModel' declared_type='CMMakeAndModel*' type='^{CMMakeAndModel=IIIIIIII}'/>
<field name='digest' declared_type='CMProfileMD5*' type='^[16C]'/>
</struct>
<struct name='CMProfileLocation' type='{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;fileLoc&quot;{CMFileLocation=&quot;spec&quot;{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;i&quot;name&quot;[64C]}}&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;ptrLoc&quot;{CMPtrLocation=&quot;p&quot;*}&quot;procLoc&quot;{CMProcedureLocation=&quot;proc&quot;^?&quot;refCon&quot;^v}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[256c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}' type64='{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}'>
<field name='locType' declared_type='short' type='s'/>
<field name='u' declared_type='CMProfLoc' type='(CMProfLoc=&quot;fileLoc&quot;{CMFileLocation=&quot;spec&quot;{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;i&quot;name&quot;[64C]}}&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;ptrLoc&quot;{CMPtrLocation=&quot;p&quot;*}&quot;procLoc&quot;{CMProcedureLocation=&quot;proc&quot;^?&quot;refCon&quot;^v}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[256c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})' type64='(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})'/>
</struct>
<struct name='CMProfileSequenceDescType' type='{CMProfileSequenceDescType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;count&quot;I&quot;data&quot;[1c]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='count' declared_type='UInt32' type='L' type64='I'/>
<field name='data' declared_type='char*' type='[1c]'/>
</struct>
<struct name='CMRGBColor' type='{CMRGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}'>
<field name='red' declared_type='UInt16' type='S'/>
<field name='green' declared_type='UInt16' type='S'/>
<field name='blue' declared_type='UInt16' type='S'/>
</struct>
<struct name='CMS15Fixed16ArrayType' type='{CMS15Fixed16ArrayType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;value&quot;[1l]}' type64='{CMS15Fixed16ArrayType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;value&quot;[1i]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='value' declared_type='Fixed*' type='[1l]' type64='[1i]'/>
</struct>
<struct name='CMScreeningChannelRec' type='{CMScreeningChannelRec=&quot;frequency&quot;i&quot;angle&quot;i&quot;spotFunction&quot;I}'>
<field name='frequency' declared_type='Fixed' type='l' type64='i'/>
<field name='angle' declared_type='Fixed' type='l' type64='i'/>
<field name='spotFunction' declared_type='UInt32' type='L' type64='I'/>
</struct>
<struct name='CMScreeningType' type='{CMScreeningType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;screeningFlag&quot;I&quot;channelCount&quot;I&quot;channelInfo&quot;[1{CMScreeningChannelRec=&quot;frequency&quot;i&quot;angle&quot;i&quot;spotFunction&quot;I}]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='screeningFlag' declared_type='UInt32' type='L' type64='I'/>
<field name='channelCount' declared_type='UInt32' type='L' type64='I'/>
<field name='channelInfo' declared_type='CMScreeningChannelRec*' type='[1{CMScreeningChannelRec=&quot;frequency&quot;i&quot;angle&quot;i&quot;spotFunction&quot;I}]'/>
</struct>
<struct name='CMSignatureType' type='{CMSignatureType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;signature&quot;I}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='signature' declared_type='OSType' type='L' type64='I'/>
</struct>
<struct name='CMTagElemTable' type='{CMTagElemTable=&quot;count&quot;I&quot;tagList&quot;[1{CMTagRecord=&quot;tag&quot;I&quot;elementOffset&quot;I&quot;elementSize&quot;I}]}'>
<field name='count' declared_type='UInt32' type='L' type64='I'/>
<field name='tagList' declared_type='CMTagRecord*' type='[1{CMTagRecord=&quot;tag&quot;I&quot;elementOffset&quot;I&quot;elementSize&quot;I}]'/>
</struct>
<struct name='CMTagRecord' type='{CMTagRecord=&quot;tag&quot;I&quot;elementOffset&quot;I&quot;elementSize&quot;I}'>
<field name='tag' declared_type='OSType' type='L' type64='I'/>
<field name='elementOffset' declared_type='UInt32' type='L' type64='I'/>
<field name='elementSize' declared_type='UInt32' type='L' type64='I'/>
</struct>
<struct name='CMTextDescriptionType' type='{CMTextDescriptionType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;ASCIICount&quot;I&quot;ASCIIName&quot;[2C]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='ASCIICount' declared_type='UInt32' type='L' type64='I'/>
<field name='ASCIIName' declared_type='UInt8*' type='[2C]'/>
</struct>
<struct name='CMTextType' type='{CMTextType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;text&quot;[1C]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='text' declared_type='UInt8*' type='[1C]'/>
</struct>
<struct name='CMU16Fixed16ArrayType' type='{CMU16Fixed16ArrayType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;value&quot;[1L]}' type64='{CMU16Fixed16ArrayType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;value&quot;[1I]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='value' declared_type='UInt32*' type='[1L]' type64='[1I]'/>
</struct>
<struct name='CMUInt16ArrayType' type='{CMUInt16ArrayType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;value&quot;[1S]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='value' declared_type='UInt16*' type='[1S]'/>
</struct>
<struct name='CMUInt32ArrayType' type='{CMUInt32ArrayType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;value&quot;[1L]}' type64='{CMUInt32ArrayType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;value&quot;[1I]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='value' declared_type='UInt32*' type='[1L]' type64='[1I]'/>
</struct>
<struct name='CMUInt64ArrayType' type='{CMUInt64ArrayType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;value&quot;[1L]}' type64='{CMUInt64ArrayType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;value&quot;[1I]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='value' declared_type='UInt32*' type='[1L]' type64='[1I]'/>
</struct>
<struct name='CMUInt8ArrayType' type='{CMUInt8ArrayType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;value&quot;[1C]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='value' declared_type='UInt8*' type='[1C]'/>
</struct>
<struct name='CMUcrBgType' type='{CMUcrBgType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;ucrCount&quot;I&quot;ucrValues&quot;[1S]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='ucrCount' declared_type='UInt32' type='L' type64='I'/>
<field name='ucrValues' declared_type='UInt16*' type='[1S]'/>
</struct>
<struct name='CMUnicodeTextType' type='{CMUnicodeTextType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;text&quot;[1S]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='text' declared_type='UniChar*' type='[1S]'/>
</struct>
<struct name='CMVideoCardGamma' type='{CMVideoCardGamma=&quot;tagType&quot;I&quot;u&quot;(?=&quot;table&quot;{CMVideoCardGammaTable=&quot;channels&quot;S&quot;entryCount&quot;S&quot;entrySize&quot;S&quot;data&quot;[1c]}&quot;formula&quot;{CMVideoCardGammaFormula=&quot;redGamma&quot;i&quot;redMin&quot;i&quot;redMax&quot;i&quot;greenGamma&quot;i&quot;greenMin&quot;i&quot;greenMax&quot;i&quot;blueGamma&quot;i&quot;blueMin&quot;i&quot;blueMax&quot;i})}'>
<field name='tagType' declared_type='UInt32' type='L' type64='I'/>
<field name='u' declared_type='union CMVideoCardGamma::' type='(?=&quot;table&quot;{CMVideoCardGammaTable=&quot;channels&quot;S&quot;entryCount&quot;S&quot;entrySize&quot;S&quot;data&quot;[1c]}&quot;formula&quot;{CMVideoCardGammaFormula=&quot;redGamma&quot;i&quot;redMin&quot;i&quot;redMax&quot;i&quot;greenGamma&quot;i&quot;greenMin&quot;i&quot;greenMax&quot;i&quot;blueGamma&quot;i&quot;blueMin&quot;i&quot;blueMax&quot;i})'/>
</struct>
<struct name='CMVideoCardGammaFormula' type='{CMVideoCardGammaFormula=&quot;redGamma&quot;i&quot;redMin&quot;i&quot;redMax&quot;i&quot;greenGamma&quot;i&quot;greenMin&quot;i&quot;greenMax&quot;i&quot;blueGamma&quot;i&quot;blueMin&quot;i&quot;blueMax&quot;i}'>
<field name='redGamma' declared_type='Fixed' type='l' type64='i'/>
<field name='redMin' declared_type='Fixed' type='l' type64='i'/>
<field name='redMax' declared_type='Fixed' type='l' type64='i'/>
<field name='greenGamma' declared_type='Fixed' type='l' type64='i'/>
<field name='greenMin' declared_type='Fixed' type='l' type64='i'/>
<field name='greenMax' declared_type='Fixed' type='l' type64='i'/>
<field name='blueGamma' declared_type='Fixed' type='l' type64='i'/>
<field name='blueMin' declared_type='Fixed' type='l' type64='i'/>
<field name='blueMax' declared_type='Fixed' type='l' type64='i'/>
</struct>
<struct name='CMVideoCardGammaTable' type='{CMVideoCardGammaTable=&quot;channels&quot;S&quot;entryCount&quot;S&quot;entrySize&quot;S&quot;data&quot;[1c]}'>
<field name='channels' declared_type='UInt16' type='S'/>
<field name='entryCount' declared_type='UInt16' type='S'/>
<field name='entrySize' declared_type='UInt16' type='S'/>
<field name='data' declared_type='char*' type='[1c]'/>
</struct>
<struct name='CMVideoCardGammaType' type='{CMVideoCardGammaType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;gamma&quot;{CMVideoCardGamma=&quot;tagType&quot;I&quot;u&quot;(?=&quot;table&quot;{CMVideoCardGammaTable=&quot;channels&quot;S&quot;entryCount&quot;S&quot;entrySize&quot;S&quot;data&quot;[1c]}&quot;formula&quot;{CMVideoCardGammaFormula=&quot;redGamma&quot;i&quot;redMin&quot;i&quot;redMax&quot;i&quot;greenGamma&quot;i&quot;greenMin&quot;i&quot;greenMax&quot;i&quot;blueGamma&quot;i&quot;blueMin&quot;i&quot;blueMax&quot;i})}}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='gamma' declared_type='CMVideoCardGamma' type='{CMVideoCardGamma=&quot;tagType&quot;I&quot;u&quot;(?=&quot;table&quot;{CMVideoCardGammaTable=&quot;channels&quot;S&quot;entryCount&quot;S&quot;entrySize&quot;S&quot;data&quot;[1c]}&quot;formula&quot;{CMVideoCardGammaFormula=&quot;redGamma&quot;i&quot;redMin&quot;i&quot;redMax&quot;i&quot;greenGamma&quot;i&quot;greenMin&quot;i&quot;greenMax&quot;i&quot;blueGamma&quot;i&quot;blueMin&quot;i&quot;blueMax&quot;i})}'/>
</struct>
<struct name='CMViewingConditionsType' type='{CMViewingConditionsType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;illuminant&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;surround&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;stdIlluminant&quot;I}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='illuminant' declared_type='CMFixedXYZColor' type='{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}'/>
<field name='surround' declared_type='CMFixedXYZColor' type='{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}'/>
<field name='stdIlluminant' declared_type='UInt32' type='L' type64='I'/>
</struct>
<struct name='CMXYZColor' type='{CMXYZColor=&quot;X&quot;S&quot;Y&quot;S&quot;Z&quot;S}'>
<field name='X' declared_type='CMXYZComponent' type='S'/>
<field name='Y' declared_type='CMXYZComponent' type='S'/>
<field name='Z' declared_type='CMXYZComponent' type='S'/>
</struct>
<struct name='CMXYZType' type='{CMXYZType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;XYZ&quot;[1{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}]}'>
<field name='typeDescriptor' declared_type='OSType' type='L' type64='I'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
<field name='XYZ' declared_type='CMFixedXYZColor*' type='[1{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}]'/>
</struct>
<struct name='CMYxyColor' type='{CMYxyColor=&quot;capY&quot;S&quot;x&quot;S&quot;y&quot;S}'>
<field name='capY' declared_type='UInt16' type='S'/>
<field name='x' declared_type='UInt16' type='S'/>
<field name='y' declared_type='UInt16' type='S'/>
</struct>
<struct name='NCMConcatProfileSet' type='{NCMConcatProfileSet=&quot;cmm&quot;I&quot;flags&quot;I&quot;flagsMask&quot;I&quot;profileCount&quot;I&quot;profileSpecs&quot;[1{NCMConcatProfileSpec=&quot;renderingIntent&quot;I&quot;transformTag&quot;I&quot;profile&quot;^{OpaqueCMProfileRef}}]}'>
<field name='cmm' declared_type='OSType' type='L' type64='I'/>
<field name='flags' declared_type='UInt32' type='L' type64='I'/>
<field name='flagsMask' declared_type='UInt32' type='L' type64='I'/>
<field name='profileCount' declared_type='UInt32' type='L' type64='I'/>
<field name='profileSpecs' declared_type='NCMConcatProfileSpec*' type='[1{NCMConcatProfileSpec=&quot;renderingIntent&quot;I&quot;transformTag&quot;I&quot;profile&quot;^{OpaqueCMProfileRef}}]'/>
</struct>
<struct name='NCMConcatProfileSpec' type='{NCMConcatProfileSpec=&quot;renderingIntent&quot;I&quot;transformTag&quot;I&quot;profile&quot;^{OpaqueCMProfileRef}}'>
<field name='renderingIntent' declared_type='UInt32' type='L' type64='I'/>
<field name='transformTag' declared_type='UInt32' type='L' type64='I'/>
<field name='profile' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
</struct>
<struct name='NCMDeviceProfileInfo' type='{NCMDeviceProfileInfo=&quot;dataVersion&quot;I&quot;profileID&quot;I&quot;profileLoc&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;fileLoc&quot;{CMFileLocation=&quot;spec&quot;{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;i&quot;name&quot;[64C]}}&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;ptrLoc&quot;{CMPtrLocation=&quot;p&quot;*}&quot;procLoc&quot;{CMProcedureLocation=&quot;proc&quot;^?&quot;refCon&quot;^v}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[256c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;profileName&quot;^{__CFDictionary}&quot;profileScope&quot;{CMDeviceScope=&quot;deviceUser&quot;^{__CFString}&quot;deviceHost&quot;^{__CFString}}&quot;reserved&quot;I}' type64='{NCMDeviceProfileInfo=&quot;dataVersion&quot;I&quot;profileID&quot;I&quot;profileLoc&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;profileName&quot;^{__CFDictionary}&quot;profileScope&quot;{CMDeviceScope=&quot;deviceUser&quot;^{__CFString}&quot;deviceHost&quot;^{__CFString}}&quot;reserved&quot;I}'>
<field name='dataVersion' declared_type='UInt32' type='L' type64='I'/>
<field name='profileID' declared_type='CMDeviceProfileID' type='L' type64='I'/>
<field name='profileLoc' declared_type='CMProfileLocation' type='{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;fileLoc&quot;{CMFileLocation=&quot;spec&quot;{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;i&quot;name&quot;[64C]}}&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;ptrLoc&quot;{CMPtrLocation=&quot;p&quot;*}&quot;procLoc&quot;{CMProcedureLocation=&quot;proc&quot;^?&quot;refCon&quot;^v}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[256c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}' type64='{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}'/>
<field name='profileName' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<field name='profileScope' declared_type='CMDeviceProfileScope' type='{CMDeviceScope=&quot;deviceUser&quot;^{__CFString}&quot;deviceHost&quot;^{__CFString}}'/>
<field name='reserved' declared_type='UInt32' type='L' type64='I'/>
</struct>
<cftype name='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<cftype name='CMWorldRef' type='^{OpaqueCMWorldRef=}'/>
<constant name='kCMIlluminantD50' declared_type='float*' type='[3f]' const='true'/>
<constant name='kCMIlluminantD65' declared_type='float*' type='[3f]' const='true'/>
<string_constant name='kCMDefaultDeviceNotification' nsstring='true' value='CMDefaultDeviceNotification'/>
<string_constant name='kCMDefaultDeviceProfileNotification' nsstring='true' value='CMDefaultDeviceProfileNotification'/>
<string_constant name='kCMDeviceOfflineNotification' nsstring='true' value='CMDeviceOfflineNotification'/>
<string_constant name='kCMDeviceOnlineNotification' nsstring='true' value='CMDeviceOnlineNotification'/>
<string_constant name='kCMDeviceProfilesNotification' nsstring='true' value='CMDeviceProfilesNotification'/>
<string_constant name='kCMDeviceRegisteredNotification' nsstring='true' value='CMDeviceRegisteredNotification'/>
<string_constant name='kCMDeviceStateNotification' nsstring='true' value='CMDeviceStateNotification'/>
<string_constant name='kCMDeviceUnregisteredNotification' nsstring='true' value='CMDeviceUnregisteredNotification'/>
<string_constant name='kCMDisplayDeviceProfilesNotification' nsstring='true' value='CMDisplayDeviceProfilesNotification'/>
<string_constant name='kCMPrefsChangedNotification' nsstring='true' value='AppleColorSyncPreferencesChangedNotification'/>
<enum name='CS_MAX_PATH' value64='1024' value='256'/>
<enum name='cm10CLRData' value='1094929490'/>
<enum name='cm11CLRData' value='1111706706'/>
<enum name='cm12CLRData' value='1128483922'/>
<enum name='cm13CLRData' value='1145261138'/>
<enum name='cm14CLRData' value='1162038354'/>
<enum name='cm15CLRData' value='1178815570'/>
<enum name='cm16_8ColorPacking' value='8192'/>
<enum name='cm24_8ColorPacking' value='8448'/>
<enum name='cm32_16ColorPacking' value='9728'/>
<enum name='cm32_32ColorPacking' value='9984'/>
<enum name='cm32_8ColorPacking' value='2048'/>
<enum name='cm3CLRData' value='860048466'/>
<enum name='cm40_8ColorPacking' value='8704'/>
<enum name='cm48_16ColorPacking' value='10496'/>
<enum name='cm48_8ColorPacking' value='8960'/>
<enum name='cm4CLRData' value='876825682'/>
<enum name='cm56_8ColorPacking' value='9216'/>
<enum name='cm5CLRData' value='893602898'/>
<enum name='cm64_16ColorPacking' value='10752'/>
<enum name='cm64_8ColorPacking' value='9472'/>
<enum name='cm6CLRData' value='910380114'/>
<enum name='cm7CLRData' value='927157330'/>
<enum name='cm8CLRData' value='943934546'/>
<enum name='cm8_8ColorPacking' value='10240'/>
<enum name='cm9CLRData' value='960711762'/>
<enum name='cmARGB32PmulSpace' value='6337'/>
<enum name='cmARGB32Space' value='6273'/>
<enum name='cmARGB64LPmulSpace' value='31425'/>
<enum name='cmARGB64LSpace' value='31361'/>
<enum name='cmARGB64PmulSpace' value='15041'/>
<enum name='cmARGB64Space' value='14977'/>
<enum name='cmAToB0Tag' value='1093812784'/>
<enum name='cmAToB1Tag' value='1093812785'/>
<enum name='cmAToB2Tag' value='1093812786'/>
<enum name='cmAbortWriteAccess' value='7'/>
<enum name='cmAbsoluteColorimetric' value='3'/>
<enum name='cmAbstractClass' value='1633842036'/>
<enum name='cmAlphaFirstPacking' value='4096'/>
<enum name='cmAlphaLastPacking' value='0'/>
<enum name='cmAlphaPmulSpace' value='64'/>
<enum name='cmAlphaSpace' value='128'/>
<enum name='cmAsciiData' value='0'/>
<enum name='cmBToA0Tag' value='1110589744'/>
<enum name='cmBToA1Tag' value='1110589745'/>
<enum name='cmBToA2Tag' value='1110589746'/>
<enum name='cmBeginAccess' value='8'/>
<enum name='cmBestMode' value='2'/>
<enum name='cmBinaryData' value='1'/>
<enum name='cmBlackPointCompensation' value='1'/>
<enum name='cmBlackPointCompensationMask' value='4'/>
<enum name='cmBlueColorantTag' value='1649957210'/>
<enum name='cmBlueTRCTag' value='1649693251'/>
<enum name='cmBradfordChromaticAdaptation' value='3'/>
<enum name='cmBufferBasedProfile' value='6'/>
<enum name='cmCMSReservedFlagsMask' value='-65536'/>
<enum name='cmCMYData' value='1129142560'/>
<enum name='cmCMYK32Space' value='2050'/>
<enum name='cmCMYK64LSpace' value='27138'/>
<enum name='cmCMYK64Space' value='10754'/>
<enum name='cmCMYKData' value='1129142603'/>
<enum name='cmCMYKSpace' value='2'/>
<enum name='cmCS1ChromTag' value='1667789421'/>
<enum name='cmCS1CustTag' value='1668641652'/>
<enum name='cmCS1NameTag' value='1851878757'/>
<enum name='cmCS1ProfileVersion' value='256'/>
<enum name='cmCS1TRCTag' value='1953653536'/>
<enum name='cmCS2ProfileVersion' value='33554432'/>
<enum name='cmCalibrationDateTimeTag' value='1667329140'/>
<enum name='cmCameraDeviceClass' value='1668117089'/>
<enum name='cmCharTargetTag' value='1952543335'/>
<enum name='cmChromaticAdaptationTag' value='1667785060'/>
<enum name='cmCloseAccess' value='5'/>
<enum name='cmCloseSpool' value='5'/>
<enum name='cmColorSpaceAlphaMask' value='128'/>
<enum name='cmColorSpaceClass' value='1936744803'/>
<enum name='cmColorSpaceEncodingMask' value='983040'/>
<enum name='cmColorSpacePackingMask' value='65280'/>
<enum name='cmColorSpacePremulAlphaMask' value='64'/>
<enum name='cmColorSpaceReservedMask' value='-1048576'/>
<enum name='cmColorSpaceSpaceAndAlphaMask' value='255'/>
<enum name='cmColorSpaceSpaceMask' value='63'/>
<enum name='cmCopyrightTag' value='1668313716'/>
<enum name='cmCreateNewAccess' value='6'/>
<enum name='cmCurrentDeviceInfoVersion' value='65536'/>
<enum name='cmCurrentProfileInfoVersion' value='65536'/>
<enum name='cmCurrentProfileLocationSize' value64='1032' value='258'/>
<enum name='cmCurrentProfileMajorVersion' value='33554432'/>
<enum name='cmDefaultDeviceID' value='0'/>
<enum name='cmDefaultProfileID' value='0'/>
<enum name='cmDeviceAlreadyRegistered' value='-4228'/>
<enum name='cmDeviceDBNotFoundErr' value='-4227'/>
<enum name='cmDeviceInfoVersion1' value='65536'/>
<enum name='cmDeviceMfgDescTag' value='1684893284'/>
<enum name='cmDeviceModelDescTag' value='1684890724'/>
<enum name='cmDeviceNotRegistered' value='-4229'/>
<enum name='cmDeviceProfileInfoVersion1' value='65536'/>
<enum name='cmDeviceProfileInfoVersion2' value='131072'/>
<enum name='cmDeviceProfilesNotFound' value='-4230'/>
<enum name='cmDeviceStateAppleRsvdBits' value='-16711681'/>
<enum name='cmDeviceStateBusy' value='2'/>
<enum name='cmDeviceStateDefault' value='0'/>
<enum name='cmDeviceStateDeviceRsvdBits' value='16711680'/>
<enum name='cmDeviceStateForceNotify' value='-2147483648'/>
<enum name='cmDeviceStateOffline' value='1'/>
<enum name='cmDisplayClass' value='1835955314'/>
<enum name='cmDisplayDeviceClass' value='1835955314'/>
<enum name='cmDisplayUse' value='1685089401'/>
<enum name='cmDraftMode' value='1'/>
<enum name='cmEmbeddedMask' value='1'/>
<enum name='cmEmbeddedProfile' value='0'/>
<enum name='cmEmbeddedUse' value='1'/>
<enum name='cmEmbeddedUseMask' value='2'/>
<enum name='cmEndAccess' value='9'/>
<enum name='cmFlare0' value='0'/>
<enum name='cmFlare100' value='1'/>
<enum name='cmGamutCheckingMask' value='524288'/>
<enum name='cmGamutResult1Space' value='2828'/>
<enum name='cmGamutResultSpace' value='12'/>
<enum name='cmGamutTag' value='1734438260'/>
<enum name='cmGeometry045or450' value='1'/>
<enum name='cmGeometry0dord0' value='2'/>
<enum name='cmGeometryUnknown' value='0'/>
<enum name='cmGlossy' value='1'/>
<enum name='cmGlossyMatteMask' value='2'/>
<enum name='cmGray16LSpace' value='16394'/>
<enum name='cmGray16Space' value='10'/>
<enum name='cmGray8Space' value='10250'/>
<enum name='cmGrayA16PmulSpace' value='8394'/>
<enum name='cmGrayA16Space' value='8330'/>
<enum name='cmGrayA32LPmulSpace' value='16586'/>
<enum name='cmGrayA32LSpace' value='16522'/>
<enum name='cmGrayA32PmulSpace' value='202'/>
<enum name='cmGrayA32Space' value='138'/>
<enum name='cmGrayAPmulSpace' value='202'/>
<enum name='cmGrayASpace' value='138'/>
<enum name='cmGrayData' value='1196573017'/>
<enum name='cmGraySpace' value='10'/>
<enum name='cmGrayTRCTag' value='1800688195'/>
<enum name='cmGreenColorantTag' value='1733843290'/>
<enum name='cmGreenTRCTag' value='1733579331'/>
<enum name='cmHLS32Space' value='2564'/>
<enum name='cmHLSData' value='1212961568'/>
<enum name='cmHLSSpace' value='4'/>
<enum name='cmHSV32Space' value='2563'/>
<enum name='cmHSVData' value='1213421088'/>
<enum name='cmHSVSpace' value='3'/>
<enum name='cmICCProfileVersion2' value='33554432'/>
<enum name='cmICCProfileVersion21' value='34603008'/>
<enum name='cmICCProfileVersion4' value='67108864'/>
<enum name='cmICCReservedFlagsMask' value='65535'/>
<enum name='cmIlluminantA' value='6'/>
<enum name='cmIlluminantD50' value='1'/>
<enum name='cmIlluminantD55' value='5'/>
<enum name='cmIlluminantD65' value='2'/>
<enum name='cmIlluminantD93' value='3'/>
<enum name='cmIlluminantEquiPower' value='7'/>
<enum name='cmIlluminantF2' value='4'/>
<enum name='cmIlluminantF8' value='8'/>
<enum name='cmIlluminantUnknown' value='0'/>
<enum name='cmInputClass' value='1935896178'/>
<enum name='cmInputUse' value='1768845428'/>
<enum name='cmInternalCFErr' value='-4231'/>
<enum name='cmInterpolationMask' value='262144'/>
<enum name='cmIterateAllDeviceProfiles' value='4'/>
<enum name='cmIterateCurrentDeviceProfiles' value='3'/>
<enum name='cmIterateCustomDeviceProfiles' value='2'/>
<enum name='cmIterateDeviceProfilesMask' value='15'/>
<enum name='cmIterateFactoryDeviceProfiles' value='1'/>
<enum name='cmLAB24Space' value='8456'/>
<enum name='cmLAB32Space' value='2568'/>
<enum name='cmLAB48LSpace' value='26888'/>
<enum name='cmLAB48Space' value='10504'/>
<enum name='cmLABSpace' value='8'/>
<enum name='cmLUV32Space' value='2567'/>
<enum name='cmLUVSpace' value='7'/>
<enum name='cmLabData' value='1281450528'/>
<enum name='cmLinearChromaticAdaptation' value='1'/>
<enum name='cmLinesPer' value='1'/>
<enum name='cmLinkClass' value='1818848875'/>
<enum name='cmLittleEndianPacking' value='16384'/>
<enum name='cmLong10ColorPacking' value='2560'/>
<enum name='cmLong8ColorPacking' value='2048'/>
<enum name='cmLuminanceTag' value='1819635049'/>
<enum name='cmLuvData' value='1282766368'/>
<enum name='cmMCEight8Space' value='9492'/>
<enum name='cmMCEightSpace' value='20'/>
<enum name='cmMCFive8Space' value='8721'/>
<enum name='cmMCFiveSpace' value='17'/>
<enum name='cmMCH5Data' value='1296255029'/>
<enum name='cmMCH6Data' value='1296255030'/>
<enum name='cmMCH7Data' value='1296255031'/>
<enum name='cmMCH8Data' value='1296255032'/>
<enum name='cmMCSeven8Space' value='9235'/>
<enum name='cmMCSevenSpace' value='19'/>
<enum name='cmMCSix8Space' value='8978'/>
<enum name='cmMCSixSpace' value='18'/>
<enum name='cmMacintosh' value='1095782476'/>
<enum name='cmMagicNumber' value='1633907568'/>
<enum name='cmMakeAndModelTag' value='1835888484'/>
<enum name='cmMeasurementTag' value='1835360627'/>
<enum name='cmMediaBlackPointTag' value='1651208308'/>
<enum name='cmMediaWhitePointTag' value='2004119668'/>
<enum name='cmMicrosoft' value='1297303124'/>
<enum name='cmNamedColor2Tag' value='1852009522'/>
<enum name='cmNamedColorClass' value='1852662636'/>
<enum name='cmNamedColorTag' value='1852010348'/>
<enum name='cmNamedData' value='1312902469'/>
<enum name='cmNamedIndexed32LSpace' value='26384'/>
<enum name='cmNamedIndexed32Space' value='10000'/>
<enum name='cmNamedIndexedSpace' value='16'/>
<enum name='cmNativeDisplayInfoTag' value='1852074350'/>
<enum name='cmNoColorPacking' value='0'/>
<enum name='cmNoProfileBase' value='0'/>
<enum name='cmNoSpace' value='0'/>
<enum name='cmNormalMode' value='0'/>
<enum name='cmNumHeaderElements' value='10'/>
<enum name='cmOneBitDirectPacking' value='2816'/>
<enum name='cmOpenReadAccess' value='1'/>
<enum name='cmOpenReadSpool' value='1'/>
<enum name='cmOpenWriteAccess' value='2'/>
<enum name='cmOpenWriteSpool' value='2'/>
<enum name='cmOriginalProfileLocationSize' value='72'/>
<enum name='cmOutputClass' value='1886549106'/>
<enum name='cmOutputUse' value='1869968496'/>
<enum name='cmPS2CRD0Tag' value='1886610480'/>
<enum name='cmPS2CRD1Tag' value='1886610481'/>
<enum name='cmPS2CRD2Tag' value='1886610482'/>
<enum name='cmPS2CRD3Tag' value='1886610483'/>
<enum name='cmPS2CRDVMSizeTag' value='1886615149'/>
<enum name='cmPS2CSATag' value='1886597747'/>
<enum name='cmPS2RenderingIntentTag' value='1886597737'/>
<enum name='cmPS7bit' value='1'/>
<enum name='cmPS8bit' value='2'/>
<enum name='cmParametricType0' value='0'/>
<enum name='cmParametricType1' value='1'/>
<enum name='cmParametricType2' value='2'/>
<enum name='cmParametricType3' value='3'/>
<enum name='cmParametricType4' value='4'/>
<enum name='cmPathBasedProfile' value='5'/>
<enum name='cmPerceptual' value='0'/>
<enum name='cmPreview0Tag' value='1886545200'/>
<enum name='cmPreview1Tag' value='1886545201'/>
<enum name='cmPreview2Tag' value='1886545202'/>
<enum name='cmPrinterDeviceClass' value='1886549106'/>
<enum name='cmProfileDescriptionMLTag' value='1685283693'/>
<enum name='cmProfileDescriptionTag' value='1684370275'/>
<enum name='cmProfileIterateDataVersion1' value='65536'/>
<enum name='cmProfileIterateDataVersion2' value='131072'/>
<enum name='cmProfileIterateDataVersion3' value='196608'/>
<enum name='cmProfileMajorVersionMask' value='-16777216'/>
<enum name='cmProfileSequenceDescTag' value='1886610801'/>
<enum name='cmProofDeviceClass' value='1886549350'/>
<enum name='cmProofUse' value='1886549350'/>
<enum name='cmPrtrDefaultScreens' value='0'/>
<enum name='cmQualityMask' value='196608'/>
<enum name='cmRGB16LSpace' value='17665'/>
<enum name='cmRGB16Space' value='1281'/>
<enum name='cmRGB24Space' value='8449'/>
<enum name='cmRGB32Space' value='2049'/>
<enum name='cmRGB48LSpace' value='26881'/>
<enum name='cmRGB48Space' value='10497'/>
<enum name='cmRGB565LSpace' value='17921'/>
<enum name='cmRGB565Space' value='1537'/>
<enum name='cmRGBA32PmulSpace' value='2241'/>
<enum name='cmRGBA32Space' value='2177'/>
<enum name='cmRGBA64LPmulSpace' value='27329'/>
<enum name='cmRGBA64LSpace' value='27265'/>
<enum name='cmRGBA64PmulSpace' value='10945'/>
<enum name='cmRGBA64Space' value='10881'/>
<enum name='cmRGBAPmulSpace' value='193'/>
<enum name='cmRGBASpace' value='129'/>
<enum name='cmRGBData' value='1380401696'/>
<enum name='cmRGBSpace' value='1'/>
<enum name='cmReadAccess' value='3'/>
<enum name='cmReadSpool' value='3'/>
<enum name='cmRedColorantTag' value='1918392666'/>
<enum name='cmRedTRCTag' value='1918128707'/>
<enum name='cmReflective' value='0'/>
<enum name='cmReflectiveTransparentMask' value='1'/>
<enum name='cmRelativeColorimetric' value='1'/>
<enum name='cmReservedSpace1' value='9'/>
<enum name='cmReservedSpace2' value='11'/>
<enum name='cmReverseChannelPacking' value='32768'/>
<enum name='cmSRGB16ChannelEncoding' value='65536'/>
<enum name='cmSRGBData' value='1934772034'/>
<enum name='cmSaturation' value='2'/>
<enum name='cmScannerDeviceClass' value='1935896178'/>
<enum name='cmScreeningDescTag' value='1935897188'/>
<enum name='cmScreeningTag' value='1935897198'/>
<enum name='cmSigCrdInfoType' value='1668441193'/>
<enum name='cmSigCurveType' value='1668641398'/>
<enum name='cmSigDataType' value='1684108385'/>
<enum name='cmSigDateTimeType' value='1685350765'/>
<enum name='cmSigLut16Type' value='1835430962'/>
<enum name='cmSigLut8Type' value='1835430961'/>
<enum name='cmSigMakeAndModelType' value='1835888484'/>
<enum name='cmSigMeasurementType' value='1835360627'/>
<enum name='cmSigMultiFunctA2BType' value='1832993312'/>
<enum name='cmSigMultiFunctB2AType' value='1833058592'/>
<enum name='cmSigMultiLocalizedUniCodeType' value='1835824483'/>
<enum name='cmSigNamedColor2Type' value='1852009522'/>
<enum name='cmSigNamedColorType' value='1852010348'/>
<enum name='cmSigNativeDisplayInfoType' value='1852074350'/>
<enum name='cmSigPS2CRDVMSizeType' value='1886615149'/>
<enum name='cmSigParametricCurveType' value='1885434465'/>
<enum name='cmSigProfileDescriptionType' value='1684370275'/>
<enum name='cmSigProfileSequenceDescType' value='1886610801'/>
<enum name='cmSigS15Fixed16Type' value='1936077618'/>
<enum name='cmSigScreeningType' value='1935897198'/>
<enum name='cmSigSignatureType' value='1936287520'/>
<enum name='cmSigTextType' value='1952807028'/>
<enum name='cmSigU16Fixed16Type' value='1969632050'/>
<enum name='cmSigU1Fixed15Type' value='1969631542'/>
<enum name='cmSigUInt16Type' value='1969828150'/>
<enum name='cmSigUInt32Type' value='1969828658'/>
<enum name='cmSigUInt64Type' value='1969829428'/>
<enum name='cmSigUInt8Type' value='1969827896'/>
<enum name='cmSigUcrBgType' value='1650877472'/>
<enum name='cmSigUnicodeTextType' value='1970567284'/>
<enum name='cmSigVideoCardGammaType' value='1986226036'/>
<enum name='cmSigViewingConditionsType' value='1986618743'/>
<enum name='cmSigXYZType' value='1482250784'/>
<enum name='cmSiliconGraphics' value='1397180704'/>
<enum name='cmSolaris' value='1398099543'/>
<enum name='cmSpotFunctionCross' value='7'/>
<enum name='cmSpotFunctionDefault' value='1'/>
<enum name='cmSpotFunctionDiamond' value='3'/>
<enum name='cmSpotFunctionEllipse' value='4'/>
<enum name='cmSpotFunctionLine' value='5'/>
<enum name='cmSpotFunctionRound' value='2'/>
<enum name='cmSpotFunctionSquare' value='6'/>
<enum name='cmSpotFunctionUnknown' value='0'/>
<enum name='cmStdobs1931TwoDegrees' value='1'/>
<enum name='cmStdobs1964TenDegrees' value='2'/>
<enum name='cmStdobsUnknown' value='0'/>
<enum name='cmTaligent' value='1413959252'/>
<enum name='cmTechnologyAMDisplay' value='1095582752'/>
<enum name='cmTechnologyCRTDisplay' value='1129468960'/>
<enum name='cmTechnologyDigitalCamera' value='1684234605'/>
<enum name='cmTechnologyDyeSublimationPrinter' value='1685288290'/>
<enum name='cmTechnologyElectrophotographicPrinter' value='1701865583'/>
<enum name='cmTechnologyElectrostaticPrinter' value='1702065249'/>
<enum name='cmTechnologyFilmScanner' value='1718838126'/>
<enum name='cmTechnologyFilmWriter' value='1718645358'/>
<enum name='cmTechnologyFlexography' value='1718379896'/>
<enum name='cmTechnologyGravure' value='1735549302'/>
<enum name='cmTechnologyInkJetPrinter' value='1768580468'/>
<enum name='cmTechnologyOffsetLithography' value='1868981875'/>
<enum name='cmTechnologyPMDisplay' value='1347240992'/>
<enum name='cmTechnologyPhotoCD' value='1263551300'/>
<enum name='cmTechnologyPhotoImageSetter' value='1768777587'/>
<enum name='cmTechnologyPhotographicPaperPrinter' value='1919969391'/>
<enum name='cmTechnologyProjectionTelevision' value='1886024822'/>
<enum name='cmTechnologyReflectiveScanner' value='1920164718'/>
<enum name='cmTechnologySilkscreen' value='1936288875'/>
<enum name='cmTechnologyTag' value='1952801640'/>
<enum name='cmTechnologyThermalWaxPrinter' value='1953980792'/>
<enum name='cmTechnologyVideoCamera' value='1986618467'/>
<enum name='cmTechnologyVideoMonitor' value='1986618477'/>
<enum name='cmTextureRGBtoRGBX16' value='1'/>
<enum name='cmTextureRGBtoRGBX8' value='0'/>
<enum name='cmTextureRGBtoRGBXFloat32' value='2'/>
<enum name='cmUcrBgTag' value='1650877472'/>
<enum name='cmUseDefaultChromaticAdaptation' value='0'/>
<enum name='cmVideoCardGammaFormulaType' value='1'/>
<enum name='cmVideoCardGammaTableType' value='0'/>
<enum name='cmVideoCardGammaTag' value='1986226036'/>
<enum name='cmViewingConditionsDescTag' value='1987405156'/>
<enum name='cmViewingConditionsTag' value='1986618743'/>
<enum name='cmVonKriesChromaticAdaptation' value='2'/>
<enum name='cmWord565ColorPacking' value='1536'/>
<enum name='cmWord5ColorPacking' value='1280'/>
<enum name='cmWriteAccess' value='4'/>
<enum name='cmWriteSpool' value='4'/>
<enum name='cmXYZ24Space' value='8454'/>
<enum name='cmXYZ32Space' value='2566'/>
<enum name='cmXYZ48LSpace' value='26886'/>
<enum name='cmXYZ48Space' value='10502'/>
<enum name='cmXYZData' value='1482250784'/>
<enum name='cmXYZSpace' value='6'/>
<enum name='cmYCbCrData' value='1497588338'/>
<enum name='cmYXY32Space' value='2565'/>
<enum name='cmYXYSpace' value='5'/>
<enum name='cmYxyData' value='1501067552'/>
<enum name='kCMFloatBitmapFlagsAlpha' value='1'/>
<enum name='kCMFloatBitmapFlagsAlphaPremul' value='2'/>
<enum name='kCMFloatBitmapFlagsNone' value='0'/>
<enum name='kCMFloatBitmapFlagsRangeClipped' value='4'/>
<enum name='kDefaultCMMSignature' value='1634758764'/>
<enum name='kDeviceToPCS' value='1'/>
<enum name='kNoTransform' value='0'/>
<enum name='kPCSToDevice' value='2'/>
<enum name='kPCSToPCS' value='3'/>
<enum name='kUseAtoB' value='1'/>
<enum name='kUseBtoA' value='2'/>
<enum name='kUseBtoB' value='3'/>
<enum name='kUseProfileIntent' value='-1'/>
<function name='CMCloneProfileRef'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMCloseProfile'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMConvertRGBFloatBitmap'>
<arg name='src' declared_type='CMFloatBitmap*' type='^{CMFloatBitmap=L[16^f]IIiiIi}' type64='^{CMFloatBitmap=Q[16^f]QQqqIi}' const='true'/>
<arg name='dst' declared_type='CMFloatBitmap*' type='^{CMFloatBitmap=L[16^f]IIiiIi}' type64='^{CMFloatBitmap=Q[16^f]QQqqIi}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMConvertXYZFloatBitmap'>
<arg name='src' declared_type='CMFloatBitmap*' type='^{CMFloatBitmap=L[16^f]IIiiIi}' type64='^{CMFloatBitmap=Q[16^f]QQqqIi}' const='true'/>
<arg name='srcIlluminantXYZ' declared_type='float*' type='^f' const='true'/>
<arg name='dst' declared_type='CMFloatBitmap*' type='^{CMFloatBitmap=L[16^f]IIiiIi}' type64='^{CMFloatBitmap=Q[16^f]QQqqIi}'/>
<arg name='dstIlluminantXYZ' declared_type='float*' type='^f' const='true'/>
<arg name='method' declared_type='CMChromaticAdaptation' type='L' type64='I'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMCopyProfile'>
<arg name='targetProf' declared_type='CMProfileRef*' type='^^{OpaqueCMProfileRef}'/>
<arg name='targetLocation' declared_type='CMProfileLocation*' type='^{CMProfileLocation=s(CMProfLoc={CMFileLocation={FSSpec=si[64C]}}{CMHandleLocation=^*}{CMPtrLocation=*}{CMProcedureLocation=^?^v}{CMPathLocation=[256c]}{CMBufferLocation=^vI})}' type64='^{CMProfileLocation=s(CMProfLoc={CMHandleLocation=^*}{CMPathLocation=[1024c]}{CMBufferLocation=^vI})}' const='true'/>
<arg name='srcProf' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMCopyProfileDescriptionString'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='str' declared_type='CFStringRef*' type='^^{__CFString}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMCopyProfileLocalizedString'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='tag' declared_type='OSType' type='L' type64='I'/>
<arg name='reqLocale' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='locale' declared_type='CFStringRef*' type='^^{__CFString}'/>
<arg name='str' declared_type='CFStringRef*' type='^^{__CFString}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMCopyProfileLocalizedStringDictionary'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='tag' declared_type='OSType' type='L' type64='I'/>
<arg name='theDict' declared_type='CFDictionaryRef*' type='^^{__CFDictionary}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMCountProfileElements'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='elementCount' declared_type='UInt32*' type='^I'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMFloatBitmapMakeChunky'>
<arg name='buffer' declared_type='float*' type='^f'/>
<arg name='height' declared_type='size_t' type='L' type64='Q'/>
<arg name='width' declared_type='size_t' type='L' type64='Q'/>
<arg name='space' declared_type='OSType' type='L' type64='I'/>
<retval declared_type='CMFloatBitmap' type='{CMFloatBitmap=L[16^f]IIiiIi}' type64='{CMFloatBitmap=Q[16^f]QQqqIi}'/>
</function>
<function name='CMGetColorSyncVersion'>
<arg name='version' declared_type='UInt32*' type='^I'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetDefaultDevice'>
<arg name='deviceClass' declared_type='CMDeviceClass' type='L' type64='I'/>
<arg name='deviceID' declared_type='CMDeviceID*' type='^I'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetDefaultProfileBySpace'>
<arg name='dataColorSpace' declared_type='OSType' type='L' type64='I'/>
<arg name='prof' declared_type='CMProfileRef*' type='^^{OpaqueCMProfileRef}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetDefaultProfileByUse'>
<arg name='use' declared_type='OSType' type='L' type64='I'/>
<arg name='prof' declared_type='CMProfileRef*' type='^^{OpaqueCMProfileRef}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetDeviceDefaultProfileID'>
<arg name='deviceClass' declared_type='CMDeviceClass' type='L' type64='I'/>
<arg name='deviceID' declared_type='CMDeviceID' type='L' type64='I'/>
<arg name='defaultProfID' declared_type='CMDeviceProfileID*' type='^I'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetDeviceFactoryProfiles'>
<arg name='deviceClass' declared_type='CMDeviceClass' type='L' type64='I'/>
<arg name='deviceID' declared_type='CMDeviceID' type='L' type64='I'/>
<arg name='defaultProfID' declared_type='CMDeviceProfileID*' type='^I'/>
<arg name='arraySize' declared_type='UInt32*' type='^I'/>
<arg name='deviceProfiles' declared_type='CMDeviceProfileArray*' type='^{CMDeviceProfileArray=I[1{CMDeviceProfileInfo=II{CMProfileLocation=s(CMProfLoc={CMFileLocation={FSSpec=si[64C]}}{CMHandleLocation=^*}{CMPtrLocation=*}{CMProcedureLocation=^?^v}{CMPathLocation=[256c]}{CMBufferLocation=^vI})}^{__CFDictionary}I}]}' type64='^{CMDeviceProfileArray=I[1{CMDeviceProfileInfo=II{CMProfileLocation=s(CMProfLoc={CMHandleLocation=^*}{CMPathLocation=[1024c]}{CMBufferLocation=^vI})}^{__CFDictionary}I}]}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetDeviceInfo'>
<arg name='deviceClass' declared_type='CMDeviceClass' type='L' type64='I'/>
<arg name='deviceID' declared_type='CMDeviceID' type='L' type64='I'/>
<arg name='deviceInfo' declared_type='CMDeviceInfo*' type='^{CMDeviceInfo=III{CMDeviceScope=^{__CFString}^{__CFString}}II^^{__CFDictionary}II}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetDeviceProfile'>
<arg name='deviceClass' declared_type='CMDeviceClass' type='L' type64='I'/>
<arg name='deviceID' declared_type='CMDeviceID' type='L' type64='I'/>
<arg name='profileID' declared_type='CMDeviceProfileID' type='L' type64='I'/>
<arg name='profileLoc' declared_type='CMProfileLocation*' type='^{CMProfileLocation=s(CMProfLoc={CMFileLocation={FSSpec=si[64C]}}{CMHandleLocation=^*}{CMPtrLocation=*}{CMProcedureLocation=^?^v}{CMPathLocation=[256c]}{CMBufferLocation=^vI})}' type64='^{CMProfileLocation=s(CMProfLoc={CMHandleLocation=^*}{CMPathLocation=[1024c]}{CMBufferLocation=^vI})}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetDeviceState'>
<arg name='deviceClass' declared_type='CMDeviceClass' type='L' type64='I'/>
<arg name='deviceID' declared_type='CMDeviceID' type='L' type64='I'/>
<arg name='deviceState' declared_type='CMDeviceState*' type='^I'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetGammaByAVID'>
<arg name='theID' declared_type='CMDisplayIDType' type='L' type64='I'/>
<arg name='gamma' declared_type='CMVideoCardGamma*' type='^{CMVideoCardGamma=I(?={CMVideoCardGammaTable=SSS[1c]}{CMVideoCardGammaFormula=iiiiiiiii})}'/>
<arg name='size' declared_type='UInt32*' type='^I'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetIndNamedColorValue'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='index' declared_type='UInt32' type='L' type64='I'/>
<arg name='deviceColor' declared_type='CMColor*' type='^(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})'/>
<arg name='PCSColor' declared_type='CMColor*' type='^(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetIndProfileElement'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='index' declared_type='UInt32' type='L' type64='I'/>
<arg name='elementSize' declared_type='UInt32*' type='^I'/>
<arg name='elementData' declared_type='void*' type='^v'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetIndProfileElementInfo'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='index' declared_type='UInt32' type='L' type64='I'/>
<arg name='tag' declared_type='OSType*' type='^I'/>
<arg name='elementSize' declared_type='UInt32*' type='^I'/>
<arg name='refs' declared_type='Boolean*' type='^B'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetNamedColorIndex'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='name' declared_type='StringPtr' type='*'/>
<arg name='index' declared_type='UInt32*' type='^I'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetNamedColorInfo'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='deviceChannels' declared_type='UInt32*' type='^I'/>
<arg name='deviceColorSpace' declared_type='OSType*' type='^I'/>
<arg name='PCSColorSpace' declared_type='OSType*' type='^I'/>
<arg name='count' declared_type='UInt32*' type='^I'/>
<arg name='prefix' declared_type='StringPtr' type='*'/>
<arg name='suffix' declared_type='StringPtr' type='*'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetNamedColorName'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='index' declared_type='UInt32' type='L' type64='I'/>
<arg name='name' declared_type='StringPtr' type='*'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetNamedColorValue'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='name' declared_type='StringPtr' type='*'/>
<arg name='deviceColor' declared_type='CMColor*' type='^(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})'/>
<arg name='PCSColor' declared_type='CMColor*' type='^(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetPS2ColorRendering'>
<arg name='srcProf' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='dstProf' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='flags' declared_type='UInt32' type='L' type64='I'/>
<arg name='proc' function_pointer='true' declared_type='CMFlattenUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg name='refCon' declared_type='void*' type='^v'/>
<arg name='preferredCMMnotfound' declared_type='Boolean*' type='^B'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetPS2ColorRenderingIntent'>
<arg name='srcProf' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='flags' declared_type='UInt32' type='L' type64='I'/>
<arg name='proc' function_pointer='true' declared_type='CMFlattenUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg name='refCon' declared_type='void*' type='^v'/>
<arg name='preferredCMMnotfound' declared_type='Boolean*' type='^B'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetPS2ColorRenderingVMSize'>
<arg name='srcProf' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='dstProf' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='vmSize' declared_type='UInt32*' type='^I'/>
<arg name='preferredCMMnotfound' declared_type='Boolean*' type='^B'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetPS2ColorSpace'>
<arg name='srcProf' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='flags' declared_type='UInt32' type='L' type64='I'/>
<arg name='proc' function_pointer='true' declared_type='CMFlattenUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg name='refCon' declared_type='void*' type='^v'/>
<arg name='preferredCMMnotfound' declared_type='Boolean*' type='^B'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetPartialProfileElement'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='tag' declared_type='OSType' type='L' type64='I'/>
<arg name='offset' declared_type='UInt32' type='L' type64='I'/>
<arg name='byteCount' declared_type='UInt32*' type='^I'/>
<arg name='elementData' declared_type='void*' type='^v'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetProfileByAVID'>
<arg name='theID' declared_type='CMDisplayIDType' type='L' type64='I'/>
<arg name='prof' declared_type='CMProfileRef*' type='^^{OpaqueCMProfileRef}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetProfileDescriptions'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='aName' declared_type='char*' type='*'/>
<arg name='aCount' declared_type='UInt32*' type='^I'/>
<arg name='mName' declared_type='unsigned char*' type='*'/>
<arg name='mCode' declared_type='ScriptCode*' type='^s'/>
<arg name='uName' declared_type='UniChar*' type='^S'/>
<arg name='uCount' declared_type='UniCharCount*' type='^I' type64='^Q'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetProfileElement'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='tag' declared_type='OSType' type='L' type64='I'/>
<arg name='elementSize' declared_type='UInt32*' type='^I'/>
<arg name='elementData' declared_type='void*' type='^v'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetProfileHeader'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='header' declared_type='CMAppleProfileHeader*' type='^(CMAppleProfileHeader={CMHeader=IIIIIII[2L]IIII{CMXYZColor=SSS}{CMXYZColor=SSS}}{CM2Header=IIIIII{CMDateTime=SSSSSS}IIIII[2L]I{CMFixedXYZColor=iii}I[44c]}{CM4Header=IIIIII{CMDateTime=SSSSSS}IIIII[2L]I{CMFixedXYZColor=iii}I[16C][28c]})' type64='^(CMAppleProfileHeader={CM2Header=IIIIII{CMDateTime=SSSSSS}IIIII[2I]I{CMFixedXYZColor=iii}I[44c]}{CM4Header=IIIIII{CMDateTime=SSSSSS}IIIII[2I]I{CMFixedXYZColor=iii}I[16C][28c]})'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetProfileMD5'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='digest' declared_type='unsigned char*' type='*'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetProfileRefCount'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='count' declared_type='long*' type='^l' type64='^q'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMGetSystemProfile'>
<arg name='prof' declared_type='CMProfileRef*' type='^^{OpaqueCMProfileRef}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMIterateCMMInfo'>
<arg name='proc' function_pointer='true' declared_type='CMMIterateUPP' type='^?'>
<arg declared_type='CMMInfo*' type='^{CMMInfo=IIII[32C][256C]I[32S]I[256S]}' type64='^{CMMInfo=QIII[32C][256C]Q[32S]Q[256S]}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg name='count' declared_type='UInt32*' type='^I'/>
<arg name='refCon' declared_type='void*' type='^v'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMIterateColorDevices'>
<arg name='proc' function_pointer='true' declared_type='CMIterateDeviceInfoProcPtr' type='^?'>
<arg declared_type='CMDeviceInfo*' type='^{CMDeviceInfo=III{CMDeviceScope=^{__CFString}^{__CFString}}II^^{__CFDictionary}II}' const='true'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg name='seed' declared_type='UInt32*' type='^I'/>
<arg name='count' declared_type='UInt32*' type='^I'/>
<arg name='refCon' declared_type='void*' type='^v'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMIterateColorSyncFolder'>
<arg name='proc' function_pointer='true' declared_type='CMProfileIterateUPP' type='^?'>
<arg declared_type='CMProfileIterateData*' type='^{CMProfileIterateData=I{CM2Header=IIIIII{CMDateTime=SSSSSS}IIIII[2L]I{CMFixedXYZColor=iii}I[44c]}s[256C]{CMProfileLocation=s(CMProfLoc={CMFileLocation={FSSpec=si[64C]}}{CMHandleLocation=^*}{CMPtrLocation=*}{CMProcedureLocation=^?^v}{CMPathLocation=[256c]}{CMBufferLocation=^vI})}I^S*^{CMMakeAndModel}^[16C]}' type64='^{CMProfileIterateData=I{CM2Header=IIIIII{CMDateTime=SSSSSS}IIIII[2I]I{CMFixedXYZColor=iii}I[44c]}s[256C]{CMProfileLocation=s(CMProfLoc={CMHandleLocation=^*}{CMPathLocation=[1024c]}{CMBufferLocation=^vI})}Q^S*^{CMMakeAndModel}^[16C]}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg name='seed' declared_type='UInt32*' type='^I'/>
<arg name='count' declared_type='UInt32*' type='^I'/>
<arg name='refCon' declared_type='void*' type='^v'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMIterateDeviceProfiles'>
<arg name='proc' function_pointer='true' declared_type='CMIterateDeviceProfileProcPtr' type='^?'>
<arg declared_type='CMDeviceInfo*' type='^{CMDeviceInfo=III{CMDeviceScope=^{__CFString}^{__CFString}}II^^{__CFDictionary}II}' const='true'/>
<arg declared_type='NCMDeviceProfileInfo*' type='^{NCMDeviceProfileInfo=II{CMProfileLocation=s(CMProfLoc={CMFileLocation={FSSpec=si[64C]}}{CMHandleLocation=^*}{CMPtrLocation=*}{CMProcedureLocation=^?^v}{CMPathLocation=[256c]}{CMBufferLocation=^vI})}^{__CFDictionary}{CMDeviceScope=^{__CFString}^{__CFString}}I}' type64='^{NCMDeviceProfileInfo=II{CMProfileLocation=s(CMProfLoc={CMHandleLocation=^*}{CMPathLocation=[1024c]}{CMBufferLocation=^vI})}^{__CFDictionary}{CMDeviceScope=^{__CFString}^{__CFString}}I}' const='true'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg name='seed' declared_type='UInt32*' type='^I'/>
<arg name='count' declared_type='UInt32*' type='^I'/>
<arg name='flags' declared_type='UInt32' type='L' type64='I'/>
<arg name='refCon' declared_type='void*' type='^v'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMLaunchControlPanel'>
<arg name='flags' declared_type='UInt32' type='L' type64='I'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMM_CheckBitmap'>
<arg name='cw' declared_type='CMWorldRef' type='^{OpaqueCMWorldRef=}'/>
<arg name='bitmap' declared_type='CMBitmap*' type='^{CMBitmap=*IIIIIII}' type64='^{CMBitmap=*QQQQIII}' const='true'/>
<arg name='progressProc' function_pointer='true' declared_type='CMBitmapCallBackUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<arg name='refCon' declared_type='void*' type='^v'/>
<arg name='resultBitmap' declared_type='CMBitmap*' type='^{CMBitmap=*IIIIIII}' type64='^{CMBitmap=*QQQQIII}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMM_CheckColors'>
<arg name='cw' declared_type='CMWorldRef' type='^{OpaqueCMWorldRef=}'/>
<arg name='colors' declared_type='CMColor*' type='^(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})'/>
<arg name='count' declared_type='UInt32' type='L' type64='I'/>
<arg name='result' declared_type='UInt8*' type='*'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMM_ConcatColorWorld'>
<arg name='cw' declared_type='CMWorldRef' type='^{OpaqueCMWorldRef=}'/>
<arg name='profileSet' declared_type='NCMConcatProfileSet*' type='^{NCMConcatProfileSet=IIII[1{NCMConcatProfileSpec=II^{OpaqueCMProfileRef}}]}'/>
<arg name='proc' function_pointer='true' declared_type='CMConcatCallBackUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<arg name='refCon' declared_type='void*' type='^v'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMM_CreateLinkProfile'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='profileSet' declared_type='NCMConcatProfileSet*' type='^{NCMConcatProfileSet=IIII[1{NCMConcatProfileSpec=II^{OpaqueCMProfileRef}}]}'/>
<arg name='proc' function_pointer='true' declared_type='CMConcatCallBackUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<arg name='refCon' declared_type='void*' type='^v'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMM_GetProperty'>
<arg name='cw' declared_type='CMWorldRef' type='^{OpaqueCMWorldRef=}'/>
<arg name='requestedKey' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='CFTypeRef' type='@'/>
</function>
<function name='CMM_MatchBitmap'>
<arg name='cw' declared_type='CMWorldRef' type='^{OpaqueCMWorldRef=}'/>
<arg name='bitmap' declared_type='CMBitmap*' type='^{CMBitmap=*IIIIIII}' type64='^{CMBitmap=*QQQQIII}'/>
<arg name='progressProc' function_pointer='true' declared_type='CMBitmapCallBackUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<arg name='refCon' declared_type='void*' type='^v'/>
<arg name='matchedBitmap' declared_type='CMBitmap*' type='^{CMBitmap=*IIIIIII}' type64='^{CMBitmap=*QQQQIII}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMM_MatchColors'>
<arg name='cw' declared_type='CMWorldRef' type='^{OpaqueCMWorldRef=}'/>
<arg name='colors' declared_type='CMColor*' type='^(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})'/>
<arg name='count' declared_type='UInt32' type='L' type64='I'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMM_MatchFloatBitmap'>
<arg name='cw' declared_type='CMWorldRef' type='^{OpaqueCMWorldRef=}'/>
<arg name='bitmap' declared_type='CMFloatBitmap*' type='^{CMFloatBitmap=L[16^f]IIiiIi}' type64='^{CMFloatBitmap=Q[16^f]QQqqIi}' const='true'/>
<arg name='resultBitmap' declared_type='CMFloatBitmap*' type='^{CMFloatBitmap=L[16^f]IIiiIi}' type64='^{CMFloatBitmap=Q[16^f]QQqqIi}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMM_ValidateProfile'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='valid' declared_type='Boolean*' type='^B'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMMakeProfile'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='spec' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMMatchFloatBitmap'>
<arg name='cw' declared_type='CMWorldRef' type='^{OpaqueCMWorldRef=}'/>
<arg name='src' declared_type='CMFloatBitmap*' type='^{CMFloatBitmap=L[16^f]IIiiIi}' type64='^{CMFloatBitmap=Q[16^f]QQqqIi}' const='true'/>
<arg name='dst' declared_type='CMFloatBitmap*' type='^{CMFloatBitmap=L[16^f]IIiiIi}' type64='^{CMFloatBitmap=Q[16^f]QQqqIi}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMNewProfile'>
<arg name='prof' declared_type='CMProfileRef*' type='^^{OpaqueCMProfileRef}'/>
<arg name='theProfile' declared_type='CMProfileLocation*' type='^{CMProfileLocation=s(CMProfLoc={CMFileLocation={FSSpec=si[64C]}}{CMHandleLocation=^*}{CMPtrLocation=*}{CMProcedureLocation=^?^v}{CMPathLocation=[256c]}{CMBufferLocation=^vI})}' type64='^{CMProfileLocation=s(CMProfLoc={CMHandleLocation=^*}{CMPathLocation=[1024c]}{CMBufferLocation=^vI})}' const='true'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMOpenProfile'>
<arg name='prof' declared_type='CMProfileRef*' type='^^{OpaqueCMProfileRef}'/>
<arg name='theProfile' declared_type='CMProfileLocation*' type='^{CMProfileLocation=s(CMProfLoc={CMFileLocation={FSSpec=si[64C]}}{CMHandleLocation=^*}{CMPtrLocation=*}{CMProcedureLocation=^?^v}{CMPathLocation=[256c]}{CMBufferLocation=^vI})}' type64='^{CMProfileLocation=s(CMProfLoc={CMHandleLocation=^*}{CMPathLocation=[1024c]}{CMBufferLocation=^vI})}' const='true'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMProfileCopyICCData'>
<arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<retval declared_type='CFDataRef' already_retained='true' type='^{__CFData=}'/>
</function>
<function name='CMProfileElementExists'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='tag' declared_type='OSType' type='L' type64='I'/>
<arg name='found' declared_type='Boolean*' type='^B'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMProfileModified'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='modified' declared_type='Boolean*' type='^B'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMRegisterColorDevice'>
<arg name='deviceClass' declared_type='CMDeviceClass' type='L' type64='I'/>
<arg name='deviceID' declared_type='CMDeviceID' type='L' type64='I'/>
<arg name='deviceName' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<arg name='deviceScope' declared_type='CMDeviceScope*' type='^{CMDeviceScope=^{__CFString}^{__CFString}}' const='true'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMRemoveProfileElement'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='tag' declared_type='OSType' type='L' type64='I'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMSetDefaultDevice'>
<arg name='deviceClass' declared_type='CMDeviceClass' type='L' type64='I'/>
<arg name='deviceID' declared_type='CMDeviceID' type='L' type64='I'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMSetDeviceDefaultProfileID'>
<arg name='deviceClass' declared_type='CMDeviceClass' type='L' type64='I'/>
<arg name='deviceID' declared_type='CMDeviceID' type='L' type64='I'/>
<arg name='defaultProfID' declared_type='CMDeviceProfileID' type='L' type64='I'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMSetDeviceFactoryProfiles'>
<arg name='deviceClass' declared_type='CMDeviceClass' type='L' type64='I'/>
<arg name='deviceID' declared_type='CMDeviceID' type='L' type64='I'/>
<arg name='defaultProfID' declared_type='CMDeviceProfileID' type='L' type64='I'/>
<arg name='deviceProfiles' declared_type='CMDeviceProfileArray*' type='^{CMDeviceProfileArray=I[1{CMDeviceProfileInfo=II{CMProfileLocation=s(CMProfLoc={CMFileLocation={FSSpec=si[64C]}}{CMHandleLocation=^*}{CMPtrLocation=*}{CMProcedureLocation=^?^v}{CMPathLocation=[256c]}{CMBufferLocation=^vI})}^{__CFDictionary}I}]}' type64='^{CMDeviceProfileArray=I[1{CMDeviceProfileInfo=II{CMProfileLocation=s(CMProfLoc={CMHandleLocation=^*}{CMPathLocation=[1024c]}{CMBufferLocation=^vI})}^{__CFDictionary}I}]}' const='true'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMSetDeviceProfile'>
<arg name='deviceClass' declared_type='CMDeviceClass' type='L' type64='I'/>
<arg name='deviceID' declared_type='CMDeviceID' type='L' type64='I'/>
<arg name='profileScope' declared_type='CMDeviceProfileScope*' type='^{CMDeviceScope=^{__CFString}^{__CFString}}' const='true'/>
<arg name='profileID' declared_type='CMDeviceProfileID' type='L' type64='I'/>
<arg name='profileLoc' declared_type='CMProfileLocation*' type='^{CMProfileLocation=s(CMProfLoc={CMFileLocation={FSSpec=si[64C]}}{CMHandleLocation=^*}{CMPtrLocation=*}{CMProcedureLocation=^?^v}{CMPathLocation=[256c]}{CMBufferLocation=^vI})}' type64='^{CMProfileLocation=s(CMProfLoc={CMHandleLocation=^*}{CMPathLocation=[1024c]}{CMBufferLocation=^vI})}' const='true'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMSetDeviceState'>
<arg name='deviceClass' declared_type='CMDeviceClass' type='L' type64='I'/>
<arg name='deviceID' declared_type='CMDeviceID' type='L' type64='I'/>
<arg name='deviceState' declared_type='CMDeviceState' type='L' type64='I'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMSetGammaByAVID'>
<arg name='theID' declared_type='CMDisplayIDType' type='L' type64='I'/>
<arg name='gamma' declared_type='CMVideoCardGamma*' type='^{CMVideoCardGamma=I(?={CMVideoCardGammaTable=SSS[1c]}{CMVideoCardGammaFormula=iiiiiiiii})}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMSetPartialProfileElement'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='tag' declared_type='OSType' type='L' type64='I'/>
<arg name='offset' declared_type='UInt32' type='L' type64='I'/>
<arg name='byteCount' declared_type='UInt32' type='L' type64='I'/>
<arg name='elementData' declared_type='void*' type='^v' const='true'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMSetProfileByAVID'>
<arg name='theID' declared_type='CMDisplayIDType' type='L' type64='I'/>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMSetProfileDescriptions'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='aName' declared_type='char*' type='*' const='true'/>
<arg name='aCount' declared_type='UInt32' type='L' type64='I'/>
<arg name='mName' declared_type='ConstStr255Param' type='*'/>
<arg name='mCode' declared_type='ScriptCode' type='s'/>
<arg name='uName' declared_type='UniChar*' type='^S' const='true'/>
<arg name='uCount' declared_type='UniCharCount' type='L' type64='Q'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMSetProfileElement'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='tag' declared_type='OSType' type='L' type64='I'/>
<arg name='elementSize' declared_type='UInt32' type='L' type64='I'/>
<arg name='elementData' declared_type='void*' type='^v' const='true'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMSetProfileElementReference'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='elementTag' declared_type='OSType' type='L' type64='I'/>
<arg name='referenceTag' declared_type='OSType' type='L' type64='I'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMSetProfileElementSize'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='tag' declared_type='OSType' type='L' type64='I'/>
<arg name='elementSize' declared_type='UInt32' type='L' type64='I'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMSetProfileHeader'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='header' declared_type='CMAppleProfileHeader*' type='^(CMAppleProfileHeader={CMHeader=IIIIIII[2L]IIII{CMXYZColor=SSS}{CMXYZColor=SSS}}{CM2Header=IIIIII{CMDateTime=SSSSSS}IIIII[2L]I{CMFixedXYZColor=iii}I[44c]}{CM4Header=IIIIII{CMDateTime=SSSSSS}IIIII[2L]I{CMFixedXYZColor=iii}I[16C][28c]})' type64='^(CMAppleProfileHeader={CM2Header=IIIIII{CMDateTime=SSSSSS}IIIII[2I]I{CMFixedXYZColor=iii}I[44c]}{CM4Header=IIIIII{CMDateTime=SSSSSS}IIIII[2I]I{CMFixedXYZColor=iii}I[16C][28c]})' const='true'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMSetProfileLocalizedStringDictionary'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='tag' declared_type='OSType' type='L' type64='I'/>
<arg name='theDict' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMUnregisterColorDevice'>
<arg name='deviceClass' declared_type='CMDeviceClass' type='L' type64='I'/>
<arg name='deviceID' declared_type='CMDeviceID' type='L' type64='I'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMUpdateProfile'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CMValidateProfile'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='valid' declared_type='Boolean*' type='^B'/>
<arg name='preferredCMMnotfound' declared_type='Boolean*' type='^B'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CWCheckBitmap'>
<arg name='cw' declared_type='CMWorldRef' type='^{OpaqueCMWorldRef=}'/>
<arg name='bitmap' declared_type='CMBitmap*' type='^{CMBitmap=*IIIIIII}' type64='^{CMBitmap=*QQQQIII}' const='true'/>
<arg name='progressProc' function_pointer='true' declared_type='CMBitmapCallBackUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<arg name='refCon' declared_type='void*' type='^v'/>
<arg name='resultBitmap' declared_type='CMBitmap*' type='^{CMBitmap=*IIIIIII}' type64='^{CMBitmap=*QQQQIII}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CWCheckColors'>
<arg name='cw' declared_type='CMWorldRef' type='^{OpaqueCMWorldRef=}'/>
<arg name='myColors' declared_type='CMColor*' type='^(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})'/>
<arg name='count' declared_type='size_t' type='L' type64='Q'/>
<arg name='result' declared_type='UInt8*' type='*'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CWColorWorldGetProperty'>
<arg name='cw' declared_type='CMWorldRef' type='^{OpaqueCMWorldRef=}'/>
<arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='void*' type='^v' const='true'/>
</function>
<function name='CWColorWorldSetProperty'>
<arg name='cw' declared_type='CMWorldRef' type='^{OpaqueCMWorldRef=}'/>
<arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='value' declared_type='CFTypeRef' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CWDisposeColorWorld'>
<arg name='cw' declared_type='CMWorldRef' type='^{OpaqueCMWorldRef=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CWFillLookupTexture'>
<arg name='cw' declared_type='CMWorldRef' type='^{OpaqueCMWorldRef=}'/>
<arg name='gridPoints' declared_type='UInt32' type='L' type64='I'/>
<arg name='format' declared_type='UInt32' type='L' type64='I'/>
<arg name='dataSize' declared_type='UInt32' type='L' type64='I'/>
<arg name='data' declared_type='void*' type='^v'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CWGetCMMSignature'>
<arg name='cw' declared_type='CMWorldRef' type='^{OpaqueCMWorldRef=}'/>
<retval declared_type='UInt32' type='L' type64='I'/>
</function>
<function name='CWMatchBitmap'>
<arg name='cw' declared_type='CMWorldRef' type='^{OpaqueCMWorldRef=}'/>
<arg name='bitmap' declared_type='CMBitmap*' type='^{CMBitmap=*IIIIIII}' type64='^{CMBitmap=*QQQQIII}'/>
<arg name='progressProc' function_pointer='true' declared_type='CMBitmapCallBackUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<arg name='refCon' declared_type='void*' type='^v'/>
<arg name='matchedBitmap' declared_type='CMBitmap*' type='^{CMBitmap=*IIIIIII}' type64='^{CMBitmap=*QQQQIII}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='CWMatchColors'>
<arg name='cw' declared_type='CMWorldRef' type='^{OpaqueCMWorldRef=}'/>
<arg name='myColors' declared_type='CMColor*' type='^(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})'/>
<arg name='count' declared_type='size_t' type='L' type64='Q'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='DisposeCMBitmapCallBackUPP' inline='true'>
<arg name='userUPP' function_pointer='true' declared_type='CMBitmapCallBackUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeCMConcatCallBackUPP' inline='true'>
<arg name='userUPP' function_pointer='true' declared_type='CMConcatCallBackUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeCMFlattenUPP' inline='true'>
<arg name='userUPP' function_pointer='true' declared_type='CMFlattenUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeCMMIterateUPP' inline='true'>
<arg name='userUPP' function_pointer='true' declared_type='CMMIterateUPP' type='^?'>
<arg declared_type='CMMInfo*' type='^{CMMInfo=IIII[32C][256C]I[32S]I[256S]}' type64='^{CMMInfo=QIII[32C][256C]Q[32S]Q[256S]}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeCMProfileIterateUPP' inline='true'>
<arg name='userUPP' function_pointer='true' declared_type='CMProfileIterateUPP' type='^?'>
<arg declared_type='CMProfileIterateData*' type='^{CMProfileIterateData=I{CM2Header=IIIIII{CMDateTime=SSSSSS}IIIII[2L]I{CMFixedXYZColor=iii}I[44c]}s[256C]{CMProfileLocation=s(CMProfLoc={CMFileLocation={FSSpec=si[64C]}}{CMHandleLocation=^*}{CMPtrLocation=*}{CMProcedureLocation=^?^v}{CMPathLocation=[256c]}{CMBufferLocation=^vI})}I^S*^{CMMakeAndModel}^[16C]}' type64='^{CMProfileIterateData=I{CM2Header=IIIIII{CMDateTime=SSSSSS}IIIII[2I]I{CMFixedXYZColor=iii}I[44c]}s[256C]{CMProfileLocation=s(CMProfLoc={CMHandleLocation=^*}{CMPathLocation=[1024c]}{CMBufferLocation=^vI})}Q^S*^{CMMakeAndModel}^[16C]}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='InvokeCMBitmapCallBackUPP' inline='true'>
<arg name='progress' declared_type='SInt32' type='l' type64='i'/>
<arg name='refCon' declared_type='void*' type='^v'/>
<arg name='userUPP' function_pointer='true' declared_type='CMBitmapCallBackUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='InvokeCMConcatCallBackUPP' inline='true'>
<arg name='progress' declared_type='SInt32' type='l' type64='i'/>
<arg name='refCon' declared_type='void*' type='^v'/>
<arg name='userUPP' function_pointer='true' declared_type='CMConcatCallBackUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='InvokeCMFlattenUPP' inline='true'>
<arg name='command' declared_type='SInt32' type='l' type64='i'/>
<arg name='size' declared_type='long*' type='^l' type64='^q'/>
<arg name='data' declared_type='void*' type='^v'/>
<arg name='refCon' declared_type='void*' type='^v'/>
<arg name='userUPP' function_pointer='true' declared_type='CMFlattenUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InvokeCMMIterateUPP' inline='true'>
<arg name='iterateData' declared_type='CMMInfo*' type='^{CMMInfo=IIII[32C][256C]I[32S]I[256S]}' type64='^{CMMInfo=QIII[32C][256C]Q[32S]Q[256S]}'/>
<arg name='refCon' declared_type='void*' type='^v'/>
<arg name='userUPP' function_pointer='true' declared_type='CMMIterateUPP' type='^?'>
<arg declared_type='CMMInfo*' type='^{CMMInfo=IIII[32C][256C]I[32S]I[256S]}' type64='^{CMMInfo=QIII[32C][256C]Q[32S]Q[256S]}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InvokeCMProfileIterateUPP' inline='true'>
<arg name='iterateData' declared_type='CMProfileIterateData*' type='^{CMProfileIterateData=I{CM2Header=IIIIII{CMDateTime=SSSSSS}IIIII[2L]I{CMFixedXYZColor=iii}I[44c]}s[256C]{CMProfileLocation=s(CMProfLoc={CMFileLocation={FSSpec=si[64C]}}{CMHandleLocation=^*}{CMPtrLocation=*}{CMProcedureLocation=^?^v}{CMPathLocation=[256c]}{CMBufferLocation=^vI})}I^S*^{CMMakeAndModel}^[16C]}' type64='^{CMProfileIterateData=I{CM2Header=IIIIII{CMDateTime=SSSSSS}IIIII[2I]I{CMFixedXYZColor=iii}I[44c]}s[256C]{CMProfileLocation=s(CMProfLoc={CMHandleLocation=^*}{CMPathLocation=[1024c]}{CMBufferLocation=^vI})}Q^S*^{CMMakeAndModel}^[16C]}'/>
<arg name='refCon' declared_type='void*' type='^v'/>
<arg name='userUPP' function_pointer='true' declared_type='CMProfileIterateUPP' type='^?'>
<arg declared_type='CMProfileIterateData*' type='^{CMProfileIterateData=I{CM2Header=IIIIII{CMDateTime=SSSSSS}IIIII[2L]I{CMFixedXYZColor=iii}I[44c]}s[256C]{CMProfileLocation=s(CMProfLoc={CMFileLocation={FSSpec=si[64C]}}{CMHandleLocation=^*}{CMPtrLocation=*}{CMProcedureLocation=^?^v}{CMPathLocation=[256c]}{CMBufferLocation=^vI})}I^S*^{CMMakeAndModel}^[16C]}' type64='^{CMProfileIterateData=I{CM2Header=IIIIII{CMDateTime=SSSSSS}IIIII[2I]I{CMFixedXYZColor=iii}I[44c]}s[256C]{CMProfileLocation=s(CMProfLoc={CMHandleLocation=^*}{CMPathLocation=[1024c]}{CMBufferLocation=^vI})}Q^S*^{CMMakeAndModel}^[16C]}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='NCMGetProfileLocation'>
<arg name='prof' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='theProfile' declared_type='CMProfileLocation*' type='^{CMProfileLocation=s(CMProfLoc={CMFileLocation={FSSpec=si[64C]}}{CMHandleLocation=^*}{CMPtrLocation=*}{CMProcedureLocation=^?^v}{CMPathLocation=[256c]}{CMBufferLocation=^vI})}' type64='^{CMProfileLocation=s(CMProfLoc={CMHandleLocation=^*}{CMPathLocation=[1024c]}{CMBufferLocation=^vI})}'/>
<arg name='locationSize' declared_type='UInt32*' type='^I'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='NCWConcatColorWorld'>
<arg name='cw' declared_type='CMWorldRef*' type='^^{OpaqueCMWorldRef}'/>
<arg name='profileSet' declared_type='NCMConcatProfileSet*' type='^{NCMConcatProfileSet=IIII[1{NCMConcatProfileSpec=II^{OpaqueCMProfileRef}}]}'/>
<arg name='proc' function_pointer='true' declared_type='CMConcatCallBackUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<arg name='refCon' declared_type='void*' type='^v'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='NCWNewColorWorld'>
<arg name='cw' declared_type='CMWorldRef*' type='^^{OpaqueCMWorldRef}'/>
<arg name='src' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<arg name='dst' declared_type='CMProfileRef' type='^{OpaqueCMProfileRef=}'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='NCWNewLinkProfile'>
<arg name='prof' declared_type='CMProfileRef*' type='^^{OpaqueCMProfileRef}'/>
<arg name='targetLocation' declared_type='CMProfileLocation*' type='^{CMProfileLocation=s(CMProfLoc={CMFileLocation={FSSpec=si[64C]}}{CMHandleLocation=^*}{CMPtrLocation=*}{CMProcedureLocation=^?^v}{CMPathLocation=[256c]}{CMBufferLocation=^vI})}' type64='^{CMProfileLocation=s(CMProfLoc={CMHandleLocation=^*}{CMPathLocation=[1024c]}{CMBufferLocation=^vI})}' const='true'/>
<arg name='profileSet' declared_type='NCMConcatProfileSet*' type='^{NCMConcatProfileSet=IIII[1{NCMConcatProfileSpec=II^{OpaqueCMProfileRef}}]}'/>
<arg name='proc' function_pointer='true' declared_type='CMConcatCallBackUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<arg name='refCon' declared_type='void*' type='^v'/>
<retval declared_type='CMError' type='l' type64='i'/>
</function>
<function name='NewCMBitmapCallBackUPP' inline='true'>
<arg name='userRoutine' function_pointer='true' declared_type='CMBitmapCallBackProcPtr' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<retval function_pointer='true' declared_type='CMBitmapCallBackUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='Boolean' type='B'/>
</retval>
</function>
<function name='NewCMConcatCallBackUPP' inline='true'>
<arg name='userRoutine' function_pointer='true' declared_type='CMConcatCallBackProcPtr' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<retval function_pointer='true' declared_type='CMConcatCallBackUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='Boolean' type='B'/>
</retval>
</function>
<function name='NewCMFlattenUPP' inline='true'>
<arg name='userRoutine' function_pointer='true' declared_type='CMFlattenProcPtr' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval function_pointer='true' declared_type='CMFlattenUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
<function name='NewCMMIterateUPP' inline='true'>
<arg name='userRoutine' function_pointer='true' declared_type='CMMIterateProcPtr' type='^?'>
<arg declared_type='CMMInfo*' type='^{CMMInfo=IIII[32C][256C]I[32S]I[256S]}' type64='^{CMMInfo=QIII[32C][256C]Q[32S]Q[256S]}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval function_pointer='true' declared_type='CMMIterateUPP' type='^?'>
<arg declared_type='CMMInfo*' type='^{CMMInfo=IIII[32C][256C]I[32S]I[256S]}' type64='^{CMMInfo=QIII[32C][256C]Q[32S]Q[256S]}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
<function name='NewCMProfileIterateUPP' inline='true'>
<arg name='userRoutine' function_pointer='true' declared_type='CMProfileIterateProcPtr' type='^?'>
<arg declared_type='CMProfileIterateData*' type='^{CMProfileIterateData=I{CM2Header=IIIIII{CMDateTime=SSSSSS}IIIII[2L]I{CMFixedXYZColor=iii}I[44c]}s[256C]{CMProfileLocation=s(CMProfLoc={CMFileLocation={FSSpec=si[64C]}}{CMHandleLocation=^*}{CMPtrLocation=*}{CMProcedureLocation=^?^v}{CMPathLocation=[256c]}{CMBufferLocation=^vI})}I^S*^{CMMakeAndModel}^[16C]}' type64='^{CMProfileIterateData=I{CM2Header=IIIIII{CMDateTime=SSSSSS}IIIII[2I]I{CMFixedXYZColor=iii}I[44c]}s[256C]{CMProfileLocation=s(CMProfLoc={CMHandleLocation=^*}{CMPathLocation=[1024c]}{CMBufferLocation=^vI})}Q^S*^{CMMakeAndModel}^[16C]}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval function_pointer='true' declared_type='CMProfileIterateUPP' type='^?'>
<arg declared_type='CMProfileIterateData*' type='^{CMProfileIterateData=I{CM2Header=IIIIII{CMDateTime=SSSSSS}IIIII[2L]I{CMFixedXYZColor=iii}I[44c]}s[256C]{CMProfileLocation=s(CMProfLoc={CMFileLocation={FSSpec=si[64C]}}{CMHandleLocation=^*}{CMPtrLocation=*}{CMProcedureLocation=^?^v}{CMPathLocation=[256c]}{CMBufferLocation=^vI})}I^S*^{CMMakeAndModel}^[16C]}' type64='^{CMProfileIterateData=I{CM2Header=IIIIII{CMDateTime=SSSSSS}IIIII[2I]I{CMFixedXYZColor=iii}I[44c]}s[256C]{CMProfileLocation=s(CMProfLoc={CMHandleLocation=^*}{CMPathLocation=[1024c]}{CMBufferLocation=^vI})}Q^S*^{CMMakeAndModel}^[16C]}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
</signatures>
