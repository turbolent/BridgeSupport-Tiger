<?xml version='1.0'?>
<signatures version='1.0'>
  <depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
  <depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
  <depends_on path='/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework'/>
  <depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
  <opaque name='HRReference' type='^{OpaqueHRReference=}'/>
  <enum name='eHRScrollbarAuto' value='2'/>
  <enum name='eHRScrollbarOff' value='1'/>
  <enum name='eHRScrollbarOn' value='0'/>
  <enum name='kHRLookingForEmbedded' value='3'/>
  <enum name='kHRLookingForFrame' value='5'/>
  <enum name='kHRLookingForHTMLSource' value='1'/>
  <enum name='kHRLookingForImage' value='2'/>
  <enum name='kHRLookingForImageMap' value='4'/>
  <enum name='kHRRendererHTML32Type' value='1752445746'/>
  <function name='DisposeHRNewCFURLUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='HRNewCFURLUPP' type='^?'>
      <arg declared_type='CFURLRef' type='^{__CFURL=}'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeHRNewURLUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='HRNewURLUPP' type='^?'>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeHRURLToFSRefUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='HRURLToFSRefUPP' type='^?'>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='FSRef*' type='^{FSRef=[80C]}'/>
      <arg declared_type='URLSourceType' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeHRURLToFSSpecUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='HRURLToFSSpecUPP' type='^?'>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}'/>
      <arg declared_type='URLSourceType' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeHRWasCFURLVisitedUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='HRWasCFURLVisitedUPP' type='^?'>
      <arg declared_type='CFURLRef' type='^{__CFURL=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeHRWasURLVisitedUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='HRWasURLVisitedUPP' type='^?'>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HRActivate'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRDeactivate'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRDisposeReference'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRDraw'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='updateRgnH' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRDrawInPort'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='updateRgnH' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='grafPtr' declared_type='CGrafPtr' type='^{OpaqueGrafPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRForceQuickdraw'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='forceQuickdraw' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRFreeMemory'>
    <arg name='inBytesNeeded' declared_type='Size' type='l' type64='q'/>
    <retval declared_type='SInt32' type='l' type64='i'/>
  </function>
  <function name='HRGetBaseURL'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='baseURLH' declared_type='Handle' type='^*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRGetBaseURLAsCFString'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='baseString' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRGetHTMLFile'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='fsspec' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRGetHTMLFileAsFSRef'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='fref' declared_type='FSRef*' type='^{FSRef=[80C]}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRGetHTMLRenderingLibVersion'>
    <arg name='returnVers' declared_type='NumVersion*' type='^{NumVersion=CCCC}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRGetHTMLURL'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='HTMLURLH' declared_type='Handle' type='^*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRGetHTMLURLAsCFURL'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='theURL' declared_type='CFURLRef*' type='^^{__CFURL}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRGetRenderedImageSize'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='renderingSize' declared_type='Point*' type='^{Point=ss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRGetRenderedImageSize32'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='height' declared_type='UInt32*' type='^I'/>
    <arg name='width' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRGetRootURL'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='rootURLH' declared_type='Handle' type='^*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRGetRootURLAsCFString'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='rootString' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRGetTitle'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='title' declared_type='StringPtr' type='*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRGetTitleAsCFString'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='title' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRGoToAnchor'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='anchorName' declared_type='char*' type='*' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRGoToAnchorCFString'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='anchorName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRGoToCFURL'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='url' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <arg name='addToHistory' declared_type='Boolean' type='B'/>
    <arg name='forceRefresh' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRGoToData'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='data' declared_type='CFDataRef' type='^{__CFData=}'/>
    <arg name='addToHistory' declared_type='Boolean' type='B'/>
    <arg name='forceRefresh' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRGoToFSRef'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='fref' declared_type='FSRef*' type='^{FSRef=[80C]}' const='true'/>
    <arg name='addToHistory' declared_type='Boolean' type='B'/>
    <arg name='forceRefresh' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRGoToFile'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='fsspec' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}' const='true'/>
    <arg name='addToHistory' declared_type='Boolean' type='B'/>
    <arg name='forceRefresh' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRGoToPtr'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='buffer' declared_type='char*' type='*'/>
    <arg name='bufferSize' declared_type='UInt32' type='L' type64='I'/>
    <arg name='addToHistory' declared_type='Boolean' type='B'/>
    <arg name='forceRefresh' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRGoToURL'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='url' declared_type='char*' type='*' const='true'/>
    <arg name='addToHistory' declared_type='Boolean' type='B'/>
    <arg name='forceRefresh' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRIsHREvent'>
    <arg name='eventRecord' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}' const='true'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HRNewReference'>
    <arg name='hrRef' declared_type='HRReference*' type='^^{OpaqueHRReference}'/>
    <arg name='rendererType' declared_type='OSType' type='L' type64='I'/>
    <arg name='grafPtr' declared_type='GrafPtr' type='^{OpaqueGrafPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRNewReferenceInWindow'>
    <arg name='hrRef' declared_type='HRReference*' type='^^{OpaqueHRReference}'/>
    <arg name='rendererType' declared_type='OSType' type='L' type64='I'/>
    <arg name='inWindowRef' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRRegisterNewCFURLUPP'>
    <arg name='inURLUPP' function_pointer='true' declared_type='HRNewCFURLUPP' type='^?'>
      <arg declared_type='CFURLRef' type='^{__CFURL=}'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='inRefCon' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HRRegisterNewURLUPP'>
    <arg name='inNewURLUPP' function_pointer='true' declared_type='HRNewURLUPP' type='^?'>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='inRefCon' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HRRegisterURLToFSRefUPP'>
    <arg name='inURLToFSRefUPP' function_pointer='true' declared_type='HRURLToFSRefUPP' type='^?'>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='FSRef*' type='^{FSRef=[80C]}'/>
      <arg declared_type='URLSourceType' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='inRefCon' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HRRegisterURLToFSSpecUPP'>
    <arg name='inURLToFSSpecUPP' function_pointer='true' declared_type='HRURLToFSSpecUPP' type='^?'>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}'/>
      <arg declared_type='URLSourceType' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='inRefCon' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HRRegisterWasCFURLVisitedUPP'>
    <arg name='inWasCFURLVisitedUPP' function_pointer='true' declared_type='HRWasCFURLVisitedUPP' type='^?'>
      <arg declared_type='CFURLRef' type='^{__CFURL=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='inRefCon' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HRRegisterWasURLVisitedUPP'>
    <arg name='inWasURLVisitedUPP' function_pointer='true' declared_type='HRWasURLVisitedUPP' type='^?'>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='inRefCon' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HRScreenConfigurationChanged'>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HRScrollToImageLocation32'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='h' declared_type='SInt32' type='l' type64='i'/>
    <arg name='v' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRScrollToLocation'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='location' declared_type='Point*' type='^{Point=ss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRSetDrawBorder'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='drawBorder' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRSetEmbeddingControl'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='controlRef' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRSetGrafPtr'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='grafPtr' declared_type='GrafPtr' type='^{OpaqueGrafPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRSetGrowboxCutout'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='allowCutout' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRSetRenderingRect'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='renderingRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRSetScrollbarState'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='hScrollbarState' declared_type='HRScrollbarState' type='s'/>
    <arg name='vScrollbarState' declared_type='HRScrollbarState' type='s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRSetWindowRef'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <arg name='windowRef' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRUnregisterNewCFURLUPP'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HRUnregisterNewURLUPP'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HRUnregisterURLToFSRefUPP'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HRUnregisterURLToFSSpecUPP'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HRUnregisterWasCFURLVisitedUPP'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HRUnregisterWasURLVisitedUPP'>
    <arg name='hrRef' declared_type='HRReference' type='^{OpaqueHRReference=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HRUtilCreateFullCFURL'>
    <arg name='rootString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='linkString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='url' declared_type='CFURLRef*' type='^^{__CFURL}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRUtilCreateFullURL'>
    <arg name='rootURL' declared_type='char*' type='*' const='true'/>
    <arg name='linkURL' declared_type='char*' type='*' const='true'/>
    <arg name='fullURLH' declared_type='Handle' type='^*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRUtilGetFSRefFromURL'>
    <arg name='rootString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='linkString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='destRef' declared_type='FSRef*' type='^{FSRef=[80C]}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRUtilGetFSSpecFromURL'>
    <arg name='rootURL' declared_type='char*' type='*' const='true'/>
    <arg name='linkURL' declared_type='char*' type='*' const='true'/>
    <arg name='destSpec' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRUtilGetURLFromFSRef'>
    <arg name='fileRef' declared_type='FSRef*' type='^{FSRef=[80C]}' const='true'/>
    <arg name='url' declared_type='CFURLRef*' type='^^{__CFURL}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HRUtilGetURLFromFSSpec'>
    <arg name='fsspec' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}' const='true'/>
    <arg name='urlHandle' declared_type='Handle' type='^*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvokeHRNewCFURLUPP'>
    <arg name='url' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <arg name='targetString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='addToHistory' declared_type='Boolean' type='B'/>
    <arg name='refCon' declared_type='void*' type='^v'/>
    <arg name='userUPP' function_pointer='true' declared_type='HRNewCFURLUPP' type='^?'>
      <arg declared_type='CFURLRef' type='^{__CFURL=}'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvokeHRNewURLUPP'>
    <arg name='url' declared_type='char*' type='*' const='true'/>
    <arg name='targetFrame' declared_type='char*' type='*' const='true'/>
    <arg name='addToHistory' declared_type='Boolean' type='B'/>
    <arg name='refCon' declared_type='void*' type='^v'/>
    <arg name='userUPP' function_pointer='true' declared_type='HRNewURLUPP' type='^?'>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvokeHRURLToFSRefUPP'>
    <arg name='rootString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='linkString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='fref' declared_type='FSRef*' type='^{FSRef=[80C]}'/>
    <arg name='urlSourceType' declared_type='URLSourceType' type='S'/>
    <arg name='refCon' declared_type='void*' type='^v'/>
    <arg name='userUPP' function_pointer='true' declared_type='HRURLToFSRefUPP' type='^?'>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='FSRef*' type='^{FSRef=[80C]}'/>
      <arg declared_type='URLSourceType' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvokeHRURLToFSSpecUPP'>
    <arg name='rootURL' declared_type='char*' type='*' const='true'/>
    <arg name='linkURL' declared_type='char*' type='*' const='true'/>
    <arg name='fsspec' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}'/>
    <arg name='urlSourceType' declared_type='URLSourceType' type='S'/>
    <arg name='refCon' declared_type='void*' type='^v'/>
    <arg name='userUPP' function_pointer='true' declared_type='HRURLToFSSpecUPP' type='^?'>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}'/>
      <arg declared_type='URLSourceType' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvokeHRWasCFURLVisitedUPP'>
    <arg name='url' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <arg name='refCon' declared_type='void*' type='^v'/>
    <arg name='userUPP' function_pointer='true' declared_type='HRWasCFURLVisitedUPP' type='^?'>
      <arg declared_type='CFURLRef' type='^{__CFURL=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='InvokeHRWasURLVisitedUPP'>
    <arg name='url' declared_type='char*' type='*' const='true'/>
    <arg name='refCon' declared_type='void*' type='^v'/>
    <arg name='userUPP' function_pointer='true' declared_type='HRWasURLVisitedUPP' type='^?'>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='NewHRNewCFURLUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='HRNewCFURLProcPtr' type='^?'>
      <arg declared_type='CFURLRef' type='^{__CFURL=}'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval function_pointer='true' declared_type='HRNewCFURLUPP' type='^?'>
      <arg declared_type='CFURLRef' type='^{__CFURL=}'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </retval>
  </function>
  <function name='NewHRNewURLUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='HRNewURLProcPtr' type='^?'>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval function_pointer='true' declared_type='HRNewURLUPP' type='^?'>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </retval>
  </function>
  <function name='NewHRURLToFSRefUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='HRURLToFSRefProcPtr' type='^?'>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='FSRef*' type='^{FSRef=[80C]}'/>
      <arg declared_type='URLSourceType' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval function_pointer='true' declared_type='HRURLToFSRefUPP' type='^?'>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='FSRef*' type='^{FSRef=[80C]}'/>
      <arg declared_type='URLSourceType' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </retval>
  </function>
  <function name='NewHRURLToFSSpecUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='HRURLToFSSpecProcPtr' type='^?'>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}'/>
      <arg declared_type='URLSourceType' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval function_pointer='true' declared_type='HRURLToFSSpecUPP' type='^?'>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}'/>
      <arg declared_type='URLSourceType' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </retval>
  </function>
  <function name='NewHRWasCFURLVisitedUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='HRWasCFURLVisitedProcPtr' type='^?'>
      <arg declared_type='CFURLRef' type='^{__CFURL=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='HRWasCFURLVisitedUPP' type='^?'>
      <arg declared_type='CFURLRef' type='^{__CFURL=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='NewHRWasURLVisitedUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='HRWasURLVisitedProcPtr' type='^?'>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='HRWasURLVisitedUPP' type='^?'>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
</signatures>
