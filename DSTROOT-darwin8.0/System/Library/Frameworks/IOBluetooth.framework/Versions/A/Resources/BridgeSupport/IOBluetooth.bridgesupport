<?xml version='1.0'?>
<signatures version='1.0'>
  <depends_on path='/System/Library/Frameworks/IOKit.framework'/>
  <depends_on path='/System/Library/Frameworks/Foundation.framework'/>
  <depends_on path='/System/Library/Frameworks/Carbon.framework'/>
  <depends_on path='/System/Library/Frameworks/CoreAudio.framework'/>
  <struct name='BluetoothDeviceAddress' type='{BluetoothDeviceAddress=&quot;data&quot;[6C]}'>
    <field name='data' declared_type='UInt8*' type='[6C]'/>
  </struct>
  <struct name='BluetoothHCIAutomaticFlushTimeoutInfo' type='{BluetoothHCIAutomaticFlushTimeoutInfo=&quot;handle&quot;S&quot;timeout&quot;S}'>
    <field name='handle' declared_type='BluetoothConnectionHandle' type='S'/>
    <field name='timeout' declared_type='BluetoothHCIAutomaticFlushTimeout' type='S'/>
  </struct>
  <struct name='BluetoothHCIBufferSize' type='{BluetoothHCIBufferSize=&quot;ACLDataPacketLength&quot;S&quot;SCODataPacketLength&quot;C&quot;totalNumACLDataPackets&quot;S&quot;totalNumSCODataPackets&quot;S}'>
    <field name='ACLDataPacketLength' declared_type='UInt16' type='S'/>
    <field name='SCODataPacketLength' declared_type='UInt8' type='C'/>
    <field name='totalNumACLDataPackets' declared_type='UInt16' type='S'/>
    <field name='totalNumSCODataPackets' declared_type='UInt16' type='S'/>
  </struct>
  <struct name='BluetoothHCICurrentInquiryAccessCodes' type='{BluetoothHCICurrentInquiryAccessCodes=&quot;count&quot;C&quot;codes&quot;^{BluetoothHCIInquiryAccessCode}}'>
    <field name='count' declared_type='BluetoothHCIInquiryAccessCodeCount' type='C'/>
    <field name='codes' declared_type='BluetoothHCIInquiryAccessCode*' type='^{BluetoothHCIInquiryAccessCode=[3C]}'/>
  </struct>
  <struct name='BluetoothHCIEventAuthenticationCompleteResults' type='{BluetoothHCIEventAuthenticationCompleteResults=&quot;connectionHandle&quot;S}'>
    <field name='connectionHandle' declared_type='BluetoothConnectionHandle' type='S'/>
  </struct>
  <struct name='BluetoothHCIEventChangeConnectionLinkKeyCompleteResults' type='{BluetoothHCIEventChangeConnectionLinkKeyCompleteResults=&quot;connectionHandle&quot;S}'>
    <field name='connectionHandle' declared_type='BluetoothConnectionHandle' type='S'/>
  </struct>
  <struct name='BluetoothHCIEventConnectionCompleteResults' type='{BluetoothHCIEventConnectionCompleteResults=&quot;connectionHandle&quot;S&quot;deviceAddress&quot;{BluetoothDeviceAddress=&quot;data&quot;[6C]}&quot;linkType&quot;C&quot;encryptionMode&quot;C}'>
    <field name='connectionHandle' declared_type='BluetoothConnectionHandle' type='S'/>
    <field name='deviceAddress' declared_type='BluetoothDeviceAddress' type='{BluetoothDeviceAddress=&quot;data&quot;[6C]}'/>
    <field name='linkType' declared_type='BluetoothLinkType' type='C'/>
    <field name='encryptionMode' declared_type='BluetoothHCIEncryptionMode' type='C'/>
  </struct>
  <struct name='BluetoothHCIEventConnectionPacketTypeResults' type='{BluetoothHCIEventConnectionPacketTypeResults=&quot;connectionHandle&quot;S&quot;packetType&quot;S}'>
    <field name='connectionHandle' declared_type='BluetoothConnectionHandle' type='S'/>
    <field name='packetType' declared_type='BluetoothPacketType' type='S'/>
  </struct>
  <struct name='BluetoothHCIEventConnectionRequestResults' type='{BluetoothHCIEventConnectionRequestResults=&quot;deviceAddress&quot;{BluetoothDeviceAddress=&quot;data&quot;[6C]}&quot;classOfDevice&quot;I&quot;linkType&quot;C}'>
    <field name='deviceAddress' declared_type='BluetoothDeviceAddress' type='{BluetoothDeviceAddress=&quot;data&quot;[6C]}'/>
    <field name='classOfDevice' declared_type='BluetoothClassOfDevice' type='L' type64='I'/>
    <field name='linkType' declared_type='BluetoothLinkType' type='C'/>
  </struct>
  <struct name='BluetoothHCIEventDataBufferOverflowResults' type='{BluetoothHCIEventDataBufferOverflowResults=&quot;linkType&quot;C}'>
    <field name='linkType' declared_type='BluetoothLinkType' type='C'/>
  </struct>
  <struct name='BluetoothHCIEventDisconnectionCompleteResults' type='{BluetoothHCIEventDisconnectionCompleteResults=&quot;connectionHandle&quot;S&quot;reason&quot;C}'>
    <field name='connectionHandle' declared_type='BluetoothConnectionHandle' type='S'/>
    <field name='reason' declared_type='BluetoothReasonCode' type='C'/>
  </struct>
  <struct name='BluetoothHCIEventEncryptionChangeResults' type='{BluetoothHCIEventEncryptionChangeResults=&quot;connectionHandle&quot;S&quot;enable&quot;C}'>
    <field name='connectionHandle' declared_type='BluetoothConnectionHandle' type='S'/>
    <field name='enable' declared_type='BluetoothEncryptionEnable' type='C'/>
  </struct>
  <struct name='BluetoothHCIEventFlushOccurredResults' type='{BluetoothHCIEventFlushOccurredResults=&quot;connectionHandle&quot;S}'>
    <field name='connectionHandle' declared_type='BluetoothConnectionHandle' type='S'/>
  </struct>
  <struct name='BluetoothHCIEventHardwareErrorResults' type='{BluetoothHCIEventHardwareErrorResults=&quot;error&quot;C}'>
    <field name='error' declared_type='BluetoothHCIStatus' type='C'/>
  </struct>
  <struct name='BluetoothHCIEventLinkKeyNotificationResults' type='{BluetoothHCIEventLinkKeyNotificationResults=&quot;deviceAddress&quot;{BluetoothDeviceAddress=&quot;data&quot;[6C]}&quot;linkKey&quot;{BluetoothKey=&quot;data&quot;[16C]}&quot;keyType&quot;C}'>
    <field name='deviceAddress' declared_type='BluetoothDeviceAddress' type='{BluetoothDeviceAddress=&quot;data&quot;[6C]}'/>
    <field name='linkKey' declared_type='BluetoothKey' type='{BluetoothKey=&quot;data&quot;[16C]}'/>
    <field name='keyType' declared_type='BluetoothKeyType' type='C'/>
  </struct>
  <struct name='BluetoothHCIEventMasterLinkKeyCompleteResults' type='{BluetoothHCIEventMasterLinkKeyCompleteResults=&quot;connectionHandle&quot;S&quot;keyFlag&quot;C}'>
    <field name='connectionHandle' declared_type='BluetoothConnectionHandle' type='S'/>
    <field name='keyFlag' declared_type='BluetoothKeyFlag' type='C'/>
  </struct>
  <struct name='BluetoothHCIEventMaxSlotsChangeResults' type='{BluetoothHCIEventMaxSlotsChangeResults=&quot;connectionHandle&quot;S&quot;maxSlots&quot;C}'>
    <field name='connectionHandle' declared_type='BluetoothConnectionHandle' type='S'/>
    <field name='maxSlots' declared_type='BluetoothMaxSlots' type='C'/>
  </struct>
  <struct name='BluetoothHCIEventModeChangeResults' type='{BluetoothHCIEventModeChangeResults=&quot;connectionHandle&quot;S&quot;mode&quot;C&quot;modeInterval&quot;S}'>
    <field name='connectionHandle' declared_type='BluetoothConnectionHandle' type='S'/>
    <field name='mode' declared_type='BluetoothHCIConnectionMode' type='C'/>
    <field name='modeInterval' declared_type='BluetoothHCIModeInterval' type='S'/>
  </struct>
  <struct name='BluetoothHCIEventPageScanModeChangeResults' type='{BluetoothHCIEventPageScanModeChangeResults=&quot;deviceAddress&quot;{BluetoothDeviceAddress=&quot;data&quot;[6C]}&quot;pageScanMode&quot;C}'>
    <field name='deviceAddress' declared_type='BluetoothDeviceAddress' type='{BluetoothDeviceAddress=&quot;data&quot;[6C]}'/>
    <field name='pageScanMode' declared_type='BluetoothPageScanMode' type='C'/>
  </struct>
  <struct name='BluetoothHCIEventPageScanRepetitionModeChangeResults' type='{BluetoothHCIEventPageScanRepetitionModeChangeResults=&quot;deviceAddress&quot;{BluetoothDeviceAddress=&quot;data&quot;[6C]}&quot;pageScanRepetitionMode&quot;C}'>
    <field name='deviceAddress' declared_type='BluetoothDeviceAddress' type='{BluetoothDeviceAddress=&quot;data&quot;[6C]}'/>
    <field name='pageScanRepetitionMode' declared_type='BluetoothPageScanRepetitionMode' type='C'/>
  </struct>
  <struct name='BluetoothHCIEventQoSSetupCompleteResults' type='{BluetoothHCIEventQoSSetupCompleteResults=&quot;connectionHandle&quot;S&quot;setupParams&quot;{BluetoothHCIQualityOfServiceSetupParams=&quot;flags&quot;C&quot;serviceType&quot;C&quot;tokenRate&quot;I&quot;peakBandwidth&quot;I&quot;latency&quot;I&quot;delayVariation&quot;I}}'>
    <field name='connectionHandle' declared_type='BluetoothConnectionHandle' type='S'/>
    <field name='setupParams' declared_type='BluetoothHCIQualityOfServiceSetupParams' type='{BluetoothHCIQualityOfServiceSetupParams=&quot;flags&quot;C&quot;serviceType&quot;C&quot;tokenRate&quot;I&quot;peakBandwidth&quot;I&quot;latency&quot;I&quot;delayVariation&quot;I}'/>
  </struct>
  <struct name='BluetoothHCIEventQoSViolationResults' type='{BluetoothHCIEventQoSViolationResults=&quot;connectionHandle&quot;S}'>
    <field name='connectionHandle' declared_type='BluetoothConnectionHandle' type='S'/>
  </struct>
  <struct name='BluetoothHCIEventReadClockOffsetResults' type='{BluetoothHCIEventReadClockOffsetResults=&quot;connectionHandle&quot;S&quot;clockOffset&quot;S}'>
    <field name='connectionHandle' declared_type='BluetoothConnectionHandle' type='S'/>
    <field name='clockOffset' declared_type='BluetoothClockOffset' type='S'/>
  </struct>
  <struct name='BluetoothHCIEventReadRemoteSupportedFeaturesResults' type='{BluetoothHCIEventReadRemoteSupportedFeaturesResults=&quot;error&quot;C&quot;connectionHandle&quot;S&quot;lmpFeatures&quot;{BluetoothHCISupportedFeatures=&quot;data&quot;[8C]}}'>
    <field name='error' declared_type='BluetoothHCIStatus' type='C'/>
    <field name='connectionHandle' declared_type='BluetoothConnectionHandle' type='S'/>
    <field name='lmpFeatures' declared_type='BluetoothHCISupportedFeatures' type='{BluetoothHCISupportedFeatures=&quot;data&quot;[8C]}'/>
  </struct>
  <struct name='BluetoothHCIEventReadRemoteVersionInfoResults' type='{BluetoothHCIEventReadRemoteVersionInfoResults=&quot;connectionHandle&quot;S&quot;lmpVersion&quot;C&quot;manufacturerName&quot;S&quot;lmpSubversion&quot;S}'>
    <field name='connectionHandle' declared_type='BluetoothConnectionHandle' type='S'/>
    <field name='lmpVersion' declared_type='BluetoothLMPVersion' type='C'/>
    <field name='manufacturerName' declared_type='BluetoothManufacturerName' type='S'/>
    <field name='lmpSubversion' declared_type='BluetoothLMPSubversion' type='S'/>
  </struct>
  <struct name='BluetoothHCIEventReadSupportedFeaturesResults' type='{BluetoothHCIEventReadSupportedFeaturesResults=&quot;connectionHandle&quot;S&quot;supportedFeatures&quot;{BluetoothHCISupportedFeatures=&quot;data&quot;[8C]}}'>
    <field name='connectionHandle' declared_type='BluetoothConnectionHandle' type='S'/>
    <field name='supportedFeatures' declared_type='BluetoothHCISupportedFeatures' type='{BluetoothHCISupportedFeatures=&quot;data&quot;[8C]}'/>
  </struct>
  <struct name='BluetoothHCIEventRemoteNameRequestResults' type='{BluetoothHCIEventRemoteNameRequestResults=&quot;deviceAddress&quot;{BluetoothDeviceAddress=&quot;data&quot;[6C]}&quot;deviceName&quot;[256C]}'>
    <field name='deviceAddress' declared_type='BluetoothDeviceAddress' type='{BluetoothDeviceAddress=&quot;data&quot;[6C]}'/>
    <field name='deviceName' declared_type='BluetoothDeviceName' type='[256C]'/>
  </struct>
  <struct name='BluetoothHCIEventReturnLinkKeysResults' type='{BluetoothHCIEventReturnLinkKeysResults=&quot;numLinkKeys&quot;C&quot;linkKeys&quot;[1{?=&quot;deviceAddress&quot;{BluetoothDeviceAddress=&quot;data&quot;[6C]}&quot;linkKey&quot;{BluetoothKey=&quot;data&quot;[16C]}}]}'>
    <field name='numLinkKeys' declared_type='UInt8' type='C'/>
    <field name='linkKeys' declared_type='struct BluetoothHCIEventReturnLinkKeysResults::*' type='[1{?=&quot;deviceAddress&quot;{BluetoothDeviceAddress=&quot;data&quot;[6C]}&quot;linkKey&quot;{BluetoothKey=&quot;data&quot;[16C]}}]'/>
  </struct>
  <struct name='BluetoothHCIEventRoleChangeResults' type='{BluetoothHCIEventRoleChangeResults=&quot;connectionHandle&quot;S&quot;deviceAddress&quot;{BluetoothDeviceAddress=&quot;data&quot;[6C]}&quot;role&quot;C}'>
    <field name='connectionHandle' declared_type='BluetoothConnectionHandle' type='S'/>
    <field name='deviceAddress' declared_type='BluetoothDeviceAddress' type='{BluetoothDeviceAddress=&quot;data&quot;[6C]}'/>
    <field name='role' declared_type='BluetoothRole' type='C'/>
  </struct>
  <struct name='BluetoothHCIEventVendorSpecificResults' type='{BluetoothHCIEventVendorSpecificResults=&quot;length&quot;C&quot;data&quot;[255C]}'>
    <field name='length' declared_type='UInt8' type='C'/>
    <field name='data' declared_type='UInt8*' type='[255C]'/>
  </struct>
  <struct name='BluetoothHCIFailedContactInfo' type='{BluetoothHCIFailedContactInfo=&quot;count&quot;S&quot;handle&quot;S}'>
    <field name='count' declared_type='BluetoothHCIFailedContactCount' type='S'/>
    <field name='handle' declared_type='BluetoothConnectionHandle' type='S'/>
  </struct>
  <struct name='BluetoothHCIInquiryAccessCode' type='{BluetoothHCIInquiryAccessCode=&quot;data&quot;[3C]}'>
    <field name='data' declared_type='UInt8*' type='[3C]'/>
  </struct>
  <struct name='BluetoothHCIInquiryResult' type='{BluetoothHCIInquiryResult=&quot;deviceAddress&quot;{BluetoothDeviceAddress=&quot;data&quot;[6C]}&quot;pageScanRepetitionMode&quot;C&quot;pageScanPeriodMode&quot;C&quot;pageScanMode&quot;C&quot;classOfDevice&quot;I&quot;clockOffset&quot;S}'>
    <field name='deviceAddress' declared_type='BluetoothDeviceAddress' type='{BluetoothDeviceAddress=&quot;data&quot;[6C]}'/>
    <field name='pageScanRepetitionMode' declared_type='BluetoothPageScanRepetitionMode' type='C'/>
    <field name='pageScanPeriodMode' declared_type='BluetoothHCIPageScanPeriodMode' type='C'/>
    <field name='pageScanMode' declared_type='BluetoothHCIPageScanMode' type='C'/>
    <field name='classOfDevice' declared_type='BluetoothClassOfDevice' type='L' type64='I'/>
    <field name='clockOffset' declared_type='BluetoothClockOffset' type='S'/>
  </struct>
  <struct name='BluetoothHCIInquiryResults' type='{BluetoothHCIInquiryResults=&quot;results&quot;[50{BluetoothHCIInquiryResult=&quot;deviceAddress&quot;{BluetoothDeviceAddress=&quot;data&quot;[6C]}&quot;pageScanRepetitionMode&quot;C&quot;pageScanPeriodMode&quot;C&quot;pageScanMode&quot;C&quot;classOfDevice&quot;I&quot;clockOffset&quot;S}]&quot;count&quot;I}'>
    <field name='results' declared_type='BluetoothHCIInquiryResult*' type='[50{BluetoothHCIInquiryResult=&quot;deviceAddress&quot;{BluetoothDeviceAddress=&quot;data&quot;[6C]}&quot;pageScanRepetitionMode&quot;C&quot;pageScanPeriodMode&quot;C&quot;pageScanMode&quot;C&quot;classOfDevice&quot;I&quot;clockOffset&quot;S}]'/>
    <field name='count' declared_type='IOItemCount' type='L' type64='I'/>
  </struct>
  <struct name='BluetoothHCILinkPolicySettingsInfo' type='{BluetoothHCILinkPolicySettingsInfo=&quot;settings&quot;S&quot;handle&quot;S}'>
    <field name='settings' declared_type='BluetoothHCILinkPolicySettings' type='S'/>
    <field name='handle' declared_type='BluetoothConnectionHandle' type='S'/>
  </struct>
  <struct name='BluetoothHCILinkQualityInfo' type='{BluetoothHCILinkQualityInfo=&quot;handle&quot;S&quot;qualityValue&quot;C}'>
    <field name='handle' declared_type='BluetoothConnectionHandle' type='S'/>
    <field name='qualityValue' declared_type='BluetoothHCILinkQuality' type='C'/>
  </struct>
  <struct name='BluetoothHCILinkSupervisionTimeout' type='{BluetoothHCILinkSupervisionTimeout=&quot;handle&quot;S&quot;timeout&quot;S}'>
    <field name='handle' declared_type='BluetoothConnectionHandle' type='S'/>
    <field name='timeout' declared_type='UInt16' type='S'/>
  </struct>
  <struct name='BluetoothHCIQualityOfServiceSetupParams' type='{BluetoothHCIQualityOfServiceSetupParams=&quot;flags&quot;C&quot;serviceType&quot;C&quot;tokenRate&quot;I&quot;peakBandwidth&quot;I&quot;latency&quot;I&quot;delayVariation&quot;I}'>
    <field name='flags' declared_type='UInt8' type='C'/>
    <field name='serviceType' declared_type='UInt8' type='C'/>
    <field name='tokenRate' declared_type='UInt32' type='L' type64='I'/>
    <field name='peakBandwidth' declared_type='UInt32' type='L' type64='I'/>
    <field name='latency' declared_type='UInt32' type='L' type64='I'/>
    <field name='delayVariation' declared_type='UInt32' type='L' type64='I'/>
  </struct>
  <struct name='BluetoothHCIRSSIInfo' type='{BluetoothHCIRSSIInfo=&quot;handle&quot;S&quot;RSSIValue&quot;C}'>
    <field name='handle' declared_type='BluetoothConnectionHandle' type='S'/>
    <field name='RSSIValue' declared_type='BluetoothHCIRSSIValue' type='C'/>
  </struct>
  <struct name='BluetoothHCIRequestCallbackInfo' type='{BluetoothHCIRequestCallbackInfo=&quot;userCallback&quot;^v&quot;userRefCon&quot;^v&quot;internalRefCon&quot;^v&quot;asyncIDRefCon&quot;^v&quot;reserved&quot;^v}'>
    <field name='userCallback' declared_type='void*' type='^v'/>
    <field name='userRefCon' declared_type='void*' type='^v'/>
    <field name='internalRefCon' declared_type='void*' type='^v'/>
    <field name='asyncIDRefCon' declared_type='void*' type='^v'/>
    <field name='reserved' declared_type='void*' type='^v'/>
  </struct>
  <struct name='BluetoothHCIRequestNotificationInfo' type='{BluetoothHCIRequestNotificationInfo=&quot;HCIRequestID&quot;^{OpaqueBluetoothHCIRequestID}&quot;refCon&quot;^v&quot;reserved1&quot;^v&quot;eventCode&quot;C&quot;eventStatus&quot;C&quot;status&quot;C&quot;reserved2&quot;C&quot;opCode&quot;S&quot;dataSize&quot;I&quot;data&quot;*}'>
    <field name='HCIRequestID' declared_type='BluetoothHCIRequestID' type='^{OpaqueBluetoothHCIRequestID=}'/>
    <field name='refCon' declared_type='void*' type='^v'/>
    <field name='reserved1' declared_type='void*' type='^v'/>
    <field name='eventCode' declared_type='BluetoothHCIEventCode' type='C'/>
    <field name='eventStatus' declared_type='BluetoothHCIEventStatus' type='C'/>
    <field name='status' declared_type='BluetoothHCIStatus' type='C'/>
    <field name='reserved2' declared_type='UInt8' type='C'/>
    <field name='opCode' declared_type='BluetoothHCICommandOpCode' type='S'/>
    <field name='dataSize' declared_type='IOByteCount' type='L' type64='I'/>
    <field name='data' declared_type='UInt8*' type='*'/>
  </struct>
  <struct name='BluetoothHCIRoleInfo' type='{BluetoothHCIRoleInfo=&quot;role&quot;C&quot;handle&quot;S}'>
    <field name='role' declared_type='UInt8' type='C'/>
    <field name='handle' declared_type='BluetoothConnectionHandle' type='S'/>
  </struct>
  <struct name='BluetoothHCIScanActivity' type='{BluetoothHCIScanActivity=&quot;scanInterval&quot;S&quot;scanWindow&quot;S}'>
    <field name='scanInterval' declared_type='UInt16' type='S'/>
    <field name='scanWindow' declared_type='UInt16' type='S'/>
  </struct>
  <struct name='BluetoothHCIStoredLinkKeysInfo' type='{BluetoothHCIStoredLinkKeysInfo=&quot;numLinkKeysRead&quot;S&quot;maxNumLinkKeysAllowedInDevice&quot;S}'>
    <field name='numLinkKeysRead' declared_type='UInt16' type='S'/>
    <field name='maxNumLinkKeysAllowedInDevice' declared_type='UInt16' type='S'/>
  </struct>
  <struct name='BluetoothHCISupportedFeatures' type='{BluetoothHCISupportedFeatures=&quot;data&quot;[8C]}'>
    <field name='data' declared_type='UInt8*' type='[8C]'/>
  </struct>
  <struct name='BluetoothHCITransmitPowerLevelInfo' type='{BluetoothHCITransmitPowerLevelInfo=&quot;handle&quot;S&quot;level&quot;c}'>
    <field name='handle' declared_type='BluetoothConnectionHandle' type='S'/>
    <field name='level' declared_type='BluetoothHCITransmitPowerLevel' type='c'/>
  </struct>
  <struct name='BluetoothHCIVersionInfo' type='{BluetoothHCIVersionInfo=&quot;manufacturerName&quot;S&quot;lmpVersion&quot;C&quot;lmpSubVersion&quot;S&quot;hciVersion&quot;C&quot;hciRevision&quot;S}'>
    <field name='manufacturerName' declared_type='BluetoothManufacturerName' type='S'/>
    <field name='lmpVersion' declared_type='BluetoothLMPVersion' type='C'/>
    <field name='lmpSubVersion' declared_type='BluetoothLMPSubversion' type='S'/>
    <field name='hciVersion' declared_type='UInt8' type='C'/>
    <field name='hciRevision' declared_type='UInt16' type='S'/>
  </struct>
  <struct name='BluetoothKey' type='{BluetoothKey=&quot;data&quot;[16C]}'>
    <field name='data' declared_type='UInt8*' type='[16C]'/>
  </struct>
  <struct name='BluetoothL2CAPQualityOfServiceOptions' type='{BluetoothL2CAPQualityOfServiceOptions=&quot;flags&quot;C&quot;serviceType&quot;C&quot;tokenRate&quot;I&quot;tokenBucketSize&quot;I&quot;peakBandwidth&quot;I&quot;latency&quot;I&quot;delayVariation&quot;I}'>
    <field name='flags' declared_type='UInt8' type='C'/>
    <field name='serviceType' declared_type='UInt8' type='C'/>
    <field name='tokenRate' declared_type='UInt32' type='L' type64='I'/>
    <field name='tokenBucketSize' declared_type='UInt32' type='L' type64='I'/>
    <field name='peakBandwidth' declared_type='UInt32' type='L' type64='I'/>
    <field name='latency' declared_type='UInt32' type='L' type64='I'/>
    <field name='delayVariation' declared_type='UInt32' type='L' type64='I'/>
  </struct>
  <struct name='BluetoothL2CAPRetransmissionAndFlowControlOptions' type='{BluetoothL2CAPRetransmissionAndFlowControlOptions=&quot;flags&quot;C&quot;txWindowSize&quot;C&quot;maxTransmit&quot;C&quot;retransmissionTimeout&quot;S&quot;monitorTimeout&quot;S&quot;maxPDUPayloadSize&quot;S}'>
    <field name='flags' declared_type='UInt8' type='C'/>
    <field name='txWindowSize' declared_type='UInt8' type='C'/>
    <field name='maxTransmit' declared_type='UInt8' type='C'/>
    <field name='retransmissionTimeout' declared_type='UInt16' type='S'/>
    <field name='monitorTimeout' declared_type='UInt16' type='S'/>
    <field name='maxPDUPayloadSize' declared_type='UInt16' type='S'/>
  </struct>
  <struct name='BluetoothPINCode' type='{BluetoothPINCode=&quot;data&quot;[16C]}'>
    <field name='data' declared_type='UInt8*' type='[16C]'/>
  </struct>
  <struct name='BluetoothSetEventMask' type='{BluetoothSetEventMask=&quot;data&quot;[8C]}'>
    <field name='data' declared_type='UInt8*' type='[8C]'/>
  </struct>
  <struct name='BluetoothTransportInfo' type='{BluetoothTransportInfo=&quot;productID&quot;I&quot;vendorID&quot;I&quot;type&quot;I&quot;productName&quot;[25c]&quot;vendorName&quot;[25c]}'>
    <field name='productID' declared_type='UInt32' type='L' type64='I'/>
    <field name='vendorID' declared_type='UInt32' type='L' type64='I'/>
    <field name='type' declared_type='UInt32' type='L' type64='I'/>
    <field name='productName' declared_type='char*' type='[25c]'/>
    <field name='vendorName' declared_type='char*' type='[25c]'/>
  </struct>
  <struct name='IOBluetoothDeviceSearchAttributes' type='{IOBluetoothDeviceSearchAttributes=&quot;options&quot;I&quot;maxResults&quot;I&quot;deviceAttributeCount&quot;I&quot;attributeList&quot;^{IOBluetoothDeviceSearchDeviceAttributes}}'>
    <field name='options' declared_type='IOBluetoothDeviceSearchOptions' type='L' type64='I'/>
    <field name='maxResults' declared_type='IOItemCount' type='L' type64='I'/>
    <field name='deviceAttributeCount' declared_type='IOItemCount' type='L' type64='I'/>
    <field name='attributeList' declared_type='IOBluetoothDeviceSearchDeviceAttributes*' type='^{IOBluetoothDeviceSearchDeviceAttributes={BluetoothDeviceAddress=[6C]}[256C]III}'/>
  </struct>
  <struct name='IOBluetoothDeviceSearchDeviceAttributes' type='{IOBluetoothDeviceSearchDeviceAttributes=&quot;address&quot;{BluetoothDeviceAddress=&quot;data&quot;[6C]}&quot;name&quot;[256C]&quot;serviceClassMajor&quot;I&quot;deviceClassMajor&quot;I&quot;deviceClassMinor&quot;I}'>
    <field name='address' declared_type='BluetoothDeviceAddress' type='{BluetoothDeviceAddress=&quot;data&quot;[6C]}'/>
    <field name='name' declared_type='BluetoothDeviceName' type='[256C]'/>
    <field name='serviceClassMajor' declared_type='BluetoothServiceClassMajor' type='L' type64='I'/>
    <field name='deviceClassMajor' declared_type='BluetoothDeviceClassMajor' type='L' type64='I'/>
    <field name='deviceClassMinor' declared_type='BluetoothDeviceClassMinor' type='L' type64='I'/>
  </struct>
  <struct name='IOBluetoothL2CAPChannelDataBlock' type='{IOBluetoothL2CAPChannelDataBlock=&quot;dataPtr&quot;^v&quot;dataSize&quot;I}' type64='{IOBluetoothL2CAPChannelDataBlock=&quot;dataPtr&quot;^v&quot;dataSize&quot;Q}'>
    <field name='dataPtr' declared_type='void*' type='^v'/>
    <field name='dataSize' declared_type='size_t' type='L' type64='Q'/>
  </struct>
  <struct name='IOBluetoothL2CAPChannelEvent' type='{IOBluetoothL2CAPChannelEvent=&quot;eventType&quot;i&quot;u&quot;(?=&quot;data&quot;{IOBluetoothL2CAPChannelDataBlock=&quot;dataPtr&quot;^v&quot;dataSize&quot;I}&quot;writeRefCon&quot;^v&quot;padding&quot;[32C])&quot;status&quot;i}' type64='{IOBluetoothL2CAPChannelEvent=&quot;eventType&quot;i&quot;u&quot;(?=&quot;data&quot;{IOBluetoothL2CAPChannelDataBlock=&quot;dataPtr&quot;^v&quot;dataSize&quot;Q}&quot;writeRefCon&quot;^v&quot;padding&quot;[32C])&quot;status&quot;i}'>
    <field name='eventType' declared_type='IOBluetoothL2CAPChannelEventType' type='i'/>
    <field name='u' declared_type='union IOBluetoothL2CAPChannelEvent::' type='(?=&quot;data&quot;{IOBluetoothL2CAPChannelDataBlock=&quot;dataPtr&quot;^v&quot;dataSize&quot;I}&quot;writeRefCon&quot;^v&quot;padding&quot;[32C])' type64='(?=&quot;data&quot;{IOBluetoothL2CAPChannelDataBlock=&quot;dataPtr&quot;^v&quot;dataSize&quot;Q}&quot;writeRefCon&quot;^v&quot;padding&quot;[32C])'/>
    <field name='status' declared_type='IOReturn' type='i'/>
  </struct>
  <struct name='IOBluetoothRFCOMMChannelEvent' type='{IOBluetoothRFCOMMChannelEvent=&quot;eventType&quot;i&quot;u&quot;(?=&quot;data&quot;{IOBluetoothRFCOMMDataBlock=&quot;dataPtr&quot;^v&quot;dataSize&quot;I}&quot;flowStatus&quot;i&quot;terminatedChannel&quot;^{OpaqueIOBluetoothObjectRef}&quot;writeRefCon&quot;^v&quot;padding&quot;[32C]&quot;newData&quot;{IOBluetoothRFCOMMDataBlock=&quot;dataPtr&quot;^v&quot;dataSize&quot;I})&quot;status&quot;i}' type64='{IOBluetoothRFCOMMChannelEvent=&quot;eventType&quot;i&quot;u&quot;(?=&quot;data&quot;{IOBluetoothRFCOMMDataBlock=&quot;dataPtr&quot;^v&quot;dataSize&quot;Q}&quot;flowStatus&quot;i&quot;terminatedChannel&quot;^{OpaqueIOBluetoothObjectRef}&quot;writeRefCon&quot;^v&quot;padding&quot;[32C]&quot;newData&quot;{IOBluetoothRFCOMMDataBlock=&quot;dataPtr&quot;^v&quot;dataSize&quot;Q})&quot;status&quot;i}'>
    <field name='eventType' declared_type='IOBluetoothRFCOMMChannelEventType' type='i'/>
    <field name='u' declared_type='union IOBluetoothRFCOMMChannelEvent::' type='(?=&quot;data&quot;{IOBluetoothRFCOMMDataBlock=&quot;dataPtr&quot;^v&quot;dataSize&quot;I}&quot;flowStatus&quot;i&quot;terminatedChannel&quot;^{OpaqueIOBluetoothObjectRef}&quot;writeRefCon&quot;^v&quot;padding&quot;[32C]&quot;newData&quot;{IOBluetoothRFCOMMDataBlock=&quot;dataPtr&quot;^v&quot;dataSize&quot;I})' type64='(?=&quot;data&quot;{IOBluetoothRFCOMMDataBlock=&quot;dataPtr&quot;^v&quot;dataSize&quot;Q}&quot;flowStatus&quot;i&quot;terminatedChannel&quot;^{OpaqueIOBluetoothObjectRef}&quot;writeRefCon&quot;^v&quot;padding&quot;[32C]&quot;newData&quot;{IOBluetoothRFCOMMDataBlock=&quot;dataPtr&quot;^v&quot;dataSize&quot;Q})'/>
    <field name='status' declared_type='IOReturn' type='i'/>
  </struct>
  <struct name='IOBluetoothRFCOMMDataBlock' type='{IOBluetoothRFCOMMDataBlock=&quot;dataPtr&quot;^v&quot;dataSize&quot;I}' type64='{IOBluetoothRFCOMMDataBlock=&quot;dataPtr&quot;^v&quot;dataSize&quot;Q}'>
    <field name='dataPtr' declared_type='void*' type='^v'/>
    <field name='dataSize' declared_type='size_t' type='L' type64='Q'/>
  </struct>
  <struct name='OBEXAbortCommandData' type='{OBEXAbortCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}' type64='{OBEXAbortCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}'>
    <field name='headerDataPtr' declared_type='void*' type='^v'/>
    <field name='headerDataLength' declared_type='size_t' type='L' type64='Q'/>
  </struct>
  <struct name='OBEXAbortCommandResponseData' type='{OBEXAbortCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}' type64='{OBEXAbortCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}'>
    <field name='serverResponseOpCode' declared_type='OBEXOpCode' type='C'/>
    <field name='headerDataPtr' declared_type='void*' type='^v'/>
    <field name='headerDataLength' declared_type='size_t' type='L' type64='Q'/>
  </struct>
  <struct name='OBEXConnectCommandData' type='{OBEXConnectCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I&quot;maxPacketSize&quot;S&quot;version&quot;C&quot;flags&quot;C}' type64='{OBEXConnectCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q&quot;maxPacketSize&quot;S&quot;version&quot;C&quot;flags&quot;C}'>
    <field name='headerDataPtr' declared_type='void*' type='^v'/>
    <field name='headerDataLength' declared_type='size_t' type='L' type64='Q'/>
    <field name='maxPacketSize' declared_type='OBEXMaxPacketLength' type='S'/>
    <field name='version' declared_type='OBEXVersion' type='C'/>
    <field name='flags' declared_type='OBEXFlags' type='C'/>
  </struct>
  <struct name='OBEXConnectCommandResponseData' type='{OBEXConnectCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I&quot;maxPacketSize&quot;S&quot;version&quot;C&quot;flags&quot;C}' type64='{OBEXConnectCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q&quot;maxPacketSize&quot;S&quot;version&quot;C&quot;flags&quot;C}'>
    <field name='serverResponseOpCode' declared_type='OBEXOpCode' type='C'/>
    <field name='headerDataPtr' declared_type='void*' type='^v'/>
    <field name='headerDataLength' declared_type='size_t' type='L' type64='Q'/>
    <field name='maxPacketSize' declared_type='OBEXMaxPacketLength' type='S'/>
    <field name='version' declared_type='OBEXVersion' type='C'/>
    <field name='flags' declared_type='OBEXFlags' type='C'/>
  </struct>
  <struct name='OBEXDisconnectCommandData' type='{OBEXDisconnectCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}' type64='{OBEXDisconnectCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}'>
    <field name='headerDataPtr' declared_type='void*' type='^v'/>
    <field name='headerDataLength' declared_type='size_t' type='L' type64='Q'/>
  </struct>
  <struct name='OBEXDisconnectCommandResponseData' type='{OBEXDisconnectCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}' type64='{OBEXDisconnectCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}'>
    <field name='serverResponseOpCode' declared_type='OBEXOpCode' type='C'/>
    <field name='headerDataPtr' declared_type='void*' type='^v'/>
    <field name='headerDataLength' declared_type='size_t' type='L' type64='Q'/>
  </struct>
  <struct name='OBEXErrorData' type='{OBEXErrorData=&quot;error&quot;i&quot;dataPtr&quot;^v&quot;dataLength&quot;I}' type64='{OBEXErrorData=&quot;error&quot;i&quot;dataPtr&quot;^v&quot;dataLength&quot;Q}'>
    <field name='error' declared_type='OBEXError' type='i'/>
    <field name='dataPtr' declared_type='void*' type='^v'/>
    <field name='dataLength' declared_type='size_t' type='L' type64='Q'/>
  </struct>
  <struct name='OBEXGetCommandData' type='{OBEXGetCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}' type64='{OBEXGetCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}'>
    <field name='headerDataPtr' declared_type='void*' type='^v'/>
    <field name='headerDataLength' declared_type='size_t' type='L' type64='Q'/>
  </struct>
  <struct name='OBEXGetCommandResponseData' type='{OBEXGetCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}' type64='{OBEXGetCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}'>
    <field name='serverResponseOpCode' declared_type='OBEXOpCode' type='C'/>
    <field name='headerDataPtr' declared_type='void*' type='^v'/>
    <field name='headerDataLength' declared_type='size_t' type='L' type64='Q'/>
  </struct>
  <struct name='OBEXPutCommandData' type='{OBEXPutCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I&quot;bodyDataLeftToSend&quot;I}' type64='{OBEXPutCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q&quot;bodyDataLeftToSend&quot;Q}'>
    <field name='headerDataPtr' declared_type='void*' type='^v'/>
    <field name='headerDataLength' declared_type='size_t' type='L' type64='Q'/>
    <field name='bodyDataLeftToSend' declared_type='size_t' type='L' type64='Q'/>
  </struct>
  <struct name='OBEXPutCommandResponseData' type='{OBEXPutCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}' type64='{OBEXPutCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}'>
    <field name='serverResponseOpCode' declared_type='OBEXOpCode' type='C'/>
    <field name='headerDataPtr' declared_type='void*' type='^v'/>
    <field name='headerDataLength' declared_type='size_t' type='L' type64='Q'/>
  </struct>
  <struct name='OBEXSessionEvent' type='{OBEXSessionEvent=&quot;type&quot;I&quot;session&quot;^{OpaqueOBEXSessionRef}&quot;refCon&quot;^v&quot;isEndOfEventData&quot;B&quot;reserved1&quot;^v&quot;reserved2&quot;^v&quot;u&quot;(?=&quot;connectCommandResponseData&quot;{OBEXConnectCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I&quot;maxPacketSize&quot;S&quot;version&quot;C&quot;flags&quot;C}&quot;disconnectCommandResponseData&quot;{OBEXDisconnectCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}&quot;putCommandResponseData&quot;{OBEXPutCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}&quot;getCommandResponseData&quot;{OBEXGetCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}&quot;setPathCommandResponseData&quot;{OBEXSetPathCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I&quot;flags&quot;C&quot;constants&quot;C}&quot;abortCommandResponseData&quot;{OBEXAbortCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}&quot;connectCommandData&quot;{OBEXConnectCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I&quot;maxPacketSize&quot;S&quot;version&quot;C&quot;flags&quot;C}&quot;disconnectCommandData&quot;{OBEXDisconnectCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}&quot;putCommandData&quot;{OBEXPutCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I&quot;bodyDataLeftToSend&quot;I}&quot;getCommandData&quot;{OBEXGetCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}&quot;setPathCommandData&quot;{OBEXSetPathCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I&quot;flags&quot;C&quot;constants&quot;C}&quot;abortCommandData&quot;{OBEXAbortCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}&quot;errorData&quot;{OBEXErrorData=&quot;error&quot;i&quot;dataPtr&quot;^v&quot;dataLength&quot;I})}' type64='{OBEXSessionEvent=&quot;type&quot;I&quot;session&quot;^{OpaqueOBEXSessionRef}&quot;refCon&quot;^v&quot;isEndOfEventData&quot;B&quot;reserved1&quot;^v&quot;reserved2&quot;^v&quot;u&quot;(?=&quot;connectCommandResponseData&quot;{OBEXConnectCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q&quot;maxPacketSize&quot;S&quot;version&quot;C&quot;flags&quot;C}&quot;disconnectCommandResponseData&quot;{OBEXDisconnectCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}&quot;putCommandResponseData&quot;{OBEXPutCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}&quot;getCommandResponseData&quot;{OBEXGetCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}&quot;setPathCommandResponseData&quot;{OBEXSetPathCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q&quot;flags&quot;C&quot;constants&quot;C}&quot;abortCommandResponseData&quot;{OBEXAbortCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}&quot;connectCommandData&quot;{OBEXConnectCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q&quot;maxPacketSize&quot;S&quot;version&quot;C&quot;flags&quot;C}&quot;disconnectCommandData&quot;{OBEXDisconnectCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}&quot;putCommandData&quot;{OBEXPutCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q&quot;bodyDataLeftToSend&quot;Q}&quot;getCommandData&quot;{OBEXGetCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}&quot;setPathCommandData&quot;{OBEXSetPathCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q&quot;flags&quot;C&quot;constants&quot;C}&quot;abortCommandData&quot;{OBEXAbortCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}&quot;errorData&quot;{OBEXErrorData=&quot;error&quot;i&quot;dataPtr&quot;^v&quot;dataLength&quot;Q})}'>
    <field name='type' declared_type='OBEXSessionEventType' type='I'/>
    <field name='session' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <field name='refCon' declared_type='void*' type='^v'/>
    <field name='isEndOfEventData' declared_type='Boolean' type='B'/>
    <field name='reserved1' declared_type='void*' type='^v'/>
    <field name='reserved2' declared_type='void*' type='^v'/>
    <field name='u' declared_type='union OBEXSessionEvent::' type='(?=&quot;connectCommandResponseData&quot;{OBEXConnectCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I&quot;maxPacketSize&quot;S&quot;version&quot;C&quot;flags&quot;C}&quot;disconnectCommandResponseData&quot;{OBEXDisconnectCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}&quot;putCommandResponseData&quot;{OBEXPutCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}&quot;getCommandResponseData&quot;{OBEXGetCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}&quot;setPathCommandResponseData&quot;{OBEXSetPathCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I&quot;flags&quot;C&quot;constants&quot;C}&quot;abortCommandResponseData&quot;{OBEXAbortCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}&quot;connectCommandData&quot;{OBEXConnectCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I&quot;maxPacketSize&quot;S&quot;version&quot;C&quot;flags&quot;C}&quot;disconnectCommandData&quot;{OBEXDisconnectCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}&quot;putCommandData&quot;{OBEXPutCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I&quot;bodyDataLeftToSend&quot;I}&quot;getCommandData&quot;{OBEXGetCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}&quot;setPathCommandData&quot;{OBEXSetPathCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I&quot;flags&quot;C&quot;constants&quot;C}&quot;abortCommandData&quot;{OBEXAbortCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I}&quot;errorData&quot;{OBEXErrorData=&quot;error&quot;i&quot;dataPtr&quot;^v&quot;dataLength&quot;I})' type64='(?=&quot;connectCommandResponseData&quot;{OBEXConnectCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q&quot;maxPacketSize&quot;S&quot;version&quot;C&quot;flags&quot;C}&quot;disconnectCommandResponseData&quot;{OBEXDisconnectCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}&quot;putCommandResponseData&quot;{OBEXPutCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}&quot;getCommandResponseData&quot;{OBEXGetCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}&quot;setPathCommandResponseData&quot;{OBEXSetPathCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q&quot;flags&quot;C&quot;constants&quot;C}&quot;abortCommandResponseData&quot;{OBEXAbortCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}&quot;connectCommandData&quot;{OBEXConnectCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q&quot;maxPacketSize&quot;S&quot;version&quot;C&quot;flags&quot;C}&quot;disconnectCommandData&quot;{OBEXDisconnectCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}&quot;putCommandData&quot;{OBEXPutCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q&quot;bodyDataLeftToSend&quot;Q}&quot;getCommandData&quot;{OBEXGetCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}&quot;setPathCommandData&quot;{OBEXSetPathCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q&quot;flags&quot;C&quot;constants&quot;C}&quot;abortCommandData&quot;{OBEXAbortCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q}&quot;errorData&quot;{OBEXErrorData=&quot;error&quot;i&quot;dataPtr&quot;^v&quot;dataLength&quot;Q})'/>
  </struct>
  <struct name='OBEXSetPathCommandData' type='{OBEXSetPathCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I&quot;flags&quot;C&quot;constants&quot;C}' type64='{OBEXSetPathCommandData=&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q&quot;flags&quot;C&quot;constants&quot;C}'>
    <field name='headerDataPtr' declared_type='void*' type='^v'/>
    <field name='headerDataLength' declared_type='size_t' type='L' type64='Q'/>
    <field name='flags' declared_type='OBEXFlags' type='C'/>
    <field name='constants' declared_type='OBEXConstants' type='C'/>
  </struct>
  <struct name='OBEXSetPathCommandResponseData' type='{OBEXSetPathCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;I&quot;flags&quot;C&quot;constants&quot;C}' type64='{OBEXSetPathCommandResponseData=&quot;serverResponseOpCode&quot;C&quot;headerDataPtr&quot;^v&quot;headerDataLength&quot;Q&quot;flags&quot;C&quot;constants&quot;C}'>
    <field name='serverResponseOpCode' declared_type='OBEXOpCode' type='C'/>
    <field name='headerDataPtr' declared_type='void*' type='^v'/>
    <field name='headerDataLength' declared_type='size_t' type='L' type64='Q'/>
    <field name='flags' declared_type='OBEXFlags' type='C'/>
    <field name='constants' declared_type='OBEXConstants' type='C'/>
  </struct>
  <struct name='OBEXTransportEvent' type='{OBEXTransportEvent=&quot;type&quot;I&quot;status&quot;i&quot;dataPtr&quot;^v&quot;dataLength&quot;I}' type64='{OBEXTransportEvent=&quot;type&quot;I&quot;status&quot;i&quot;dataPtr&quot;^v&quot;dataLength&quot;Q}'>
    <field name='type' declared_type='OBEXTransportEventType' type='I'/>
    <field name='status' declared_type='OBEXError' type='i'/>
    <field name='dataPtr' declared_type='void*' type='^v'/>
    <field name='dataLength' declared_type='size_t' type='L' type64='Q'/>
  </struct>
  <cftype name='IOBluetoothDeviceInquiryRef' type='^{OpaqueIOBluetoothDeviceInquiryRef=}'/>
  <cftype name='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  <cftype name='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  <cftype name='IOBluetoothObjectRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  <cftype name='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  <cftype name='IOBluetoothSDPDataElementRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  <cftype name='IOBluetoothSDPServiceRecordRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  <cftype name='IOBluetoothSDPUUIDRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  <cftype name='IOBluetoothUserNotificationRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  <cftype name='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
  <cftype name='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
  <cftype name='PrivOBEXSessionDataRef' type='^{OpaquePrivOBEXSessionData=}'/>
  <opaque name='BluetoothHCIOperationID' type='^{OpaqueBluetoothHCIOperationID=}'/>
  <opaque name='BluetoothHCIRequestID' type='^{OpaqueBluetoothHCIRequestID=}'/>
  <opaque name='BluetoothHCITransportCommandID' type='^{OpaqueBluetoothHCITransportCommandID=}'/>
  <opaque name='BluetoothHCITransportID' type='^{OpaqueBluetoothHCITransportID=}'/>
  <constant name='kFTSListingNameKey' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kFTSListingSizeKey' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kFTSListingTypeKey' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kFTSProgressBytesTotalKey' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kFTSProgressBytesTransferredKey' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kFTSProgressEstimatedTimeKey' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kFTSProgressPrecentageKey' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kFTSProgressTimeElapsedKey' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kFTSProgressTransferRateKey' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyAppParameters' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyAuthorizationChallenge' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyAuthorizationResponse' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyBody' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyByteSequence' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyConnectionID' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyCount' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyDescription' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyEndOfBody' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyHTTP' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyLength' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyName' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyObjectClass' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyTarget' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyTime4Byte' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyTimeISO' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyType' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyUnknown1ByteQuantity' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyUnknown4ByteQuantity' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyUnknownByteSequence' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyUnknownUnicodeText' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyUserDefined' declared_type='CFStringRef' type='^{__CFString=}'/>
  <constant name='kOBEXHeaderIDKeyWho' declared_type='CFStringRef' type='^{__CFString=}'/>
  <string_constant name='kBluetoothTargetDoesNotRespondToCallbackExceptionName' nsstring='true' value='BluetoothTargetDoesNotRespondToCallbackException'/>
  <string_constant name='kCharsetStringISO88591' value='CHARSET=ISO-8859-1'/>
  <string_constant name='kCharsetStringUTF8' value='UTF-8'/>
  <string_constant name='kEncodingString8Bit' value='8BIT'/>
  <string_constant name='kEncodingStringBase64' value='BASE-64'/>
  <string_constant name='kEncodingStringQuotedPrintable' value='QUOTED-PRINTABLE'/>
  <string_constant name='kIOBluetoothDeviceInquiryInfoChangedNotification' nsstring='true' value='IOBluetoothDeviceInquiryInfoChanged'/>
  <string_constant name='kIOBluetoothDeviceNameChangedNotification' nsstring='true' value='IOBluetoothDeviceNameChanged'/>
  <string_constant name='kIOBluetoothDeviceNotificationNameConnected' nsstring='true' value='IOBluetoothDeviceConnected'/>
  <string_constant name='kIOBluetoothDeviceNotificationNameDisconnected' nsstring='true' value='IOBluetoothDeviceDisconnected'/>
  <string_constant name='kIOBluetoothDeviceServicesChangedNotification' nsstring='true' value='IOBluetoothDeviceServicesChanged'/>
  <enum name='BLUETOOTH_VERSION_1_0' value='4096'/>
  <enum name='BLUETOOTH_VERSION_1_0_0' value='4096'/>
  <enum name='BLUETOOTH_VERSION_1_0_1' value='4097'/>
  <enum name='BLUETOOTH_VERSION_1_1' value='4160'/>
  <enum name='BLUETOOTH_VERSION_1_1_0' value='4160'/>
  <enum name='BLUETOOTH_VERSION_1_2' value='4224'/>
  <enum name='BLUETOOTH_VERSION_1_2_0' value='4224'/>
  <enum name='BLUETOOTH_VERSION_1_2_1' value='4225'/>
  <enum name='BLUETOOTH_VERSION_1_3' value='4288'/>
  <enum name='BLUETOOTH_VERSION_1_3_0' value='4288'/>
  <enum name='BLUETOOTH_VERSION_1_3_1' value='4289'/>
  <enum name='BLUETOOTH_VERSION_1_6' value='4480'/>
  <enum name='BLUETOOTH_VERSION_1_6_0' value='4480'/>
  <enum name='BLUETOOTH_VERSION_1_6_3' value='4483'/>
  <enum name='BLUETOOTH_VERSION_CURRENT' value='4483'/>
  <enum name='BLUETOOTH_VERSION_MAX_ALLOWED' value='4289'/>
  <enum name='BluetoothRFCOMMLineStatusFramingError' value='3'/>
  <enum name='BluetoothRFCOMMLineStatusNoError' value='0'/>
  <enum name='BluetoothRFCOMMLineStatusOverrunError' value='1'/>
  <enum name='BluetoothRFCOMMLineStatusParityError' value='2'/>
  <enum name='MAC_OS_X_VERSION_10_2_1' value='1021'/>
  <enum name='MAC_OS_X_VERSION_10_2_2' value='1022'/>
  <enum name='MAC_OS_X_VERSION_10_2_3' value='1023'/>
  <enum name='MAC_OS_X_VERSION_10_2_4' value='1024'/>
  <enum name='MAC_OS_X_VERSION_10_2_5' value='1025'/>
  <enum name='MAC_OS_X_VERSION_10_2_6' value='1026'/>
  <enum name='MAC_OS_X_VERSION_10_2_7' value='1027'/>
  <enum name='kAuthenticationDisabled' value='0'/>
  <enum name='kAuthenticationEnabled' value='1'/>
  <enum name='kBluetoothACLConnection' value='1'/>
  <enum name='kBluetoothACLLogicalChannelL2CAPContinue' value='1'/>
  <enum name='kBluetoothACLLogicalChannelL2CAPStart' value='2'/>
  <enum name='kBluetoothACLLogicalChannelLMP' value='3'/>
  <enum name='kBluetoothACLLogicalChannelReserved' value='0'/>
  <enum name='kBluetoothAllowRoleSwitch' value='1'/>
  <enum name='kBluetoothConnectionHandleNone' value='65535'/>
  <enum name='kBluetoothDeviceClassMajorAny' value='707406378'/>
  <enum name='kBluetoothDeviceClassMajorAudio' value='4'/>
  <enum name='kBluetoothDeviceClassMajorComputer' value='1'/>
  <enum name='kBluetoothDeviceClassMajorEnd' value='1852796518'/>
  <enum name='kBluetoothDeviceClassMajorImaging' value='6'/>
  <enum name='kBluetoothDeviceClassMajorLANAccessPoint' value='3'/>
  <enum name='kBluetoothDeviceClassMajorMiscellaneous' value='0'/>
  <enum name='kBluetoothDeviceClassMajorNone' value='1852796517'/>
  <enum name='kBluetoothDeviceClassMajorPeripheral' value='5'/>
  <enum name='kBluetoothDeviceClassMajorPhone' value='2'/>
  <enum name='kBluetoothDeviceClassMajorUnclassified' value='31'/>
  <enum name='kBluetoothDeviceClassMinorAny' value='707406378'/>
  <enum name='kBluetoothDeviceClassMinorAudioCamcorder' value='13'/>
  <enum name='kBluetoothDeviceClassMinorAudioCar' value='8'/>
  <enum name='kBluetoothDeviceClassMinorAudioGamingToy' value='18'/>
  <enum name='kBluetoothDeviceClassMinorAudioHandsFree' value='2'/>
  <enum name='kBluetoothDeviceClassMinorAudioHeadphones' value='6'/>
  <enum name='kBluetoothDeviceClassMinorAudioHeadset' value='1'/>
  <enum name='kBluetoothDeviceClassMinorAudioHiFi' value='10'/>
  <enum name='kBluetoothDeviceClassMinorAudioLoudspeaker' value='5'/>
  <enum name='kBluetoothDeviceClassMinorAudioMicrophone' value='4'/>
  <enum name='kBluetoothDeviceClassMinorAudioPortable' value='7'/>
  <enum name='kBluetoothDeviceClassMinorAudioReserved1' value='3'/>
  <enum name='kBluetoothDeviceClassMinorAudioReserved2' value='17'/>
  <enum name='kBluetoothDeviceClassMinorAudioSetTopBox' value='9'/>
  <enum name='kBluetoothDeviceClassMinorAudioUnclassified' value='0'/>
  <enum name='kBluetoothDeviceClassMinorAudioVCR' value='11'/>
  <enum name='kBluetoothDeviceClassMinorAudioVideoCamera' value='12'/>
  <enum name='kBluetoothDeviceClassMinorAudioVideoConferencing' value='16'/>
  <enum name='kBluetoothDeviceClassMinorAudioVideoDisplayAndLoudspeaker' value='15'/>
  <enum name='kBluetoothDeviceClassMinorAudioVideoMonitor' value='14'/>
  <enum name='kBluetoothDeviceClassMinorComputerDesktopWorkstation' value='1'/>
  <enum name='kBluetoothDeviceClassMinorComputerHandheld' value='4'/>
  <enum name='kBluetoothDeviceClassMinorComputerLaptop' value='3'/>
  <enum name='kBluetoothDeviceClassMinorComputerPalmSized' value='5'/>
  <enum name='kBluetoothDeviceClassMinorComputerServer' value='2'/>
  <enum name='kBluetoothDeviceClassMinorComputerUnclassified' value='0'/>
  <enum name='kBluetoothDeviceClassMinorComputerWearable' value='6'/>
  <enum name='kBluetoothDeviceClassMinorEnd' value='1852796518'/>
  <enum name='kBluetoothDeviceClassMinorImaging1Camera' value='8'/>
  <enum name='kBluetoothDeviceClassMinorImaging1Display' value='4'/>
  <enum name='kBluetoothDeviceClassMinorImaging1Printer' value='32'/>
  <enum name='kBluetoothDeviceClassMinorImaging1Scanner' value='16'/>
  <enum name='kBluetoothDeviceClassMinorImaging2Unclassified' value='0'/>
  <enum name='kBluetoothDeviceClassMinorNone' value='1852796517'/>
  <enum name='kBluetoothDeviceClassMinorPeripheral1Combo' value='48'/>
  <enum name='kBluetoothDeviceClassMinorPeripheral1Keyboard' value='16'/>
  <enum name='kBluetoothDeviceClassMinorPeripheral1Pointing' value='32'/>
  <enum name='kBluetoothDeviceClassMinorPeripheral2Gamepad' value='2'/>
  <enum name='kBluetoothDeviceClassMinorPeripheral2Joystick' value='1'/>
  <enum name='kBluetoothDeviceClassMinorPeripheral2RemoteControl' value='3'/>
  <enum name='kBluetoothDeviceClassMinorPeripheral2SensingDevice' value='4'/>
  <enum name='kBluetoothDeviceClassMinorPeripheral2Unclassified' value='0'/>
  <enum name='kBluetoothDeviceClassMinorPhoneCellular' value='1'/>
  <enum name='kBluetoothDeviceClassMinorPhoneCommonISDNAccess' value='5'/>
  <enum name='kBluetoothDeviceClassMinorPhoneCordless' value='2'/>
  <enum name='kBluetoothDeviceClassMinorPhoneSmartPhone' value='3'/>
  <enum name='kBluetoothDeviceClassMinorPhoneUnclassified' value='0'/>
  <enum name='kBluetoothDeviceClassMinorPhoneWiredModemOrVoiceGateway' value='4'/>
  <enum name='kBluetoothDeviceNameMaxLength' value='248'/>
  <enum name='kBluetoothDontAllowRoleSwitch' value='0'/>
  <enum name='kBluetoothEncryptionEnableOff' value='0'/>
  <enum name='kBluetoothEncryptionEnableOn' value='1'/>
  <enum name='kBluetoothFeatureAFHCapableMaster' value='8'/>
  <enum name='kBluetoothFeatureAFHCapableSlave' value='8'/>
  <enum name='kBluetoothFeatureAFHClassificationMaster' value='16'/>
  <enum name='kBluetoothFeatureAFHClassificationSlave' value='16'/>
  <enum name='kBluetoothFeatureALawLog' value='128'/>
  <enum name='kBluetoothFeatureAbsenceMasks' value='4'/>
  <enum name='kBluetoothFeatureAliasAuhentication' value='32'/>
  <enum name='kBluetoothFeatureAnonymityMode' value='64'/>
  <enum name='kBluetoothFeatureBroadcastEncryption' value='128'/>
  <enum name='kBluetoothFeatureCVSD' value='1'/>
  <enum name='kBluetoothFeatureChannelQuality' value='4'/>
  <enum name='kBluetoothFeatureEV4Packets' value='1'/>
  <enum name='kBluetoothFeatureEV5Packets' value='2'/>
  <enum name='kBluetoothFeatureEncryption' value='4'/>
  <enum name='kBluetoothFeatureEnhancedInquiryScan' value='8'/>
  <enum name='kBluetoothFeatureExtendedSCOLink' value='128'/>
  <enum name='kBluetoothFeatureFiveSlotPackets' value='2'/>
  <enum name='kBluetoothFeatureFlowControlLagBit0' value='16'/>
  <enum name='kBluetoothFeatureFlowControlLagBit1' value='32'/>
  <enum name='kBluetoothFeatureFlowControlLagBit2' value='64'/>
  <enum name='kBluetoothFeatureHV2Packets' value='16'/>
  <enum name='kBluetoothFeatureHV3Packets' value='32'/>
  <enum name='kBluetoothFeatureHoldMode' value='64'/>
  <enum name='kBluetoothFeatureInterlacedInquiryScan' value='16'/>
  <enum name='kBluetoothFeatureInterlacedPageScan' value='32'/>
  <enum name='kBluetoothFeaturePagingScheme' value='2'/>
  <enum name='kBluetoothFeatureParkMode' value='1'/>
  <enum name='kBluetoothFeaturePowerControl' value='4'/>
  <enum name='kBluetoothFeatureRSSI' value='2'/>
  <enum name='kBluetoothFeatureRSSIWithInquiryResult' value='64'/>
  <enum name='kBluetoothFeatureReserved1' value='2'/>
  <enum name='kBluetoothFeatureReserved2' value='4'/>
  <enum name='kBluetoothFeatureSCOLink' value='8'/>
  <enum name='kBluetoothFeatureScatterMode' value='1'/>
  <enum name='kBluetoothFeatureSlotOffset' value='8'/>
  <enum name='kBluetoothFeatureSniffMode' value='128'/>
  <enum name='kBluetoothFeatureSwitchRoles' value='32'/>
  <enum name='kBluetoothFeatureThreeSlotPackets' value='1'/>
  <enum name='kBluetoothFeatureTimingAccuracy' value='16'/>
  <enum name='kBluetoothFeatureTransparentSCOData' value='8'/>
  <enum name='kBluetoothFeatureULawLog' value='64'/>
  <enum name='kBluetoothGeneralInquiryAccessCodeIndex' value='0'/>
  <enum name='kBluetoothGeneralInquiryAccessCodeLAPValue' value='10390323'/>
  <enum name='kBluetoothHCICommandAcceptConnectionRequest' value='9'/>
  <enum name='kBluetoothHCICommandAddSCOConnection' value='7'/>
  <enum name='kBluetoothHCICommandAuthenticationRequested' value='17'/>
  <enum name='kBluetoothHCICommandChangeConnectionLinkKey' value='21'/>
  <enum name='kBluetoothHCICommandChangeConnectionPacketType' value='15'/>
  <enum name='kBluetoothHCICommandChangeLocalName' value='19'/>
  <enum name='kBluetoothHCICommandCreateConnection' value='5'/>
  <enum name='kBluetoothHCICommandCreateNewUnitKey' value='11'/>
  <enum name='kBluetoothHCICommandDeleteStoredLinkKey' value='18'/>
  <enum name='kBluetoothHCICommandDisconnect' value='6'/>
  <enum name='kBluetoothHCICommandEnableDeviceUnderTestMode' value='3'/>
  <enum name='kBluetoothHCICommandExitParkMode' value='6'/>
  <enum name='kBluetoothHCICommandExitPeriodicInquiryMode' value='4'/>
  <enum name='kBluetoothHCICommandExitSniffMode' value='4'/>
  <enum name='kBluetoothHCICommandFlush' value='8'/>
  <enum name='kBluetoothHCICommandGetLinkQuality' value='3'/>
  <enum name='kBluetoothHCICommandGroupHostController' value='3'/>
  <enum name='kBluetoothHCICommandGroupInformational' value='4'/>
  <enum name='kBluetoothHCICommandGroupLinkControl' value='1'/>
  <enum name='kBluetoothHCICommandGroupLinkPolicy' value='2'/>
  <enum name='kBluetoothHCICommandGroupLogoTesting' value='62'/>
  <enum name='kBluetoothHCICommandGroupMax' value='64'/>
  <enum name='kBluetoothHCICommandGroupNoOp' value='0'/>
  <enum name='kBluetoothHCICommandGroupStatus' value='5'/>
  <enum name='kBluetoothHCICommandGroupTesting' value='6'/>
  <enum name='kBluetoothHCICommandGroupVendorSpecific' value='63'/>
  <enum name='kBluetoothHCICommandHoldMode' value='1'/>
  <enum name='kBluetoothHCICommandHostBufferSize' value='51'/>
  <enum name='kBluetoothHCICommandHostNumberOfCompletedPackets' value='53'/>
  <enum name='kBluetoothHCICommandInquiry' value='1'/>
  <enum name='kBluetoothHCICommandInquiryCancel' value='2'/>
  <enum name='kBluetoothHCICommandInvalidateFlashAndReboot' value='23'/>
  <enum name='kBluetoothHCICommandLinkKeyRequestNegativeReply' value='12'/>
  <enum name='kBluetoothHCICommandLinkKeyRequestReply' value='11'/>
  <enum name='kBluetoothHCICommandMasterLinkKey' value='23'/>
  <enum name='kBluetoothHCICommandMax' value='1023'/>
  <enum name='kBluetoothHCICommandNoOp' value='0'/>
  <enum name='kBluetoothHCICommandPINCodeRequestNegativeReply' value='14'/>
  <enum name='kBluetoothHCICommandPINCodeRequestReply' value='13'/>
  <enum name='kBluetoothHCICommandPacketHeaderSize' value='3'/>
  <enum name='kBluetoothHCICommandPacketMaxDataSize' value='255'/>
  <enum name='kBluetoothHCICommandParkMode' value='5'/>
  <enum name='kBluetoothHCICommandPeriodicInquiryMode' value='3'/>
  <enum name='kBluetoothHCICommandQoSSetup' value='7'/>
  <enum name='kBluetoothHCICommandReadAuthenticationEnable' value='31'/>
  <enum name='kBluetoothHCICommandReadAutomaticFlushTimeout' value='39'/>
  <enum name='kBluetoothHCICommandReadBufferSize' value='5'/>
  <enum name='kBluetoothHCICommandReadClassOfDevice' value='35'/>
  <enum name='kBluetoothHCICommandReadClockOffset' value='31'/>
  <enum name='kBluetoothHCICommandReadConnectionAcceptTimeout' value='21'/>
  <enum name='kBluetoothHCICommandReadCountryCode' value='7'/>
  <enum name='kBluetoothHCICommandReadCurrentIACLAP' value='57'/>
  <enum name='kBluetoothHCICommandReadDeviceAddress' value='9'/>
  <enum name='kBluetoothHCICommandReadEncryptionMode' value='33'/>
  <enum name='kBluetoothHCICommandReadFailedContactCounter' value='1'/>
  <enum name='kBluetoothHCICommandReadHoldModeActivity' value='43'/>
  <enum name='kBluetoothHCICommandReadInquiryScanActivity' value='29'/>
  <enum name='kBluetoothHCICommandReadLinkPolicySettings' value='12'/>
  <enum name='kBluetoothHCICommandReadLinkSupervisionTimeout' value='54'/>
  <enum name='kBluetoothHCICommandReadLocalName' value='20'/>
  <enum name='kBluetoothHCICommandReadLocalSupportedFeatures' value='3'/>
  <enum name='kBluetoothHCICommandReadLocalVersionInformation' value='1'/>
  <enum name='kBluetoothHCICommandReadLoopbackMode' value='1'/>
  <enum name='kBluetoothHCICommandReadNumberOfBroadcastRetransmissions' value='41'/>
  <enum name='kBluetoothHCICommandReadNumberOfSupportedIAC' value='56'/>
  <enum name='kBluetoothHCICommandReadPINType' value='9'/>
  <enum name='kBluetoothHCICommandReadPageScanActivity' value='27'/>
  <enum name='kBluetoothHCICommandReadPageScanMode' value='61'/>
  <enum name='kBluetoothHCICommandReadPageScanPeriodMode' value='59'/>
  <enum name='kBluetoothHCICommandReadPageTimeout' value='23'/>
  <enum name='kBluetoothHCICommandReadRSSI' value='5'/>
  <enum name='kBluetoothHCICommandReadRemoteSupportedFeatures' value='27'/>
  <enum name='kBluetoothHCICommandReadRemoteVersionInformation' value='29'/>
  <enum name='kBluetoothHCICommandReadSCOFlowControlEnable' value='46'/>
  <enum name='kBluetoothHCICommandReadScanEnable' value='25'/>
  <enum name='kBluetoothHCICommandReadStoredLinkKey' value='13'/>
  <enum name='kBluetoothHCICommandReadTransmitPowerLevel' value='45'/>
  <enum name='kBluetoothHCICommandReadVoiceSetting' value='37'/>
  <enum name='kBluetoothHCICommandRejectConnectionRequest' value='10'/>
  <enum name='kBluetoothHCICommandRemoteNameRequest' value='25'/>
  <enum name='kBluetoothHCICommandReset' value='3'/>
  <enum name='kBluetoothHCICommandResetFailedContactCounter' value='2'/>
  <enum name='kBluetoothHCICommandRoleDiscovery' value='9'/>
  <enum name='kBluetoothHCICommandSetConnectionEncryption' value='19'/>
  <enum name='kBluetoothHCICommandSetEventFilter' value='5'/>
  <enum name='kBluetoothHCICommandSetEventMask' value='1'/>
  <enum name='kBluetoothHCICommandSetHostControllerToHostFlowControl' value='49'/>
  <enum name='kBluetoothHCICommandSniffMode' value='3'/>
  <enum name='kBluetoothHCICommandSwitchRole' value='11'/>
  <enum name='kBluetoothHCICommandWriteAuthenticationEnable' value='32'/>
  <enum name='kBluetoothHCICommandWriteAutomaticFlushTimeout' value='40'/>
  <enum name='kBluetoothHCICommandWriteClassOfDevice' value='36'/>
  <enum name='kBluetoothHCICommandWriteConnectionAcceptTimeout' value='22'/>
  <enum name='kBluetoothHCICommandWriteCurrentIACLAP' value='58'/>
  <enum name='kBluetoothHCICommandWriteDeviceAddress' value='1'/>
  <enum name='kBluetoothHCICommandWriteEncryptionMode' value='34'/>
  <enum name='kBluetoothHCICommandWriteHoldModeActivity' value='44'/>
  <enum name='kBluetoothHCICommandWriteHoppingChannels' value='18'/>
  <enum name='kBluetoothHCICommandWriteInquiryScanActivity' value='30'/>
  <enum name='kBluetoothHCICommandWriteLinkPolicySettings' value='13'/>
  <enum name='kBluetoothHCICommandWriteLinkSupervisionTimeout' value='55'/>
  <enum name='kBluetoothHCICommandWriteLoopbackMode' value='2'/>
  <enum name='kBluetoothHCICommandWriteNumberOfBroadcastRetransmissions' value='42'/>
  <enum name='kBluetoothHCICommandWritePINType' value='10'/>
  <enum name='kBluetoothHCICommandWritePageScanActivity' value='28'/>
  <enum name='kBluetoothHCICommandWritePageScanMode' value='62'/>
  <enum name='kBluetoothHCICommandWritePageScanPeriodMode' value='60'/>
  <enum name='kBluetoothHCICommandWritePageTimeout' value='24'/>
  <enum name='kBluetoothHCICommandWriteSCOFlowControlEnable' value='47'/>
  <enum name='kBluetoothHCICommandWriteScanEnable' value='26'/>
  <enum name='kBluetoothHCICommandWriteStoredLinkKey' value='17'/>
  <enum name='kBluetoothHCICommandWriteVoiceSetting' value='38'/>
  <enum name='kBluetoothHCIDataPacketHeaderSize' value='4'/>
  <enum name='kBluetoothHCIDataPacketMaxDataSize' value='65535'/>
  <enum name='kBluetoothHCIErrorACLConnectionAlreadyExists' value='11'/>
  <enum name='kBluetoothHCIErrorAuthenticationFailure' value='5'/>
  <enum name='kBluetoothHCIErrorCommandDisallowed' value='12'/>
  <enum name='kBluetoothHCIErrorConnectionTerminatedByLocalHost' value='22'/>
  <enum name='kBluetoothHCIErrorConnectionTimeout' value='8'/>
  <enum name='kBluetoothHCIErrorEncryptionModeNotAcceptable' value='37'/>
  <enum name='kBluetoothHCIErrorHardwareFailure' value='3'/>
  <enum name='kBluetoothHCIErrorHostRejectedLimitedResources' value='13'/>
  <enum name='kBluetoothHCIErrorHostRejectedRemoteDeviceIsPersonal' value='15'/>
  <enum name='kBluetoothHCIErrorHostRejectedSecurityReasons' value='14'/>
  <enum name='kBluetoothHCIErrorHostTimeout' value='16'/>
  <enum name='kBluetoothHCIErrorInstantPassed' value='40'/>
  <enum name='kBluetoothHCIErrorInvalidHCICommandParameters' value='18'/>
  <enum name='kBluetoothHCIErrorInvalidLMPParameters' value='30'/>
  <enum name='kBluetoothHCIErrorKeyMissing' value='6'/>
  <enum name='kBluetoothHCIErrorLMPErrorTransactionCollision' value='35'/>
  <enum name='kBluetoothHCIErrorLMPPDUNotAllowed' value='36'/>
  <enum name='kBluetoothHCIErrorLMPResponseTimeout' value='34'/>
  <enum name='kBluetoothHCIErrorMax' value='41'/>
  <enum name='kBluetoothHCIErrorMaxNumberOfConnections' value='9'/>
  <enum name='kBluetoothHCIErrorMaxNumberOfSCOConnectionsToADevice' value='10'/>
  <enum name='kBluetoothHCIErrorMemoryFull' value='7'/>
  <enum name='kBluetoothHCIErrorNoConnection' value='2'/>
  <enum name='kBluetoothHCIErrorOtherEndTerminatedConnectionAboutToPowerOff' value='21'/>
  <enum name='kBluetoothHCIErrorOtherEndTerminatedConnectionLowResources' value='20'/>
  <enum name='kBluetoothHCIErrorOtherEndTerminatedConnectionUserEnded' value='19'/>
  <enum name='kBluetoothHCIErrorPageTimeout' value='4'/>
  <enum name='kBluetoothHCIErrorPairingNotAllowed' value='24'/>
  <enum name='kBluetoothHCIErrorPairingWithUnitKeyNotSupported' value='41'/>
  <enum name='kBluetoothHCIErrorPowerIsOFF' value='42'/>
  <enum name='kBluetoothHCIErrorQoSNotSupported' value='39'/>
  <enum name='kBluetoothHCIErrorRepeatedAttempts' value='23'/>
  <enum name='kBluetoothHCIErrorRoleChangeNotAllowed' value='33'/>
  <enum name='kBluetoothHCIErrorSCOAirModeRejected' value='29'/>
  <enum name='kBluetoothHCIErrorSCOIntervalRejected' value='28'/>
  <enum name='kBluetoothHCIErrorSCOOffsetRejected' value='27'/>
  <enum name='kBluetoothHCIErrorSuccess' value='0'/>
  <enum name='kBluetoothHCIErrorUnitKeyUsed' value='38'/>
  <enum name='kBluetoothHCIErrorUnknownHCICommand' value='1'/>
  <enum name='kBluetoothHCIErrorUnknownLMPPDU' value='25'/>
  <enum name='kBluetoothHCIErrorUnspecifiedError' value='31'/>
  <enum name='kBluetoothHCIErrorUnsupportedFeatureOrParameterValue' value='17'/>
  <enum name='kBluetoothHCIErrorUnsupportedLMPParameterValue' value='32'/>
  <enum name='kBluetoothHCIErrorUnsupportedRemoteFeature' value='26'/>
  <enum name='kBluetoothHCIEventAuthenticationComplete' value='6'/>
  <enum name='kBluetoothHCIEventChangeConnectionLinkKeyComplete' value='9'/>
  <enum name='kBluetoothHCIEventCommandComplete' value='14'/>
  <enum name='kBluetoothHCIEventCommandStatus' value='15'/>
  <enum name='kBluetoothHCIEventConnectionComplete' value='3'/>
  <enum name='kBluetoothHCIEventConnectionPacketType' value='29'/>
  <enum name='kBluetoothHCIEventConnectionRequest' value='4'/>
  <enum name='kBluetoothHCIEventDataBufferOverflow' value='26'/>
  <enum name='kBluetoothHCIEventDisconnectionComplete' value='5'/>
  <enum name='kBluetoothHCIEventEncryptionChange' value='8'/>
  <enum name='kBluetoothHCIEventFlushOccurred' value='17'/>
  <enum name='kBluetoothHCIEventHardwareError' value='16'/>
  <enum name='kBluetoothHCIEventInquiryComplete' value='1'/>
  <enum name='kBluetoothHCIEventInquiryResult' value='2'/>
  <enum name='kBluetoothHCIEventLinkKeyNotification' value='24'/>
  <enum name='kBluetoothHCIEventLinkKeyRequest' value='23'/>
  <enum name='kBluetoothHCIEventLogoTesting' value='254'/>
  <enum name='kBluetoothHCIEventLoopbackCommand' value='25'/>
  <enum name='kBluetoothHCIEventMaskAll' value='4294967295'/>
  <enum name='kBluetoothHCIEventMaskAuthenticationComplete' value='32'/>
  <enum name='kBluetoothHCIEventMaskChangeConnectionLinkKeyComplete' value='256'/>
  <enum name='kBluetoothHCIEventMaskCommandComplete' value='8192'/>
  <enum name='kBluetoothHCIEventMaskCommandStatus' value='16384'/>
  <enum name='kBluetoothHCIEventMaskConnectionComplete' value='4'/>
  <enum name='kBluetoothHCIEventMaskConnectionPacketTypeChanged' value='268435456'/>
  <enum name='kBluetoothHCIEventMaskConnectionRequest' value='8'/>
  <enum name='kBluetoothHCIEventMaskDataBufferOverflow' value='33554432'/>
  <enum name='kBluetoothHCIEventMaskDefault' value='4294967295'/>
  <enum name='kBluetoothHCIEventMaskDisconnectionComplete' value='16'/>
  <enum name='kBluetoothHCIEventMaskEncryptionChange' value='128'/>
  <enum name='kBluetoothHCIEventMaskFlushOccurred' value='65536'/>
  <enum name='kBluetoothHCIEventMaskHardwareError' value='32768'/>
  <enum name='kBluetoothHCIEventMaskInquiryComplete' value='1'/>
  <enum name='kBluetoothHCIEventMaskInquiryResult' value='2'/>
  <enum name='kBluetoothHCIEventMaskLinkKeyNotification' value='8388608'/>
  <enum name='kBluetoothHCIEventMaskLinkKeyRequest' value='4194304'/>
  <enum name='kBluetoothHCIEventMaskLoopbackCommand' value='16777216'/>
  <enum name='kBluetoothHCIEventMaskMasterLinkKeyComplete' value='512'/>
  <enum name='kBluetoothHCIEventMaskMaxSlotsChange' value='67108864'/>
  <enum name='kBluetoothHCIEventMaskModeChange' value='524288'/>
  <enum name='kBluetoothHCIEventMaskNone' value='0'/>
  <enum name='kBluetoothHCIEventMaskNumberOfCompletedPackets' value='262144'/>
  <enum name='kBluetoothHCIEventMaskPINCodeRequest' value='2097152'/>
  <enum name='kBluetoothHCIEventMaskPageScanModeChange' value='1073741824'/>
  <enum name='kBluetoothHCIEventMaskPageScanRepetitionModeChange' value='2147483648'/>
  <enum name='kBluetoothHCIEventMaskQoSSetupComplete' value='4096'/>
  <enum name='kBluetoothHCIEventMaskQoSViolation' value='536870912'/>
  <enum name='kBluetoothHCIEventMaskReadClockOffsetComplete' value='134217728'/>
  <enum name='kBluetoothHCIEventMaskReadRemoteSupportedFeaturesComplete' value='1024'/>
  <enum name='kBluetoothHCIEventMaskReadRemoteVersionInformationComplete' value='2048'/>
  <enum name='kBluetoothHCIEventMaskRemoteNameRequestComplete' value='64'/>
  <enum name='kBluetoothHCIEventMaskReturnLinkKeys' value='1048576'/>
  <enum name='kBluetoothHCIEventMaskRoleChange' value='131072'/>
  <enum name='kBluetoothHCIEventMasterLinkKeyComplete' value='10'/>
  <enum name='kBluetoothHCIEventMaxSlotsChange' value='27'/>
  <enum name='kBluetoothHCIEventModeChange' value='20'/>
  <enum name='kBluetoothHCIEventNumberOfCompletedPackets' value='19'/>
  <enum name='kBluetoothHCIEventPINCodeRequest' value='22'/>
  <enum name='kBluetoothHCIEventPacketHeaderSize' value='2'/>
  <enum name='kBluetoothHCIEventPacketMaxDataSize' value='255'/>
  <enum name='kBluetoothHCIEventPageScanModeChange' value='31'/>
  <enum name='kBluetoothHCIEventPageScanRepetitionModeChange' value='32'/>
  <enum name='kBluetoothHCIEventQoSSetupComplete' value='13'/>
  <enum name='kBluetoothHCIEventQoSViolation' value='30'/>
  <enum name='kBluetoothHCIEventReadClockOffsetComplete' value='28'/>
  <enum name='kBluetoothHCIEventReadRemoteSupportedFeaturesComplete' value='11'/>
  <enum name='kBluetoothHCIEventReadRemoteVersionInformationComplete' value='12'/>
  <enum name='kBluetoothHCIEventRemoteNameRequestComplete' value='7'/>
  <enum name='kBluetoothHCIEventReturnLinkKeys' value='21'/>
  <enum name='kBluetoothHCIEventRoleChange' value='18'/>
  <enum name='kBluetoothHCIEventVendorSpecific' value='255'/>
  <enum name='kBluetoothHCILoopbackModeLocal' value='1'/>
  <enum name='kBluetoothHCILoopbackModeOff' value='0'/>
  <enum name='kBluetoothHCILoopbackModeRemote' value='2'/>
  <enum name='kBluetoothHCIMasterRole' value='0'/>
  <enum name='kBluetoothHCIMaxCommandPacketSize' value='258'/>
  <enum name='kBluetoothHCIMaxDataPacketSize' value='65539'/>
  <enum name='kBluetoothHCIMaxEventPacketSize' value='257'/>
  <enum name='kBluetoothHCIOpCodeNoOp' value='0'/>
  <enum name='kBluetoothHCIPowerStateOFF' value='0'/>
  <enum name='kBluetoothHCIPowerStateON' value='1'/>
  <enum name='kBluetoothHCIPowerStateUnintialized' value='255'/>
  <enum name='kBluetoothHCISlaveRole' value='1'/>
  <enum name='kBluetoothHCITransportUSBClassCode' value='224'/>
  <enum name='kBluetoothHCITransportUSBProtocolCode' value='1'/>
  <enum name='kBluetoothHCITransportUSBSubClassCode' value='1'/>
  <enum name='kBluetoothKeyFlagSemiPermanent' value='0'/>
  <enum name='kBluetoothKeyFlagTemporary' value='1'/>
  <enum name='kBluetoothKeyTypeCombination' value='0'/>
  <enum name='kBluetoothKeyTypeLocalUnit' value='1'/>
  <enum name='kBluetoothKeyTypeRemoteUnit' value='2'/>
  <enum name='kBluetoothL2CAPChannelConnectionLessData' value='2'/>
  <enum name='kBluetoothL2CAPChannelDynamicEnd' value='65535'/>
  <enum name='kBluetoothL2CAPChannelDynamicStart' value='64'/>
  <enum name='kBluetoothL2CAPChannelEnd' value='65535'/>
  <enum name='kBluetoothL2CAPChannelNull' value='0'/>
  <enum name='kBluetoothL2CAPChannelReservedEnd' value='63'/>
  <enum name='kBluetoothL2CAPChannelReservedStart' value='3'/>
  <enum name='kBluetoothL2CAPChannelSignalling' value='1'/>
  <enum name='kBluetoothL2CAPCommandCodeCommandReject' value='1'/>
  <enum name='kBluetoothL2CAPCommandCodeConfigureRequest' value='4'/>
  <enum name='kBluetoothL2CAPCommandCodeConfigureResponse' value='5'/>
  <enum name='kBluetoothL2CAPCommandCodeConnectionRequest' value='2'/>
  <enum name='kBluetoothL2CAPCommandCodeConnectionResponse' value='3'/>
  <enum name='kBluetoothL2CAPCommandCodeDisconnectionRequest' value='6'/>
  <enum name='kBluetoothL2CAPCommandCodeDisconnectionResponse' value='7'/>
  <enum name='kBluetoothL2CAPCommandCodeEchoRequest' value='8'/>
  <enum name='kBluetoothL2CAPCommandCodeEchoResponse' value='9'/>
  <enum name='kBluetoothL2CAPCommandCodeInformationRequest' value='10'/>
  <enum name='kBluetoothL2CAPCommandCodeInformationResponse' value='11'/>
  <enum name='kBluetoothL2CAPCommandCodeReserved' value='0'/>
  <enum name='kBluetoothL2CAPCommandRejectReasonCommandNotUnderstood' value='0'/>
  <enum name='kBluetoothL2CAPCommandRejectReasonInvalidCIDInRequest' value='2'/>
  <enum name='kBluetoothL2CAPCommandRejectReasonSignallingMTUExceeded' value='1'/>
  <enum name='kBluetoothL2CAPConfigurationBasicL2CAPModeFlag' value='0'/>
  <enum name='kBluetoothL2CAPConfigurationFlowControlModeFlag' value='2'/>
  <enum name='kBluetoothL2CAPConfigurationOptionFlushTimeout' value='2'/>
  <enum name='kBluetoothL2CAPConfigurationOptionFlushTimeoutLength' value='2'/>
  <enum name='kBluetoothL2CAPConfigurationOptionMTU' value='1'/>
  <enum name='kBluetoothL2CAPConfigurationOptionMTULength' value='2'/>
  <enum name='kBluetoothL2CAPConfigurationOptionQoS' value='3'/>
  <enum name='kBluetoothL2CAPConfigurationOptionQoSLength' value='22'/>
  <enum name='kBluetoothL2CAPConfigurationOptionRetransmissionAndFlowControl' value='4'/>
  <enum name='kBluetoothL2CAPConfigurationOptionRetransmissionAndFlowControlLength' value='9'/>
  <enum name='kBluetoothL2CAPConfigurationResultRejected' value='2'/>
  <enum name='kBluetoothL2CAPConfigurationResultSuccess' value='0'/>
  <enum name='kBluetoothL2CAPConfigurationResultUnacceptableParams' value='1'/>
  <enum name='kBluetoothL2CAPConfigurationResultUnknownOptions' value='3'/>
  <enum name='kBluetoothL2CAPConfigurationRetransmissionModeFlag' value='1'/>
  <enum name='kBluetoothL2CAPConnectionResultPending' value='1'/>
  <enum name='kBluetoothL2CAPConnectionResultRefusedNoResources' value='4'/>
  <enum name='kBluetoothL2CAPConnectionResultRefusedPSMNotSupported' value='2'/>
  <enum name='kBluetoothL2CAPConnectionResultRefusedSecurityBlock' value='3'/>
  <enum name='kBluetoothL2CAPConnectionResultSuccessful' value='0'/>
  <enum name='kBluetoothL2CAPConnectionStatusAuthenticationPending' value='1'/>
  <enum name='kBluetoothL2CAPConnectionStatusAuthorizationPending' value='2'/>
  <enum name='kBluetoothL2CAPConnectionStatusNoInfoAvailable' value='0'/>
  <enum name='kBluetoothL2CAPFlushTimeoutDefault' value='65535'/>
  <enum name='kBluetoothL2CAPFlushTimeoutEnd' value='65536'/>
  <enum name='kBluetoothL2CAPFlushTimeoutForever' value='65535'/>
  <enum name='kBluetoothL2CAPFlushTimeoutImmediate' value='1'/>
  <enum name='kBluetoothL2CAPFlushTimeoutUseExisting' value='0'/>
  <enum name='kBluetoothL2CAPInfoTypeMaxConnectionlessMTUSize' value='1'/>
  <enum name='kBluetoothL2CAPInformationBidirectionalQoS' value='4'/>
  <enum name='kBluetoothL2CAPInformationFlowControlMode' value='1'/>
  <enum name='kBluetoothL2CAPInformationNoExtendedFeatures' value='0'/>
  <enum name='kBluetoothL2CAPInformationResultNotSupported' value='1'/>
  <enum name='kBluetoothL2CAPInformationResultSuccess' value='0'/>
  <enum name='kBluetoothL2CAPInformationRetransmissionMode' value='2'/>
  <enum name='kBluetoothL2CAPInformationTypeConnectionlessMTU' value='1'/>
  <enum name='kBluetoothL2CAPInformationTypeExtendedFeatures' value='2'/>
  <enum name='kBluetoothL2CAPMTUDefault' value='672'/>
  <enum name='kBluetoothL2CAPMTUMaximum' value='65535'/>
  <enum name='kBluetoothL2CAPMTUMinimum' value='48'/>
  <enum name='kBluetoothL2CAPMTUSIG' value='48'/>
  <enum name='kBluetoothL2CAPMTUStart' value='32767'/>
  <enum name='kBluetoothL2CAPMaxPacketSize' value='65535'/>
  <enum name='kBluetoothL2CAPPSMAVCTP' value='23'/>
  <enum name='kBluetoothL2CAPPSMAVDTP' value='25'/>
  <enum name='kBluetoothL2CAPPSMBNEP' value='15'/>
  <enum name='kBluetoothL2CAPPSMDynamicEnd' value='65535'/>
  <enum name='kBluetoothL2CAPPSMDynamicStart' value='4097'/>
  <enum name='kBluetoothL2CAPPSMHIDControl' value='17'/>
  <enum name='kBluetoothL2CAPPSMHIDInterrupt' value='19'/>
  <enum name='kBluetoothL2CAPPSMNone' value='0'/>
  <enum name='kBluetoothL2CAPPSMRFCOMM' value='3'/>
  <enum name='kBluetoothL2CAPPSMReservedEnd' value='4096'/>
  <enum name='kBluetoothL2CAPPSMReservedStart' value='1'/>
  <enum name='kBluetoothL2CAPPSMSDP' value='1'/>
  <enum name='kBluetoothL2CAPPSMTCS_BIN' value='5'/>
  <enum name='kBluetoothL2CAPPSMTCS_BIN_Cordless' value='7'/>
  <enum name='kBluetoothL2CAPPSMUID_C_Plane' value='29'/>
  <enum name='kBluetoothL2CAPPacketHeaderSize' value='4'/>
  <enum name='kBluetoothL2CAPQoSDelayVariationDefault' value='4294967295'/>
  <enum name='kBluetoothL2CAPQoSFlagsDefault' value='0'/>
  <enum name='kBluetoothL2CAPQoSLatencyDefault' value='4294967295'/>
  <enum name='kBluetoothL2CAPQoSPeakBandwidthDefault' value='0'/>
  <enum name='kBluetoothL2CAPQoSTokenBucketSizeDefault' value='0'/>
  <enum name='kBluetoothL2CAPQoSTokenRateDefault' value='0'/>
  <enum name='kBluetoothL2CAPQoSTypeBestEffort' value='1'/>
  <enum name='kBluetoothL2CAPQoSTypeDefault' value='1'/>
  <enum name='kBluetoothL2CAPQoSTypeGuaranteed' value='2'/>
  <enum name='kBluetoothL2CAPQoSTypeNoTraffic' value='0'/>
  <enum name='kBluetoothL2CAPTCICommandL2CA_ConfigReq' value='3'/>
  <enum name='kBluetoothL2CAPTCICommandL2CA_ConfigResp' value='19'/>
  <enum name='kBluetoothL2CAPTCICommandL2CA_ConnectReq' value='1'/>
  <enum name='kBluetoothL2CAPTCICommandL2CA_ConnectResp' value='17'/>
  <enum name='kBluetoothL2CAPTCICommandL2CA_DisableCLT' value='4'/>
  <enum name='kBluetoothL2CAPTCICommandL2CA_DisconnectReq' value='2'/>
  <enum name='kBluetoothL2CAPTCICommandL2CA_DisconnectResp' value='18'/>
  <enum name='kBluetoothL2CAPTCICommandL2CA_EnableCLT' value='5'/>
  <enum name='kBluetoothL2CAPTCICommandL2CA_GetInfo' value='14'/>
  <enum name='kBluetoothL2CAPTCICommandL2CA_GroupAddMember' value='8'/>
  <enum name='kBluetoothL2CAPTCICommandL2CA_GroupClose' value='7'/>
  <enum name='kBluetoothL2CAPTCICommandL2CA_GroupCreate' value='6'/>
  <enum name='kBluetoothL2CAPTCICommandL2CA_GroupMembership' value='10'/>
  <enum name='kBluetoothL2CAPTCICommandL2CA_GroupRemoveMember' value='9'/>
  <enum name='kBluetoothL2CAPTCICommandL2CA_Ping' value='13'/>
  <enum name='kBluetoothL2CAPTCICommandL2CA_ReadData' value='12'/>
  <enum name='kBluetoothL2CAPTCICommandL2CA_Reserved1' value='15'/>
  <enum name='kBluetoothL2CAPTCICommandL2CA_Reserved2' value='16'/>
  <enum name='kBluetoothL2CAPTCICommandL2CA_WriteData' value='11'/>
  <enum name='kBluetoothL2CAPTCICommandReserved' value='0'/>
  <enum name='kBluetoothL2CAPTCIEventIDL2CA_ConfigInd' value='2'/>
  <enum name='kBluetoothL2CAPTCIEventIDL2CA_ConnectInd' value='1'/>
  <enum name='kBluetoothL2CAPTCIEventIDL2CA_DisconnectInd' value='3'/>
  <enum name='kBluetoothL2CAPTCIEventIDL2CA_QoSViolationInd' value='4'/>
  <enum name='kBluetoothL2CAPTCIEventIDL2CA_TimeOutInd' value='5'/>
  <enum name='kBluetoothL2CAPTCIEventIDReserved' value='0'/>
  <enum name='kBluetoothLimitedInquiryAccessCodeEnd' value='10390273'/>
  <enum name='kBluetoothLimitedInquiryAccessCodeIndex' value='1'/>
  <enum name='kBluetoothLimitedInquiryAccessCodeLAPValue' value='10390272'/>
  <enum name='kBluetoothLinkTypeNone' value='255'/>
  <enum name='kBluetoothPacketTypeAUX' value='512'/>
  <enum name='kBluetoothPacketTypeDH1' value='16'/>
  <enum name='kBluetoothPacketTypeDH3' value='2048'/>
  <enum name='kBluetoothPacketTypeDH5' value='32768'/>
  <enum name='kBluetoothPacketTypeDM1' value='8'/>
  <enum name='kBluetoothPacketTypeDM3' value='1024'/>
  <enum name='kBluetoothPacketTypeDM5' value='16384'/>
  <enum name='kBluetoothPacketTypeDV' value='256'/>
  <enum name='kBluetoothPacketTypeEnd' value='32769'/>
  <enum name='kBluetoothPacketTypeHV1' value='32'/>
  <enum name='kBluetoothPacketTypeHV2' value='64'/>
  <enum name='kBluetoothPacketTypeHV3' value='128'/>
  <enum name='kBluetoothPageScanModeMandatory' value='0'/>
  <enum name='kBluetoothPageScanModeOptional1' value='1'/>
  <enum name='kBluetoothPageScanModeOptional2' value='2'/>
  <enum name='kBluetoothPageScanModeOptional3' value='3'/>
  <enum name='kBluetoothPageScanPeriodModeP0' value='0'/>
  <enum name='kBluetoothPageScanPeriodModeP1' value='1'/>
  <enum name='kBluetoothPageScanPeriodModeP2' value='2'/>
  <enum name='kBluetoothPageScanRepetitionModeR0' value='0'/>
  <enum name='kBluetoothPageScanRepetitionModeR1' value='1'/>
  <enum name='kBluetoothPageScanRepetitionModeR2' value='2'/>
  <enum name='kBluetoothRFCOMMParityTypeEvenParity' value='2'/>
  <enum name='kBluetoothRFCOMMParityTypeMaxParity' value='3'/>
  <enum name='kBluetoothRFCOMMParityTypeNoParity' value='0'/>
  <enum name='kBluetoothRFCOMMParityTypeOddParity' value='1'/>
  <enum name='kBluetoothRoleBecomeMaster' value='0'/>
  <enum name='kBluetoothRoleRemainSlave' value='1'/>
  <enum name='kBluetoothSCOConnection' value='0'/>
  <enum name='kBluetoothSDPAttributeDeviceIdentifierClientExecutableURL' value='11'/>
  <enum name='kBluetoothSDPAttributeDeviceIdentifierDocumentationURL' value='10'/>
  <enum name='kBluetoothSDPAttributeDeviceIdentifierPrimaryRecord' value='516'/>
  <enum name='kBluetoothSDPAttributeDeviceIdentifierProductID' value='514'/>
  <enum name='kBluetoothSDPAttributeDeviceIdentifierReservedRangeEnd' value='767'/>
  <enum name='kBluetoothSDPAttributeDeviceIdentifierReservedRangeStart' value='518'/>
  <enum name='kBluetoothSDPAttributeDeviceIdentifierServiceDescription' value='1'/>
  <enum name='kBluetoothSDPAttributeDeviceIdentifierSpecificationID' value='512'/>
  <enum name='kBluetoothSDPAttributeDeviceIdentifierVendorID' value='513'/>
  <enum name='kBluetoothSDPAttributeDeviceIdentifierVendorIDSource' value='517'/>
  <enum name='kBluetoothSDPAttributeDeviceIdentifierVersion' value='515'/>
  <enum name='kBluetoothSDPAttributeIdentifierAdditionalProtocolsDescriptorList' value='13'/>
  <enum name='kBluetoothSDPAttributeIdentifierAudioFeedbackSupport' value='773'/>
  <enum name='kBluetoothSDPAttributeIdentifierBluetoothProfileDescriptorList' value='9'/>
  <enum name='kBluetoothSDPAttributeIdentifierBrowseGroupList' value='5'/>
  <enum name='kBluetoothSDPAttributeIdentifierClientExecutableURL' value='11'/>
  <enum name='kBluetoothSDPAttributeIdentifierDocumentationURL' value='10'/>
  <enum name='kBluetoothSDPAttributeIdentifierExternalNetwork' value='769'/>
  <enum name='kBluetoothSDPAttributeIdentifierFaxClass1Support' value='770'/>
  <enum name='kBluetoothSDPAttributeIdentifierFaxClass2Support' value='772'/>
  <enum name='kBluetoothSDPAttributeIdentifierFaxClass2_0Support' value='771'/>
  <enum name='kBluetoothSDPAttributeIdentifierGroupID' value='512'/>
  <enum name='kBluetoothSDPAttributeIdentifierHomepageURL' value='776'/>
  <enum name='kBluetoothSDPAttributeIdentifierIPSubnet' value='512'/>
  <enum name='kBluetoothSDPAttributeIdentifierIconURL' value='12'/>
  <enum name='kBluetoothSDPAttributeIdentifierLanguageBaseAttributeIDList' value='6'/>
  <enum name='kBluetoothSDPAttributeIdentifierMaxNetAccessRate' value='780'/>
  <enum name='kBluetoothSDPAttributeIdentifierNetAccessType' value='779'/>
  <enum name='kBluetoothSDPAttributeIdentifierNetwork' value='769'/>
  <enum name='kBluetoothSDPAttributeIdentifierNetworkAddress' value='774'/>
  <enum name='kBluetoothSDPAttributeIdentifierProtocolDescriptorList' value='4'/>
  <enum name='kBluetoothSDPAttributeIdentifierProviderName' value='2'/>
  <enum name='kBluetoothSDPAttributeIdentifierRemoteAudioVolumeControl' value='770'/>
  <enum name='kBluetoothSDPAttributeIdentifierSecurityDescription' value='778'/>
  <enum name='kBluetoothSDPAttributeIdentifierServiceAvailability' value='8'/>
  <enum name='kBluetoothSDPAttributeIdentifierServiceClassIDList' value='1'/>
  <enum name='kBluetoothSDPAttributeIdentifierServiceDatabaseState' value='513'/>
  <enum name='kBluetoothSDPAttributeIdentifierServiceDescription' value='1'/>
  <enum name='kBluetoothSDPAttributeIdentifierServiceID' value='3'/>
  <enum name='kBluetoothSDPAttributeIdentifierServiceInfoTimeToLive' value='7'/>
  <enum name='kBluetoothSDPAttributeIdentifierServiceName' value='0'/>
  <enum name='kBluetoothSDPAttributeIdentifierServiceRecordHandle' value='0'/>
  <enum name='kBluetoothSDPAttributeIdentifierServiceRecordState' value='2'/>
  <enum name='kBluetoothSDPAttributeIdentifierServiceVersion' value='768'/>
  <enum name='kBluetoothSDPAttributeIdentifierSupportedCapabilities' value='784'/>
  <enum name='kBluetoothSDPAttributeIdentifierSupportedDataStoresList' value='769'/>
  <enum name='kBluetoothSDPAttributeIdentifierSupportedFeatures' value='785'/>
  <enum name='kBluetoothSDPAttributeIdentifierSupportedFunctions' value='786'/>
  <enum name='kBluetoothSDPAttributeIdentifierSupporterFormatsList' value='771'/>
  <enum name='kBluetoothSDPAttributeIdentifierTotalImagingDataCapacity' value='787'/>
  <enum name='kBluetoothSDPAttributeIdentifierVersionNumberList' value='512'/>
  <enum name='kBluetoothSDPAttributeIdentifierWAPGateway' value='775'/>
  <enum name='kBluetoothSDPAttributeIdentifierWAPStackType' value='777'/>
  <enum name='kBluetoothSDPDataElementTypeBoolean' value='5'/>
  <enum name='kBluetoothSDPDataElementTypeDataElementAlternative' value='7'/>
  <enum name='kBluetoothSDPDataElementTypeDataElementSequence' value='6'/>
  <enum name='kBluetoothSDPDataElementTypeNil' value='0'/>
  <enum name='kBluetoothSDPDataElementTypeReservedEnd' value='31'/>
  <enum name='kBluetoothSDPDataElementTypeReservedStart' value='9'/>
  <enum name='kBluetoothSDPDataElementTypeSignedInt' value='2'/>
  <enum name='kBluetoothSDPDataElementTypeString' value='4'/>
  <enum name='kBluetoothSDPDataElementTypeURL' value='8'/>
  <enum name='kBluetoothSDPDataElementTypeUUID' value='3'/>
  <enum name='kBluetoothSDPDataElementTypeUnsignedInt' value='1'/>
  <enum name='kBluetoothSDPErrorCodeInsufficientResources' value='6'/>
  <enum name='kBluetoothSDPErrorCodeInvalidContinuationState' value='5'/>
  <enum name='kBluetoothSDPErrorCodeInvalidPDUSize' value='4'/>
  <enum name='kBluetoothSDPErrorCodeInvalidRequestSyntax' value='3'/>
  <enum name='kBluetoothSDPErrorCodeInvalidSDPVersion' value='1'/>
  <enum name='kBluetoothSDPErrorCodeInvalidServiceRecordHandle' value='2'/>
  <enum name='kBluetoothSDPErrorCodeReserved' value='0'/>
  <enum name='kBluetoothSDPErrorCodeReservedEnd' value='65535'/>
  <enum name='kBluetoothSDPErrorCodeReservedStart' value='7'/>
  <enum name='kBluetoothSDPErrorCodeSuccess' value='0'/>
  <enum name='kBluetoothSDPPDUIDErrorResponse' value='1'/>
  <enum name='kBluetoothSDPPDUIDReserved' value='0'/>
  <enum name='kBluetoothSDPPDUIDServiceAttributeRequest' value='4'/>
  <enum name='kBluetoothSDPPDUIDServiceAttributeResponse' value='5'/>
  <enum name='kBluetoothSDPPDUIDServiceSearchAttributeRequest' value='6'/>
  <enum name='kBluetoothSDPPDUIDServiceSearchAttributeResponse' value='7'/>
  <enum name='kBluetoothSDPPDUIDServiceSearchRequest' value='2'/>
  <enum name='kBluetoothSDPPDUIDServiceSearchResponse' value='3'/>
  <enum name='kBluetoothSDPProtocolParameterBNEPSupportedNetworkPacketTypeList' value='2'/>
  <enum name='kBluetoothSDPProtocolParameterBNEPVersion' value='1'/>
  <enum name='kBluetoothSDPProtocolParameterL2CAPPSM' value='1'/>
  <enum name='kBluetoothSDPProtocolParameterRFCOMMChannel' value='1'/>
  <enum name='kBluetoothSDPProtocolParameterTCPPort' value='1'/>
  <enum name='kBluetoothSDPProtocolParameterUDPPort' value='1'/>
  <enum name='kBluetoothSDPUUID16AVCTP' value='23'/>
  <enum name='kBluetoothSDPUUID16AVDTP' value='25'/>
  <enum name='kBluetoothSDPUUID16BNEP' value='15'/>
  <enum name='kBluetoothSDPUUID16Base' value='0'/>
  <enum name='kBluetoothSDPUUID16CMPT' value='27'/>
  <enum name='kBluetoothSDPUUID16FTP' value='10'/>
  <enum name='kBluetoothSDPUUID16HIDP' value='17'/>
  <enum name='kBluetoothSDPUUID16HTTP' value='12'/>
  <enum name='kBluetoothSDPUUID16HardcopyControlChannel' value='18'/>
  <enum name='kBluetoothSDPUUID16HardcopyDataChannel' value='20'/>
  <enum name='kBluetoothSDPUUID16HardcopyNotification' value='22'/>
  <enum name='kBluetoothSDPUUID16IP' value='9'/>
  <enum name='kBluetoothSDPUUID16L2CAP' value='256'/>
  <enum name='kBluetoothSDPUUID16OBEX' value='8'/>
  <enum name='kBluetoothSDPUUID16RFCOMM' value='3'/>
  <enum name='kBluetoothSDPUUID16SDP' value='1'/>
  <enum name='kBluetoothSDPUUID16ServiceClassAVRemoteControl' value='4366'/>
  <enum name='kBluetoothSDPUUID16ServiceClassAVRemoteControlTarget' value='4364'/>
  <enum name='kBluetoothSDPUUID16ServiceClassAdvancedAudioDistribution' value='4365'/>
  <enum name='kBluetoothSDPUUID16ServiceClassAudioSink' value='4363'/>
  <enum name='kBluetoothSDPUUID16ServiceClassAudioSource' value='4362'/>
  <enum name='kBluetoothSDPUUID16ServiceClassBasicPrinting' value='4386'/>
  <enum name='kBluetoothSDPUUID16ServiceClassBrowseGroupDescriptor' value='4097'/>
  <enum name='kBluetoothSDPUUID16ServiceClassCommonISDNAccess' value='4392'/>
  <enum name='kBluetoothSDPUUID16ServiceClassCordlessTelephony' value='4361'/>
  <enum name='kBluetoothSDPUUID16ServiceClassDialupNetworking' value='4355'/>
  <enum name='kBluetoothSDPUUID16ServiceClassDirectPrinting' value='4376'/>
  <enum name='kBluetoothSDPUUID16ServiceClassDirectPrintingReferenceObjectsService' value='4384'/>
  <enum name='kBluetoothSDPUUID16ServiceClassFax' value='4369'/>
  <enum name='kBluetoothSDPUUID16ServiceClassGN' value='4375'/>
  <enum name='kBluetoothSDPUUID16ServiceClassGenericAudio' value='4611'/>
  <enum name='kBluetoothSDPUUID16ServiceClassGenericFileTransfer' value='4610'/>
  <enum name='kBluetoothSDPUUID16ServiceClassGenericNetworking' value='4609'/>
  <enum name='kBluetoothSDPUUID16ServiceClassGenericTelephony' value='4612'/>
  <enum name='kBluetoothSDPUUID16ServiceClassHCR_Print' value='4390'/>
  <enum name='kBluetoothSDPUUID16ServiceClassHCR_Scan' value='4391'/>
  <enum name='kBluetoothSDPUUID16ServiceClassHandsfree' value='4382'/>
  <enum name='kBluetoothSDPUUID16ServiceClassHandsfreeAudioGateway' value='4383'/>
  <enum name='kBluetoothSDPUUID16ServiceClassHardcopyCableReplacement' value='4389'/>
  <enum name='kBluetoothSDPUUID16ServiceClassHeadset' value='4360'/>
  <enum name='kBluetoothSDPUUID16ServiceClassHeadsetAudioGateway' value='4370'/>
  <enum name='kBluetoothSDPUUID16ServiceClassHumanInterfaceDeviceService' value='4388'/>
  <enum name='kBluetoothSDPUUID16ServiceClassImaging' value='4378'/>
  <enum name='kBluetoothSDPUUID16ServiceClassImagingAutomaticArchive' value='4380'/>
  <enum name='kBluetoothSDPUUID16ServiceClassImagingReferencedObjects' value='4381'/>
  <enum name='kBluetoothSDPUUID16ServiceClassImagingResponder' value='4379'/>
  <enum name='kBluetoothSDPUUID16ServiceClassIntercom' value='4368'/>
  <enum name='kBluetoothSDPUUID16ServiceClassIrMCSync' value='4356'/>
  <enum name='kBluetoothSDPUUID16ServiceClassIrMCSyncCommand' value='4359'/>
  <enum name='kBluetoothSDPUUID16ServiceClassLANAccessUsingPPP' value='4354'/>
  <enum name='kBluetoothSDPUUID16ServiceClassNAP' value='4374'/>
  <enum name='kBluetoothSDPUUID16ServiceClassOBEXFileTransfer' value='4358'/>
  <enum name='kBluetoothSDPUUID16ServiceClassOBEXObjectPush' value='4357'/>
  <enum name='kBluetoothSDPUUID16ServiceClassPANU' value='4373'/>
  <enum name='kBluetoothSDPUUID16ServiceClassPnPInformation' value='4608'/>
  <enum name='kBluetoothSDPUUID16ServiceClassPrintingStatus' value='4387'/>
  <enum name='kBluetoothSDPUUID16ServiceClassPublicBrowseGroup' value='4098'/>
  <enum name='kBluetoothSDPUUID16ServiceClassReferencePrinting' value='4377'/>
  <enum name='kBluetoothSDPUUID16ServiceClassReflectedUI' value='4385'/>
  <enum name='kBluetoothSDPUUID16ServiceClassSerialPort' value='4353'/>
  <enum name='kBluetoothSDPUUID16ServiceClassServiceDiscoveryServer' value='4096'/>
  <enum name='kBluetoothSDPUUID16ServiceClassUDI_MT' value='4394'/>
  <enum name='kBluetoothSDPUUID16ServiceClassUDI_TA' value='4395'/>
  <enum name='kBluetoothSDPUUID16ServiceClassVideoConferencing' value='4367'/>
  <enum name='kBluetoothSDPUUID16ServiceClassVideoConferencingGW' value='4393'/>
  <enum name='kBluetoothSDPUUID16ServiceClassWAP' value='4371'/>
  <enum name='kBluetoothSDPUUID16ServiceClassWAPClient' value='4372'/>
  <enum name='kBluetoothSDPUUID16TCP' value='4'/>
  <enum name='kBluetoothSDPUUID16TCSAT' value='6'/>
  <enum name='kBluetoothSDPUUID16TCSBIN' value='5'/>
  <enum name='kBluetoothSDPUUID16UDI_C_Plane' value='29'/>
  <enum name='kBluetoothSDPUUID16UDP' value='2'/>
  <enum name='kBluetoothSDPUUID16UPNP' value='16'/>
  <enum name='kBluetoothSDPUUID16WSP' value='14'/>
  <enum name='kBluetoothServiceClassMajorAny' value='707406378'/>
  <enum name='kBluetoothServiceClassMajorAudio' value='256'/>
  <enum name='kBluetoothServiceClassMajorCapturing' value='64'/>
  <enum name='kBluetoothServiceClassMajorEnd' value='1852796518'/>
  <enum name='kBluetoothServiceClassMajorInformation' value='1024'/>
  <enum name='kBluetoothServiceClassMajorLimitedDiscoverableMode' value='1'/>
  <enum name='kBluetoothServiceClassMajorNetworking' value='16'/>
  <enum name='kBluetoothServiceClassMajorNone' value='1852796517'/>
  <enum name='kBluetoothServiceClassMajorObjectTransfer' value='128'/>
  <enum name='kBluetoothServiceClassMajorPositioning' value='8'/>
  <enum name='kBluetoothServiceClassMajorRendering' value='32'/>
  <enum name='kBluetoothServiceClassMajorReserved1' value='2'/>
  <enum name='kBluetoothServiceClassMajorReserved2' value='4'/>
  <enum name='kBluetoothServiceClassMajorTelephony' value='512'/>
  <enum name='kBluetoothTransportTypePCCard' value='2'/>
  <enum name='kBluetoothTransportTypePCICard' value='3'/>
  <enum name='kBluetoothTransportTypeUSB' value='1'/>
  <enum name='kConnectionActiveMode' value='0'/>
  <enum name='kConnectionHoldMode' value='1'/>
  <enum name='kConnectionModeReservedForFutureUse' value='4'/>
  <enum name='kConnectionParkMode' value='3'/>
  <enum name='kConnectionSniffMode' value='2'/>
  <enum name='kDefaultPageTimeout' value='8192'/>
  <enum name='kDeleteAllStoredLinkKeys' value='1'/>
  <enum name='kDeleteKeyForSpecifiedDeviceOnly' value='0'/>
  <enum name='kDisableAllLMModes' value='0'/>
  <enum name='kEnableHoldMode' value='2'/>
  <enum name='kEnableMasterSlaveSwitch' value='1'/>
  <enum name='kEnableParkMode' value='8'/>
  <enum name='kEnableSniffMode' value='4'/>
  <enum name='kEncryptionDisabled' value='0'/>
  <enum name='kEncryptionForBothPointToPointAndBroadcastPackets' value='2'/>
  <enum name='kEncryptionOnlyForPointToPointPackets' value='1'/>
  <enum name='kFTSFileTypeFile' value='2'/>
  <enum name='kFTSFileTypeFolder' value='1'/>
  <enum name='kHCIACLDataPacketsOffHCISCODataPacketsOn' value='2'/>
  <enum name='kHCIACLDataPacketsOnHCISCODataPacketsOff' value='1'/>
  <enum name='kHCIACLDataPacketsOnHCISCODataPacketsOn' value='3'/>
  <enum name='kHostControllerToHostFlowControlOff' value='0'/>
  <enum name='kIOBluetoothConnectionAlreadyExists' value='-536739838'/>
  <enum name='kIOBluetoothDeviceResetError' value='-536739839'/>
  <enum name='kIOBluetoothHCIPowerStatesNotSupported' value='-536739836'/>
  <enum name='kIOBluetoothL2CAPChannelEventTypeClosed' value='3'/>
  <enum name='kIOBluetoothL2CAPChannelEventTypeData' value='1'/>
  <enum name='kIOBluetoothL2CAPChannelEventTypeOpenComplete' value='2'/>
  <enum name='kIOBluetoothL2CAPChannelEventTypeQueueSpaceAvailable' value='6'/>
  <enum name='kIOBluetoothL2CAPChannelEventTypeReconfigured' value='4'/>
  <enum name='kIOBluetoothL2CAPChannelEventTypeWriteComplete' value='5'/>
  <enum name='kIOBluetoothNoHCIController' value='-536739837'/>
  <enum name='kIOBluetoothObjectIDNULL' value='0'/>
  <enum name='kIOBluetoothRFCOMMChannelEventTypeClosed' value='2'/>
  <enum name='kIOBluetoothRFCOMMChannelEventTypeControlSignalsChanged' value='4'/>
  <enum name='kIOBluetoothRFCOMMChannelEventTypeData' value='0'/>
  <enum name='kIOBluetoothRFCOMMChannelEventTypeFlowControlChanged' value='1'/>
  <enum name='kIOBluetoothRFCOMMChannelEventTypeOpenComplete' value='3'/>
  <enum name='kIOBluetoothRFCOMMChannelEventTypeQueueSpaceAvailable' value='6'/>
  <enum name='kIOBluetoothRFCOMMChannelEventTypeWriteComplete' value='5'/>
  <enum name='kIOBluetoothRFCOMMChannelFlowControlStatusIsOff' value='0'/>
  <enum name='kIOBluetoothRFCOMMChannelFlowControlStatusIsOn' value='1'/>
  <enum name='kIOBluetoothRFCOMMChannelTerminatedEvent' value='2'/>
  <enum name='kIOBluetoothRFCOMMFlowControlChangedEvent' value='1'/>
  <enum name='kIOBluetoothRFCOMMNewDataEvent' value='0'/>
  <enum name='kIOBluetoothUserNotificationChannelDirectionAny' value='0'/>
  <enum name='kIOBluetoothUserNotificationChannelDirectionIncoming' value='1'/>
  <enum name='kIOBluetoothUserNotificationChannelDirectionOutgoing' value='2'/>
  <enum name='kInfoStringMaxLength' value='25'/>
  <enum name='kInquiryScanDisabledPageScanEnabled' value='2'/>
  <enum name='kInquiryScanEnabledPageScanDisabled' value='1'/>
  <enum name='kInquiryScanEnabledPageScanEnabled' value='3'/>
  <enum name='kMaintainCurrentPowerState' value='0'/>
  <enum name='kMandatoryPageScanMode' value='0'/>
  <enum name='kMaxChannelIDPerSide' value='31'/>
  <enum name='kNoScansEnabled' value='0'/>
  <enum name='kOBEXBadArgumentError' value='-21854'/>
  <enum name='kOBEXBadRequestError' value='-21856'/>
  <enum name='kOBEXCancelledError' value='-21857'/>
  <enum name='kOBEXConnectFlag1Reserved' value='2'/>
  <enum name='kOBEXConnectFlag2Reserved' value='4'/>
  <enum name='kOBEXConnectFlag3Reserved' value='8'/>
  <enum name='kOBEXConnectFlag4Reserved' value='16'/>
  <enum name='kOBEXConnectFlag5Reserved' value='32'/>
  <enum name='kOBEXConnectFlag6Reserved' value='64'/>
  <enum name='kOBEXConnectFlag7Reserved' value='128'/>
  <enum name='kOBEXConnectFlagNone' value='0'/>
  <enum name='kOBEXConnectFlagSupportMultipleItLMPConnections' value='1'/>
  <enum name='kOBEXErrorRangeMax' value='-21899'/>
  <enum name='kOBEXErrorRangeMin' value='-21850'/>
  <enum name='kOBEXGeneralError' value='-21850'/>
  <enum name='kOBEXHeaderIDAppParameters' value='76'/>
  <enum name='kOBEXHeaderIDAuthorizationChallenge' value='77'/>
  <enum name='kOBEXHeaderIDAuthorizationResponse' value='78'/>
  <enum name='kOBEXHeaderIDBody' value='72'/>
  <enum name='kOBEXHeaderIDConnectionID' value='203'/>
  <enum name='kOBEXHeaderIDCount' value='192'/>
  <enum name='kOBEXHeaderIDDescription' value='5'/>
  <enum name='kOBEXHeaderIDEndOfBody' value='73'/>
  <enum name='kOBEXHeaderIDHTTP' value='71'/>
  <enum name='kOBEXHeaderIDLength' value='195'/>
  <enum name='kOBEXHeaderIDName' value='1'/>
  <enum name='kOBEXHeaderIDObjectClass' value='79'/>
  <enum name='kOBEXHeaderIDReservedRangeEnd' value='47'/>
  <enum name='kOBEXHeaderIDReservedRangeStart' value='16'/>
  <enum name='kOBEXHeaderIDTarget' value='70'/>
  <enum name='kOBEXHeaderIDTime4Byte' value='196'/>
  <enum name='kOBEXHeaderIDTimeISO' value='68'/>
  <enum name='kOBEXHeaderIDType' value='66'/>
  <enum name='kOBEXHeaderIDUserDefinedRangeEnd' value='63'/>
  <enum name='kOBEXHeaderIDUserDefinedRangeStart' value='48'/>
  <enum name='kOBEXHeaderIDWho' value='74'/>
  <enum name='kOBEXInternalError' value='-21853'/>
  <enum name='kOBEXNoResourcesError' value='-21851'/>
  <enum name='kOBEXNonceFlag2Reserved' value='4'/>
  <enum name='kOBEXNonceFlag3Reserved' value='8'/>
  <enum name='kOBEXNonceFlag4Reserved' value='16'/>
  <enum name='kOBEXNonceFlag5Reserved' value='32'/>
  <enum name='kOBEXNonceFlag6Reserved' value='64'/>
  <enum name='kOBEXNonceFlag7Reserved' value='128'/>
  <enum name='kOBEXNonceFlagAccessModeReadOnly' value='2'/>
  <enum name='kOBEXNonceFlagNone' value='0'/>
  <enum name='kOBEXNonceFlagSendUserIDInResponse' value='1'/>
  <enum name='kOBEXOpCodeAbort' value='255'/>
  <enum name='kOBEXOpCodeConnect' value='128'/>
  <enum name='kOBEXOpCodeDisconnect' value='129'/>
  <enum name='kOBEXOpCodeGet' value='3'/>
  <enum name='kOBEXOpCodeGetWithHighBitSet' value='131'/>
  <enum name='kOBEXOpCodePut' value='2'/>
  <enum name='kOBEXOpCodePutWithHighBitSet' value='130'/>
  <enum name='kOBEXOpCodeReserved' value='4'/>
  <enum name='kOBEXOpCodeReservedRangeEnd' value='15'/>
  <enum name='kOBEXOpCodeReservedRangeStart' value='6'/>
  <enum name='kOBEXOpCodeReservedWithHighBitSet' value='132'/>
  <enum name='kOBEXOpCodeSetPath' value='133'/>
  <enum name='kOBEXOpCodeUserDefinedEnd' value='31'/>
  <enum name='kOBEXOpCodeUserDefinedStart' value='16'/>
  <enum name='kOBEXPutFlag2Reserved' value='4'/>
  <enum name='kOBEXPutFlag3Reserved' value='8'/>
  <enum name='kOBEXPutFlag4Reserved' value='16'/>
  <enum name='kOBEXPutFlag5Reserved' value='32'/>
  <enum name='kOBEXPutFlag6Reserved' value='64'/>
  <enum name='kOBEXPutFlag7Reserved' value='128'/>
  <enum name='kOBEXPutFlagDontCreateDirectory' value='2'/>
  <enum name='kOBEXPutFlagGoToParentDirFirst' value='1'/>
  <enum name='kOBEXPutFlagNone' value='0'/>
  <enum name='kOBEXRealmASCII' value='0'/>
  <enum name='kOBEXRealmISO88591' value='1'/>
  <enum name='kOBEXRealmISO88592' value='2'/>
  <enum name='kOBEXRealmISO88593' value='3'/>
  <enum name='kOBEXRealmISO88594' value='4'/>
  <enum name='kOBEXRealmISO88595' value='5'/>
  <enum name='kOBEXRealmISO88596' value='6'/>
  <enum name='kOBEXRealmISO88597' value='7'/>
  <enum name='kOBEXRealmISO88598' value='8'/>
  <enum name='kOBEXRealmISO88599' value='9'/>
  <enum name='kOBEXRealmUNICODE' value='255'/>
  <enum name='kOBEXResponseCodeAccepted' value='34'/>
  <enum name='kOBEXResponseCodeAcceptedWithFinalBit' value='162'/>
  <enum name='kOBEXResponseCodeBadGateway' value='82'/>
  <enum name='kOBEXResponseCodeBadGatewayWithFinalBit' value='210'/>
  <enum name='kOBEXResponseCodeBadRequest' value='64'/>
  <enum name='kOBEXResponseCodeBadRequestWithFinalBit' value='192'/>
  <enum name='kOBEXResponseCodeConflict' value='73'/>
  <enum name='kOBEXResponseCodeConflictWithFinalBit' value='201'/>
  <enum name='kOBEXResponseCodeContinue' value='16'/>
  <enum name='kOBEXResponseCodeContinueWithFinalBit' value='144'/>
  <enum name='kOBEXResponseCodeCreated' value='33'/>
  <enum name='kOBEXResponseCodeCreatedWithFinalBit' value='161'/>
  <enum name='kOBEXResponseCodeDatabaseFull' value='96'/>
  <enum name='kOBEXResponseCodeDatabaseFullWithFinalBit' value='224'/>
  <enum name='kOBEXResponseCodeDatabaseLocked' value='97'/>
  <enum name='kOBEXResponseCodeDatabaseLockedWithFinalBit' value='225'/>
  <enum name='kOBEXResponseCodeForbidden' value='67'/>
  <enum name='kOBEXResponseCodeForbiddenWithFinalBit' value='195'/>
  <enum name='kOBEXResponseCodeGatewayTimeout' value='84'/>
  <enum name='kOBEXResponseCodeGatewayTimeoutWithFinalBit' value='212'/>
  <enum name='kOBEXResponseCodeGone' value='74'/>
  <enum name='kOBEXResponseCodeGoneWithFinalBit' value='202'/>
  <enum name='kOBEXResponseCodeHTTPVersionNotSupported' value='85'/>
  <enum name='kOBEXResponseCodeHTTPVersionNotSupportedWithFinalBit' value='213'/>
  <enum name='kOBEXResponseCodeInternalServerError' value='80'/>
  <enum name='kOBEXResponseCodeInternalServerErrorWithFinalBit' value='208'/>
  <enum name='kOBEXResponseCodeLengthRequired' value='75'/>
  <enum name='kOBEXResponseCodeLengthRequiredFinalBit' value='203'/>
  <enum name='kOBEXResponseCodeMethodNotAllowed' value='69'/>
  <enum name='kOBEXResponseCodeMethodNotAllowedWithFinalBit' value='197'/>
  <enum name='kOBEXResponseCodeMovedPermanently' value='49'/>
  <enum name='kOBEXResponseCodeMovedPermanentlyWithFinalBit' value='177'/>
  <enum name='kOBEXResponseCodeMovedTemporarily' value='50'/>
  <enum name='kOBEXResponseCodeMovedTemporarilyWithFinalBit' value='178'/>
  <enum name='kOBEXResponseCodeMultipleChoices' value='48'/>
  <enum name='kOBEXResponseCodeMultipleChoicesWithFinalBit' value='176'/>
  <enum name='kOBEXResponseCodeNoContent' value='36'/>
  <enum name='kOBEXResponseCodeNoContentWithFinalBit' value='164'/>
  <enum name='kOBEXResponseCodeNonAuthoritativeInfo' value='35'/>
  <enum name='kOBEXResponseCodeNonAuthoritativeInfoWithFinalBit' value='163'/>
  <enum name='kOBEXResponseCodeNotAcceptable' value='70'/>
  <enum name='kOBEXResponseCodeNotAcceptableWithFinalBit' value='198'/>
  <enum name='kOBEXResponseCodeNotFound' value='68'/>
  <enum name='kOBEXResponseCodeNotFoundWithFinalBit' value='196'/>
  <enum name='kOBEXResponseCodeNotImplemented' value='81'/>
  <enum name='kOBEXResponseCodeNotImplementedWithFinalBit' value='209'/>
  <enum name='kOBEXResponseCodeNotModified' value='52'/>
  <enum name='kOBEXResponseCodeNotModifiedWithFinalBit' value='180'/>
  <enum name='kOBEXResponseCodePartialContent' value='38'/>
  <enum name='kOBEXResponseCodePartialContentWithFinalBit' value='166'/>
  <enum name='kOBEXResponseCodePaymentRequired' value='66'/>
  <enum name='kOBEXResponseCodePaymentRequiredWithFinalBit' value='194'/>
  <enum name='kOBEXResponseCodePreconditionFailed' value='76'/>
  <enum name='kOBEXResponseCodePreconditionFailedWithFinalBit' value='204'/>
  <enum name='kOBEXResponseCodeProxyAuthenticationRequired' value='71'/>
  <enum name='kOBEXResponseCodeProxyAuthenticationRequiredWithFinalBit' value='199'/>
  <enum name='kOBEXResponseCodeRequestTimeOut' value='72'/>
  <enum name='kOBEXResponseCodeRequestTimeOutWithFinalBit' value='200'/>
  <enum name='kOBEXResponseCodeRequestURLTooLarge' value='78'/>
  <enum name='kOBEXResponseCodeRequestURLTooLargeWithFinalBit' value='206'/>
  <enum name='kOBEXResponseCodeRequestedEntityTooLarge' value='77'/>
  <enum name='kOBEXResponseCodeRequestedEntityTooLargeWithFinalBit' value='205'/>
  <enum name='kOBEXResponseCodeReservedRangeEnd' value='15'/>
  <enum name='kOBEXResponseCodeReservedRangeStart' value='0'/>
  <enum name='kOBEXResponseCodeResetContent' value='37'/>
  <enum name='kOBEXResponseCodeResetContentWithFinalBit' value='165'/>
  <enum name='kOBEXResponseCodeSeeOther' value='51'/>
  <enum name='kOBEXResponseCodeSeeOtherWithFinalBit' value='179'/>
  <enum name='kOBEXResponseCodeServiceUnavailable' value='83'/>
  <enum name='kOBEXResponseCodeServiceUnavailableWithFinalBit' value='211'/>
  <enum name='kOBEXResponseCodeSuccess' value='32'/>
  <enum name='kOBEXResponseCodeSuccessWithFinalBit' value='160'/>
  <enum name='kOBEXResponseCodeUnauthorized' value='65'/>
  <enum name='kOBEXResponseCodeUnauthorizedWithFinalBit' value='193'/>
  <enum name='kOBEXResponseCodeUnsupportedMediaType' value='79'/>
  <enum name='kOBEXResponseCodeUnsupportedMediaTypeWithFinalBit' value='207'/>
  <enum name='kOBEXResponseCodeUseProxy' value='53'/>
  <enum name='kOBEXResponseCodeUseProxyWithFinalBit' value='181'/>
  <enum name='kOBEXSessionAlreadyConnectedError' value='-21882'/>
  <enum name='kOBEXSessionBadRequestError' value='-21877'/>
  <enum name='kOBEXSessionBadResponseError' value='-21878'/>
  <enum name='kOBEXSessionBusyError' value='-21875'/>
  <enum name='kOBEXSessionEventTypeAbortCommandReceived' value='1330857281'/>
  <enum name='kOBEXSessionEventTypeAbortCommandResponseReceived' value='1329808705'/>
  <enum name='kOBEXSessionEventTypeConnectCommandReceived' value='1330857283'/>
  <enum name='kOBEXSessionEventTypeConnectCommandResponseReceived' value='1329808707'/>
  <enum name='kOBEXSessionEventTypeDisconnectCommandReceived' value='1330857284'/>
  <enum name='kOBEXSessionEventTypeDisconnectCommandResponseReceived' value='1329808708'/>
  <enum name='kOBEXSessionEventTypeError' value='1330070853'/>
  <enum name='kOBEXSessionEventTypeGetCommandReceived' value='1330857287'/>
  <enum name='kOBEXSessionEventTypeGetCommandResponseReceived' value='1329808711'/>
  <enum name='kOBEXSessionEventTypePutCommandReceived' value='1330857296'/>
  <enum name='kOBEXSessionEventTypePutCommandResponseReceived' value='1329808720'/>
  <enum name='kOBEXSessionEventTypeSetPathCommandReceived' value='1330857299'/>
  <enum name='kOBEXSessionEventTypeSetPathCommandResponseReceived' value='1329808723'/>
  <enum name='kOBEXSessionNoTransportError' value='-21879'/>
  <enum name='kOBEXSessionNotConnectedError' value='-21876'/>
  <enum name='kOBEXSessionTimeoutError' value='-21881'/>
  <enum name='kOBEXSessionTransportDiedError' value='-21880'/>
  <enum name='kOBEXSuccess' value='0'/>
  <enum name='kOBEXTimeoutError' value='-21855'/>
  <enum name='kOBEXTransportEventTypeDataReceived' value='1147237441'/>
  <enum name='kOBEXTransportEventTypeStatus' value='1400136020'/>
  <enum name='kOBEXUnsupportedError' value='-21852'/>
  <enum name='kOBEXVersion10' value='16'/>
  <enum name='kOptionalPageScanMode1' value='1'/>
  <enum name='kOptionalPageScanMode2' value='2'/>
  <enum name='kOptionalPageScanMode3' value='3'/>
  <enum name='kP0Mode' value='0'/>
  <enum name='kP1Mode' value='1'/>
  <enum name='kP2Mode' value='2'/>
  <enum name='kReadAllStoredLinkKeys' value='1'/>
  <enum name='kReadCurrentTransmitPowerLevel' value='0'/>
  <enum name='kReadMaximumTransmitPowerLevel' value='1'/>
  <enum name='kReservedForFutureUse' value='16'/>
  <enum name='kReturnLinkKeyForSpecifiedDeviceOnly' value='0'/>
  <enum name='kSCOFlowControlDisabled' value='0'/>
  <enum name='kSCOFlowControlEnabled' value='1'/>
  <enum name='kSearchOptionsAlwaysStartInquiry' value='1'/>
  <enum name='kSearchOptionsDiscardCachedResults' value='2'/>
  <enum name='kSearchOptionsNone' value='0'/>
  <enum name='kSuspendInquiryScan' value='2'/>
  <enum name='kSuspendPageScan' value='1'/>
  <enum name='kSuspendPeriodicInquiries' value='3'/>
  <function name='IOBluetoothAddServiceDict'>
    <arg name='serviceDict' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <arg name='outServiceRecord' declared_type='IOBluetoothSDPServiceRecordRef*' type='^^{OpaqueIOBluetoothObjectRef}' type_modifier='o'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothDeviceAddToFavorites'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothDeviceCloseConnection'>
    <arg name='btDevice' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothDeviceCreateWithAddress'>
    <arg name='bdAddr' declared_type='BluetoothDeviceAddress*' type='^{BluetoothDeviceAddress=[6C]}' type_modifier='n'/>
    <retval declared_type='IOBluetoothDeviceRef' already_retained='true' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothDeviceGetAddress'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothDeviceAddress*' type='^{BluetoothDeviceAddress=[6C]}' const='true'/>
  </function>
  <function name='IOBluetoothDeviceGetAddressString'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='IOBluetoothDeviceGetClassOfDevice'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothClassOfDevice' type='L' type64='I'/>
  </function>
  <function name='IOBluetoothDeviceGetClockOffset'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothClockOffset' type='S'/>
  </function>
  <function name='IOBluetoothDeviceGetConnectionHandle'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothConnectionHandle' type='S'/>
  </function>
  <function name='IOBluetoothDeviceGetDeviceClassMajor'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothDeviceClassMajor' type='L' type64='I'/>
  </function>
  <function name='IOBluetoothDeviceGetDeviceClassMinor'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothDeviceClassMinor' type='L' type64='I'/>
  </function>
  <function name='IOBluetoothDeviceGetEncryptionMode'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothHCIEncryptionMode' type='C'/>
  </function>
  <function name='IOBluetoothDeviceGetLastInquiryUpdate'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='CFDateRef' type='^{__CFDate=}'/>
  </function>
  <function name='IOBluetoothDeviceGetLastNameUpdate'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='CFDateRef' type='^{__CFDate=}'/>
  </function>
  <function name='IOBluetoothDeviceGetLastServicesUpdate'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='CFDateRef' type='^{__CFDate=}'/>
  </function>
  <function name='IOBluetoothDeviceGetLinkType'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothLinkType' type='C'/>
  </function>
  <function name='IOBluetoothDeviceGetName'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='IOBluetoothDeviceGetNameOrAddress'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='IOBluetoothDeviceGetPageScanMode'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothPageScanMode' type='C'/>
  </function>
  <function name='IOBluetoothDeviceGetPageScanPeriodMode'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothPageScanPeriodMode' type='C'/>
  </function>
  <function name='IOBluetoothDeviceGetPageScanRepetitionMode'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothPageScanRepetitionMode' type='C'/>
  </function>
  <function name='IOBluetoothDeviceGetRecentAccessDate'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='CFDateRef' type='^{__CFDate=}'/>
  </function>
  <function name='IOBluetoothDeviceGetServiceClassMajor'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothServiceClassMajor' type='L' type64='I'/>
  </function>
  <function name='IOBluetoothDeviceGetServiceRecordForUUID'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='uuidRef' declared_type='IOBluetoothSDPUUIDRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='IOBluetoothSDPServiceRecordRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothDeviceGetServices'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
  </function>
  <function name='IOBluetoothDeviceIsConnected'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IOBluetoothDeviceIsFavorite'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IOBluetoothDeviceIsPaired'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IOBluetoothDeviceOpenConnection'>
    <arg name='btDevice' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='callback' function_pointer='true' declared_type='IOBluetoothCreateConnectionCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='IOReturn' type='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='refCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothDeviceOpenConnectionWithOptions'>
    <arg name='btDevice' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='callback' function_pointer='true' declared_type='IOBluetoothCreateConnectionCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='IOReturn' type='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='refCon' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='inPageTimeout' declared_type='BluetoothHCIPageTimeout' type='S'/>
    <arg name='inAuthenticationRequired' declared_type='Boolean' type='B'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothDeviceOpenL2CAPChannel'>
    <arg name='btDevice' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='psm' declared_type='BluetoothL2CAPPSM' type='S'/>
    <arg name='findExisting' declared_type='Boolean' type='B'/>
    <arg name='newChannel' declared_type='IOBluetoothL2CAPChannelRef*' type='^^{OpaqueIOBluetoothObjectRef}'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothDeviceOpenL2CAPChannelAsync'>
    <arg name='btDevice' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='newChannel' declared_type='IOBluetoothL2CAPChannelRef*' type='^^{OpaqueIOBluetoothObjectRef}' type_modifier='o'/>
    <arg name='psm' declared_type='BluetoothL2CAPPSM' type='S'/>
    <arg name='eventListener' function_pointer='true' declared_type='IOBluetoothL2CAPChannelIncomingEventListener' type='^?' type_modifier='n'>
      <arg declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='IOBluetoothL2CAPChannelEvent*' type='^{IOBluetoothL2CAPChannelEvent=i(?={IOBluetoothL2CAPChannelDataBlock=^vI}^v[32C])i}' type64='^{IOBluetoothL2CAPChannelEvent=i(?={IOBluetoothL2CAPChannelDataBlock=^vQ}^v[32C])i}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='refcon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothDeviceOpenL2CAPChannelSync'>
    <arg name='btDevice' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='newChannel' declared_type='IOBluetoothL2CAPChannelRef*' type='^^{OpaqueIOBluetoothObjectRef}' type_modifier='o'/>
    <arg name='psm' declared_type='BluetoothL2CAPPSM' type='S'/>
    <arg name='eventListener' function_pointer='true' declared_type='IOBluetoothL2CAPChannelIncomingEventListener' type='^?' type_modifier='n'>
      <arg declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='IOBluetoothL2CAPChannelEvent*' type='^{IOBluetoothL2CAPChannelEvent=i(?={IOBluetoothL2CAPChannelDataBlock=^vI}^v[32C])i}' type64='^{IOBluetoothL2CAPChannelEvent=i(?={IOBluetoothL2CAPChannelDataBlock=^vQ}^v[32C])i}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='refcon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothDeviceOpenRFCOMMChannel'>
    <arg name='btDevice' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='channelID' declared_type='BluetoothRFCOMMChannelID' type='C'/>
    <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannelRef*' type='^^{OpaqueIOBluetoothObjectRef}'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothDeviceOpenRFCOMMChannelAsync'>
    <arg name='btDevice' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='newChannel' declared_type='IOBluetoothRFCOMMChannelRef*' type='^^{OpaqueIOBluetoothObjectRef}' type_modifier='o'/>
    <arg name='channelID' declared_type='BluetoothRFCOMMChannelID' type='C'/>
    <arg name='eventListener' function_pointer='true' declared_type='IOBluetoothRFCOMMChannelIncomingEventListener' type='^?' type_modifier='n'>
      <arg declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='IOBluetoothRFCOMMChannelEvent*' type='^{IOBluetoothRFCOMMChannelEvent=i(?={IOBluetoothRFCOMMDataBlock=^vI}i^{OpaqueIOBluetoothObjectRef}^v[32C]{IOBluetoothRFCOMMDataBlock=^vI})i}' type64='^{IOBluetoothRFCOMMChannelEvent=i(?={IOBluetoothRFCOMMDataBlock=^vQ}i^{OpaqueIOBluetoothObjectRef}^v[32C]{IOBluetoothRFCOMMDataBlock=^vQ})i}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='refcon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothDeviceOpenRFCOMMChannelSync'>
    <arg name='btDevice' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='newChannel' declared_type='IOBluetoothRFCOMMChannelRef*' type='^^{OpaqueIOBluetoothObjectRef}' type_modifier='o'/>
    <arg name='channelID' declared_type='BluetoothRFCOMMChannelID' type='C'/>
    <arg name='eventListener' function_pointer='true' declared_type='IOBluetoothRFCOMMChannelIncomingEventListener' type='^?' type_modifier='n'>
      <arg declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='IOBluetoothRFCOMMChannelEvent*' type='^{IOBluetoothRFCOMMChannelEvent=i(?={IOBluetoothRFCOMMDataBlock=^vI}i^{OpaqueIOBluetoothObjectRef}^v[32C]{IOBluetoothRFCOMMDataBlock=^vI})i}' type64='^{IOBluetoothRFCOMMChannelEvent=i(?={IOBluetoothRFCOMMDataBlock=^vQ}i^{OpaqueIOBluetoothObjectRef}^v[32C]{IOBluetoothRFCOMMDataBlock=^vQ})i}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='refcon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothDevicePerformSDPQuery'>
    <arg name='inDeviceRef' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='inCallback' function_pointer='true' declared_type='IOBluetoothSDPQueryCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='IOReturn' type='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothDeviceRegisterForDisconnectNotification'>
    <arg name='inDevice' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='callback' function_pointer='true' declared_type='IOBluetoothUserNotificationCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='IOBluetoothUserNotificationRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='IOBluetoothObjectRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOBluetoothUserNotificationRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothDeviceRemoteNameRequest'>
    <arg name='inDeviceRef' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='inCallback' function_pointer='true' declared_type='IOBluetoothRemoteNameRequestCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='IOReturn' type='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='outDeviceName' declared_type='UInt8*' type='*' type_modifier='o'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothDeviceRemoteNameRequestWithTimeout'>
    <arg name='inDeviceRef' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='inCallback' function_pointer='true' declared_type='IOBluetoothRemoteNameRequestCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='IOReturn' type='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='outDeviceName' declared_type='UInt8*' type='*' type_modifier='o'/>
    <arg name='inTimeout' declared_type='BluetoothHCIPageTimeout' type='S'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothDeviceRemoveFromFavorites'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothDeviceRequestAuthentication'>
    <arg name='device' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothDeviceSendL2CAPEchoRequest'>
    <arg name='btDevice' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='data' c_array_length_in_arg='2' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='length' declared_type='UInt16' type='S'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothFavoriteDevices'>
    <retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
  </function>
  <function name='IOBluetoothFindNumberOfRegistryEntriesOfClassName'>
    <arg name='deviceType' declared_type='char*' type='*' const='true'/>
    <retval declared_type='int' type='i'/>
  </function>
  <function name='IOBluetoothGetObjectIDFromArguments'>
    <arg name='argc' declared_type='int' type='i'/>
    <arg name='argv' c_array_length_in_arg='0' declared_type='char**' type='^*' const='true' type_modifier='n'/>
    <retval declared_type='IOBluetoothObjectID' type='L' type64='I'/>
  </function>
  <function name='IOBluetoothGetUniqueFileNameAndPath'>
    <arg name='inName' declared_type='NSString*' type='@'/>
    <arg name='inPath' declared_type='NSString*' type='@'/>
    <retval declared_type='NSString*' type='@'/>
  </function>
  <function name='IOBluetoothGetVersion'>
    <arg name='outSoftwareVersion' declared_type='NumVersion*' type='^{NumVersion=CCCC}' type_modifier='o'/>
    <arg name='outHardwareVersion' declared_type='BluetoothHCIVersionInfo*' type='^{BluetoothHCIVersionInfo=SCSCS}' type_modifier='o'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothIsFileAppleDesignatedPIMData'>
    <arg name='inFileName' declared_type='NSString*' type='@'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IOBluetoothL2CAPChannelCloseChannel'>
    <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothL2CAPChannelCreateFromObjectID'>
    <arg name='objectID' declared_type='IOBluetoothObjectID' type='L' type64='I'/>
    <retval declared_type='IOBluetoothL2CAPChannelRef' already_retained='true' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothL2CAPChannelGetDevice'>
    <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothL2CAPChannelGetIncomingMTU'>
    <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothL2CAPMTU' type='S'/>
  </function>
  <function name='IOBluetoothL2CAPChannelGetLocalChannelID'>
    <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothL2CAPChannelID' type='S'/>
  </function>
  <function name='IOBluetoothL2CAPChannelGetObjectID'>
    <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='IOBluetoothObjectID' type='L' type64='I'/>
  </function>
  <function name='IOBluetoothL2CAPChannelGetOutgoingMTU'>
    <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothL2CAPMTU' type='S'/>
  </function>
  <function name='IOBluetoothL2CAPChannelGetPSM'>
    <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothL2CAPPSM' type='S'/>
  </function>
  <function name='IOBluetoothL2CAPChannelGetRemoteChannelID'>
    <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothL2CAPChannelID' type='S'/>
  </function>
  <function name='IOBluetoothL2CAPChannelIsIncoming'>
    <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IOBluetoothL2CAPChannelRegisterForChannelCloseNotification'>
    <arg name='channel' declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='callback' function_pointer='true' declared_type='IOBluetoothUserNotificationCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='IOBluetoothUserNotificationRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='IOBluetoothObjectRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOBluetoothUserNotificationRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothL2CAPChannelRegisterIncomingDataListener'>
    <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='listener' function_pointer='true' declared_type='IOBluetoothL2CAPChannelIncomingDataListener' type='^?' type_modifier='n'>
      <arg declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='UInt16' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='refCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothL2CAPChannelRegisterIncomingEventListener'>
    <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='listener' function_pointer='true' declared_type='IOBluetoothL2CAPChannelIncomingEventListener' type='^?' type_modifier='n'>
      <arg declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='IOBluetoothL2CAPChannelEvent*' type='^{IOBluetoothL2CAPChannelEvent=i(?={IOBluetoothL2CAPChannelDataBlock=^vI}^v[32C])i}' type64='^{IOBluetoothL2CAPChannelEvent=i(?={IOBluetoothL2CAPChannelDataBlock=^vQ}^v[32C])i}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='refCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothL2CAPChannelRequestRemoteMTU'>
    <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='remoteMTU' declared_type='BluetoothL2CAPMTU' type='S'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothL2CAPChannelWrite'>
    <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='data' declared_type='void*' type='^v'/>
    <arg name='length' declared_type='UInt16' type='S'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothL2CAPChannelWriteAsync'>
    <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='data' c_array_length_in_arg='2' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='length' declared_type='UInt16' type='S'/>
    <arg name='refcon' declared_type='void*' type='^v' type_modifier='o'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothL2CAPChannelWriteSync'>
    <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='data' c_array_length_in_arg='2' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='length' declared_type='UInt16' type='S'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothLocalDeviceAvailable'>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IOBluetoothLocalDeviceGetDiscoverable'>
    <arg name='discoverableStatus' declared_type='Boolean*' type='^B' type_modifier='o'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothLocalDeviceGetPowerState'>
    <arg name='powerState' declared_type='BluetoothHCIPowerState*' type='^i' type_modifier='o'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothLocalDeviceReadAddress'>
    <arg name='outResults' declared_type='BluetoothDeviceAddress*' type='^{BluetoothDeviceAddress=[6C]}' type_modifier='o'/>
    <arg name='inCallback' function_pointer='true' declared_type='IOBluetoothReadAddressCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='OSStatus' type='l' type64='i'/>
      <arg declared_type='BluetoothDeviceAddress*' type='^{BluetoothDeviceAddress=[6C]}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='reserved' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothLocalDeviceReadAuthenticationEnable'>
    <arg name='outResults' declared_type='BluetoothHCIAuthenticationEnable*' type='*' type_modifier='o'/>
    <arg name='inCallback' function_pointer='true' declared_type='IOBluetoothReadAuthenticationEnableCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='BluetoothHCIStatus' type='C'/>
      <arg declared_type='BluetoothHCIAuthenticationEnable' type='C'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='reserved' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothLocalDeviceReadClassOfDevice'>
    <arg name='outResults' declared_type='BluetoothClassOfDevice*' type='^I' type_modifier='o'/>
    <arg name='inCallback' function_pointer='true' declared_type='IOBluetoothReadClassOfDeviceCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='BluetoothHCIStatus' type='C'/>
      <arg declared_type='BluetoothClassOfDevice' type='L' type64='I'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='reserved' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothLocalDeviceReadConnectionAcceptTimeout'>
    <arg name='outResults' declared_type='BluetoothHCIConnectionAcceptTimeout*' type='^S' type_modifier='o'/>
    <arg name='inCallback' function_pointer='true' declared_type='IOBluetoothReadConnectionAcceptTimeoutCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='BluetoothHCIStatus' type='C'/>
      <arg declared_type='BluetoothHCIConnectionAcceptTimeout' type='S'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='reserved' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothLocalDeviceReadEncryptionMode'>
    <arg name='outResults' declared_type='BluetoothHCIEncryptionMode*' type='*' type_modifier='o'/>
    <arg name='inCallback' function_pointer='true' declared_type='IOBluetoothReadEncryptionModeCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='BluetoothHCIStatus' type='C'/>
      <arg declared_type='BluetoothHCIEncryptionMode' type='C'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='reserved' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothLocalDeviceReadName'>
    <arg name='outResults' declared_type='UInt8*' type='*' type_modifier='o'/>
    <arg name='inCallback' function_pointer='true' declared_type='IOBluetoothReadNameCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='OSStatus' type='l' type64='i'/>
      <arg declared_type='BluetoothDeviceName*' type='^[256C]'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='reserved' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothLocalDeviceReadPageScanMode'>
    <arg name='outResults' declared_type='BluetoothHCIPageScanMode*' type='*' type_modifier='o'/>
    <arg name='inCallback' function_pointer='true' declared_type='IOBluetoothReadPageScanModeCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='BluetoothHCIStatus' type='C'/>
      <arg declared_type='BluetoothHCIPageScanMode' type='C'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='reserved' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothLocalDeviceReadPageScanPeriodMode'>
    <arg name='outResults' declared_type='BluetoothHCIPageScanPeriodMode*' type='*' type_modifier='o'/>
    <arg name='inCallback' function_pointer='true' declared_type='IOBluetoothReadPageScanPeriodModeCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='BluetoothHCIStatus' type='C'/>
      <arg declared_type='BluetoothHCIPageScanPeriodMode' type='C'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='reserved' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothLocalDeviceReadPageTimeout'>
    <arg name='outResults' declared_type='BluetoothHCIPageTimeout*' type='^S' type_modifier='o'/>
    <arg name='inCallback' function_pointer='true' declared_type='IOBluetoothReadPageTimeoutCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='BluetoothHCIStatus' type='C'/>
      <arg declared_type='BluetoothHCIPageTimeout' type='S'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='reserved' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothLocalDeviceReadScanEnable'>
    <arg name='outResults' declared_type='BluetoothHCIPageScanMode*' type='*' type_modifier='o'/>
    <arg name='inCallback' function_pointer='true' declared_type='IOBluetoothReadPageScanEnableCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='BluetoothHCIStatus' type='C'/>
      <arg declared_type='BluetoothHCIPageScanMode' type='C'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='reserved' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothLocalDeviceReadSupportedFeatures'>
    <arg name='outResults' declared_type='BluetoothHCISupportedFeatures*' type='^{BluetoothHCISupportedFeatures=[8C]}' type_modifier='o'/>
    <arg name='inCallback' function_pointer='true' declared_type='IOBluetoothReadLocalSupportedFeaturesCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='BluetoothHCIStatus' type='C'/>
      <arg declared_type='BluetoothHCISupportedFeatures*' type='^{BluetoothHCISupportedFeatures=[8C]}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='reserved' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothLocalDeviceReadVersionInformation'>
    <arg name='outResults' declared_type='BluetoothHCIVersionInfo*' type='^{BluetoothHCIVersionInfo=SCSCS}' type_modifier='o'/>
    <arg name='inCallback' function_pointer='true' declared_type='IOBluetoothReadLocalVersionInformationCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='BluetoothHCIStatus' type='C'/>
      <arg declared_type='BluetoothHCIVersionInfo*' type='^{BluetoothHCIVersionInfo=SCSCS}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='reserved' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothNSStringFromDeviceAddress'>
    <arg name='deviceAddress' declared_type='BluetoothDeviceAddress*' type='^{BluetoothDeviceAddress=[6C]}' const='true'/>
    <retval declared_type='NSString*' type='@'/>
  </function>
  <function name='IOBluetoothNSStringToDeviceAddress'>
    <arg name='inNameString' declared_type='NSString*' type='@'/>
    <arg name='outDeviceAddress' declared_type='BluetoothDeviceAddress*' type='^{BluetoothDeviceAddress=[6C]}'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothNumberOfAvailableHIDDevices'>
    <retval declared_type='int' type='i'/>
  </function>
  <function name='IOBluetoothNumberOfKeyboardHIDDevices'>
    <retval declared_type='int' type='i'/>
  </function>
  <function name='IOBluetoothNumberOfPointingHIDDevices'>
    <retval declared_type='int' type='i'/>
  </function>
  <function name='IOBluetoothNumberOfTabletHIDDevices'>
    <retval declared_type='int' type='i'/>
  </function>
  <function name='IOBluetoothOBEXSessionCreateWithIOBluetoothDeviceRefAndChannelNumber'>
    <arg name='inDeviceRef' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='inChannelID' declared_type='BluetoothRFCOMMChannelID' type='C'/>
    <arg name='outSessionRef' declared_type='OBEXSessionRef*' type='^^{OpaqueOBEXSessionRef}' type_modifier='o'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='IOBluetoothOBEXSessionCreateWithIOBluetoothSDPServiceRecordRef'>
    <arg name='inSDPServiceRef' declared_type='IOBluetoothSDPServiceRecordRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='outSessionRef' declared_type='OBEXSessionRef*' type='^^{OpaqueOBEXSessionRef}' type_modifier='o'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='IOBluetoothOBEXSessionCreateWithIncomingIOBluetoothRFCOMMChannel'>
    <arg name='inRFCOMMChannelRef' declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='inCallback' function_pointer='true' declared_type='OBEXSessionEventCallback' type='^?' type_modifier='n'>
      <arg declared_type='OBEXSessionEvent*' type='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}' type64='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}' const='true'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='outSessionRef' declared_type='OBEXSessionRef*' type='^^{OpaqueOBEXSessionRef}' type_modifier='o'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='IOBluetoothOBEXSessionOpenTransportConnection'>
    <arg name='inSessionRef' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <arg name='inCallback' function_pointer='true' declared_type='IOBluetoothOBEXSessionOpenConnectionCallback' type='^?' type_modifier='n'>
      <arg declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
      <arg declared_type='OBEXError' type='i'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='IOBluetoothObjectRelease'>
    <arg name='bluetoothObject' declared_type='IOBluetoothObjectRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='IOBluetoothObjectRetain'>
    <arg name='bluetoothObject' declared_type='IOBluetoothObjectRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='IOBluetoothObjectRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothPackData' variadic='true'>
    <arg name='ioBuffer' declared_type='void*' type='^v' type_modifier='N'/>
    <arg name='inFormat' declared_type='char*' type='*' const='true'/>
    <retval declared_type='int32_t' type='i'/>
  </function>
  <function name='IOBluetoothPackDataList'>
    <arg name='ioBuffer' declared_type='void*' type='^v'/>
    <arg name='inFormat' declared_type='char*' type='*' const='true'/>
    <arg name='inArgs' declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
    <retval declared_type='int32_t' type='i'/>
  </function>
  <function name='IOBluetoothPairedDevices'>
    <retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
  </function>
  <function name='IOBluetoothRFCOMMChannelCloseChannel'>
    <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothRFCOMMChannelCreateFromObjectID'>
    <arg name='objectID' declared_type='IOBluetoothObjectID' type='L' type64='I'/>
    <retval declared_type='IOBluetoothRFCOMMChannelRef' already_retained='true' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothRFCOMMChannelGetChannelID'>
    <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothRFCOMMChannelID' type='C'/>
  </function>
  <function name='IOBluetoothRFCOMMChannelGetDevice'>
    <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothRFCOMMChannelGetMTU'>
    <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothRFCOMMMTU' type='S'/>
  </function>
  <function name='IOBluetoothRFCOMMChannelGetObjectID'>
    <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='IOBluetoothObjectID' type='L' type64='I'/>
  </function>
  <function name='IOBluetoothRFCOMMChannelIsIncoming'>
    <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IOBluetoothRFCOMMChannelIsOpen'>
    <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IOBluetoothRFCOMMChannelIsTransmissionPaused'>
    <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IOBluetoothRFCOMMChannelRegisterForChannelCloseNotification'>
    <arg name='inChannel' declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='callback' function_pointer='true' declared_type='IOBluetoothUserNotificationCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='IOBluetoothUserNotificationRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='IOBluetoothObjectRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOBluetoothUserNotificationRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothRFCOMMChannelRegisterIncomingDataListener'>
    <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='listener' function_pointer='true' declared_type='IOBluetoothRFCOMMChannelIncomingDataListener' type='^?'>
      <arg declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='UInt16' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='refCon' declared_type='void*' type='^v'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothRFCOMMChannelRegisterIncomingEventListener'>
    <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='listener' function_pointer='true' declared_type='IOBluetoothRFCOMMChannelIncomingEventListener' type='^?' type_modifier='n'>
      <arg declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='IOBluetoothRFCOMMChannelEvent*' type='^{IOBluetoothRFCOMMChannelEvent=i(?={IOBluetoothRFCOMMDataBlock=^vI}i^{OpaqueIOBluetoothObjectRef}^v[32C]{IOBluetoothRFCOMMDataBlock=^vI})i}' type64='^{IOBluetoothRFCOMMChannelEvent=i(?={IOBluetoothRFCOMMDataBlock=^vQ}i^{OpaqueIOBluetoothObjectRef}^v[32C]{IOBluetoothRFCOMMDataBlock=^vQ})i}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='refCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothRFCOMMChannelWrite'>
    <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='data' declared_type='void*' type='^v'/>
    <arg name='length' declared_type='UInt16' type='S'/>
    <arg name='sleepFlag' declared_type='Boolean' type='B'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothRFCOMMChannelWriteAsync'>
    <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='data' c_array_length_in_arg='2' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='length' declared_type='UInt16' type='S'/>
    <arg name='refcon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothRFCOMMChannelWriteSimple'>
    <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='data' declared_type='void*' type='^v'/>
    <arg name='length' declared_type='UInt16' type='S'/>
    <arg name='sleepFlag' declared_type='Boolean' type='B'/>
    <arg name='numBytesSent' declared_type='UInt32*' type='^I'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothRFCOMMChannelWriteSync'>
    <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='data' c_array_length_in_arg='2' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='length' declared_type='UInt16' type='S'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothRFCOMMSendRemoteLineStatus'>
    <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='lineStatus' declared_type='BluetoothRFCOMMLineStatus' type='i'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothRFCOMMSetSerialParameters'>
    <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='speed' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nBits' declared_type='UInt8' type='C'/>
    <arg name='parity' declared_type='BluetoothRFCOMMParityType' type='i'/>
    <arg name='bitStop' declared_type='UInt8' type='C'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothRecentDevices'>
    <arg name='numDevices' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
  </function>
  <function name='IOBluetoothRegisterForDeviceConnectNotifications'>
    <arg name='callback' function_pointer='true' declared_type='IOBluetoothUserNotificationCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='IOBluetoothUserNotificationRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='IOBluetoothObjectRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOBluetoothUserNotificationRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothRegisterForFilteredL2CAPChannelOpenNotifications'>
    <arg name='callback' function_pointer='true' declared_type='IOBluetoothUserNotificationCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='IOBluetoothUserNotificationRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='IOBluetoothObjectRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='inPSM' declared_type='BluetoothL2CAPPSM' type='S'/>
    <arg name='inDirection' declared_type='IOBluetoothUserNotificationChannelDirection' type='i'/>
    <retval declared_type='IOBluetoothUserNotificationRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothRegisterForFilteredRFCOMMChannelOpenNotifications'>
    <arg name='callback' function_pointer='true' declared_type='IOBluetoothUserNotificationCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='IOBluetoothUserNotificationRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='IOBluetoothObjectRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='channelID' declared_type='BluetoothRFCOMMChannelID' type='C'/>
    <arg name='inDirection' declared_type='IOBluetoothUserNotificationChannelDirection' type='i'/>
    <retval declared_type='IOBluetoothUserNotificationRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothRegisterForL2CAPChannelOpenNotifications'>
    <arg name='callback' function_pointer='true' declared_type='IOBluetoothUserNotificationCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='IOBluetoothUserNotificationRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='IOBluetoothObjectRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOBluetoothUserNotificationRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothRegisterForRFCOMMChannelOpenNotifications'>
    <arg name='callback' function_pointer='true' declared_type='IOBluetoothUserNotificationCallback' type='^?' type_modifier='n'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='IOBluetoothUserNotificationRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <arg declared_type='IOBluetoothObjectRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='IOBluetoothUserNotificationRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothRemoveServiceWithRecordHandle'>
    <arg name='serviceRecordHandle' declared_type='BluetoothSDPServiceRecordHandle' type='L' type64='I'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothSDPDataElementContainsDataElement'>
    <arg name='dataElement' declared_type='IOBluetoothSDPDataElementRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='subDataElement' declared_type='IOBluetoothSDPDataElementRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IOBluetoothSDPDataElementGetArrayValue'>
    <arg name='dataElement' declared_type='IOBluetoothSDPDataElementRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
  </function>
  <function name='IOBluetoothSDPDataElementGetDataValue'>
    <arg name='dataElement' declared_type='IOBluetoothSDPDataElementRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='CFDataRef' type='^{__CFData=}'/>
  </function>
  <function name='IOBluetoothSDPDataElementGetNumberValue'>
    <arg name='dataElement' declared_type='IOBluetoothSDPDataElementRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='CFNumberRef' type='^{__CFNumber=}'/>
  </function>
  <function name='IOBluetoothSDPDataElementGetSize'>
    <arg name='dataElement' declared_type='IOBluetoothSDPDataElementRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='UInt32' type='L' type64='I'/>
  </function>
  <function name='IOBluetoothSDPDataElementGetSizeDescriptor'>
    <arg name='dataElement' declared_type='IOBluetoothSDPDataElementRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothSDPDataElementSizeDescriptor' type='C'/>
  </function>
  <function name='IOBluetoothSDPDataElementGetStringValue'>
    <arg name='dataElement' declared_type='IOBluetoothSDPDataElementRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='IOBluetoothSDPDataElementGetTypeDescriptor'>
    <arg name='dataElement' declared_type='IOBluetoothSDPDataElementRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='BluetoothSDPDataElementTypeDescriptor' type='C'/>
  </function>
  <function name='IOBluetoothSDPDataElementGetUUIDValue'>
    <arg name='dataElement' declared_type='IOBluetoothSDPDataElementRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='IOBluetoothSDPUUIDRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothSDPDataElementIsEqualToDataElement'>
    <arg name='dataElement' declared_type='IOBluetoothSDPDataElementRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='dataElement2' declared_type='IOBluetoothSDPDataElementRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IOBluetoothSDPServiceRecordGetAttributeDataElement'>
    <arg name='serviceRecord' declared_type='IOBluetoothSDPServiceRecordRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='attributeID' declared_type='BluetoothSDPServiceAttributeID' type='S'/>
    <retval declared_type='IOBluetoothSDPDataElementRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothSDPServiceRecordGetAttributes'>
    <arg name='serviceRecord' declared_type='IOBluetoothSDPServiceRecordRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
  </function>
  <function name='IOBluetoothSDPServiceRecordGetDevice'>
    <arg name='serviceRecord' declared_type='IOBluetoothSDPServiceRecordRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothSDPServiceRecordGetL2CAPPSM'>
    <arg name='serviceRecord' declared_type='IOBluetoothSDPServiceRecordRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='psm' declared_type='BluetoothL2CAPPSM*' type='^S' type_modifier='o'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothSDPServiceRecordGetRFCOMMChannelID'>
    <arg name='serviceRecord' declared_type='IOBluetoothSDPServiceRecordRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='channelID' declared_type='BluetoothRFCOMMChannelID*' type='*' type_modifier='o'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothSDPServiceRecordGetServiceName'>
    <arg name='serviceRecord' declared_type='IOBluetoothSDPServiceRecordRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='IOBluetoothSDPServiceRecordGetServiceRecordHandle'>
    <arg name='serviceRecord' declared_type='IOBluetoothSDPServiceRecordRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='serviceRecordHandle' declared_type='BluetoothSDPServiceRecordHandle*' type='^I' type_modifier='o'/>
    <retval declared_type='IOReturn' type='i'/>
  </function>
  <function name='IOBluetoothSDPServiceRecordHasServiceFromArray'>
    <arg name='serviceRecord' declared_type='IOBluetoothSDPServiceRecordRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='array' declared_type='CFArrayRef' type='^{__CFArray=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IOBluetoothSDPUUIDCreateUUID16'>
    <arg name='uuid16' declared_type='BluetoothSDPUUID16' type='S'/>
    <retval declared_type='IOBluetoothSDPUUIDRef' already_retained='true' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothSDPUUIDCreateUUID32'>
    <arg name='uuid32' declared_type='BluetoothSDPUUID32' type='L' type64='I'/>
    <retval declared_type='IOBluetoothSDPUUIDRef' already_retained='true' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothSDPUUIDCreateWithBytes'>
    <arg name='bytes' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='length' declared_type='UInt8' type='C'/>
    <retval declared_type='IOBluetoothSDPUUIDRef' already_retained='true' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothSDPUUIDCreateWithData'>
    <arg name='data' declared_type='CFDataRef' type='^{__CFData=}'/>
    <retval declared_type='IOBluetoothSDPUUIDRef' already_retained='true' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothSDPUUIDGetBytes'>
    <arg name='uuid' declared_type='IOBluetoothSDPUUIDRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='void*' type='^v' const='true'/>
  </function>
  <function name='IOBluetoothSDPUUIDGetLength'>
    <arg name='uuid' declared_type='IOBluetoothSDPUUIDRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='UInt8' type='C'/>
  </function>
  <function name='IOBluetoothSDPUUIDGetUUIDWithLength'>
    <arg name='uuid' declared_type='IOBluetoothSDPUUIDRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='newLength' declared_type='UInt8' type='C'/>
    <retval declared_type='IOBluetoothSDPUUIDRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
  </function>
  <function name='IOBluetoothSDPUUIDIsEqualToUUID'>
    <arg name='uuid1' declared_type='IOBluetoothSDPUUIDRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <arg name='uuid2' declared_type='IOBluetoothSDPUUIDRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IOBluetoothUnpackData' variadic='true'>
    <arg name='inBufferSize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='inBuffer' c_array_length_in_arg='0' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inFormat' declared_type='char*' type='*' const='true'/>
    <retval declared_type='int32_t' type='i'/>
  </function>
  <function name='IOBluetoothUnpackDataList'>
    <arg name='inBufferSize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='inBuffer' declared_type='void*' type='^v' const='true'/>
    <arg name='inFormat' declared_type='char*' type='*' const='true'/>
    <arg name='inArgs' declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
    <retval declared_type='int32_t' type='i'/>
  </function>
  <function name='IOBluetoothUserNotificationUnregister'>
    <arg name='notificationRef' declared_type='IOBluetoothUserNotificationRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='OBEXAddApplicationParameterHeader'>
    <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inHeaderDataLength' declared_type='uint32_t' type='I'/>
    <arg name='dictRef' declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXAddAuthorizationChallengeHeader'>
    <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inHeaderDataLength' declared_type='uint32_t' type='I'/>
    <arg name='dictRef' declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXAddAuthorizationResponseHeader'>
    <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inHeaderDataLength' declared_type='uint32_t' type='I'/>
    <arg name='dictRef' declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXAddBodyHeader'>
    <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inHeaderDataLength' declared_type='uint32_t' type='I'/>
    <arg name='isEndOfBody' declared_type='Boolean' type='B'/>
    <arg name='dictRef' declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXAddByteSequenceHeader'>
    <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inHeaderDataLength' declared_type='uint32_t' type='I'/>
    <arg name='dictRef' declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXAddConnectionIDHeader'>
    <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inHeaderDataLength' declared_type='uint32_t' type='I'/>
    <arg name='dictRef' declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXAddCountHeader'>
    <arg name='count' declared_type='uint32_t' type='I'/>
    <arg name='dictRef' declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXAddDescriptionHeader'>
    <arg name='description' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='dictRef' declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXAddHTTPHeader'>
    <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inHeaderDataLength' declared_type='uint32_t' type='I'/>
    <arg name='dictRef' declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXAddLengthHeader'>
    <arg name='length' declared_type='uint32_t' type='I'/>
    <arg name='dictRef' declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXAddNameHeader'>
    <arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='dictRef' declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXAddObjectClassHeader'>
    <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inHeaderDataLength' declared_type='uint32_t' type='I'/>
    <arg name='dictRef' declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXAddTargetHeader'>
    <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inHeaderDataLength' declared_type='uint32_t' type='I'/>
    <arg name='dictRef' declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXAddTime4ByteHeader'>
    <arg name='time4Byte' declared_type='uint32_t' type='I'/>
    <arg name='dictRef' declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXAddTimeISOHeader'>
    <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inHeaderDataLength' declared_type='uint32_t' type='I'/>
    <arg name='dictRef' declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXAddTypeHeader'>
    <arg name='type' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='dictRef' declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXAddUserDefinedHeader'>
    <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inHeaderDataLength' declared_type='uint32_t' type='I'/>
    <arg name='dictRef' declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXAddWhoHeader'>
    <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inHeaderDataLength' declared_type='uint32_t' type='I'/>
    <arg name='dictRef' declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXCreateVCard'>
    <arg name='inFirstName' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inFirstNameLength' declared_type='uint32_t' type='I'/>
    <arg name='inLastName' c_array_length_in_arg='3' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inLastNameLength' declared_type='uint32_t' type='I'/>
    <arg name='inFriendlyName' c_array_length_in_arg='5' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inFriendlyNameLength' declared_type='uint32_t' type='I'/>
    <arg name='inNameCharset' c_array_length_in_arg='7' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inNameCharsetLength' declared_type='uint32_t' type='I'/>
    <arg name='inHomePhone' c_array_length_in_arg='9' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inHomePhoneLength' declared_type='uint32_t' type='I'/>
    <arg name='inWorkPhone' c_array_length_in_arg='11' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inWorkPhoneLength' declared_type='uint32_t' type='I'/>
    <arg name='inCellPhone' c_array_length_in_arg='13' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inCellPhoneLength' declared_type='uint32_t' type='I'/>
    <arg name='inFaxPhone' c_array_length_in_arg='15' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inFaxPhoneLength' declared_type='uint32_t' type='I'/>
    <arg name='inEMailAddress' c_array_length_in_arg='17' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inEMailAddressLength' declared_type='uint32_t' type='I'/>
    <arg name='inEMailAddressCharset' c_array_length_in_arg='19' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inEMailAddressCharsetLength' declared_type='uint32_t' type='I'/>
    <arg name='inOrganization' c_array_length_in_arg='21' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inOrganizationLength' declared_type='uint32_t' type='I'/>
    <arg name='inOrganizationCharset' c_array_length_in_arg='23' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inOrganizationCharsetLength' declared_type='uint32_t' type='I'/>
    <arg name='inTitle' c_array_length_in_arg='25' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inTitleLength' declared_type='uint32_t' type='I'/>
    <arg name='inTitleCharset' c_array_length_in_arg='27' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inTitleCharsetLength' declared_type='uint32_t' type='I'/>
    <retval declared_type='NSData*' type='@'/>
  </function>
  <function name='OBEXCreateVEvent'>
    <arg name='inCharset' c_array_length_in_arg='1' declared_type='char*' type='*' const='true' type_modifier='n'/>
    <arg name='inCharsetLength' declared_type='uint32_t' type='I'/>
    <arg name='inEncoding' c_array_length_in_arg='3' declared_type='char*' type='*' const='true' type_modifier='n'/>
    <arg name='inEncodingLength' declared_type='uint32_t' type='I'/>
    <arg name='inEventStartDate' c_array_length_in_arg='5' declared_type='char*' type='*' const='true' type_modifier='n'/>
    <arg name='inEventStartDateLength' declared_type='uint32_t' type='I'/>
    <arg name='inEventEndDate' c_array_length_in_arg='7' declared_type='char*' type='*' const='true' type_modifier='n'/>
    <arg name='inEventEndDateLength' declared_type='uint32_t' type='I'/>
    <arg name='inAlarmDate' c_array_length_in_arg='9' declared_type='char*' type='*' const='true' type_modifier='n'/>
    <arg name='inAlarmDateLength' declared_type='uint32_t' type='I'/>
    <arg name='inCategory' c_array_length_in_arg='11' declared_type='char*' type='*' const='true' type_modifier='n'/>
    <arg name='inCategoryLength' declared_type='uint32_t' type='I'/>
    <arg name='inSummary' c_array_length_in_arg='13' declared_type='char*' type='*' const='true' type_modifier='n'/>
    <arg name='inSummaryLength' declared_type='uint32_t' type='I'/>
    <arg name='inLocation' c_array_length_in_arg='15' declared_type='char*' type='*' const='true' type_modifier='n'/>
    <arg name='inLocationLength' declared_type='uint32_t' type='I'/>
    <arg name='inXIRMCLUID' c_array_length_in_arg='17' declared_type='char*' type='*' const='true' type_modifier='n'/>
    <arg name='inXIRMCLUIDLength' declared_type='uint32_t' type='I'/>
    <retval declared_type='NSData*' type='@'/>
  </function>
  <function name='OBEXFileTransferServicesAbort'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXFileTransferServicesChangeCurrentFolderBackward'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXFileTransferServicesChangeCurrentFolderForward'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <arg name='inDirName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXFileTransferServicesChangeCurrentFolderToRoot'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXFileTransferServicesConnectToFTPService'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXFileTransferServicesConnectToObjectPushService'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXFileTransferServicesCopyRemoteFile'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <arg name='inRemoteFileName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inLocalPathAndName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXFileTransferServicesCreateFolder'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <arg name='inFolderName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXFileTransferServicesCreateWithSession'>
    <arg name='inOBEXSession' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <retval declared_type='OBEXFileTransferServicesRef' already_retained='true' type='^{OpaqueFileTransferServicesRef=}'/>
  </function>
  <function name='OBEXFileTransferServicesCurrentPath'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='OBEXFileTransferServicesDelete'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='OBEXFileTransferServicesDisconnect'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXFileTransferServicesGetDefaultVCard'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <arg name='inLocalPathAndName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXFileTransferServicesGetUserRefCon'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <arg name='inUserRefCon' declared_type='void*' type='^v'/>
    <retval declared_type='void*' type='^v'/>
  </function>
  <function name='OBEXFileTransferServicesIsBusy'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <retval declared_type='BOOL' type='B'/>
  </function>
  <function name='OBEXFileTransferServicesIsConnected'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <retval declared_type='BOOL' type='B'/>
  </function>
  <function name='OBEXFileTransferServicesRemoveItem'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <arg name='inItemName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXFileTransferServicesRetrieveFolderListing'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXFileTransferServicesSendData'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <arg name='inData' declared_type='CFDataRef' type='^{__CFData=}'/>
    <arg name='inType' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXFileTransferServicesSendFile'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <arg name='inLocalPathAndName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXFileTransferServicesSetAbortCallback'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <arg name='callback' function_pointer='true' declared_type='OBEXFileTransferServicesAbortComplete' type='^?'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
      <arg declared_type='OBEXError' type='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='OBEXFileTransferServicesSetConnectCallback'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <arg name='callback' function_pointer='true' declared_type='OBEXFileTransferServicesConnectionComplete' type='^?'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
      <arg declared_type='OBEXError' type='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='OBEXFileTransferServicesSetCopyRemoteFileCompleteCallback'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <arg name='callback' function_pointer='true' declared_type='OBEXFileTransferServicesCopyRemoteFileComplete' type='^?'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
      <arg declared_type='OBEXError' type='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='OBEXFileTransferServicesSetCopyRemoteFileProgressCallback'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <arg name='callback' function_pointer='true' declared_type='OBEXFileTransferServicesCopyRemoteFileProgress' type='^?'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
      <arg declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='OBEXFileTransferServicesSetCreateFolderCallback'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <arg name='callback' function_pointer='true' declared_type='OBEXFileTransferServicesCreateFolderComplete' type='^?'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
      <arg declared_type='OBEXError' type='i'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='OBEXFileTransferServicesSetDisconnectCallback'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <arg name='callback' function_pointer='true' declared_type='OBEXFileTransferServicesDisconnectionComplete' type='^?'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
      <arg declared_type='OBEXError' type='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='OBEXFileTransferServicesSetPathChangeCallback'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <arg name='callback' function_pointer='true' declared_type='OBEXFileTransferServicesPathChangeComplete' type='^?'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
      <arg declared_type='OBEXError' type='i'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='OBEXFileTransferServicesSetRemoveItemCallback'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <arg name='callback' function_pointer='true' declared_type='OBEXFileTransferServicesRemoveItemComplete' type='^?'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
      <arg declared_type='OBEXError' type='i'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='OBEXFileTransferServicesSetRetrieveFolderListingCallback'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <arg name='callback' function_pointer='true' declared_type='OBEXFileTransferServicesRetrieveFolderListingComplete' type='^?'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
      <arg declared_type='OBEXError' type='i'/>
      <arg declared_type='CFArrayRef' type='^{__CFArray=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='OBEXFileTransferServicesSetSendFileCompleteCallback'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <arg name='callback' function_pointer='true' declared_type='OBEXFileTransferServicesSendFileComplete' type='^?'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
      <arg declared_type='OBEXError' type='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='OBEXFileTransferServicesSetSendFileProgressCallback'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <arg name='callback' function_pointer='true' declared_type='OBEXFileTransferServicesSendFileProgress' type='^?'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
      <arg declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='OBEXFileTransferServicesSetUserRefCon'>
    <arg name='inRef' declared_type='OBEXFileTransferServicesRef' type='^{OpaqueFileTransferServicesRef=}'/>
    <arg name='inUserRefCon' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='OBEXGetHeaders'>
    <arg name='inData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' type_modifier='n'/>
    <arg name='inDataSize' declared_type='size_t' type='L' type64='Q'/>
    <retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
  </function>
  <function name='OBEXHeadersToBytes'>
    <arg name='dictionaryOfHeaders' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='CFMutableDataRef' type='^{__CFData=}'/>
  </function>
  <function name='OBEXSessionAbort'>
    <arg name='inSessionRef' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <arg name='inOptionalHeaders' c_array_length_in_arg='2' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='inOptionalHeadersLength' declared_type='size_t' type='L' type64='Q'/>
    <arg name='inCallback' function_pointer='true' declared_type='OBEXSessionEventCallback' type='^?' type_modifier='n'>
      <arg declared_type='OBEXSessionEvent*' type='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}' type64='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}' const='true'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefcon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXSessionAbortResponse'>
    <arg name='inSessionRef' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <arg name='inResponseOpCode' declared_type='OBEXOpCode' type='C'/>
    <arg name='inOptionalHeaders' c_array_length_in_arg='3' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='inOptionalHeadersLength' declared_type='size_t' type='L' type64='Q'/>
    <arg name='inCallback' function_pointer='true' declared_type='OBEXSessionEventCallback' type='^?' type_modifier='n'>
      <arg declared_type='OBEXSessionEvent*' type='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}' type64='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}' const='true'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXSessionConnect'>
    <arg name='inSessionRef' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <arg name='inFlags' declared_type='OBEXFlags' type='C'/>
    <arg name='inMaxPacketLength' declared_type='OBEXMaxPacketLength' type='S'/>
    <arg name='inOptionalHeaders' c_array_length_in_arg='4' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='inOptionalHeadersLength' declared_type='size_t' type='L' type64='Q'/>
    <arg name='inCallback' function_pointer='true' declared_type='OBEXSessionEventCallback' type='^?' type_modifier='n'>
      <arg declared_type='OBEXSessionEvent*' type='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}' type64='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}' const='true'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXSessionConnectResponse'>
    <arg name='inSessionRef' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <arg name='inResponseOpCode' declared_type='OBEXOpCode' type='C'/>
    <arg name='inFlags' declared_type='OBEXFlags' type='C'/>
    <arg name='inMaxPacketLength' declared_type='OBEXMaxPacketLength' type='S'/>
    <arg name='inOptionalHeaders' c_array_length_in_arg='5' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='inOptionalHeadersLength' declared_type='size_t' type='L' type64='Q'/>
    <arg name='inCallback' function_pointer='true' declared_type='OBEXSessionEventCallback' type='^?' type_modifier='n'>
      <arg declared_type='OBEXSessionEvent*' type='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}' type64='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}' const='true'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXSessionDelete'>
    <arg name='inSessionRef' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXSessionDisconnect'>
    <arg name='inSessionRef' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <arg name='inOptionalHeaders' c_array_length_in_arg='2' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='inOptionalHeadersLength' declared_type='size_t' type='L' type64='Q'/>
    <arg name='inCallback' function_pointer='true' declared_type='OBEXSessionEventCallback' type='^?' type_modifier='n'>
      <arg declared_type='OBEXSessionEvent*' type='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}' type64='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}' const='true'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXSessionDisconnectResponse'>
    <arg name='inSessionRef' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <arg name='inResponseOpCode' declared_type='OBEXOpCode' type='C'/>
    <arg name='inOptionalHeaders' c_array_length_in_arg='3' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='inOptionalHeadersLength' declared_type='size_t' type='L' type64='Q'/>
    <arg name='inCallback' function_pointer='true' declared_type='OBEXSessionEventCallback' type='^?' type_modifier='n'>
      <arg declared_type='OBEXSessionEvent*' type='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}' type64='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}' const='true'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXSessionGet'>
    <arg name='inSessionRef' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <arg name='inIsFinalChunk' declared_type='Boolean' type='B'/>
    <arg name='inHeadersData' c_array_length_in_arg='3' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='inHeadersDataLength' declared_type='size_t' type='L' type64='Q'/>
    <arg name='inCallback' function_pointer='true' declared_type='OBEXSessionEventCallback' type='^?' type_modifier='n'>
      <arg declared_type='OBEXSessionEvent*' type='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}' type64='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}' const='true'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXSessionGetAvailableCommandPayloadLength'>
    <arg name='inSessionRef' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <arg name='inOpCode' declared_type='OBEXOpCode' type='C'/>
    <arg name='outLength' declared_type='OBEXMaxPacketLength*' type='^S' type_modifier='o'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXSessionGetAvailableCommandResponsePayloadLength'>
    <arg name='inSessionRef' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <arg name='inOpCode' declared_type='OBEXOpCode' type='C'/>
    <arg name='outLength' declared_type='OBEXMaxPacketLength*' type='^S' type_modifier='o'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXSessionGetMaxPacketLength'>
    <arg name='inSessionRef' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <arg name='outLength' declared_type='OBEXMaxPacketLength*' type='^S' type_modifier='o'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXSessionGetResponse'>
    <arg name='inSessionRef' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <arg name='inResponseOpCode' declared_type='OBEXOpCode' type='C'/>
    <arg name='inOptionalHeaders' c_array_length_in_arg='3' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='inOptionalHeadersLength' declared_type='size_t' type='L' type64='Q'/>
    <arg name='inCallback' function_pointer='true' declared_type='OBEXSessionEventCallback' type='^?' type_modifier='n'>
      <arg declared_type='OBEXSessionEvent*' type='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}' type64='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}' const='true'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXSessionHasOpenOBEXConnection'>
    <arg name='inSessionRef' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <arg name='outIsConnected' declared_type='Boolean*' type='^B' type_modifier='o'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXSessionPut'>
    <arg name='inSessionRef' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <arg name='inIsFinalChunk' declared_type='Boolean' type='B'/>
    <arg name='inHeadersData' c_array_length_in_arg='3' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='inHeadersDataLength' declared_type='size_t' type='L' type64='Q'/>
    <arg name='inBodyData' c_array_length_in_arg='5' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='inBodyDataLength' declared_type='size_t' type='L' type64='Q'/>
    <arg name='inCallback' function_pointer='true' declared_type='OBEXSessionEventCallback' type='^?' type_modifier='n'>
      <arg declared_type='OBEXSessionEvent*' type='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}' type64='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}' const='true'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXSessionPutResponse'>
    <arg name='inSessionRef' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <arg name='inResponseOpCode' declared_type='OBEXOpCode' type='C'/>
    <arg name='inOptionalHeaders' c_array_length_in_arg='3' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='inOptionalHeadersLength' declared_type='size_t' type='L' type64='Q'/>
    <arg name='inCallback' function_pointer='true' declared_type='OBEXSessionEventCallback' type='^?' type_modifier='n'>
      <arg declared_type='OBEXSessionEvent*' type='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}' type64='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}' const='true'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXSessionSetPath'>
    <arg name='inSessionRef' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <arg name='inFlags' declared_type='OBEXFlags' type='C'/>
    <arg name='inConstants' declared_type='OBEXConstants' type='C'/>
    <arg name='inOptionalHeaders' c_array_length_in_arg='4' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='inOptionalHeadersLength' declared_type='size_t' type='L' type64='Q'/>
    <arg name='inCallback' function_pointer='true' declared_type='OBEXSessionEventCallback' type='^?' type_modifier='n'>
      <arg declared_type='OBEXSessionEvent*' type='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}' type64='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}' const='true'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefcon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXSessionSetPathResponse'>
    <arg name='inSessionRef' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <arg name='inResponseOpCode' declared_type='OBEXOpCode' type='C'/>
    <arg name='inOptionalHeaders' c_array_length_in_arg='3' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='inOptionalHeadersLength' declared_type='size_t' type='L' type64='Q'/>
    <arg name='inCallback' function_pointer='true' declared_type='OBEXSessionEventCallback' type='^?' type_modifier='n'>
      <arg declared_type='OBEXSessionEvent*' type='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}' type64='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}' const='true'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <function name='OBEXSessionSetServerCallback'>
    <arg name='inSessionRef' declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
    <arg name='inCallback' function_pointer='true' declared_type='OBEXSessionEventCallback' type='^?' type_modifier='n'>
      <arg declared_type='OBEXSessionEvent*' type='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}' type64='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}' const='true'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserRefCon' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='OBEXError' type='i'/>
  </function>
  <class name='IOBluetoothDevice'>
    <method selector='addToFavorites'>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='awakeAfterUsingCoder:'>
      <arg name='coder' declared_type='NSCoder*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='closeConnection'>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='description'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='encodeWithCoder:'>
      <arg name='coder' declared_type='NSCoder*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='favoriteDevices'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='getAddress'>
      <retval declared_type='BluetoothDeviceAddress*' type='^{BluetoothDeviceAddress=[6C]}' const='true'/>
    </method>
    <method selector='getAddressString'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='getClassOfDevice'>
      <retval declared_type='BluetoothClassOfDevice' type='L' type64='I'/>
    </method>
    <method selector='getClockOffset'>
      <retval declared_type='BluetoothClockOffset' type='S'/>
    </method>
    <method selector='getConnectionHandle'>
      <retval declared_type='BluetoothConnectionHandle' type='S'/>
    </method>
    <method selector='getDeviceClassMajor'>
      <retval declared_type='BluetoothDeviceClassMajor' type='L' type64='I'/>
    </method>
    <method selector='getDeviceClassMinor'>
      <retval declared_type='BluetoothDeviceClassMinor' type='L' type64='I'/>
    </method>
    <method selector='getDeviceRef'>
      <retval declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    </method>
    <method selector='getEncryptionMode'>
      <retval declared_type='BluetoothHCIEncryptionMode' type='C'/>
    </method>
    <method selector='getLastInquiryUpdate'>
      <retval declared_type='NSDate*' type='@'/>
    </method>
    <method selector='getLastNameUpdate'>
      <retval declared_type='NSDate*' type='@'/>
    </method>
    <method selector='getLastServicesUpdate'>
      <retval declared_type='NSDate*' type='@'/>
    </method>
    <method selector='getLinkType'>
      <retval declared_type='BluetoothLinkType' type='C'/>
    </method>
    <method selector='getName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='getNameOrAddress'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='getPageScanMode'>
      <retval declared_type='BluetoothPageScanMode' type='C'/>
    </method>
    <method selector='getPageScanPeriodMode'>
      <retval declared_type='BluetoothPageScanPeriodMode' type='C'/>
    </method>
    <method selector='getPageScanRepetitionMode'>
      <retval declared_type='BluetoothPageScanRepetitionMode' type='C'/>
    </method>
    <method selector='getServiceClassMajor'>
      <retval declared_type='BluetoothServiceClassMajor' type='L' type64='I'/>
    </method>
    <method selector='getServiceRecordForUUID:'>
      <arg name='sdpUUID' declared_type='IOBluetoothSDPUUID*' type='@' index='0'/>
      <retval declared_type='IOBluetoothSDPServiceRecord*' type='@'/>
    </method>
    <method selector='getServices'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='initWithCoder:'>
      <arg name='coder' declared_type='NSCoder*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isConnected'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isEqual:'>
      <arg name='cmpObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isFavorite'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isIncoming'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isPaired'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='openConnection'>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='openConnection:'>
      <arg name='target' declared_type='id' type='@' index='0'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='openConnection:withPageTimeout:authenticationRequired:'>
      <arg name='target' declared_type='id' type='@' index='0'/>
      <arg name='pageTimeoutValue' declared_type='BluetoothHCIPageTimeout' type='S' index='1'/>
      <arg name='authenticationRequired' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='openL2CAPChannel:findExisting:newChannel:'>
      <arg name='psm' declared_type='BluetoothL2CAPPSM' type='S' index='0'/>
      <arg name='findExisting' declared_type='BOOL' type='B' index='1'/>
      <arg name='newChannel' declared_type='IOBluetoothL2CAPChannel**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='openL2CAPChannelAsync:withPSM:delegate:'>
      <arg name='newChannel' declared_type='IOBluetoothL2CAPChannel**' type='^@' index='0' type_modifier='o'/>
      <arg name='psm' declared_type='BluetoothL2CAPPSM' type='S' index='1'/>
      <arg name='channelDelegate' declared_type='id' type='@' index='2'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='openL2CAPChannelSync:withPSM:delegate:'>
      <arg name='newChannel' declared_type='IOBluetoothL2CAPChannel**' type='^@' index='0' type_modifier='o'/>
      <arg name='psm' declared_type='BluetoothL2CAPPSM' type='S' index='1'/>
      <arg name='channelDelegate' declared_type='id' type='@' index='2'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='openRFCOMMChannel:channel:'>
      <arg name='channelID' declared_type='BluetoothRFCOMMChannelID' type='C' index='0'/>
      <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannel**' type='^@' index='1' type_modifier='o'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='openRFCOMMChannelAsync:withChannelID:delegate:'>
      <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannel**' type='^@' index='0' type_modifier='o'/>
      <arg name='channelID' declared_type='BluetoothRFCOMMChannelID' type='C' index='1'/>
      <arg name='channelDelegate' declared_type='id' type='@' index='2'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='openRFCOMMChannelSync:withChannelID:delegate:'>
      <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannel**' type='^@' index='0' type_modifier='o'/>
      <arg name='channelID' declared_type='BluetoothRFCOMMChannelID' type='C' index='1'/>
      <arg name='channelDelegate' declared_type='id' type='@' index='2'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method class_method='true' selector='pairedDevices'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='performSDPQuery:'>
      <arg name='target' declared_type='id' type='@' index='0'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='recentAccessDate'>
      <retval declared_type='NSDate*' type='@'/>
    </method>
    <method class_method='true' selector='recentDevices:'>
      <arg name='numDevices' declared_type='UInt32' type='L' type64='I' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='registerForConnectNotifications:selector:'>
      <arg name='observer' declared_type='id' type='@' index='0'/>
      <arg name='inSelector' sel_of_type='v16@0:4@8@12' declared_type='SEL' type=':' index='1' sel_of_type64='v32@0:8@16@24'/>
      <retval declared_type='IOBluetoothUserNotification*' type='@'/>
    </method>
    <method selector='registerForDisconnectNotification:selector:'>
      <arg name='observer' declared_type='id' type='@' index='0'/>
      <arg name='inSelector' sel_of_type='v16@0:4@8@12' declared_type='SEL' type=':' index='1' sel_of_type64='v32@0:8@16@24'/>
      <retval declared_type='IOBluetoothUserNotification*' type='@'/>
    </method>
    <method selector='remoteNameRequest:'>
      <arg name='target' declared_type='id' type='@' index='0'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='remoteNameRequest:withPageTimeout:'>
      <arg name='target' declared_type='id' type='@' index='0'/>
      <arg name='pageTimeoutValue' declared_type='BluetoothHCIPageTimeout' type='S' index='1'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='removeFromFavorites'>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='requestAuthentication'>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='sendL2CAPEchoRequest:length:'>
      <arg name='data' c_array_length_in_arg='1' declared_type='void*' type='^v' index='0' type_modifier='n'/>
      <arg name='length' declared_type='UInt16' type='S' index='1'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method class_method='true' selector='withAddress:'>
      <arg name='address' declared_type='BluetoothDeviceAddress*' type='^{BluetoothDeviceAddress=[6C]}' const='true' index='0' type_modifier='n'/>
      <retval declared_type='IOBluetoothDevice*' type='@'/>
    </method>
    <method class_method='true' selector='withDeviceRef:'>
      <arg name='deviceRef' declared_type='IOBluetoothDeviceRef' type='^{OpaqueIOBluetoothObjectRef=}' index='0'/>
      <retval declared_type='IOBluetoothDevice*' type='@'/>
    </method>
  </class>
  <class name='IOBluetoothDeviceInquiry'>
    <method selector='clearFoundDevices'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='foundDevices'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='initWithDelegate:'>
      <arg name='delegate' declared_type='id' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='inquiryLength'>
      <retval declared_type='uint8_t' type='C'/>
    </method>
    <method class_method='true' selector='inquiryWithDelegate:'>
      <arg name='delegate' declared_type='id' type='@' index='0'/>
      <retval declared_type='IOBluetoothDeviceInquiry*' type='@'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='delegate' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setInquiryLength:'>
      <arg name='seconds' declared_type='uint8_t' type='C' index='0'/>
      <retval declared_type='uint8_t' type='C'/>
    </method>
    <method selector='setSearchCriteria:majorDeviceClass:minorDeviceClass:'>
      <arg name='inServiceClassMajor' declared_type='BluetoothServiceClassMajor' type='L' type64='I' index='0'/>
      <arg name='inMajorDeviceClass' declared_type='BluetoothDeviceClassMajor' type='L' type64='I' index='1'/>
      <arg name='inMinorDeviceClass' declared_type='BluetoothDeviceClassMinor' type='L' type64='I' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setUpdateNewDeviceNames:'>
      <arg name='inValue' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='start'>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='stop'>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='updateNewDeviceNames'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='IOBluetoothL2CAPChannel'>
    <method selector='closeChannel'>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='description'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='getDevice'>
      <retval declared_type='IOBluetoothDevice*' type='@'/>
    </method>
    <method selector='getIncomingMTU'>
      <retval declared_type='BluetoothL2CAPMTU' type='S'/>
    </method>
    <method selector='getL2CAPChannelRef'>
      <retval declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    </method>
    <method selector='getLocalChannelID'>
      <retval declared_type='BluetoothL2CAPChannelID' type='S'/>
    </method>
    <method selector='getObjectID'>
      <retval declared_type='IOBluetoothObjectID' type='L' type64='I'/>
    </method>
    <method selector='getOutgoingMTU'>
      <retval declared_type='BluetoothL2CAPMTU' type='S'/>
    </method>
    <method selector='getPSM'>
      <retval declared_type='BluetoothL2CAPPSM' type='S'/>
    </method>
    <method selector='getRemoteChannelID'>
      <retval declared_type='BluetoothL2CAPChannelID' type='S'/>
    </method>
    <method selector='isIncoming'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='registerForChannelCloseNotification:selector:'>
      <arg name='observer' declared_type='id' type='@' index='0'/>
      <arg name='inSelector' sel_of_type='v16@0:4@8@12' declared_type='SEL' type=':' index='1' sel_of_type64='v32@0:8@16@24'/>
      <retval declared_type='IOBluetoothUserNotification*' type='@'/>
    </method>
    <method class_method='true' selector='registerForChannelOpenNotifications:selector:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <arg name='selector' sel_of_type='v16@0:4@8@12' declared_type='SEL' type=':' index='1' sel_of_type64='v32@0:8@16@24'/>
      <retval declared_type='IOBluetoothUserNotification*' type='@'/>
    </method>
    <method class_method='true' selector='registerForChannelOpenNotifications:selector:withPSM:direction:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <arg name='selector' sel_of_type='v16@0:4@8@12' declared_type='SEL' type=':' index='1' sel_of_type64='v32@0:8@16@24'/>
      <arg name='psm' declared_type='BluetoothL2CAPPSM' type='S' index='2'/>
      <arg name='inDirection' declared_type='IOBluetoothUserNotificationChannelDirection' type='i' index='3'/>
      <retval declared_type='IOBluetoothUserNotification*' type='@'/>
    </method>
    <method selector='registerIncomingDataListener:refCon:'>
      <arg name='listener' function_pointer='true' declared_type='IOBluetoothL2CAPChannelIncomingDataListener' type='^?' index='0'>
        <arg declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
        <arg declared_type='void*' type='^v'/>
        <arg declared_type='UInt16' type='S'/>
        <arg declared_type='void*' type='^v'/>
        <retval declared_type='void' type='v'/>
      </arg>
      <arg name='refCon' declared_type='void*' type='^v' index='1'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='requestRemoteMTU:'>
      <arg name='remoteMTU' declared_type='BluetoothL2CAPMTU' type='S' index='0'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='channelDelegate' declared_type='id' type='@' index='0'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method class_method='true' selector='withL2CAPChannelRef:'>
      <arg name='l2capChannelRef' declared_type='IOBluetoothL2CAPChannelRef' type='^{OpaqueIOBluetoothObjectRef=}' index='0'/>
      <retval declared_type='IOBluetoothL2CAPChannel*' type='@'/>
    </method>
    <method class_method='true' selector='withObjectID:'>
      <arg name='objectID' declared_type='IOBluetoothObjectID' type='L' type64='I' index='0'/>
      <retval declared_type='IOBluetoothL2CAPChannel*' type='@'/>
    </method>
    <method selector='write:length:'>
      <arg name='data' declared_type='void*' type='^v' index='0'/>
      <arg name='length' declared_type='UInt16' type='S' index='1'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='writeAsync:length:refcon:'>
      <arg name='data' c_array_length_in_arg='1' declared_type='void*' type='^v' index='0' type_modifier='n'/>
      <arg name='length' declared_type='UInt16' type='S' index='1'/>
      <arg name='refcon' declared_type='void*' type='^v' index='2' type_modifier='n'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='writeSync:length:'>
      <arg name='data' c_array_length_in_arg='1' declared_type='void*' type='^v' index='0' type_modifier='n'/>
      <arg name='length' declared_type='UInt16' type='S' index='1'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
  </class>
  <class name='IOBluetoothOBEXSession'>
    <method selector='closeTransportConnection'>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='getDevice'>
      <retval declared_type='IOBluetoothDevice*' type='@'/>
    </method>
    <method selector='getRFCOMMChannel'>
      <retval declared_type='IOBluetoothRFCOMMChannel*' type='@'/>
    </method>
    <method selector='hasOpenTransportConnection'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='initWithDevice:channelID:'>
      <arg name='inDevice' declared_type='IOBluetoothDevice*' type='@' index='0'/>
      <arg name='inChannelID' declared_type='BluetoothRFCOMMChannelID' type='C' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithIncomingRFCOMMChannel:eventSelector:selectorTarget:refCon:'>
      <arg name='inChannel' declared_type='IOBluetoothRFCOMMChannel*' type='@' index='0'/>
      <arg name='inEventSelector' sel_of_type='v12@0:4@8' declared_type='SEL' type=':' index='1' sel_of_type64='v24@0:8@16'/>
      <arg name='inEventSelectorTarget' declared_type='id' type='@' index='2'/>
      <arg name='inUserRefCon' declared_type='void*' type='^v' index='3' type_modifier='n'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithSDPServiceRecord:'>
      <arg name='inSDPServiceRecord' declared_type='IOBluetoothSDPServiceRecord*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isSessionTargetAMac'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='openTransportConnection:selectorTarget:refCon:'>
      <arg name='inSelector' sel_of_type='v16@0:4@8i12' declared_type='SEL' type=':' index='0' sel_of_type64='v28@0:8@16i24'/>
      <arg name='inTarget' declared_type='id' type='@' index='1'/>
      <arg name='inUserRefCon' declared_type='void*' type='^v' index='2' type_modifier='n'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='restartTransmission'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sendBufferTroughChannel'>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='sendDataToTransport:dataLength:'>
      <arg name='inDataToSend' c_array_length_in_arg='1' declared_type='void*' type='^v' index='0' type_modifier='n'/>
      <arg name='inDataLength' declared_type='size_t' type='L' type64='Q' index='1'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='setOBEXSessionOpenConnectionCallback:refCon:'>
      <arg name='inCallback' function_pointer='true' declared_type='IOBluetoothOBEXSessionOpenConnectionCallback' type='^?' index='0' type_modifier='n'>
        <arg declared_type='OBEXSessionRef' type='^{OpaqueOBEXSessionRef=}'/>
        <arg declared_type='OBEXError' type='i'/>
        <arg declared_type='void*' type='^v'/>
        <retval declared_type='void' type='v'/>
      </arg>
      <arg name='inUserRefCon' declared_type='void*' type='^v' index='1' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setOpenTransportConnectionAsyncSelector:target:refCon:'>
      <arg name='inSelector' sel_of_type='v16@0:4@8i12' declared_type='SEL' type=':' index='0' sel_of_type64='v28@0:8@16i24'/>
      <arg name='inSelectorTarget' declared_type='id' type='@' index='1'/>
      <arg name='inUserRefCon' declared_type='id' type='@' index='2' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='withDevice:channelID:'>
      <arg name='inDevice' declared_type='IOBluetoothDevice*' type='@' index='0'/>
      <arg name='inRFCOMMChannelID' declared_type='BluetoothRFCOMMChannelID' type='C' index='1'/>
      <retval declared_type='IOBluetoothOBEXSession*' type='@'/>
    </method>
    <method class_method='true' selector='withIncomingRFCOMMChannel:eventSelector:selectorTarget:refCon:'>
      <arg name='inChannel' declared_type='IOBluetoothRFCOMMChannel*' type='@' index='0'/>
      <arg name='inEventSelector' sel_of_type='v12@0:4@8' declared_type='SEL' type=':' index='1' sel_of_type64='v24@0:8@16'/>
      <arg name='inEventSelectorTarget' declared_type='id' type='@' index='2'/>
      <arg name='inUserRefCon' declared_type='void*' type='^v' index='3' type_modifier='n'/>
      <retval declared_type='IOBluetoothOBEXSession*' type='@'/>
    </method>
    <method class_method='true' selector='withSDPServiceRecord:'>
      <arg name='inSDPServiceRecord' declared_type='IOBluetoothSDPServiceRecord*' type='@' index='0'/>
      <retval declared_type='IOBluetoothOBEXSession*' type='@'/>
    </method>
  </class>
  <class name='IOBluetoothRFCOMMChannel'>
    <method selector='closeChannel'>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='getChannelID'>
      <retval declared_type='BluetoothRFCOMMChannelID' type='C'/>
    </method>
    <method selector='getDevice'>
      <retval declared_type='IOBluetoothDevice*' type='@'/>
    </method>
    <method selector='getMTU'>
      <retval declared_type='BluetoothRFCOMMMTU' type='S'/>
    </method>
    <method selector='getObjectID'>
      <retval declared_type='IOBluetoothObjectID' type='L' type64='I'/>
    </method>
    <method selector='getRFCOMMChannelRef'>
      <retval declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    </method>
    <method selector='isIncoming'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isOpen'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isTransmissionPaused'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='registerForChannelCloseNotification:selector:'>
      <arg name='observer' declared_type='id' type='@' index='0'/>
      <arg name='inSelector' sel_of_type='v16@0:4@8@12' declared_type='SEL' type=':' index='1' sel_of_type64='v32@0:8@16@24'/>
      <retval declared_type='IOBluetoothUserNotification*' type='@'/>
    </method>
    <method class_method='true' selector='registerForChannelOpenNotifications:selector:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <arg name='selector' sel_of_type='v16@0:4@8@12' declared_type='SEL' type=':' index='1' sel_of_type64='v32@0:8@16@24'/>
      <retval declared_type='IOBluetoothUserNotification*' type='@'/>
    </method>
    <method class_method='true' selector='registerForChannelOpenNotifications:selector:withChannelID:direction:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <arg name='selector' sel_of_type='v16@0:4@8@12' declared_type='SEL' type=':' index='1' sel_of_type64='v32@0:8@16@24'/>
      <arg name='channelID' declared_type='BluetoothRFCOMMChannelID' type='C' index='2'/>
      <arg name='inDirection' declared_type='IOBluetoothUserNotificationChannelDirection' type='i' index='3'/>
      <retval declared_type='IOBluetoothUserNotification*' type='@'/>
    </method>
    <method selector='registerIncomingDataListener:refCon:'>
      <arg name='listener' function_pointer='true' declared_type='IOBluetoothRFCOMMChannelIncomingDataListener' type='^?' index='0' type_modifier='n'>
        <arg declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
        <arg declared_type='void*' type='^v'/>
        <arg declared_type='UInt16' type='S'/>
        <arg declared_type='void*' type='^v'/>
        <retval declared_type='void' type='v'/>
      </arg>
      <arg name='refCon' declared_type='void*' type='^v' index='1' type_modifier='n'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='registerIncomingEventListener:refCon:'>
      <arg name='listener' function_pointer='true' declared_type='IOBluetoothRFCOMMChannelIncomingEventListener' type='^?' index='0' type_modifier='n'>
        <arg declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
        <arg declared_type='void*' type='^v'/>
        <arg declared_type='IOBluetoothRFCOMMChannelEvent*' type='^{IOBluetoothRFCOMMChannelEvent=i(?={IOBluetoothRFCOMMDataBlock=^vI}i^{OpaqueIOBluetoothObjectRef}^v[32C]{IOBluetoothRFCOMMDataBlock=^vI})i}' type64='^{IOBluetoothRFCOMMChannelEvent=i(?={IOBluetoothRFCOMMDataBlock=^vQ}i^{OpaqueIOBluetoothObjectRef}^v[32C]{IOBluetoothRFCOMMDataBlock=^vQ})i}'/>
        <retval declared_type='void' type='v'/>
      </arg>
      <arg name='refCon' declared_type='void*' type='^v' index='1' type_modifier='n'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='sendRemoteLineStatus:'>
      <arg name='lineStatus' declared_type='BluetoothRFCOMMLineStatus' type='i' index='0'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='delegate' declared_type='id' type='@' index='0'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='setSerialParameters:dataBits:parity:stopBits:'>
      <arg name='speed' declared_type='UInt32' type='L' type64='I' index='0'/>
      <arg name='nBits' declared_type='UInt8' type='C' index='1'/>
      <arg name='parity' declared_type='BluetoothRFCOMMParityType' type='i' index='2'/>
      <arg name='bitStop' declared_type='UInt8' type='C' index='3'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method class_method='true' selector='withObjectID:'>
      <arg name='objectID' declared_type='IOBluetoothObjectID' type='L' type64='I' index='0'/>
      <retval declared_type='IOBluetoothRFCOMMChannel*' type='@'/>
    </method>
    <method class_method='true' selector='withRFCOMMChannelRef:'>
      <arg name='rfcommChannelRef' declared_type='IOBluetoothRFCOMMChannelRef' type='^{OpaqueIOBluetoothObjectRef=}' index='0'/>
      <retval declared_type='IOBluetoothRFCOMMChannel*' type='@'/>
    </method>
    <method selector='write:length:sleep:'>
      <arg name='data' c_array_length_in_arg='1' declared_type='void*' type='^v' index='0' type_modifier='n'/>
      <arg name='length' declared_type='UInt16' type='S' index='1'/>
      <arg name='sleep' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='writeAsync:length:refcon:'>
      <arg name='data' c_array_length_in_arg='1' declared_type='void*' type='^v' index='0' type_modifier='n'/>
      <arg name='length' declared_type='UInt16' type='S' index='1'/>
      <arg name='refcon' declared_type='void*' type='^v' index='2' type_modifier='n'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='writeSimple:length:sleep:bytesSent:'>
      <arg name='data' c_array_length_in_arg='1' declared_type='void*' type='^v' index='0' type_modifier='n'/>
      <arg name='length' declared_type='UInt16' type='S' index='1'/>
      <arg name='sleep' declared_type='BOOL' type='B' index='2'/>
      <arg name='numBytesSent' declared_type='UInt32*' type='^I' index='3' type_modifier='o'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='writeSync:length:'>
      <arg name='data' c_array_length_in_arg='1' declared_type='void*' type='^v' index='0' type_modifier='n'/>
      <arg name='length' declared_type='UInt16' type='S' index='1'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
  </class>
  <class name='IOBluetoothSDPDataElement'>
    <method selector='containsDataElement:'>
      <arg name='dataElement' declared_type='IOBluetoothSDPDataElement*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='containsValue:'>
      <arg name='cmpValue' declared_type='NSObject*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='encodeWithCoder:'>
      <arg name='coder' declared_type='NSCoder*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='getArrayValue'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='getDataValue'>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='getNumberValue'>
      <retval declared_type='NSNumber*' type='@'/>
    </method>
    <method selector='getSDPDataElementRef'>
      <retval declared_type='IOBluetoothSDPDataElementRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    </method>
    <method selector='getSize'>
      <retval declared_type='UInt32' type='L' type64='I'/>
    </method>
    <method selector='getSizeDescriptor'>
      <retval declared_type='BluetoothSDPDataElementSizeDescriptor' type='C'/>
    </method>
    <method selector='getStringValue'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='getTypeDescriptor'>
      <retval declared_type='BluetoothSDPDataElementTypeDescriptor' type='C'/>
    </method>
    <method selector='getUUIDValue'>
      <retval declared_type='IOBluetoothSDPUUID*' type='@'/>
    </method>
    <method selector='getValue'>
      <retval declared_type='NSObject*' type='@'/>
    </method>
    <method selector='initWithCoder:'>
      <arg name='coder' declared_type='NSCoder*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithElementValue:'>
      <arg name='element' declared_type='NSObject*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithType:sizeDescriptor:size:value:'>
      <arg name='newType' declared_type='BluetoothSDPDataElementTypeDescriptor' type='C' index='0'/>
      <arg name='newSizeDescriptor' declared_type='BluetoothSDPDataElementSizeDescriptor' type='C' index='1'/>
      <arg name='newSize' declared_type='UInt32' type='L' type64='I' index='2'/>
      <arg name='newValue' declared_type='NSObject*' type='@' index='3'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isEqual:'>
      <arg name='cmpObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method class_method='true' selector='withElementValue:'>
      <arg name='element' declared_type='NSObject*' type='@' index='0'/>
      <retval declared_type='IOBluetoothSDPDataElement*' type='@'/>
    </method>
    <method class_method='true' selector='withSDPDataElementRef:'>
      <arg name='sdpDataElementRef' declared_type='IOBluetoothSDPDataElementRef' type='^{OpaqueIOBluetoothObjectRef=}' index='0'/>
      <retval declared_type='IOBluetoothSDPDataElement*' type='@'/>
    </method>
    <method class_method='true' selector='withType:sizeDescriptor:size:value:'>
      <arg name='type' declared_type='BluetoothSDPDataElementTypeDescriptor' type='C' index='0'/>
      <arg name='newSizeDescriptor' declared_type='BluetoothSDPDataElementSizeDescriptor' type='C' index='1'/>
      <arg name='newSize' declared_type='UInt32' type='L' type64='I' index='2'/>
      <arg name='newValue' declared_type='NSObject*' type='@' index='3'/>
      <retval declared_type='IOBluetoothSDPDataElement*' type='@'/>
    </method>
  </class>
  <class name='IOBluetoothSDPServiceAttribute'>
    <method selector='encodeWithCoder:'>
      <arg name='coder' declared_type='NSCoder*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='getAttributeID'>
      <retval declared_type='BluetoothSDPServiceAttributeID' type='S'/>
    </method>
    <method selector='getDataElement'>
      <retval declared_type='IOBluetoothSDPDataElement*' type='@'/>
    </method>
    <method selector='getIDDataElement'>
      <retval declared_type='IOBluetoothSDPDataElement*' type='@'/>
    </method>
    <method selector='initWithCoder:'>
      <arg name='coder' declared_type='NSCoder*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithID:attributeElement:'>
      <arg name='newAttributeID' declared_type='BluetoothSDPServiceAttributeID' type='S' index='0'/>
      <arg name='attributeElement' declared_type='IOBluetoothSDPDataElement*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithID:attributeElementValue:'>
      <arg name='newAttributeID' declared_type='BluetoothSDPServiceAttributeID' type='S' index='0'/>
      <arg name='attributeElementValue' declared_type='NSObject*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method class_method='true' selector='withID:attributeElement:'>
      <arg name='newAttributeID' declared_type='BluetoothSDPServiceAttributeID' type='S' index='0'/>
      <arg name='attributeElement' declared_type='IOBluetoothSDPDataElement*' type='@' index='1'/>
      <retval declared_type='IOBluetoothSDPServiceAttribute*' type='@'/>
    </method>
    <method class_method='true' selector='withID:attributeElementValue:'>
      <arg name='newAttributeID' declared_type='BluetoothSDPServiceAttributeID' type='S' index='0'/>
      <arg name='attributeElementValue' declared_type='NSObject*' type='@' index='1'/>
      <retval declared_type='IOBluetoothSDPServiceAttribute*' type='@'/>
    </method>
  </class>
  <class name='IOBluetoothSDPServiceRecord'>
    <method selector='encodeWithCoder:'>
      <arg name='coder' declared_type='NSCoder*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='getAttributeDataElement:'>
      <arg name='attributeID' declared_type='BluetoothSDPServiceAttributeID' type='S' index='0'/>
      <retval declared_type='IOBluetoothSDPDataElement*' type='@'/>
    </method>
    <method selector='getAttributes'>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='getDevice'>
      <retval declared_type='IOBluetoothDevice*' type='@'/>
    </method>
    <method selector='getL2CAPPSM:'>
      <arg name='outPSM' declared_type='BluetoothL2CAPPSM*' type='^S' index='0' type_modifier='o'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='getRFCOMMChannelID:'>
      <arg name='rfcommChannelID' declared_type='BluetoothRFCOMMChannelID*' type='*' index='0' type_modifier='o'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='getSDPServiceRecordRef'>
      <retval declared_type='IOBluetoothSDPServiceRecordRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    </method>
    <method selector='getServiceName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='getServiceRecordHandle:'>
      <arg name='outServiceRecordHandle' declared_type='BluetoothSDPServiceRecordHandle*' type='^I' index='0' type_modifier='o'/>
      <retval declared_type='IOReturn' type='i'/>
    </method>
    <method selector='hasServiceFromArray:'>
      <arg name='array' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='initWithCoder:'>
      <arg name='coder' declared_type='NSCoder*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='matchesSearchArray:'>
      <arg name='searchArray' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='matchesUUIDArray:'>
      <arg name='uuidArray' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method class_method='true' selector='withSDPServiceRecordRef:'>
      <arg name='sdpServiceRecordRef' declared_type='IOBluetoothSDPServiceRecordRef' type='^{OpaqueIOBluetoothObjectRef=}' index='0'/>
      <retval declared_type='IOBluetoothSDPServiceRecord*' type='@'/>
    </method>
  </class>
  <class name='IOBluetoothSDPUUID'>
    <method selector='bytes'>
      <retval declared_type='void*' type='^v' const='true'/>
    </method>
    <method selector='classForArchiver'>
      <retval declared_type='Class' type='#'/>
    </method>
    <method selector='classForCoder'>
      <retval declared_type='Class' type='#'/>
    </method>
    <method selector='classForPortCoder'>
      <retval declared_type='Class' type='#'/>
    </method>
    <method selector='encodeWithCoder:'>
      <arg name='coder' declared_type='NSCoder*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='getSDPUUIDRef'>
      <retval declared_type='IOBluetoothSDPUUIDRef' type='^{OpaqueIOBluetoothObjectRef=}'/>
    </method>
    <method selector='getUUIDWithLength:'>
      <arg name='newLength' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='IOBluetoothSDPUUID*' type='@'/>
    </method>
    <method selector='initWithBytes:length:'>
      <arg name='bytes' declared_type='void*' type='^v' const='true' index='0'/>
      <arg name='length' declared_type='unsigned int' type='I' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithCoder:'>
      <arg name='coder' declared_type='NSCoder*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithData:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithUUID16:'>
      <arg name='uuid16' declared_type='BluetoothSDPUUID16' type='S' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithUUID32:'>
      <arg name='uuid32' declared_type='BluetoothSDPUUID32' type='L' type64='I' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isEqualToData:'>
      <arg name='otherData' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isEqualToUUID:'>
      <arg name='otherUUID' declared_type='IOBluetoothSDPUUID*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='length'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method class_method='true' selector='uuid16:'>
      <arg name='uuid16' declared_type='BluetoothSDPUUID16' type='S' index='0'/>
      <retval declared_type='IOBluetoothSDPUUID*' type='@'/>
    </method>
    <method class_method='true' selector='uuid32:'>
      <arg name='uuid32' declared_type='BluetoothSDPUUID32' type='L' type64='I' index='0'/>
      <retval declared_type='IOBluetoothSDPUUID*' type='@'/>
    </method>
    <method class_method='true' selector='uuidWithBytes:length:'>
      <arg name='bytes' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' index='0' type_modifier='n'/>
      <arg name='length' declared_type='unsigned int' type='I' index='1'/>
      <retval declared_type='IOBluetoothSDPUUID*' type='@'/>
    </method>
    <method class_method='true' selector='uuidWithData:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='IOBluetoothSDPUUID*' type='@'/>
    </method>
    <method class_method='true' selector='withSDPUUIDRef:'>
      <arg name='sdpUUIDRef' declared_type='IOBluetoothSDPUUIDRef' type='^{OpaqueIOBluetoothObjectRef=}' index='0'/>
      <retval declared_type='IOBluetoothSDPUUID*' type='@'/>
    </method>
  </class>
  <class name='IOBluetoothUserNotification'>
    <method selector='unregister'>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSMutableDictionary'>
    <method selector='addApplicationParameterHeader:length:'>
      <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' index='0' type_modifier='n'/>
      <arg name='inHeaderDataLength' declared_type='uint32_t' type='I' index='1'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='addAuthorizationChallengeHeader:length:'>
      <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' index='0' type_modifier='n'/>
      <arg name='inHeaderDataLength' declared_type='uint32_t' type='I' index='1'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='addAuthorizationResponseHeader:length:'>
      <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' index='0' type_modifier='n'/>
      <arg name='inHeaderDataLength' declared_type='uint32_t' type='I' index='1'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='addBodyHeader:length:endOfBody:'>
      <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' index='0' type_modifier='n'/>
      <arg name='inHeaderDataLength' declared_type='uint32_t' type='I' index='1'/>
      <arg name='isEndOfBody' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='addByteSequenceHeader:length:'>
      <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' index='0' type_modifier='n'/>
      <arg name='inHeaderDataLength' declared_type='uint32_t' type='I' index='1'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='addConnectionIDHeader:length:'>
      <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' index='0' type_modifier='n'/>
      <arg name='inHeaderDataLength' declared_type='uint32_t' type='I' index='1'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='addCountHeader:'>
      <arg name='inCount' declared_type='uint32_t' type='I' index='0'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='addDescriptionHeader:'>
      <arg name='inDescriptionString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='addHTTPHeader:length:'>
      <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' index='0' type_modifier='n'/>
      <arg name='inHeaderDataLength' declared_type='uint32_t' type='I' index='1'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='addImageDescriptorHeader:length:'>
      <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' index='0' type_modifier='n'/>
      <arg name='inHeaderDataLength' declared_type='uint32_t' type='I' index='1'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='addImageHandleHeader:'>
      <arg name='type' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='addLengthHeader:'>
      <arg name='length' declared_type='uint32_t' type='I' index='0'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='addNameHeader:'>
      <arg name='inNameString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='addObjectClassHeader:length:'>
      <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' index='0' type_modifier='n'/>
      <arg name='inHeaderDataLength' declared_type='uint32_t' type='I' index='1'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='addTargetHeader:length:'>
      <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' index='0' type_modifier='n'/>
      <arg name='inHeaderDataLength' declared_type='uint32_t' type='I' index='1'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='addTime4ByteHeader:'>
      <arg name='time4Byte' declared_type='uint32_t' type='I' index='0'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='addTimeISOHeader:length:'>
      <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' index='0' type_modifier='n'/>
      <arg name='inHeaderDataLength' declared_type='uint32_t' type='I' index='1'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='addTypeHeader:'>
      <arg name='type' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='addUserDefinedHeader:length:'>
      <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' index='0' type_modifier='n'/>
      <arg name='inHeaderDataLength' declared_type='uint32_t' type='I' index='1'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='addWhoHeader:length:'>
      <arg name='inHeaderData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' index='0' type_modifier='n'/>
      <arg name='inHeaderDataLength' declared_type='uint32_t' type='I' index='1'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method class_method='true' selector='dictionaryWithOBEXHeadersData:'>
      <arg name='inHeadersData' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='NSMutableDictionary*' type='@'/>
    </method>
    <method class_method='true' selector='dictionaryWithOBEXHeadersData:headersDataSize:'>
      <arg name='inHeadersData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' index='0' type_modifier='n'/>
      <arg name='inDataSize' declared_type='size_t' type='L' type64='Q' index='1'/>
      <retval declared_type='NSMutableDictionary*' type='@'/>
    </method>
    <method selector='getHeaderBytes'>
      <retval declared_type='NSMutableData*' type='@'/>
    </method>
    <method class_method='true' selector='withOBEXHeadersData:headersDataSize:'>
      <arg name='inHeadersData' c_array_length_in_arg='1' declared_type='void*' type='^v' const='true' index='0' type_modifier='n'/>
      <arg name='inDataSize' declared_type='size_t' type='L' type64='Q' index='1'/>
      <retval declared_type='NSMutableDictionary*' type='@'/>
    </method>
  </class>
  <class name='NSObject'>
    <method selector='connectionComplete:status:'>
      <arg name='device' declared_type='IOBluetoothDevice*' type='@' index='0'/>
      <arg name='status' declared_type='IOReturn' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='deviceInquiryComplete:error:aborted:'>
      <arg name='sender' declared_type='IOBluetoothDeviceInquiry*' type='@' index='0'/>
      <arg name='error' declared_type='IOReturn' type='i' index='1'/>
      <arg name='aborted' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='deviceInquiryDeviceFound:device:'>
      <arg name='sender' declared_type='IOBluetoothDeviceInquiry*' type='@' index='0'/>
      <arg name='device' declared_type='IOBluetoothDevice*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='deviceInquiryDeviceNameUpdated:device:devicesRemaining:'>
      <arg name='sender' declared_type='IOBluetoothDeviceInquiry*' type='@' index='0'/>
      <arg name='device' declared_type='IOBluetoothDevice*' type='@' index='1'/>
      <arg name='devicesRemaining' declared_type='int' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='deviceInquiryStarted:'>
      <arg name='sender' declared_type='IOBluetoothDeviceInquiry*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='deviceInquiryUpdatingDeviceNamesStarted:devicesRemaining:'>
      <arg name='sender' declared_type='IOBluetoothDeviceInquiry*' type='@' index='0'/>
      <arg name='devicesRemaining' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='fileTransferServicesAbortComplete:error:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inError' declared_type='OBEXError' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='fileTransferServicesConnectionComplete:error:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inError' declared_type='OBEXError' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='fileTransferServicesCopyRemoteFileComplete:error:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inError' declared_type='OBEXError' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='fileTransferServicesCopyRemoteFileProgress:transferProgress:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inProgressDescription' declared_type='NSDictionary*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='fileTransferServicesCreateFolderComplete:error:folder:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inError' declared_type='OBEXError' type='i' index='1'/>
      <arg name='inFolderName' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='fileTransferServicesDisconnectionComplete:error:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inError' declared_type='OBEXError' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='fileTransferServicesPathChangeComplete:error:finalPath:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inError' declared_type='OBEXError' type='i' index='1'/>
      <arg name='inPath' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='fileTransferServicesRemoveItemComplete:error:removedItem:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inError' declared_type='OBEXError' type='i' index='1'/>
      <arg name='inItemName' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='fileTransferServicesRetrieveFolderListingComplete:error:listing:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inError' declared_type='OBEXError' type='i' index='1'/>
      <arg name='inListing' declared_type='NSArray*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='fileTransferServicesSendFileComplete:error:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inError' declared_type='OBEXError' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='fileTransferServicesSendFileProgress:transferProgress:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inProgressDescription' declared_type='NSDictionary*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='l2capChannelClosed:'>
      <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannel*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='l2capChannelData:data:length:'>
      <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannel*' type='@' index='0'/>
      <arg name='dataPointer' c_array_length_in_arg='2' declared_type='void*' type='^v' index='1' type_modifier='o'/>
      <arg name='dataLength' declared_type='size_t' type='L' type64='Q' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='l2capChannelOpenComplete:status:'>
      <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannel*' type='@' index='0'/>
      <arg name='error' declared_type='IOReturn' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='l2capChannelQueueSpaceAvailable:'>
      <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannel*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='l2capChannelReconfigured:'>
      <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannel*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='l2capChannelWriteComplete:refcon:status:'>
      <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannel*' type='@' index='0'/>
      <arg name='refcon' declared_type='void*' type='^v' index='1' type_modifier='n'/>
      <arg name='error' declared_type='IOReturn' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='remoteNameRequestComplete:status:'>
      <arg name='device' declared_type='IOBluetoothDevice*' type='@' index='0'/>
      <arg name='status' declared_type='IOReturn' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rfcommChannelClosed:'>
      <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannel*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rfcommChannelControlSignalsChanged:'>
      <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannel*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rfcommChannelData:data:length:'>
      <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannel*' type='@' index='0'/>
      <arg name='dataPointer' c_array_length_in_arg='2' declared_type='void*' type='^v' index='1' type_modifier='o'/>
      <arg name='dataLength' declared_type='size_t' type='L' type64='Q' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rfcommChannelFlowControlChanged:'>
      <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannel*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rfcommChannelOpenComplete:status:'>
      <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannel*' type='@' index='0'/>
      <arg name='error' declared_type='IOReturn' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rfcommChannelQueueSpaceAvailable:'>
      <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannel*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rfcommChannelWriteComplete:refcon:status:'>
      <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannel*' type='@' index='0'/>
      <arg name='refcon' declared_type='void*' type='^v' index='1' type_modifier='o'/>
      <arg name='error' declared_type='IOReturn' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sdpQueryComplete:status:'>
      <arg name='device' declared_type='IOBluetoothDevice*' type='@' index='0'/>
      <arg name='status' declared_type='IOReturn' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='OBEXFileTransferServices'>
    <method selector='abort'>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='changeCurrentFolderBackward'>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='changeCurrentFolderForwardToPath:'>
      <arg name='inDirName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='changeCurrentFolderToRoot'>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='connectToFTPService'>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='connectToObjectPushService'>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='copyRemoteFile:toLocalPath:'>
      <arg name='inRemoteFileName' declared_type='NSString*' type='@' index='0'/>
      <arg name='inLocalPathAndName' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='createFolder:'>
      <arg name='inDirName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='currentPath'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='disconnect'>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='getDefaultVCard:'>
      <arg name='inLocalPathAndName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='initWithOBEXSession:'>
      <arg name='inOBEXSession' declared_type='IOBluetoothOBEXSession*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isBusy'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isConnected'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='removeItem:'>
      <arg name='inItemName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='retrieveFolderListing'>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='sendData:type:name:'>
      <arg name='inData' declared_type='NSData*' type='@' index='0'/>
      <arg name='inType' declared_type='NSString*' type='@' index='1'/>
      <arg name='inName' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='sendFile:'>
      <arg name='inLocalPathAndName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='inDelegate' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='withOBEXSession:'>
      <arg name='inOBEXSession' declared_type='IOBluetoothOBEXSession*' type='@' index='0'/>
      <retval declared_type='OBEXFileTransferServices*' type='@'/>
    </method>
  </class>
  <class name='OBEXSession'>
    <method selector='OBEXAbort:optionalHeadersLength:eventSelector:selectorTarget:refCon:'>
      <arg name='inOptionalHeaders' c_array_length_in_arg='1' declared_type='void*' type='^v' index='0' type_modifier='n'/>
      <arg name='inOptionalHeadersLength' declared_type='size_t' type='L' type64='Q' index='1'/>
      <arg name='inSelector' sel_of_type='v12@0:4r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}8' declared_type='SEL' type=':' index='2' sel_of_type64='v24@0:8r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}16'/>
      <arg name='inTarget' declared_type='id' type='@' index='3'/>
      <arg name='inUserRefCon' declared_type='void*' type='^v' index='4' type_modifier='n'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='OBEXAbortResponse:optionalHeaders:optionalHeadersLength:eventSelector:selectorTarget:refCon:'>
      <arg name='inResponseOpCode' declared_type='OBEXOpCode' type='C' index='0'/>
      <arg name='inOptionalHeaders' c_array_length_in_arg='2' declared_type='void*' type='^v' index='1' type_modifier='n'/>
      <arg name='inOptionalHeadersLength' declared_type='size_t' type='L' type64='Q' index='2'/>
      <arg name='inSelector' sel_of_type='v12@0:4r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}8' declared_type='SEL' type=':' index='3' sel_of_type64='v24@0:8r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}16'/>
      <arg name='inTarget' declared_type='id' type='@' index='4'/>
      <arg name='inUserRefCon' declared_type='void*' type='^v' index='5' type_modifier='n'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='OBEXConnect:maxPacketLength:optionalHeaders:optionalHeadersLength:eventSelector:selectorTarget:refCon:'>
      <arg name='inFlags' declared_type='OBEXFlags' type='C' index='0'/>
      <arg name='inMaxPacketLength' declared_type='OBEXMaxPacketLength' type='S' index='1'/>
      <arg name='inOptionalHeaders' c_array_length_in_arg='3' declared_type='void*' type='^v' index='2' type_modifier='n'/>
      <arg name='inOptionalHeadersLength' declared_type='size_t' type='L' type64='Q' index='3'/>
      <arg name='inSelector' sel_of_type='v12@0:4r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}8' declared_type='SEL' type=':' index='4' sel_of_type64='v24@0:8r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}16'/>
      <arg name='inTarget' declared_type='id' type='@' index='5'/>
      <arg name='inUserRefCon' declared_type='void*' type='^v' index='6' type_modifier='n'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='OBEXConnectResponse:flags:maxPacketLength:optionalHeaders:optionalHeadersLength:eventSelector:selectorTarget:refCon:'>
      <arg name='inResponseOpCode' declared_type='OBEXOpCode' type='C' index='0'/>
      <arg name='inFlags' declared_type='OBEXFlags' type='C' index='1'/>
      <arg name='inMaxPacketLength' declared_type='OBEXMaxPacketLength' type='S' index='2'/>
      <arg name='inOptionalHeaders' c_array_length_in_arg='4' declared_type='void*' type='^v' index='3' type_modifier='n'/>
      <arg name='inOptionalHeadersLength' declared_type='size_t' type='L' type64='Q' index='4'/>
      <arg name='inSelector' sel_of_type='v12@0:4r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}8' declared_type='SEL' type=':' index='5' sel_of_type64='v24@0:8r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}16'/>
      <arg name='inTarget' declared_type='id' type='@' index='6'/>
      <arg name='inUserRefCon' declared_type='void*' type='^v' index='7' type_modifier='n'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='OBEXDisconnect:optionalHeadersLength:eventSelector:selectorTarget:refCon:'>
      <arg name='inOptionalHeaders' c_array_length_in_arg='1' declared_type='void*' type='^v' index='0' type_modifier='n'/>
      <arg name='inOptionalHeadersLength' declared_type='size_t' type='L' type64='Q' index='1'/>
      <arg name='inSelector' sel_of_type='v12@0:4r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}8' declared_type='SEL' type=':' index='2' sel_of_type64='v24@0:8r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}16'/>
      <arg name='inTarget' declared_type='id' type='@' index='3'/>
      <arg name='inUserRefCon' declared_type='void*' type='^v' index='4' type_modifier='n'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='OBEXDisconnectResponse:optionalHeaders:optionalHeadersLength:eventSelector:selectorTarget:refCon:'>
      <arg name='inResponseOpCode' declared_type='OBEXOpCode' type='C' index='0'/>
      <arg name='inOptionalHeaders' c_array_length_in_arg='2' declared_type='void*' type='^v' index='1' type_modifier='n'/>
      <arg name='inOptionalHeadersLength' declared_type='size_t' type='L' type64='Q' index='2'/>
      <arg name='inSelector' sel_of_type='v12@0:4r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}8' declared_type='SEL' type=':' index='3' sel_of_type64='v24@0:8r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}16'/>
      <arg name='inTarget' declared_type='id' type='@' index='4'/>
      <arg name='inUserRefCon' declared_type='void*' type='^v' index='5' type_modifier='n'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='OBEXGet:headers:headersLength:eventSelector:selectorTarget:refCon:'>
      <arg name='isFinalChunk' declared_type='Boolean' type='B' index='0'/>
      <arg name='inHeaders' c_array_length_in_arg='2' declared_type='void*' type='^v' index='1' type_modifier='n'/>
      <arg name='inHeadersLength' declared_type='size_t' type='L' type64='Q' index='2'/>
      <arg name='inSelector' sel_of_type='v12@0:4r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}8' declared_type='SEL' type=':' index='3' sel_of_type64='v24@0:8r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}16'/>
      <arg name='inTarget' declared_type='id' type='@' index='4'/>
      <arg name='inUserRefCon' declared_type='void*' type='^v' index='5' type_modifier='n'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='OBEXGetResponse:optionalHeaders:optionalHeadersLength:eventSelector:selectorTarget:refCon:'>
      <arg name='inResponseOpCode' declared_type='OBEXOpCode' type='C' index='0'/>
      <arg name='inOptionalHeaders' c_array_length_in_arg='2' declared_type='void*' type='^v' index='1' type_modifier='n'/>
      <arg name='inOptionalHeadersLength' declared_type='size_t' type='L' type64='Q' index='2'/>
      <arg name='inSelector' sel_of_type='v12@0:4r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}8' declared_type='SEL' type=':' index='3' sel_of_type64='v24@0:8r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}16'/>
      <arg name='inTarget' declared_type='id' type='@' index='4'/>
      <arg name='inUserRefCon' declared_type='void*' type='^v' index='5' type_modifier='n'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='OBEXPut:headersData:headersDataLength:bodyData:bodyDataLength:eventSelector:selectorTarget:refCon:'>
      <arg name='isFinalChunk' declared_type='Boolean' type='B' index='0'/>
      <arg name='inHeadersData' c_array_length_in_arg='2' declared_type='void*' type='^v' index='1' type_modifier='n'/>
      <arg name='inHeadersDataLength' declared_type='size_t' type='L' type64='Q' index='2'/>
      <arg name='inBodyData' c_array_length_in_arg='4' declared_type='void*' type='^v' index='3' type_modifier='n'/>
      <arg name='inBodyDataLength' declared_type='size_t' type='L' type64='Q' index='4'/>
      <arg name='inSelector' sel_of_type='v12@0:4r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}8' declared_type='SEL' type=':' index='5' sel_of_type64='v24@0:8r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}16'/>
      <arg name='inTarget' declared_type='id' type='@' index='6'/>
      <arg name='inUserRefCon' declared_type='void*' type='^v' index='7' type_modifier='n'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='OBEXPutResponse:optionalHeaders:optionalHeadersLength:eventSelector:selectorTarget:refCon:'>
      <arg name='inResponseOpCode' declared_type='OBEXOpCode' type='C' index='0'/>
      <arg name='inOptionalHeaders' c_array_length_in_arg='2' declared_type='void*' type='^v' index='1' type_modifier='n'/>
      <arg name='inOptionalHeadersLength' declared_type='size_t' type='L' type64='Q' index='2'/>
      <arg name='inSelector' sel_of_type='v12@0:4r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}8' declared_type='SEL' type=':' index='3' sel_of_type64='v24@0:8r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}16'/>
      <arg name='inTarget' declared_type='id' type='@' index='4'/>
      <arg name='inUserRefCon' declared_type='void*' type='^v' index='5' type_modifier='n'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='OBEXSetPath:constants:optionalHeaders:optionalHeadersLength:eventSelector:selectorTarget:refCon:'>
      <arg name='inFlags' declared_type='OBEXFlags' type='C' index='0'/>
      <arg name='inConstants' declared_type='OBEXConstants' type='C' index='1'/>
      <arg name='inOptionalHeaders' c_array_length_in_arg='3' declared_type='void*' type='^v' index='2' type_modifier='n'/>
      <arg name='inOptionalHeadersLength' declared_type='size_t' type='L' type64='Q' index='3'/>
      <arg name='inSelector' sel_of_type='v12@0:4r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}8' declared_type='SEL' type=':' index='4' sel_of_type64='v24@0:8r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}16'/>
      <arg name='inTarget' declared_type='id' type='@' index='5'/>
      <arg name='inUserRefCon' declared_type='void*' type='^v' index='6' type_modifier='n'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='OBEXSetPathResponse:optionalHeaders:optionalHeadersLength:eventSelector:selectorTarget:refCon:'>
      <arg name='inResponseOpCode' declared_type='OBEXOpCode' type='C' index='0'/>
      <arg name='inOptionalHeaders' c_array_length_in_arg='2' declared_type='void*' type='^v' index='1' type_modifier='n'/>
      <arg name='inOptionalHeadersLength' declared_type='size_t' type='L' type64='Q' index='2'/>
      <arg name='inSelector' sel_of_type='v12@0:4r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}8' declared_type='SEL' type=':' index='3' sel_of_type64='v24@0:8r^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}16'/>
      <arg name='inTarget' declared_type='id' type='@' index='4'/>
      <arg name='inUserRefCon' declared_type='void*' type='^v' index='5' type_modifier='n'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='clientHandleIncomingData:'>
      <arg name='event' declared_type='OBEXTransportEvent*' type='^{OBEXTransportEvent=Ii^vI}' type64='^{OBEXTransportEvent=Ii^vQ}' index='0' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='closeTransportConnection'>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='getAvailableCommandPayloadLength:'>
      <arg name='inOpCode' declared_type='OBEXOpCode' type='C' index='0'/>
      <retval declared_type='OBEXMaxPacketLength' type='S'/>
    </method>
    <method selector='getAvailableCommandResponsePayloadLength:'>
      <arg name='inOpCode' declared_type='OBEXOpCode' type='C' index='0'/>
      <retval declared_type='OBEXMaxPacketLength' type='S'/>
    </method>
    <method selector='getMaxPacketLength'>
      <retval declared_type='OBEXMaxPacketLength' type='S'/>
    </method>
    <method selector='hasOpenOBEXConnection'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='hasOpenTransportConnection'>
      <retval declared_type='Boolean' type='B'/>
    </method>
    <method selector='openTransportConnection:selectorTarget:refCon:'>
      <arg name='inSelector' sel_of_type='v16@0:4@8i12' declared_type='SEL' type=':' index='0' sel_of_type64='v28@0:8@16i24'/>
      <arg name='inTarget' declared_type='id' type='@' index='1'/>
      <arg name='inUserRefCon' declared_type='void*' type='^v' index='2' type_modifier='n'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='sendDataToTransport:dataLength:'>
      <arg name='inDataToSend' c_array_length_in_arg='1' declared_type='void*' type='^v' index='0' type_modifier='n'/>
      <arg name='inDataLength' declared_type='size_t' type='L' type64='Q' index='1'/>
      <retval declared_type='OBEXError' type='i'/>
    </method>
    <method selector='serverHandleIncomingData:'>
      <arg name='event' declared_type='OBEXTransportEvent*' type='^{OBEXTransportEvent=Ii^vI}' type64='^{OBEXTransportEvent=Ii^vQ}' index='0' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEventCallback:'>
      <arg name='inEventCallback' function_pointer='true' declared_type='OBEXSessionEventCallback' type='^?' index='0'>
        <arg declared_type='OBEXSessionEvent*' type='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vISCC}{OBEXDisconnectCommandResponseData=C^vI}{OBEXPutCommandResponseData=C^vI}{OBEXGetCommandResponseData=C^vI}{OBEXSetPathCommandResponseData=C^vICC}{OBEXAbortCommandResponseData=C^vI}{OBEXConnectCommandData=^vISCC}{OBEXDisconnectCommandData=^vI}{OBEXPutCommandData=^vII}{OBEXGetCommandData=^vI}{OBEXSetPathCommandData=^vICC}{OBEXAbortCommandData=^vI}{OBEXErrorData=i^vI})}' type64='^{OBEXSessionEvent=I^{OpaqueOBEXSessionRef}^vB^v^v(?={OBEXConnectCommandResponseData=C^vQSCC}{OBEXDisconnectCommandResponseData=C^vQ}{OBEXPutCommandResponseData=C^vQ}{OBEXGetCommandResponseData=C^vQ}{OBEXSetPathCommandResponseData=C^vQCC}{OBEXAbortCommandResponseData=C^vQ}{OBEXConnectCommandData=^vQSCC}{OBEXDisconnectCommandData=^vQ}{OBEXPutCommandData=^vQQ}{OBEXGetCommandData=^vQ}{OBEXSetPathCommandData=^vQCC}{OBEXAbortCommandData=^vQ}{OBEXErrorData=i^vQ})}' const='true'/>
        <retval declared_type='void' type='v'/>
      </arg>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEventRefCon:'>
      <arg name='inRefCon' declared_type='void*' type='^v' index='0' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEventSelector:target:refCon:'>
      <arg name='inEventSelector' sel_of_type='v12@0:4@8' declared_type='SEL' type=':' index='0' sel_of_type64='v24@0:8@16'/>
      <arg name='inEventSelectorTarget' declared_type='id' type='@' index='1'/>
      <arg name='inUserRefCon' declared_type='id' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <informal_protocol name='IOBluetoothDeviceAsyncCallbacks'>
    <method type='v16@0:4@8i12' type64='v28@0:8@16i24' selector='connectionComplete:status:'>
      <arg name='device' declared_type='IOBluetoothDevice*' type='@' index='0'/>
      <arg name='status' declared_type='IOReturn' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8i12' type64='v28@0:8@16i24' selector='remoteNameRequestComplete:status:'>
      <arg name='device' declared_type='IOBluetoothDevice*' type='@' index='0'/>
      <arg name='status' declared_type='IOReturn' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8i12' type64='v28@0:8@16i24' selector='sdpQueryComplete:status:'>
      <arg name='device' declared_type='IOBluetoothDevice*' type='@' index='0'/>
      <arg name='status' declared_type='IOReturn' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='IOBluetoothDeviceInquiryDelegate'>
    <method type='v20@0:4@8i12B16' type64='v32@0:8@16i24B28' selector='deviceInquiryComplete:error:aborted:'>
      <arg name='sender' declared_type='IOBluetoothDeviceInquiry*' type='@' index='0'/>
      <arg name='error' declared_type='IOReturn' type='i' index='1'/>
      <arg name='aborted' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='deviceInquiryDeviceFound:device:'>
      <arg name='sender' declared_type='IOBluetoothDeviceInquiry*' type='@' index='0'/>
      <arg name='device' declared_type='IOBluetoothDevice*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v20@0:4@8@12i16' type64='v36@0:8@16@24i32' selector='deviceInquiryDeviceNameUpdated:device:devicesRemaining:'>
      <arg name='sender' declared_type='IOBluetoothDeviceInquiry*' type='@' index='0'/>
      <arg name='device' declared_type='IOBluetoothDevice*' type='@' index='1'/>
      <arg name='devicesRemaining' declared_type='int' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='deviceInquiryStarted:'>
      <arg name='sender' declared_type='IOBluetoothDeviceInquiry*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8i12' type64='v28@0:8@16i24' selector='deviceInquiryUpdatingDeviceNamesStarted:devicesRemaining:'>
      <arg name='sender' declared_type='IOBluetoothDeviceInquiry*' type='@' index='0'/>
      <arg name='devicesRemaining' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='IOBluetoothL2CAPChannelDelegate'>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='l2capChannelClosed:'>
      <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannel*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v20@0:4@8^v12L16' type64='v40@0:8@16^v24Q32' selector='l2capChannelData:data:length:'>
      <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannel*' type='@' index='0'/>
      <arg name='dataPointer' c_array_length_in_arg='2' declared_type='void*' type='^v' index='1' type_modifier='o'/>
      <arg name='dataLength' declared_type='size_t' type='L' type64='Q' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8i12' type64='v28@0:8@16i24' selector='l2capChannelOpenComplete:status:'>
      <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannel*' type='@' index='0'/>
      <arg name='error' declared_type='IOReturn' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='l2capChannelQueueSpaceAvailable:'>
      <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannel*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='l2capChannelReconfigured:'>
      <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannel*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v20@0:4@8^v12i16' type64='v36@0:8@16^v24i32' selector='l2capChannelWriteComplete:refcon:status:'>
      <arg name='l2capChannel' declared_type='IOBluetoothL2CAPChannel*' type='@' index='0'/>
      <arg name='refcon' declared_type='void*' type='^v' index='1' type_modifier='n'/>
      <arg name='error' declared_type='IOReturn' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='IOBluetoothRFCOMMChannelDelegate'>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='rfcommChannelClosed:'>
      <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannel*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='rfcommChannelControlSignalsChanged:'>
      <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannel*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v20@0:4@8^v12L16' type64='v40@0:8@16^v24Q32' selector='rfcommChannelData:data:length:'>
      <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannel*' type='@' index='0'/>
      <arg name='dataPointer' c_array_length_in_arg='2' declared_type='void*' type='^v' index='1' type_modifier='o'/>
      <arg name='dataLength' declared_type='size_t' type='L' type64='Q' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='rfcommChannelFlowControlChanged:'>
      <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannel*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8i12' type64='v28@0:8@16i24' selector='rfcommChannelOpenComplete:status:'>
      <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannel*' type='@' index='0'/>
      <arg name='error' declared_type='IOReturn' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='rfcommChannelQueueSpaceAvailable:'>
      <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannel*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v20@0:4@8^v12i16' type64='v36@0:8@16^v24i32' selector='rfcommChannelWriteComplete:refcon:status:'>
      <arg name='rfcommChannel' declared_type='IOBluetoothRFCOMMChannel*' type='@' index='0'/>
      <arg name='refcon' declared_type='void*' type='^v' index='1' type_modifier='o'/>
      <arg name='error' declared_type='IOReturn' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='OBEXFileTransferServicesDelegate'>
    <method type='v16@0:4@8i12' type64='v28@0:8@16i24' selector='fileTransferServicesAbortComplete:error:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inError' declared_type='OBEXError' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8i12' type64='v28@0:8@16i24' selector='fileTransferServicesConnectionComplete:error:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inError' declared_type='OBEXError' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8i12' type64='v28@0:8@16i24' selector='fileTransferServicesCopyRemoteFileComplete:error:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inError' declared_type='OBEXError' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='fileTransferServicesCopyRemoteFileProgress:transferProgress:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inProgressDescription' declared_type='NSDictionary*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v20@0:4@8i12@16' type64='v36@0:8@16i24@28' selector='fileTransferServicesCreateFolderComplete:error:folder:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inError' declared_type='OBEXError' type='i' index='1'/>
      <arg name='inFolderName' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8i12' type64='v28@0:8@16i24' selector='fileTransferServicesDisconnectionComplete:error:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inError' declared_type='OBEXError' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v20@0:4@8i12@16' type64='v36@0:8@16i24@28' selector='fileTransferServicesPathChangeComplete:error:finalPath:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inError' declared_type='OBEXError' type='i' index='1'/>
      <arg name='inPath' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v20@0:4@8i12@16' type64='v36@0:8@16i24@28' selector='fileTransferServicesRemoveItemComplete:error:removedItem:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inError' declared_type='OBEXError' type='i' index='1'/>
      <arg name='inItemName' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v20@0:4@8i12@16' type64='v36@0:8@16i24@28' selector='fileTransferServicesRetrieveFolderListingComplete:error:listing:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inError' declared_type='OBEXError' type='i' index='1'/>
      <arg name='inListing' declared_type='NSArray*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8i12' type64='v28@0:8@16i24' selector='fileTransferServicesSendFileComplete:error:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inError' declared_type='OBEXError' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='fileTransferServicesSendFileProgress:transferProgress:'>
      <arg name='inServices' declared_type='OBEXFileTransferServices*' type='@' index='0'/>
      <arg name='inProgressDescription' declared_type='NSDictionary*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
</signatures>
