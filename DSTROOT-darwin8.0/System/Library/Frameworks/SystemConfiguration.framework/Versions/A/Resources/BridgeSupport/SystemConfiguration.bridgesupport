<?xml version='1.0'?>
<signatures version='1.0'>
  <depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
  <struct name='SCDynamicStoreContext' type='{_SCDynamicStoreContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
    <field name='version' declared_type='CFIndex' type='l' type64='i'/>
    <field name='info' declared_type='void*' type='^v'/>
    <field name='retain' function_pointer='true' declared_type='void *(*)(void *)' type='^?' const='true'>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='void*' type='^v' const='true'/>
    </field>
    <field name='release' function_pointer='true' declared_type='void (*)(void *)' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='copyDescription' function_pointer='true' declared_type='CFStringRef (*)(void *)' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='CFStringRef' type='^{__CFString=}'/>
    </field>
  </struct>
  <struct name='SCNetworkConnectionContext' type='{_SCNetworkConnectionContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
    <field name='version' declared_type='CFIndex' type='l' type64='i'/>
    <field name='info' declared_type='void*' type='^v'/>
    <field name='retain' function_pointer='true' declared_type='void *(*)(void *)' type='^?' const='true'>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='void*' type='^v' const='true'/>
    </field>
    <field name='release' function_pointer='true' declared_type='void (*)(void *)' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='copyDescription' function_pointer='true' declared_type='CFStringRef (*)(void *)' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='CFStringRef' type='^{__CFString=}'/>
    </field>
  </struct>
  <struct name='SCNetworkReachabilityContext' type='{_SCNetworkReachabilityContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
    <field name='version' declared_type='CFIndex' type='l' type64='i'/>
    <field name='info' declared_type='void*' type='^v'/>
    <field name='retain' function_pointer='true' declared_type='void *(*)(void *)' type='^?' const='true'>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='void*' type='^v' const='true'/>
    </field>
    <field name='release' function_pointer='true' declared_type='void (*)(void *)' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='copyDescription' function_pointer='true' declared_type='CFStringRef (*)(void *)' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='CFStringRef' type='^{__CFString=}'/>
    </field>
  </struct>
  <struct name='SCPreferencesContext' type='{_SCPreferencesContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
    <field name='version' declared_type='CFIndex' type='l' type64='i'/>
    <field name='info' declared_type='void*' type='^v'/>
    <field name='retain' function_pointer='true' declared_type='void *(*)(void *)' type='^?' const='true'>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='void*' type='^v' const='true'/>
    </field>
    <field name='release' function_pointer='true' declared_type='void (*)(void *)' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='copyDescription' function_pointer='true' declared_type='CFStringRef (*)(void *)' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='CFStringRef' type='^{__CFString=}'/>
    </field>
  </struct>
  <cftype name='SCDynamicStoreRef' gettypeid_func='SCDynamicStoreGetTypeID' type='^{__SCDynamicStore=}'/>
  <cftype name='SCNetworkConnectionRef' gettypeid_func='SCNetworkConnectionGetTypeID' type='^{__SCNetworkConnection=}'/>
  <cftype name='SCNetworkInterfaceRef' gettypeid_func='SCNetworkInterfaceGetTypeID' type='^{__SCNetworkInterface=}'/>
  <cftype name='SCNetworkProtocolRef' gettypeid_func='SCNetworkProtocolGetTypeID' type='^{__SCNetworkProtocol=}'/>
  <cftype name='SCNetworkReachabilityRef' gettypeid_func='SCNetworkReachabilityGetTypeID' type='^{__SCNetworkReachability=}'/>
  <cftype name='SCNetworkServiceRef' gettypeid_func='SCNetworkServiceGetTypeID' type='^{__SCNetworkService=}'/>
  <cftype name='SCNetworkSetRef' gettypeid_func='SCNetworkSetGetTypeID' type='^{__SCNetworkSet=}'/>
  <cftype name='SCPreferencesRef' gettypeid_func='SCPreferencesGetTypeID' type='^{__SCPreferences=}'/>
  <constant name='kSCDynamicStoreUseSessionKeys' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kSCNetworkInterfaceIPv4' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}' const='true'/>
  <constant name='kSCNetworkInterfaceType6to4' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kSCNetworkInterfaceTypeBluetooth' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kSCNetworkInterfaceTypeBond' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kSCNetworkInterfaceTypeEthernet' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kSCNetworkInterfaceTypeFireWire' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kSCNetworkInterfaceTypeIEEE80211' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kSCNetworkInterfaceTypeIPv4' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kSCNetworkInterfaceTypeIrDA' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kSCNetworkInterfaceTypeL2TP' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kSCNetworkInterfaceTypeModem' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kSCNetworkInterfaceTypePPP' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kSCNetworkInterfaceTypePPTP' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kSCNetworkInterfaceTypeSerial' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kSCNetworkInterfaceTypeVLAN' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kSCNetworkProtocolTypeAppleTalk' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kSCNetworkProtocolTypeDNS' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kSCNetworkProtocolTypeIPv4' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kSCNetworkProtocolTypeIPv6' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kSCNetworkProtocolTypeProxies' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <string_constant name='kSCNetworkConnectionBytesIn' nsstring='true' value='BytesIn'/>
  <string_constant name='kSCNetworkConnectionBytesOut' nsstring='true' value='BytesOut'/>
  <string_constant name='kSCNetworkConnectionErrorsIn' nsstring='true' value='ErrorsIn'/>
  <string_constant name='kSCNetworkConnectionErrorsOut' nsstring='true' value='ErrorsOut'/>
  <string_constant name='kSCNetworkConnectionPacketsIn' nsstring='true' value='PacketsIn'/>
  <string_constant name='kSCNetworkConnectionPacketsOut' nsstring='true' value='PacketsOut'/>
  <enum name='kSCNetworkConnectionConnected' value='2'/>
  <enum name='kSCNetworkConnectionConnecting' value='1'/>
  <enum name='kSCNetworkConnectionDisconnected' value='0'/>
  <enum name='kSCNetworkConnectionDisconnecting' value='3'/>
  <enum name='kSCNetworkConnectionInvalid' value='-1'/>
  <enum name='kSCNetworkConnectionPPPAuthenticating' value='5'/>
  <enum name='kSCNetworkConnectionPPPConnected' value='8'/>
  <enum name='kSCNetworkConnectionPPPConnectingLink' value='2'/>
  <enum name='kSCNetworkConnectionPPPDialOnTraffic' value='3'/>
  <enum name='kSCNetworkConnectionPPPDisconnected' value='0'/>
  <enum name='kSCNetworkConnectionPPPDisconnectingLink' value='10'/>
  <enum name='kSCNetworkConnectionPPPHoldingLinkOff' value='11'/>
  <enum name='kSCNetworkConnectionPPPInitializing' value='1'/>
  <enum name='kSCNetworkConnectionPPPNegotiatingLink' value='4'/>
  <enum name='kSCNetworkConnectionPPPNegotiatingNetwork' value='7'/>
  <enum name='kSCNetworkConnectionPPPSuspended' value='12'/>
  <enum name='kSCNetworkConnectionPPPTerminating' value='9'/>
  <enum name='kSCNetworkConnectionPPPWaitingForCallBack' value='6'/>
  <enum name='kSCNetworkConnectionPPPWaitingForRedial' value='13'/>
  <enum name='kSCNetworkFlagsConnectionAutomatic' value='8'/>
  <enum name='kSCNetworkFlagsConnectionRequired' value='4'/>
  <enum name='kSCNetworkFlagsInterventionRequired' value='16'/>
  <enum name='kSCNetworkFlagsIsDirect' value='131072'/>
  <enum name='kSCNetworkFlagsIsLocalAddress' value='65536'/>
  <enum name='kSCNetworkFlagsReachable' value='2'/>
  <enum name='kSCNetworkFlagsTransientConnection' value='1'/>
  <enum name='kSCPreferencesNotificationApply' value='2'/>
  <enum name='kSCPreferencesNotificationCommit' value='1'/>
  <enum name='kSCStatusAccessError' value='1003'/>
  <enum name='kSCStatusFailed' value='1001'/>
  <enum name='kSCStatusInvalidArgument' value='1002'/>
  <enum name='kSCStatusKeyExists' value='1005'/>
  <enum name='kSCStatusLocked' value='1006'/>
  <enum name='kSCStatusMaxLink' value='3006'/>
  <enum name='kSCStatusNeedLock' value='1007'/>
  <enum name='kSCStatusNoConfigFile' value='3003'/>
  <enum name='kSCStatusNoKey' value='1004'/>
  <enum name='kSCStatusNoLink' value='3004'/>
  <enum name='kSCStatusNoPrefsSession' value='3001'/>
  <enum name='kSCStatusNoStoreServer' value='2002'/>
  <enum name='kSCStatusNoStoreSession' value='2001'/>
  <enum name='kSCStatusNotifierActive' value='2003'/>
  <enum name='kSCStatusOK' value='0'/>
  <enum name='kSCStatusPrefsBusy' value='3002'/>
  <enum name='kSCStatusReachabilityUnknown' value='4001'/>
  <enum name='kSCStatusStale' value='3005'/>
  <function name='DHCPClientPreferencesCopyApplicationOptions'>
    <arg name='applicationID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='count' declared_type='CFIndex*' type='^i' type_modifier='o'/>
    <retval c_array_length_in_arg='1' declared_type='UInt8*' type='*'/>
  </function>
  <function name='DHCPClientPreferencesSetApplicationOptions'>
    <arg name='applicationID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='options' c_array_length_in_arg='2' declared_type='UInt8*' type='*' type_modifier='n'/>
    <arg name='count' declared_type='CFIndex' type='l' type64='i'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='DHCPInfoGetLeaseStartTime'>
    <arg name='info' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='CFDateRef' type='^{__CFDate=}'/>
  </function>
  <function name='DHCPInfoGetOptionData'>
    <arg name='info' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <arg name='code' declared_type='UInt8' type='C'/>
    <retval declared_type='CFDataRef' type='^{__CFData=}'/>
  </function>
  <function name='SCDynamicStoreAddTemporaryValue'>
    <arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='CFPropertyListRef' type='@'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCDynamicStoreAddValue'>
    <arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='CFPropertyListRef' type='@'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCDynamicStoreCopyComputerName'>
    <arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
    <arg name='nameEncoding' declared_type='CFStringEncoding*' type='^I' type_modifier='o'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='SCDynamicStoreCopyConsoleUser'>
    <arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
    <arg name='uid' declared_type='uid_t*' type='^I' type_modifier='o'/>
    <arg name='gid' declared_type='gid_t*' type='^I' type_modifier='o'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='SCDynamicStoreCopyDHCPInfo'>
    <arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
    <arg name='serviceID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='CFDictionaryRef' already_retained='true' type='^{__CFDictionary=}'/>
  </function>
  <function name='SCDynamicStoreCopyKeyList'>
    <arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
    <arg name='pattern' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='CFArrayRef' already_retained='true' type='^{__CFArray=}'/>
  </function>
  <function name='SCDynamicStoreCopyLocalHostName'>
    <arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='SCDynamicStoreCopyLocation'>
    <arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='SCDynamicStoreCopyMultiple'>
    <arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
    <arg name='keys' declared_type='CFArrayRef' type='^{__CFArray=}'/>
    <arg name='patterns' declared_type='CFArrayRef' type='^{__CFArray=}'/>
    <retval declared_type='CFDictionaryRef' already_retained='true' type='^{__CFDictionary=}'/>
  </function>
  <function name='SCDynamicStoreCopyNotifiedKeys'>
    <arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
    <retval declared_type='CFArrayRef' already_retained='true' type='^{__CFArray=}'/>
  </function>
  <function name='SCDynamicStoreCopyProxies'>
    <arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
    <retval declared_type='CFDictionaryRef' already_retained='true' type='^{__CFDictionary=}'/>
  </function>
  <function name='SCDynamicStoreCopyValue'>
    <arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='CFPropertyListRef' already_retained='true' type='@'/>
  </function>
  <function name='SCDynamicStoreCreate'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='callout' function_pointer='true' declared_type='SCDynamicStoreCallBack' type='^?' type_modifier='n'>
      <arg declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
      <arg declared_type='CFArrayRef' type='^{__CFArray=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='context' declared_type='SCDynamicStoreContext*' type='^{_SCDynamicStoreContext=i^v^?^?^?}' type_modifier='n'/>
    <retval declared_type='SCDynamicStoreRef' already_retained='true' type='^{__SCDynamicStore=}'/>
  </function>
  <function name='SCDynamicStoreCreateRunLoopSource'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
    <arg name='order' declared_type='CFIndex' type='l' type64='i'/>
    <retval declared_type='CFRunLoopSourceRef' already_retained='true' type='^{__CFRunLoopSource=}'/>
  </function>
  <function name='SCDynamicStoreCreateWithOptions'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='storeOptions' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <arg name='callout' function_pointer='true' declared_type='SCDynamicStoreCallBack' type='^?' type_modifier='n'>
      <arg declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
      <arg declared_type='CFArrayRef' type='^{__CFArray=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='context' declared_type='SCDynamicStoreContext*' type='^{_SCDynamicStoreContext=i^v^?^?^?}' type_modifier='n'/>
    <retval declared_type='SCDynamicStoreRef' already_retained='true' type='^{__SCDynamicStore=}'/>
  </function>
  <function name='SCDynamicStoreGetTypeID'>
    <retval declared_type='CFTypeID' type='L' type64='I'/>
  </function>
  <function name='SCDynamicStoreKeyCreate' variadic='true'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='fmt' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='SCDynamicStoreKeyCreateComputerName'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='SCDynamicStoreKeyCreateConsoleUser'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='SCDynamicStoreKeyCreateHostNames'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='SCDynamicStoreKeyCreateLocation'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='SCDynamicStoreKeyCreateNetworkGlobalEntity'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='domain' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='entity' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='SCDynamicStoreKeyCreateNetworkInterface'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='domain' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='SCDynamicStoreKeyCreateNetworkInterfaceEntity'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='domain' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='ifname' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='entity' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='SCDynamicStoreKeyCreateNetworkServiceEntity'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='domain' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='serviceID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='entity' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='SCDynamicStoreKeyCreateProxies'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='SCDynamicStoreNotifyValue'>
    <arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCDynamicStoreRemoveValue'>
    <arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCDynamicStoreSetMultiple'>
    <arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
    <arg name='keysToSet' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <arg name='keysToRemove' declared_type='CFArrayRef' type='^{__CFArray=}'/>
    <arg name='keysToNotify' declared_type='CFArrayRef' type='^{__CFArray=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCDynamicStoreSetNotificationKeys'>
    <arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
    <arg name='keys' declared_type='CFArrayRef' type='^{__CFArray=}'/>
    <arg name='patterns' declared_type='CFArrayRef' type='^{__CFArray=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCDynamicStoreSetValue'>
    <arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='CFPropertyListRef' type='@'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCError'>
    <retval declared_type='int' type='i'/>
  </function>
  <function name='SCErrorString'>
    <arg name='status' declared_type='int' type='i'/>
    <retval declared_type='char*' type='*' const='true'/>
  </function>
  <function name='SCNetworkCheckReachabilityByAddress'>
    <arg name='address' declared_type='struct sockaddr*' type='^{sockaddr=CC[14c]}' const='true' type_modifier='n'/>
    <arg name='addrlen' declared_type='int' type='i'/>
    <arg name='flags' declared_type='SCNetworkConnectionFlags*' type='^I' type_modifier='o'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkCheckReachabilityByName'>
    <arg name='nodename' declared_type='char*' type='*' const='true'/>
    <arg name='flags' declared_type='SCNetworkConnectionFlags*' type='^I' type_modifier='o'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkConnectionCopyExtendedStatus'>
    <arg name='connection' declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
    <retval declared_type='CFDictionaryRef' already_retained='true' type='^{__CFDictionary=}'/>
  </function>
  <function name='SCNetworkConnectionCopyServiceID'>
    <arg name='connection' declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='SCNetworkConnectionCopyStatistics'>
    <arg name='connection' declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
    <retval declared_type='CFDictionaryRef' already_retained='true' type='^{__CFDictionary=}'/>
  </function>
  <function name='SCNetworkConnectionCopyUserOptions'>
    <arg name='connection' declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
    <retval declared_type='CFDictionaryRef' already_retained='true' type='^{__CFDictionary=}'/>
  </function>
  <function name='SCNetworkConnectionCopyUserPreferences'>
    <arg name='selectionOptions' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <arg name='serviceID' declared_type='CFStringRef*' type='^^{__CFString}' type_modifier='o'/>
    <arg name='userOptions' declared_type='CFDictionaryRef*' type='^^{__CFDictionary}' type_modifier='o'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkConnectionCreateWithServiceID'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='serviceID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='callout' function_pointer='true' declared_type='SCNetworkConnectionCallBack' type='^?' type_modifier='n'>
      <arg declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
      <arg declared_type='SCNetworkConnectionStatus' type='i'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='context' declared_type='SCNetworkConnectionContext*' type='^{_SCNetworkConnectionContext=i^v^?^?^?}' type_modifier='n'/>
    <retval declared_type='SCNetworkConnectionRef' already_retained='true' type='^{__SCNetworkConnection=}'/>
  </function>
  <function name='SCNetworkConnectionGetStatus'>
    <arg name='connection' declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
    <retval declared_type='SCNetworkConnectionStatus' type='i'/>
  </function>
  <function name='SCNetworkConnectionGetTypeID'>
    <retval declared_type='CFTypeID' type='L' type64='I'/>
  </function>
  <function name='SCNetworkConnectionScheduleWithRunLoop'>
    <arg name='connection' declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
    <arg name='runLoop' declared_type='CFRunLoopRef' type='^{__CFRunLoop=}'/>
    <arg name='runLoopMode' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkConnectionStart'>
    <arg name='connection' declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
    <arg name='userOptions' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <arg name='linger' declared_type='Boolean' type='B'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkConnectionStop'>
    <arg name='connection' declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
    <arg name='forceDisconnect' declared_type='Boolean' type='B'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkConnectionUnscheduleFromRunLoop'>
    <arg name='connection' declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
    <arg name='runLoop' declared_type='CFRunLoopRef' type='^{__CFRunLoop=}'/>
    <arg name='runLoopMode' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkInterfaceCopyAll'>
    <retval declared_type='CFArrayRef' already_retained='true' type='^{__CFArray=}'/>
  </function>
  <function name='SCNetworkInterfaceCreateWithInterface'>
    <arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
    <arg name='interfaceType' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='SCNetworkInterfaceRef' already_retained='true' type='^{__SCNetworkInterface=}'/>
  </function>
  <function name='SCNetworkInterfaceGetBSDName'>
    <arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='SCNetworkInterfaceGetConfiguration'>
    <arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
    <retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
  </function>
  <function name='SCNetworkInterfaceGetHardwareAddressString'>
    <arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='SCNetworkInterfaceGetInterface'>
    <arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
    <retval declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
  </function>
  <function name='SCNetworkInterfaceGetInterfaceType'>
    <arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='SCNetworkInterfaceGetLocalizedDisplayName'>
    <arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='SCNetworkInterfaceGetSupportedInterfaceTypes'>
    <arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
    <retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
  </function>
  <function name='SCNetworkInterfaceGetSupportedProtocolTypes'>
    <arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
    <retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
  </function>
  <function name='SCNetworkInterfaceGetTypeID'>
    <retval declared_type='CFTypeID' type='L' type64='I'/>
  </function>
  <function name='SCNetworkInterfaceRefreshConfiguration'>
    <arg name='ifName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkInterfaceSetConfiguration'>
    <arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
    <arg name='config' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkProtocolGetConfiguration'>
    <arg name='protocol' declared_type='SCNetworkProtocolRef' type='^{__SCNetworkProtocol=}'/>
    <retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
  </function>
  <function name='SCNetworkProtocolGetEnabled'>
    <arg name='protocol' declared_type='SCNetworkProtocolRef' type='^{__SCNetworkProtocol=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkProtocolGetProtocolType'>
    <arg name='protocol' declared_type='SCNetworkProtocolRef' type='^{__SCNetworkProtocol=}'/>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='SCNetworkProtocolGetTypeID'>
    <retval declared_type='CFTypeID' type='L' type64='I'/>
  </function>
  <function name='SCNetworkProtocolSetConfiguration'>
    <arg name='protocol' declared_type='SCNetworkProtocolRef' type='^{__SCNetworkProtocol=}'/>
    <arg name='config' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkProtocolSetEnabled'>
    <arg name='protocol' declared_type='SCNetworkProtocolRef' type='^{__SCNetworkProtocol=}'/>
    <arg name='enabled' declared_type='Boolean' type='B'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkReachabilityCreateWithAddress'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='address' declared_type='struct sockaddr*' type='^{sockaddr=CC[14c]}' const='true' type_modifier='n'/>
    <retval declared_type='SCNetworkReachabilityRef' already_retained='true' type='^{__SCNetworkReachability=}'/>
  </function>
  <function name='SCNetworkReachabilityCreateWithAddressPair'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='localAddress' declared_type='struct sockaddr*' type='^{sockaddr=CC[14c]}' const='true' type_modifier='n'/>
    <arg name='remoteAddress' declared_type='struct sockaddr*' type='^{sockaddr=CC[14c]}' const='true' type_modifier='n'/>
    <retval declared_type='SCNetworkReachabilityRef' already_retained='true' type='^{__SCNetworkReachability=}'/>
  </function>
  <function name='SCNetworkReachabilityCreateWithName'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='nodename' declared_type='char*' type='*' const='true'/>
    <retval declared_type='SCNetworkReachabilityRef' already_retained='true' type='^{__SCNetworkReachability=}'/>
  </function>
  <function name='SCNetworkReachabilityGetFlags'>
    <arg name='target' declared_type='SCNetworkReachabilityRef' type='^{__SCNetworkReachability=}'/>
    <arg name='flags' declared_type='SCNetworkConnectionFlags*' type='^I' type_modifier='o'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkReachabilityGetTypeID'>
    <retval declared_type='CFTypeID' type='L' type64='I'/>
  </function>
  <function name='SCNetworkReachabilityScheduleWithRunLoop'>
    <arg name='target' declared_type='SCNetworkReachabilityRef' type='^{__SCNetworkReachability=}'/>
    <arg name='runLoop' declared_type='CFRunLoopRef' type='^{__CFRunLoop=}'/>
    <arg name='runLoopMode' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkReachabilitySetCallback'>
    <arg name='target' declared_type='SCNetworkReachabilityRef' type='^{__SCNetworkReachability=}'/>
    <arg name='callout' function_pointer='true' declared_type='SCNetworkReachabilityCallBack' type='^?' type_modifier='n'>
      <arg declared_type='SCNetworkReachabilityRef' type='^{__SCNetworkReachability=}'/>
      <arg declared_type='SCNetworkConnectionFlags' type='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='context' declared_type='SCNetworkReachabilityContext*' type='^{_SCNetworkReachabilityContext=i^v^?^?^?}' type_modifier='n'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkReachabilityUnscheduleFromRunLoop'>
    <arg name='target' declared_type='SCNetworkReachabilityRef' type='^{__SCNetworkReachability=}'/>
    <arg name='runLoop' declared_type='CFRunLoopRef' type='^{__CFRunLoop=}'/>
    <arg name='runLoopMode' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkServiceAddProtocolType'>
    <arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
    <arg name='protocolType' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkServiceCopy'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <arg name='serviceID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='SCNetworkServiceRef' already_retained='true' type='^{__SCNetworkService=}'/>
  </function>
  <function name='SCNetworkServiceCopyAll'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <retval declared_type='CFArrayRef' already_retained='true' type='^{__CFArray=}'/>
  </function>
  <function name='SCNetworkServiceCopyProtocol'>
    <arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
    <arg name='protocolType' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='SCNetworkProtocolRef' already_retained='true' type='^{__SCNetworkProtocol=}'/>
  </function>
  <function name='SCNetworkServiceCopyProtocols'>
    <arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
    <retval declared_type='CFArrayRef' already_retained='true' type='^{__CFArray=}'/>
  </function>
  <function name='SCNetworkServiceCreate'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
    <retval declared_type='SCNetworkServiceRef' already_retained='true' type='^{__SCNetworkService=}'/>
  </function>
  <function name='SCNetworkServiceGetEnabled'>
    <arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkServiceGetInterface'>
    <arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
    <retval declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
  </function>
  <function name='SCNetworkServiceGetName'>
    <arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='SCNetworkServiceGetServiceID'>
    <arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='SCNetworkServiceGetTypeID'>
    <retval declared_type='CFTypeID' type='L' type64='I'/>
  </function>
  <function name='SCNetworkServiceRemove'>
    <arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkServiceRemoveProtocolType'>
    <arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
    <arg name='protocolType' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkServiceSetEnabled'>
    <arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
    <arg name='enabled' declared_type='Boolean' type='B'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkServiceSetName'>
    <arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
    <arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkSetAddService'>
    <arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
    <arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkSetCopy'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <arg name='setID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='SCNetworkSetRef' already_retained='true' type='^{__SCNetworkSet=}'/>
  </function>
  <function name='SCNetworkSetCopyAll'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <retval declared_type='CFArrayRef' already_retained='true' type='^{__CFArray=}'/>
  </function>
  <function name='SCNetworkSetCopyCurrent'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <retval declared_type='SCNetworkSetRef' already_retained='true' type='^{__SCNetworkSet=}'/>
  </function>
  <function name='SCNetworkSetCopyServices'>
    <arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
    <retval declared_type='CFArrayRef' already_retained='true' type='^{__CFArray=}'/>
  </function>
  <function name='SCNetworkSetCreate'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <retval declared_type='SCNetworkSetRef' already_retained='true' type='^{__SCNetworkSet=}'/>
  </function>
  <function name='SCNetworkSetGetName'>
    <arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='SCNetworkSetGetServiceOrder'>
    <arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
    <retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
  </function>
  <function name='SCNetworkSetGetSetID'>
    <arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='SCNetworkSetGetTypeID'>
    <retval declared_type='CFTypeID' type='L' type64='I'/>
  </function>
  <function name='SCNetworkSetRemove'>
    <arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkSetRemoveService'>
    <arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
    <arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkSetSetCurrent'>
    <arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkSetSetName'>
    <arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
    <arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCNetworkSetSetServiceOrder'>
    <arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
    <arg name='newOrder' declared_type='CFArrayRef' type='^{__CFArray=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCPreferencesAddValue'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='CFPropertyListRef' type='@'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCPreferencesApplyChanges'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCPreferencesCommitChanges'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCPreferencesCopyKeyList'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <retval declared_type='CFArrayRef' already_retained='true' type='^{__CFArray=}'/>
  </function>
  <function name='SCPreferencesCreate'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='prefsID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='SCPreferencesRef' already_retained='true' type='^{__SCPreferences=}'/>
  </function>
  <function name='SCPreferencesGetSignature'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <retval declared_type='CFDataRef' type='^{__CFData=}'/>
  </function>
  <function name='SCPreferencesGetTypeID'>
    <retval declared_type='CFTypeID' type='L' type64='I'/>
  </function>
  <function name='SCPreferencesGetValue'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='CFPropertyListRef' type='@'/>
  </function>
  <function name='SCPreferencesLock'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <arg name='wait' declared_type='Boolean' type='B'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCPreferencesPathCreateUniqueChild'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <arg name='prefix' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='SCPreferencesPathGetLink'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <arg name='path' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='SCPreferencesPathGetValue'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <arg name='path' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
  </function>
  <function name='SCPreferencesPathRemoveValue'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <arg name='path' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCPreferencesPathSetLink'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <arg name='path' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='link' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCPreferencesPathSetValue'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <arg name='path' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCPreferencesRemoveValue'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCPreferencesScheduleWithRunLoop'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <arg name='runLoop' declared_type='CFRunLoopRef' type='^{__CFRunLoop=}'/>
    <arg name='runLoopMode' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCPreferencesSetCallback'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <arg name='callout' function_pointer='true' declared_type='SCPreferencesCallBack' type='^?' type_modifier='n'>
      <arg declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
      <arg declared_type='SCPreferencesNotification' type='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='context' declared_type='SCPreferencesContext*' type='^{_SCPreferencesContext=i^v^?^?^?}' type_modifier='n'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCPreferencesSetComputerName'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='nameEncoding' declared_type='CFStringEncoding' type='L' type64='I'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCPreferencesSetLocalHostName'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCPreferencesSetValue'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='CFPropertyListRef' type='@'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCPreferencesSynchronize'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SCPreferencesUnlock'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='SCPreferencesUnscheduleFromRunLoop'>
    <arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
    <arg name='runLoop' declared_type='CFRunLoopRef' type='^{__CFRunLoop=}'/>
    <arg name='runLoopMode' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
</signatures>
