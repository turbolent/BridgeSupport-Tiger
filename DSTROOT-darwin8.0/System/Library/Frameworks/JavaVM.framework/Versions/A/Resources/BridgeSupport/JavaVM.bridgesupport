<?xml version='1.0'?>
<signatures version='1.0'>
  <depends_on path='/System/Library/Frameworks/Foundation.framework'/>
  <struct name='JAWT' type='{jawt=&quot;version&quot;i&quot;GetDrawingSurface&quot;^?&quot;FreeDrawingSurface&quot;^?&quot;Lock&quot;^?&quot;Unlock&quot;^?&quot;GetComponent&quot;^?}'>
    <field name='version' declared_type='jint' type='l' type64='i'/>
    <field name='GetDrawingSurface' function_pointer='true' declared_type='JAWT_DrawingSurface *(*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='JAWT_DrawingSurface*' type='^{jawt_DrawingSurface=^^{JNINativeInterface_}^{_jobject}^?^?^?^?}'/>
    </field>
    <field name='FreeDrawingSurface' function_pointer='true' declared_type='void (*)(JAWT_DrawingSurface *)' type='^?'>
      <arg declared_type='JAWT_DrawingSurface*' type='^{jawt_DrawingSurface=^^{JNINativeInterface_}^{_jobject}^?^?^?^?}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='Lock' function_pointer='true' declared_type='void (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='Unlock' function_pointer='true' declared_type='void (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetComponent' function_pointer='true' declared_type='jobject (*)(JNIEnv *, void *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
  </struct>
  <struct name='JAWT_DrawingSurface' type='{jawt_DrawingSurface=&quot;env&quot;^^{JNINativeInterface_}&quot;target&quot;^{_jobject}&quot;Lock&quot;^?&quot;GetDrawingSurfaceInfo&quot;^?&quot;FreeDrawingSurfaceInfo&quot;^?&quot;Unlock&quot;^?}'>
    <field name='env' declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
    <field name='target' declared_type='jobject' type='^{_jobject=}'/>
    <field name='Lock' function_pointer='true' declared_type='jint (*)(struct jawt_DrawingSurface *)' type='^?'>
      <arg declared_type='struct jawt_DrawingSurface*' type='^{jawt_DrawingSurface=^^{JNINativeInterface_}^{_jobject}^?^?^?^?}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetDrawingSurfaceInfo' function_pointer='true' declared_type='JAWT_DrawingSurfaceInfo *(*)(struct jawt_DrawingSurface *)' type='^?'>
      <arg declared_type='struct jawt_DrawingSurface*' type='^{jawt_DrawingSurface=^^{JNINativeInterface_}^{_jobject}^?^?^?^?}'/>
      <retval declared_type='JAWT_DrawingSurfaceInfo*' type='^{jawt_DrawingSurfaceInfo=^v^{jawt_DrawingSurface}{jawt_Rectangle=iiii}i^{jawt_Rectangle}}'/>
    </field>
    <field name='FreeDrawingSurfaceInfo' function_pointer='true' declared_type='void (*)(JAWT_DrawingSurfaceInfo *)' type='^?'>
      <arg declared_type='JAWT_DrawingSurfaceInfo*' type='^{jawt_DrawingSurfaceInfo=^v^{jawt_DrawingSurface}{jawt_Rectangle=iiii}i^{jawt_Rectangle}}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='Unlock' function_pointer='true' declared_type='void (*)(struct jawt_DrawingSurface *)' type='^?'>
      <arg declared_type='struct jawt_DrawingSurface*' type='^{jawt_DrawingSurface=^^{JNINativeInterface_}^{_jobject}^?^?^?^?}'/>
      <retval declared_type='void' type='v'/>
    </field>
  </struct>
  <struct name='JAWT_DrawingSurfaceInfo' type='{jawt_DrawingSurfaceInfo=&quot;platformInfo&quot;^v&quot;ds&quot;^{jawt_DrawingSurface}&quot;bounds&quot;{jawt_Rectangle=&quot;x&quot;i&quot;y&quot;i&quot;width&quot;i&quot;height&quot;i}&quot;clipSize&quot;i&quot;clip&quot;^{jawt_Rectangle}}'>
    <field name='platformInfo' declared_type='void*' type='^v'/>
    <field name='ds' declared_type='struct jawt_DrawingSurface*' type='^{jawt_DrawingSurface=^^{JNINativeInterface_}^{_jobject}^?^?^?^?}'/>
    <field name='bounds' declared_type='JAWT_Rectangle' type='{jawt_Rectangle=&quot;x&quot;i&quot;y&quot;i&quot;width&quot;i&quot;height&quot;i}'/>
    <field name='clipSize' declared_type='jint' type='l' type64='i'/>
    <field name='clip' declared_type='JAWT_Rectangle*' type='^{jawt_Rectangle=iiii}'/>
  </struct>
  <struct name='JAWT_MacOSXDrawingSurfaceInfo' type='{JAWT_MacOSXDrawingSurfaceInfo=&quot;cocoaViewRef&quot;@&quot;NSView&quot;}'>
    <field name='cocoaViewRef' declared_type='NSView*' type='@&quot;NSView&quot;'/>
  </struct>
  <struct name='JAWT_Rectangle' type='{jawt_Rectangle=&quot;x&quot;i&quot;y&quot;i&quot;width&quot;i&quot;height&quot;i}'>
    <field name='x' declared_type='jint' type='l' type64='i'/>
    <field name='y' declared_type='jint' type='l' type64='i'/>
    <field name='width' declared_type='jint' type='l' type64='i'/>
    <field name='height' declared_type='jint' type='l' type64='i'/>
  </struct>
  <struct name='JDK1_1AttachArgs' type='{JDK1_1AttachArgs=&quot;__padding&quot;^v}'>
    <field name='__padding' declared_type='void*' type='^v'/>
  </struct>
  <struct name='JDK1_1InitArgs' type='{JDK1_1InitArgs=&quot;version&quot;i&quot;properties&quot;^*&quot;checkSource&quot;i&quot;nativeStackSize&quot;i&quot;javaStackSize&quot;i&quot;minHeapSize&quot;i&quot;maxHeapSize&quot;i&quot;verifyMode&quot;i&quot;classpath&quot;*&quot;vfprintf&quot;^?&quot;exit&quot;^?&quot;abort&quot;^?&quot;enableClassGC&quot;i&quot;enableVerboseGC&quot;i&quot;disableAsyncGC&quot;i&quot;verbose&quot;i&quot;debugging&quot;C&quot;debugPort&quot;i}'>
    <field name='version' declared_type='jint' type='l' type64='i'/>
    <field name='properties' declared_type='char**' type='^*'/>
    <field name='checkSource' declared_type='jint' type='l' type64='i'/>
    <field name='nativeStackSize' declared_type='jint' type='l' type64='i'/>
    <field name='javaStackSize' declared_type='jint' type='l' type64='i'/>
    <field name='minHeapSize' declared_type='jint' type='l' type64='i'/>
    <field name='maxHeapSize' declared_type='jint' type='l' type64='i'/>
    <field name='verifyMode' declared_type='jint' type='l' type64='i'/>
    <field name='classpath' declared_type='char*' type='*'/>
    <field name='vfprintf' function_pointer='true' declared_type='jint (*)(FILE *, char *, va_list)' type='^?' declared_type64='jint (*)(FILE *, char *, __va_list_tag *)'>
      <arg declared_type='FILE*' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='exit' function_pointer='true' declared_type='void (*)(jint)' type='^?'>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='abort' function_pointer='true' declared_type='void (*)(void)' type='^?'>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='enableClassGC' declared_type='jint' type='l' type64='i'/>
    <field name='enableVerboseGC' declared_type='jint' type='l' type64='i'/>
    <field name='disableAsyncGC' declared_type='jint' type='l' type64='i'/>
    <field name='verbose' declared_type='jint' type='l' type64='i'/>
    <field name='debugging' declared_type='jboolean' type='C'/>
    <field name='debugPort' declared_type='jint' type='l' type64='i'/>
  </struct>
  <struct name='JDWPTransportCapabilities' type='{_JDWPTransportCapabilities=&quot;can_timeout_attach&quot;b1&quot;can_timeout_accept&quot;b1&quot;can_timeout_handshake&quot;b1&quot;reserved3&quot;b1&quot;reserved4&quot;b1&quot;reserved5&quot;b1&quot;reserved6&quot;b1&quot;reserved7&quot;b1&quot;reserved8&quot;b1&quot;reserved9&quot;b1&quot;reserved10&quot;b1&quot;reserved11&quot;b1&quot;reserved12&quot;b1&quot;reserved13&quot;b1&quot;reserved14&quot;b1&quot;reserved15&quot;b1}'>
    <field name='can_timeout_attach' declared_type='unsigned int' type='b1'/>
    <field name='can_timeout_accept' declared_type='unsigned int' type='b1'/>
    <field name='can_timeout_handshake' declared_type='unsigned int' type='b1'/>
    <field name='reserved3' declared_type='unsigned int' type='b1'/>
    <field name='reserved4' declared_type='unsigned int' type='b1'/>
    <field name='reserved5' declared_type='unsigned int' type='b1'/>
    <field name='reserved6' declared_type='unsigned int' type='b1'/>
    <field name='reserved7' declared_type='unsigned int' type='b1'/>
    <field name='reserved8' declared_type='unsigned int' type='b1'/>
    <field name='reserved9' declared_type='unsigned int' type='b1'/>
    <field name='reserved10' declared_type='unsigned int' type='b1'/>
    <field name='reserved11' declared_type='unsigned int' type='b1'/>
    <field name='reserved12' declared_type='unsigned int' type='b1'/>
    <field name='reserved13' declared_type='unsigned int' type='b1'/>
    <field name='reserved14' declared_type='unsigned int' type='b1'/>
    <field name='reserved15' declared_type='unsigned int' type='b1'/>
  </struct>
  <struct name='JNIEnv' type='{JNINativeInterface_=&quot;reserved0&quot;^v&quot;reserved1&quot;^v&quot;reserved2&quot;^v&quot;reserved3&quot;^v&quot;GetVersion&quot;^?&quot;DefineClass&quot;^?&quot;FindClass&quot;^?&quot;FromReflectedMethod&quot;^?&quot;FromReflectedField&quot;^?&quot;ToReflectedMethod&quot;^?&quot;GetSuperclass&quot;^?&quot;IsAssignableFrom&quot;^?&quot;ToReflectedField&quot;^?&quot;Throw&quot;^?&quot;ThrowNew&quot;^?&quot;ExceptionOccurred&quot;^?&quot;ExceptionDescribe&quot;^?&quot;ExceptionClear&quot;^?&quot;FatalError&quot;^?&quot;PushLocalFrame&quot;^?&quot;PopLocalFrame&quot;^?&quot;NewGlobalRef&quot;^?&quot;DeleteGlobalRef&quot;^?&quot;DeleteLocalRef&quot;^?&quot;IsSameObject&quot;^?&quot;NewLocalRef&quot;^?&quot;EnsureLocalCapacity&quot;^?&quot;AllocObject&quot;^?&quot;NewObject&quot;^?&quot;NewObjectV&quot;^?&quot;NewObjectA&quot;^?&quot;GetObjectClass&quot;^?&quot;IsInstanceOf&quot;^?&quot;GetMethodID&quot;^?&quot;CallObjectMethod&quot;^?&quot;CallObjectMethodV&quot;^?&quot;CallObjectMethodA&quot;^?&quot;CallBooleanMethod&quot;^?&quot;CallBooleanMethodV&quot;^?&quot;CallBooleanMethodA&quot;^?&quot;CallByteMethod&quot;^?&quot;CallByteMethodV&quot;^?&quot;CallByteMethodA&quot;^?&quot;CallCharMethod&quot;^?&quot;CallCharMethodV&quot;^?&quot;CallCharMethodA&quot;^?&quot;CallShortMethod&quot;^?&quot;CallShortMethodV&quot;^?&quot;CallShortMethodA&quot;^?&quot;CallIntMethod&quot;^?&quot;CallIntMethodV&quot;^?&quot;CallIntMethodA&quot;^?&quot;CallLongMethod&quot;^?&quot;CallLongMethodV&quot;^?&quot;CallLongMethodA&quot;^?&quot;CallFloatMethod&quot;^?&quot;CallFloatMethodV&quot;^?&quot;CallFloatMethodA&quot;^?&quot;CallDoubleMethod&quot;^?&quot;CallDoubleMethodV&quot;^?&quot;CallDoubleMethodA&quot;^?&quot;CallVoidMethod&quot;^?&quot;CallVoidMethodV&quot;^?&quot;CallVoidMethodA&quot;^?&quot;CallNonvirtualObjectMethod&quot;^?&quot;CallNonvirtualObjectMethodV&quot;^?&quot;CallNonvirtualObjectMethodA&quot;^?&quot;CallNonvirtualBooleanMethod&quot;^?&quot;CallNonvirtualBooleanMethodV&quot;^?&quot;CallNonvirtualBooleanMethodA&quot;^?&quot;CallNonvirtualByteMethod&quot;^?&quot;CallNonvirtualByteMethodV&quot;^?&quot;CallNonvirtualByteMethodA&quot;^?&quot;CallNonvirtualCharMethod&quot;^?&quot;CallNonvirtualCharMethodV&quot;^?&quot;CallNonvirtualCharMethodA&quot;^?&quot;CallNonvirtualShortMethod&quot;^?&quot;CallNonvirtualShortMethodV&quot;^?&quot;CallNonvirtualShortMethodA&quot;^?&quot;CallNonvirtualIntMethod&quot;^?&quot;CallNonvirtualIntMethodV&quot;^?&quot;CallNonvirtualIntMethodA&quot;^?&quot;CallNonvirtualLongMethod&quot;^?&quot;CallNonvirtualLongMethodV&quot;^?&quot;CallNonvirtualLongMethodA&quot;^?&quot;CallNonvirtualFloatMethod&quot;^?&quot;CallNonvirtualFloatMethodV&quot;^?&quot;CallNonvirtualFloatMethodA&quot;^?&quot;CallNonvirtualDoubleMethod&quot;^?&quot;CallNonvirtualDoubleMethodV&quot;^?&quot;CallNonvirtualDoubleMethodA&quot;^?&quot;CallNonvirtualVoidMethod&quot;^?&quot;CallNonvirtualVoidMethodV&quot;^?&quot;CallNonvirtualVoidMethodA&quot;^?&quot;GetFieldID&quot;^?&quot;GetObjectField&quot;^?&quot;GetBooleanField&quot;^?&quot;GetByteField&quot;^?&quot;GetCharField&quot;^?&quot;GetShortField&quot;^?&quot;GetIntField&quot;^?&quot;GetLongField&quot;^?&quot;GetFloatField&quot;^?&quot;GetDoubleField&quot;^?&quot;SetObjectField&quot;^?&quot;SetBooleanField&quot;^?&quot;SetByteField&quot;^?&quot;SetCharField&quot;^?&quot;SetShortField&quot;^?&quot;SetIntField&quot;^?&quot;SetLongField&quot;^?&quot;SetFloatField&quot;^?&quot;SetDoubleField&quot;^?&quot;GetStaticMethodID&quot;^?&quot;CallStaticObjectMethod&quot;^?&quot;CallStaticObjectMethodV&quot;^?&quot;CallStaticObjectMethodA&quot;^?&quot;CallStaticBooleanMethod&quot;^?&quot;CallStaticBooleanMethodV&quot;^?&quot;CallStaticBooleanMethodA&quot;^?&quot;CallStaticByteMethod&quot;^?&quot;CallStaticByteMethodV&quot;^?&quot;CallStaticByteMethodA&quot;^?&quot;CallStaticCharMethod&quot;^?&quot;CallStaticCharMethodV&quot;^?&quot;CallStaticCharMethodA&quot;^?&quot;CallStaticShortMethod&quot;^?&quot;CallStaticShortMethodV&quot;^?&quot;CallStaticShortMethodA&quot;^?&quot;CallStaticIntMethod&quot;^?&quot;CallStaticIntMethodV&quot;^?&quot;CallStaticIntMethodA&quot;^?&quot;CallStaticLongMethod&quot;^?&quot;CallStaticLongMethodV&quot;^?&quot;CallStaticLongMethodA&quot;^?&quot;CallStaticFloatMethod&quot;^?&quot;CallStaticFloatMethodV&quot;^?&quot;CallStaticFloatMethodA&quot;^?&quot;CallStaticDoubleMethod&quot;^?&quot;CallStaticDoubleMethodV&quot;^?&quot;CallStaticDoubleMethodA&quot;^?&quot;CallStaticVoidMethod&quot;^?&quot;CallStaticVoidMethodV&quot;^?&quot;CallStaticVoidMethodA&quot;^?&quot;GetStaticFieldID&quot;^?&quot;GetStaticObjectField&quot;^?&quot;GetStaticBooleanField&quot;^?&quot;GetStaticByteField&quot;^?&quot;GetStaticCharField&quot;^?&quot;GetStaticShortField&quot;^?&quot;GetStaticIntField&quot;^?&quot;GetStaticLongField&quot;^?&quot;GetStaticFloatField&quot;^?&quot;GetStaticDoubleField&quot;^?&quot;SetStaticObjectField&quot;^?&quot;SetStaticBooleanField&quot;^?&quot;SetStaticByteField&quot;^?&quot;SetStaticCharField&quot;^?&quot;SetStaticShortField&quot;^?&quot;SetStaticIntField&quot;^?&quot;SetStaticLongField&quot;^?&quot;SetStaticFloatField&quot;^?&quot;SetStaticDoubleField&quot;^?&quot;NewString&quot;^?&quot;GetStringLength&quot;^?&quot;GetStringChars&quot;^?&quot;ReleaseStringChars&quot;^?&quot;NewStringUTF&quot;^?&quot;GetStringUTFLength&quot;^?&quot;GetStringUTFChars&quot;^?&quot;ReleaseStringUTFChars&quot;^?&quot;GetArrayLength&quot;^?&quot;NewObjectArray&quot;^?&quot;GetObjectArrayElement&quot;^?&quot;SetObjectArrayElement&quot;^?&quot;NewBooleanArray&quot;^?&quot;NewByteArray&quot;^?&quot;NewCharArray&quot;^?&quot;NewShortArray&quot;^?&quot;NewIntArray&quot;^?&quot;NewLongArray&quot;^?&quot;NewFloatArray&quot;^?&quot;NewDoubleArray&quot;^?&quot;GetBooleanArrayElements&quot;^?&quot;GetByteArrayElements&quot;^?&quot;GetCharArrayElements&quot;^?&quot;GetShortArrayElements&quot;^?&quot;GetIntArrayElements&quot;^?&quot;GetLongArrayElements&quot;^?&quot;GetFloatArrayElements&quot;^?&quot;GetDoubleArrayElements&quot;^?&quot;ReleaseBooleanArrayElements&quot;^?&quot;ReleaseByteArrayElements&quot;^?&quot;ReleaseCharArrayElements&quot;^?&quot;ReleaseShortArrayElements&quot;^?&quot;ReleaseIntArrayElements&quot;^?&quot;ReleaseLongArrayElements&quot;^?&quot;ReleaseFloatArrayElements&quot;^?&quot;ReleaseDoubleArrayElements&quot;^?&quot;GetBooleanArrayRegion&quot;^?&quot;GetByteArrayRegion&quot;^?&quot;GetCharArrayRegion&quot;^?&quot;GetShortArrayRegion&quot;^?&quot;GetIntArrayRegion&quot;^?&quot;GetLongArrayRegion&quot;^?&quot;GetFloatArrayRegion&quot;^?&quot;GetDoubleArrayRegion&quot;^?&quot;SetBooleanArrayRegion&quot;^?&quot;SetByteArrayRegion&quot;^?&quot;SetCharArrayRegion&quot;^?&quot;SetShortArrayRegion&quot;^?&quot;SetIntArrayRegion&quot;^?&quot;SetLongArrayRegion&quot;^?&quot;SetFloatArrayRegion&quot;^?&quot;SetDoubleArrayRegion&quot;^?&quot;RegisterNatives&quot;^?&quot;UnregisterNatives&quot;^?&quot;MonitorEnter&quot;^?&quot;MonitorExit&quot;^?&quot;GetJavaVM&quot;^?&quot;GetStringRegion&quot;^?&quot;GetStringUTFRegion&quot;^?&quot;GetPrimitiveArrayCritical&quot;^?&quot;ReleasePrimitiveArrayCritical&quot;^?&quot;GetStringCritical&quot;^?&quot;ReleaseStringCritical&quot;^?&quot;NewWeakGlobalRef&quot;^?&quot;DeleteWeakGlobalRef&quot;^?&quot;ExceptionCheck&quot;^?&quot;NewDirectByteBuffer&quot;^?&quot;GetDirectBufferAddress&quot;^?&quot;GetDirectBufferCapacity&quot;^?}'>
    <field name='reserved0' declared_type='void*' type='^v'/>
    <field name='reserved1' declared_type='void*' type='^v'/>
    <field name='reserved2' declared_type='void*' type='^v'/>
    <field name='reserved3' declared_type='void*' type='^v'/>
    <field name='GetVersion' function_pointer='true' declared_type='jint (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='DefineClass' function_pointer='true' declared_type='jclass (*)(JNIEnv *, char *, jobject, jbyte *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jbyte*' type='*' const='true'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jclass' type='^{_jobject=}'/>
    </field>
    <field name='FindClass' function_pointer='true' declared_type='jclass (*)(JNIEnv *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jclass' type='^{_jobject=}'/>
    </field>
    <field name='FromReflectedMethod' function_pointer='true' declared_type='jmethodID (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jmethodID' type='^{_jmethodID=}'/>
    </field>
    <field name='FromReflectedField' function_pointer='true' declared_type='jfieldID (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jfieldID' type='^{_jfieldID=}'/>
    </field>
    <field name='ToReflectedMethod' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, jboolean)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetSuperclass' function_pointer='true' declared_type='jclass (*)(JNIEnv *, jclass)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <retval declared_type='jclass' type='^{_jobject=}'/>
    </field>
    <field name='IsAssignableFrom' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jclass, jclass)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='ToReflectedField' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jfieldID, jboolean)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='Throw' function_pointer='true' declared_type='jint (*)(JNIEnv *, jthrowable)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthrowable' type='^{_jobject=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='ThrowNew' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='ExceptionOccurred' function_pointer='true' declared_type='jthrowable (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jthrowable' type='^{_jobject=}'/>
    </field>
    <field name='ExceptionDescribe' function_pointer='true' declared_type='void (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ExceptionClear' function_pointer='true' declared_type='void (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='FatalError' function_pointer='true' declared_type='void (*)(JNIEnv *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='PushLocalFrame' function_pointer='true' declared_type='jint (*)(JNIEnv *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='PopLocalFrame' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='NewGlobalRef' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='DeleteGlobalRef' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='DeleteLocalRef' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='IsSameObject' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='NewLocalRef' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='EnsureLocalCapacity' function_pointer='true' declared_type='jint (*)(JNIEnv *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='AllocObject' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='NewObject' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='NewObjectV' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jobject (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='NewObjectA' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetObjectClass' function_pointer='true' declared_type='jclass (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jclass' type='^{_jobject=}'/>
    </field>
    <field name='IsInstanceOf' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jclass)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='GetMethodID' function_pointer='true' declared_type='jmethodID (*)(JNIEnv *, jclass, char *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jmethodID' type='^{_jmethodID=}'/>
    </field>
    <field name='CallObjectMethod' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallObjectMethodV' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jobject (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallObjectMethodA' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallBooleanMethod' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallBooleanMethodV' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jboolean (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallBooleanMethodA' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallByteMethod' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallByteMethodV' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jbyte (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallByteMethodA' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallCharMethod' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallCharMethodV' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jchar (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallCharMethodA' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallShortMethod' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallShortMethodV' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jshort (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallShortMethodA' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallIntMethod' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallIntMethodV' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jint (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallIntMethodA' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallLongMethod' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallLongMethodV' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jlong (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallLongMethodA' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallFloatMethod' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallFloatMethodV' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jfloat (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallFloatMethodA' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallDoubleMethod' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallDoubleMethodV' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jdouble (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallDoubleMethodA' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallVoidMethod' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallVoidMethodV' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='void (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallVoidMethodA' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallNonvirtualObjectMethod' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallNonvirtualObjectMethodV' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jobject (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallNonvirtualObjectMethodA' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallNonvirtualBooleanMethod' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallNonvirtualBooleanMethodV' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jboolean (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallNonvirtualBooleanMethodA' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallNonvirtualByteMethod' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallNonvirtualByteMethodV' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jbyte (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallNonvirtualByteMethodA' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallNonvirtualCharMethod' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallNonvirtualCharMethodV' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jchar (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallNonvirtualCharMethodA' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallNonvirtualShortMethod' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallNonvirtualShortMethodV' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jshort (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallNonvirtualShortMethodA' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallNonvirtualIntMethod' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallNonvirtualIntMethodV' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jint (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallNonvirtualIntMethodA' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallNonvirtualLongMethod' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallNonvirtualLongMethodV' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jlong (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallNonvirtualLongMethodA' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallNonvirtualFloatMethod' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallNonvirtualFloatMethodV' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jfloat (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallNonvirtualFloatMethodA' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallNonvirtualDoubleMethod' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallNonvirtualDoubleMethodV' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jdouble (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallNonvirtualDoubleMethodA' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallNonvirtualVoidMethod' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallNonvirtualVoidMethodV' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='void (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallNonvirtualVoidMethodA' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetFieldID' function_pointer='true' declared_type='jfieldID (*)(JNIEnv *, jclass, char *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jfieldID' type='^{_jfieldID=}'/>
    </field>
    <field name='GetObjectField' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetBooleanField' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='GetByteField' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='GetCharField' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='GetShortField' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='GetIntField' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetLongField' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='GetFloatField' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='GetDoubleField' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='SetObjectField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetBooleanField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jboolean)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetByteField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jbyte)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jbyte' type='c'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetCharField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jchar)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jchar' type='S'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetShortField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jshort)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jshort' type='s'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetIntField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetLongField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jlong)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetFloatField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jfloat)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jfloat' type='f'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetDoubleField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jdouble)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jdouble' type='d'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetStaticMethodID' function_pointer='true' declared_type='jmethodID (*)(JNIEnv *, jclass, char *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jmethodID' type='^{_jmethodID=}'/>
    </field>
    <field name='CallStaticObjectMethod' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallStaticObjectMethodV' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jobject (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallStaticObjectMethodA' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallStaticBooleanMethod' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallStaticBooleanMethodV' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jboolean (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallStaticBooleanMethodA' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallStaticByteMethod' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallStaticByteMethodV' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jbyte (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallStaticByteMethodA' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallStaticCharMethod' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallStaticCharMethodV' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jchar (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallStaticCharMethodA' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallStaticShortMethod' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallStaticShortMethodV' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jshort (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallStaticShortMethodA' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallStaticIntMethod' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallStaticIntMethodV' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jint (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallStaticIntMethodA' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallStaticLongMethod' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallStaticLongMethodV' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jlong (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallStaticLongMethodA' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallStaticFloatMethod' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallStaticFloatMethodV' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jfloat (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallStaticFloatMethodA' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallStaticDoubleMethod' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallStaticDoubleMethodV' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jdouble (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallStaticDoubleMethodA' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallStaticVoidMethod' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallStaticVoidMethodV' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='void (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallStaticVoidMethodA' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetStaticFieldID' function_pointer='true' declared_type='jfieldID (*)(JNIEnv *, jclass, char *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jfieldID' type='^{_jfieldID=}'/>
    </field>
    <field name='GetStaticObjectField' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetStaticBooleanField' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='GetStaticByteField' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='GetStaticCharField' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='GetStaticShortField' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='GetStaticIntField' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetStaticLongField' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='GetStaticFloatField' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='GetStaticDoubleField' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='SetStaticObjectField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticBooleanField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jboolean)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticByteField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jbyte)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jbyte' type='c'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticCharField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jchar)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jchar' type='S'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticShortField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jshort)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jshort' type='s'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticIntField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticLongField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jlong)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticFloatField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jfloat)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jfloat' type='f'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticDoubleField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jdouble)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jdouble' type='d'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='NewString' function_pointer='true' declared_type='jstring (*)(JNIEnv *, jchar *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jchar*' type='^S' const='true'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jstring' type='^{_jobject=}'/>
    </field>
    <field name='GetStringLength' function_pointer='true' declared_type='jsize (*)(JNIEnv *, jstring)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <retval declared_type='jsize' type='l' type64='i'/>
    </field>
    <field name='GetStringChars' function_pointer='true' declared_type='jchar *(*)(JNIEnv *, jstring, jboolean *)' type='^?' const='true'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jchar*' type='^S' const='true'/>
    </field>
    <field name='ReleaseStringChars' function_pointer='true' declared_type='void (*)(JNIEnv *, jstring, jchar *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jchar*' type='^S' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='NewStringUTF' function_pointer='true' declared_type='jstring (*)(JNIEnv *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jstring' type='^{_jobject=}'/>
    </field>
    <field name='GetStringUTFLength' function_pointer='true' declared_type='jsize (*)(JNIEnv *, jstring)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <retval declared_type='jsize' type='l' type64='i'/>
    </field>
    <field name='GetStringUTFChars' function_pointer='true' declared_type='char *(*)(JNIEnv *, jstring, jboolean *)' type='^?' const='true'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='char*' type='*' const='true'/>
    </field>
    <field name='ReleaseStringUTFChars' function_pointer='true' declared_type='void (*)(JNIEnv *, jstring, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetArrayLength' function_pointer='true' declared_type='jsize (*)(JNIEnv *, jarray)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jarray' type='^{_jobject=}'/>
      <retval declared_type='jsize' type='l' type64='i'/>
    </field>
    <field name='NewObjectArray' function_pointer='true' declared_type='jobjectArray (*)(JNIEnv *, jsize, jclass, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobjectArray' type='^{_jobject=}'/>
    </field>
    <field name='GetObjectArrayElement' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobjectArray, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobjectArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='SetObjectArrayElement' function_pointer='true' declared_type='void (*)(JNIEnv *, jobjectArray, jsize, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobjectArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='NewBooleanArray' function_pointer='true' declared_type='jbooleanArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jbooleanArray' type='^{_jobject=}'/>
    </field>
    <field name='NewByteArray' function_pointer='true' declared_type='jbyteArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jbyteArray' type='^{_jobject=}'/>
    </field>
    <field name='NewCharArray' function_pointer='true' declared_type='jcharArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jcharArray' type='^{_jobject=}'/>
    </field>
    <field name='NewShortArray' function_pointer='true' declared_type='jshortArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jshortArray' type='^{_jobject=}'/>
    </field>
    <field name='NewIntArray' function_pointer='true' declared_type='jintArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jintArray' type='^{_jobject=}'/>
    </field>
    <field name='NewLongArray' function_pointer='true' declared_type='jlongArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jlongArray' type='^{_jobject=}'/>
    </field>
    <field name='NewFloatArray' function_pointer='true' declared_type='jfloatArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jfloatArray' type='^{_jobject=}'/>
    </field>
    <field name='NewDoubleArray' function_pointer='true' declared_type='jdoubleArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jdoubleArray' type='^{_jobject=}'/>
    </field>
    <field name='GetBooleanArrayElements' function_pointer='true' declared_type='jboolean *(*)(JNIEnv *, jbooleanArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbooleanArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jboolean*' type='*'/>
    </field>
    <field name='GetByteArrayElements' function_pointer='true' declared_type='jbyte *(*)(JNIEnv *, jbyteArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbyteArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jbyte*' type='*'/>
    </field>
    <field name='GetCharArrayElements' function_pointer='true' declared_type='jchar *(*)(JNIEnv *, jcharArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jcharArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jchar*' type='^S'/>
    </field>
    <field name='GetShortArrayElements' function_pointer='true' declared_type='jshort *(*)(JNIEnv *, jshortArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jshortArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jshort*' type='^s'/>
    </field>
    <field name='GetIntArrayElements' function_pointer='true' declared_type='jint *(*)(JNIEnv *, jintArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jintArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jint*' type='^i'/>
    </field>
    <field name='GetLongArrayElements' function_pointer='true' declared_type='jlong *(*)(JNIEnv *, jlongArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jlongArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jlong*' type='^q'/>
    </field>
    <field name='GetFloatArrayElements' function_pointer='true' declared_type='jfloat *(*)(JNIEnv *, jfloatArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jfloatArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jfloat*' type='^f'/>
    </field>
    <field name='GetDoubleArrayElements' function_pointer='true' declared_type='jdouble *(*)(JNIEnv *, jdoubleArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jdoubleArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jdouble*' type='^d'/>
    </field>
    <field name='ReleaseBooleanArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jbooleanArray, jboolean *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbooleanArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseByteArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jbyteArray, jbyte *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbyteArray' type='^{_jobject=}'/>
      <arg declared_type='jbyte*' type='*'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseCharArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jcharArray, jchar *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jcharArray' type='^{_jobject=}'/>
      <arg declared_type='jchar*' type='^S'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseShortArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jshortArray, jshort *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jshortArray' type='^{_jobject=}'/>
      <arg declared_type='jshort*' type='^s'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseIntArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jintArray, jint *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jintArray' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseLongArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jlongArray, jlong *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jlongArray' type='^{_jobject=}'/>
      <arg declared_type='jlong*' type='^q'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseFloatArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jfloatArray, jfloat *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jfloatArray' type='^{_jobject=}'/>
      <arg declared_type='jfloat*' type='^f'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseDoubleArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jdoubleArray, jdouble *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jdoubleArray' type='^{_jobject=}'/>
      <arg declared_type='jdouble*' type='^d'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetBooleanArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jbooleanArray, jsize, jsize, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbooleanArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetByteArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jbyteArray, jsize, jsize, jbyte *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbyteArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jbyte*' type='*'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetCharArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jcharArray, jsize, jsize, jchar *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jcharArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jchar*' type='^S'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetShortArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jshortArray, jsize, jsize, jshort *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jshortArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jshort*' type='^s'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetIntArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jintArray, jsize, jsize, jint *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jintArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetLongArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jlongArray, jsize, jsize, jlong *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jlongArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetFloatArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jfloatArray, jsize, jsize, jfloat *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jfloatArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jfloat*' type='^f'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetDoubleArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jdoubleArray, jsize, jsize, jdouble *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jdoubleArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jdouble*' type='^d'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetBooleanArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jbooleanArray, jsize, jsize, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbooleanArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jboolean*' type='*' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetByteArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jbyteArray, jsize, jsize, jbyte *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbyteArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jbyte*' type='*' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetCharArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jcharArray, jsize, jsize, jchar *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jcharArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jchar*' type='^S' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetShortArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jshortArray, jsize, jsize, jshort *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jshortArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jshort*' type='^s' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetIntArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jintArray, jsize, jsize, jint *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jintArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jint*' type='^i' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetLongArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jlongArray, jsize, jsize, jlong *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jlongArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jlong*' type='^q' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetFloatArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jfloatArray, jsize, jsize, jfloat *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jfloatArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jfloat*' type='^f' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetDoubleArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jdoubleArray, jsize, jsize, jdouble *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jdoubleArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jdouble*' type='^d' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='RegisterNatives' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass, JNINativeMethod *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='JNINativeMethod*' type='^{_JNINativeMethod=**^v}' const='true'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='UnregisterNatives' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='MonitorEnter' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='MonitorExit' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetJavaVM' function_pointer='true' declared_type='jint (*)(JNIEnv *, JavaVM **)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='JavaVM**' type='^^^{JNIInvokeInterface_}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetStringRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jstring, jsize, jsize, jchar *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jchar*' type='^S'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetStringUTFRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jstring, jsize, jsize, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='char*' type='*'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetPrimitiveArrayCritical' function_pointer='true' declared_type='void *(*)(JNIEnv *, jarray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jarray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='void*' type='^v'/>
    </field>
    <field name='ReleasePrimitiveArrayCritical' function_pointer='true' declared_type='void (*)(JNIEnv *, jarray, void *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jarray' type='^{_jobject=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetStringCritical' function_pointer='true' declared_type='jchar *(*)(JNIEnv *, jstring, jboolean *)' type='^?' const='true'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jchar*' type='^S' const='true'/>
    </field>
    <field name='ReleaseStringCritical' function_pointer='true' declared_type='void (*)(JNIEnv *, jstring, jchar *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jchar*' type='^S' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='NewWeakGlobalRef' function_pointer='true' declared_type='jweak (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jweak' type='^{_jobject=}'/>
    </field>
    <field name='DeleteWeakGlobalRef' function_pointer='true' declared_type='void (*)(JNIEnv *, jweak)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jweak' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ExceptionCheck' function_pointer='true' declared_type='jboolean (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='NewDirectByteBuffer' function_pointer='true' declared_type='jobject (*)(JNIEnv *, void *, jlong)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetDirectBufferAddress' function_pointer='true' declared_type='void *(*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void*' type='^v'/>
    </field>
    <field name='GetDirectBufferCapacity' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jlong' type='q'/>
    </field>
  </struct>
  <struct name='JNIEnv_' type='{JNIEnv_=&quot;functions&quot;^{JNINativeInterface_}}'>
    <field name='functions' declared_type='struct JNINativeInterface_*' type='^{JNINativeInterface_=^v^v^v^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}' const='true'/>
  </struct>
  <struct name='JNIInvokeInterface_' type='{JNIInvokeInterface_=&quot;reserved0&quot;^v&quot;reserved1&quot;^v&quot;reserved2&quot;^v&quot;DestroyJavaVM&quot;^?&quot;AttachCurrentThread&quot;^?&quot;DetachCurrentThread&quot;^?&quot;GetEnv&quot;^?&quot;AttachCurrentThreadAsDaemon&quot;^?}'>
    <field name='reserved0' declared_type='void*' type='^v'/>
    <field name='reserved1' declared_type='void*' type='^v'/>
    <field name='reserved2' declared_type='void*' type='^v'/>
    <field name='DestroyJavaVM' function_pointer='true' declared_type='jint (*)(JavaVM *)' type='^?'>
      <arg declared_type='JavaVM*' type='^^{JNIInvokeInterface_}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='AttachCurrentThread' function_pointer='true' declared_type='jint (*)(JavaVM *, void **, void *)' type='^?'>
      <arg declared_type='JavaVM*' type='^^{JNIInvokeInterface_}'/>
      <arg declared_type='void**' type='^^v'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='DetachCurrentThread' function_pointer='true' declared_type='jint (*)(JavaVM *)' type='^?'>
      <arg declared_type='JavaVM*' type='^^{JNIInvokeInterface_}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetEnv' function_pointer='true' declared_type='jint (*)(JavaVM *, void **, jint)' type='^?'>
      <arg declared_type='JavaVM*' type='^^{JNIInvokeInterface_}'/>
      <arg declared_type='void**' type='^^v'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='AttachCurrentThreadAsDaemon' function_pointer='true' declared_type='jint (*)(JavaVM *, void **, void *)' type='^?'>
      <arg declared_type='JavaVM*' type='^^{JNIInvokeInterface_}'/>
      <arg declared_type='void**' type='^^v'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
  </struct>
  <struct name='JNINativeInterface_' type='{JNINativeInterface_=&quot;reserved0&quot;^v&quot;reserved1&quot;^v&quot;reserved2&quot;^v&quot;reserved3&quot;^v&quot;GetVersion&quot;^?&quot;DefineClass&quot;^?&quot;FindClass&quot;^?&quot;FromReflectedMethod&quot;^?&quot;FromReflectedField&quot;^?&quot;ToReflectedMethod&quot;^?&quot;GetSuperclass&quot;^?&quot;IsAssignableFrom&quot;^?&quot;ToReflectedField&quot;^?&quot;Throw&quot;^?&quot;ThrowNew&quot;^?&quot;ExceptionOccurred&quot;^?&quot;ExceptionDescribe&quot;^?&quot;ExceptionClear&quot;^?&quot;FatalError&quot;^?&quot;PushLocalFrame&quot;^?&quot;PopLocalFrame&quot;^?&quot;NewGlobalRef&quot;^?&quot;DeleteGlobalRef&quot;^?&quot;DeleteLocalRef&quot;^?&quot;IsSameObject&quot;^?&quot;NewLocalRef&quot;^?&quot;EnsureLocalCapacity&quot;^?&quot;AllocObject&quot;^?&quot;NewObject&quot;^?&quot;NewObjectV&quot;^?&quot;NewObjectA&quot;^?&quot;GetObjectClass&quot;^?&quot;IsInstanceOf&quot;^?&quot;GetMethodID&quot;^?&quot;CallObjectMethod&quot;^?&quot;CallObjectMethodV&quot;^?&quot;CallObjectMethodA&quot;^?&quot;CallBooleanMethod&quot;^?&quot;CallBooleanMethodV&quot;^?&quot;CallBooleanMethodA&quot;^?&quot;CallByteMethod&quot;^?&quot;CallByteMethodV&quot;^?&quot;CallByteMethodA&quot;^?&quot;CallCharMethod&quot;^?&quot;CallCharMethodV&quot;^?&quot;CallCharMethodA&quot;^?&quot;CallShortMethod&quot;^?&quot;CallShortMethodV&quot;^?&quot;CallShortMethodA&quot;^?&quot;CallIntMethod&quot;^?&quot;CallIntMethodV&quot;^?&quot;CallIntMethodA&quot;^?&quot;CallLongMethod&quot;^?&quot;CallLongMethodV&quot;^?&quot;CallLongMethodA&quot;^?&quot;CallFloatMethod&quot;^?&quot;CallFloatMethodV&quot;^?&quot;CallFloatMethodA&quot;^?&quot;CallDoubleMethod&quot;^?&quot;CallDoubleMethodV&quot;^?&quot;CallDoubleMethodA&quot;^?&quot;CallVoidMethod&quot;^?&quot;CallVoidMethodV&quot;^?&quot;CallVoidMethodA&quot;^?&quot;CallNonvirtualObjectMethod&quot;^?&quot;CallNonvirtualObjectMethodV&quot;^?&quot;CallNonvirtualObjectMethodA&quot;^?&quot;CallNonvirtualBooleanMethod&quot;^?&quot;CallNonvirtualBooleanMethodV&quot;^?&quot;CallNonvirtualBooleanMethodA&quot;^?&quot;CallNonvirtualByteMethod&quot;^?&quot;CallNonvirtualByteMethodV&quot;^?&quot;CallNonvirtualByteMethodA&quot;^?&quot;CallNonvirtualCharMethod&quot;^?&quot;CallNonvirtualCharMethodV&quot;^?&quot;CallNonvirtualCharMethodA&quot;^?&quot;CallNonvirtualShortMethod&quot;^?&quot;CallNonvirtualShortMethodV&quot;^?&quot;CallNonvirtualShortMethodA&quot;^?&quot;CallNonvirtualIntMethod&quot;^?&quot;CallNonvirtualIntMethodV&quot;^?&quot;CallNonvirtualIntMethodA&quot;^?&quot;CallNonvirtualLongMethod&quot;^?&quot;CallNonvirtualLongMethodV&quot;^?&quot;CallNonvirtualLongMethodA&quot;^?&quot;CallNonvirtualFloatMethod&quot;^?&quot;CallNonvirtualFloatMethodV&quot;^?&quot;CallNonvirtualFloatMethodA&quot;^?&quot;CallNonvirtualDoubleMethod&quot;^?&quot;CallNonvirtualDoubleMethodV&quot;^?&quot;CallNonvirtualDoubleMethodA&quot;^?&quot;CallNonvirtualVoidMethod&quot;^?&quot;CallNonvirtualVoidMethodV&quot;^?&quot;CallNonvirtualVoidMethodA&quot;^?&quot;GetFieldID&quot;^?&quot;GetObjectField&quot;^?&quot;GetBooleanField&quot;^?&quot;GetByteField&quot;^?&quot;GetCharField&quot;^?&quot;GetShortField&quot;^?&quot;GetIntField&quot;^?&quot;GetLongField&quot;^?&quot;GetFloatField&quot;^?&quot;GetDoubleField&quot;^?&quot;SetObjectField&quot;^?&quot;SetBooleanField&quot;^?&quot;SetByteField&quot;^?&quot;SetCharField&quot;^?&quot;SetShortField&quot;^?&quot;SetIntField&quot;^?&quot;SetLongField&quot;^?&quot;SetFloatField&quot;^?&quot;SetDoubleField&quot;^?&quot;GetStaticMethodID&quot;^?&quot;CallStaticObjectMethod&quot;^?&quot;CallStaticObjectMethodV&quot;^?&quot;CallStaticObjectMethodA&quot;^?&quot;CallStaticBooleanMethod&quot;^?&quot;CallStaticBooleanMethodV&quot;^?&quot;CallStaticBooleanMethodA&quot;^?&quot;CallStaticByteMethod&quot;^?&quot;CallStaticByteMethodV&quot;^?&quot;CallStaticByteMethodA&quot;^?&quot;CallStaticCharMethod&quot;^?&quot;CallStaticCharMethodV&quot;^?&quot;CallStaticCharMethodA&quot;^?&quot;CallStaticShortMethod&quot;^?&quot;CallStaticShortMethodV&quot;^?&quot;CallStaticShortMethodA&quot;^?&quot;CallStaticIntMethod&quot;^?&quot;CallStaticIntMethodV&quot;^?&quot;CallStaticIntMethodA&quot;^?&quot;CallStaticLongMethod&quot;^?&quot;CallStaticLongMethodV&quot;^?&quot;CallStaticLongMethodA&quot;^?&quot;CallStaticFloatMethod&quot;^?&quot;CallStaticFloatMethodV&quot;^?&quot;CallStaticFloatMethodA&quot;^?&quot;CallStaticDoubleMethod&quot;^?&quot;CallStaticDoubleMethodV&quot;^?&quot;CallStaticDoubleMethodA&quot;^?&quot;CallStaticVoidMethod&quot;^?&quot;CallStaticVoidMethodV&quot;^?&quot;CallStaticVoidMethodA&quot;^?&quot;GetStaticFieldID&quot;^?&quot;GetStaticObjectField&quot;^?&quot;GetStaticBooleanField&quot;^?&quot;GetStaticByteField&quot;^?&quot;GetStaticCharField&quot;^?&quot;GetStaticShortField&quot;^?&quot;GetStaticIntField&quot;^?&quot;GetStaticLongField&quot;^?&quot;GetStaticFloatField&quot;^?&quot;GetStaticDoubleField&quot;^?&quot;SetStaticObjectField&quot;^?&quot;SetStaticBooleanField&quot;^?&quot;SetStaticByteField&quot;^?&quot;SetStaticCharField&quot;^?&quot;SetStaticShortField&quot;^?&quot;SetStaticIntField&quot;^?&quot;SetStaticLongField&quot;^?&quot;SetStaticFloatField&quot;^?&quot;SetStaticDoubleField&quot;^?&quot;NewString&quot;^?&quot;GetStringLength&quot;^?&quot;GetStringChars&quot;^?&quot;ReleaseStringChars&quot;^?&quot;NewStringUTF&quot;^?&quot;GetStringUTFLength&quot;^?&quot;GetStringUTFChars&quot;^?&quot;ReleaseStringUTFChars&quot;^?&quot;GetArrayLength&quot;^?&quot;NewObjectArray&quot;^?&quot;GetObjectArrayElement&quot;^?&quot;SetObjectArrayElement&quot;^?&quot;NewBooleanArray&quot;^?&quot;NewByteArray&quot;^?&quot;NewCharArray&quot;^?&quot;NewShortArray&quot;^?&quot;NewIntArray&quot;^?&quot;NewLongArray&quot;^?&quot;NewFloatArray&quot;^?&quot;NewDoubleArray&quot;^?&quot;GetBooleanArrayElements&quot;^?&quot;GetByteArrayElements&quot;^?&quot;GetCharArrayElements&quot;^?&quot;GetShortArrayElements&quot;^?&quot;GetIntArrayElements&quot;^?&quot;GetLongArrayElements&quot;^?&quot;GetFloatArrayElements&quot;^?&quot;GetDoubleArrayElements&quot;^?&quot;ReleaseBooleanArrayElements&quot;^?&quot;ReleaseByteArrayElements&quot;^?&quot;ReleaseCharArrayElements&quot;^?&quot;ReleaseShortArrayElements&quot;^?&quot;ReleaseIntArrayElements&quot;^?&quot;ReleaseLongArrayElements&quot;^?&quot;ReleaseFloatArrayElements&quot;^?&quot;ReleaseDoubleArrayElements&quot;^?&quot;GetBooleanArrayRegion&quot;^?&quot;GetByteArrayRegion&quot;^?&quot;GetCharArrayRegion&quot;^?&quot;GetShortArrayRegion&quot;^?&quot;GetIntArrayRegion&quot;^?&quot;GetLongArrayRegion&quot;^?&quot;GetFloatArrayRegion&quot;^?&quot;GetDoubleArrayRegion&quot;^?&quot;SetBooleanArrayRegion&quot;^?&quot;SetByteArrayRegion&quot;^?&quot;SetCharArrayRegion&quot;^?&quot;SetShortArrayRegion&quot;^?&quot;SetIntArrayRegion&quot;^?&quot;SetLongArrayRegion&quot;^?&quot;SetFloatArrayRegion&quot;^?&quot;SetDoubleArrayRegion&quot;^?&quot;RegisterNatives&quot;^?&quot;UnregisterNatives&quot;^?&quot;MonitorEnter&quot;^?&quot;MonitorExit&quot;^?&quot;GetJavaVM&quot;^?&quot;GetStringRegion&quot;^?&quot;GetStringUTFRegion&quot;^?&quot;GetPrimitiveArrayCritical&quot;^?&quot;ReleasePrimitiveArrayCritical&quot;^?&quot;GetStringCritical&quot;^?&quot;ReleaseStringCritical&quot;^?&quot;NewWeakGlobalRef&quot;^?&quot;DeleteWeakGlobalRef&quot;^?&quot;ExceptionCheck&quot;^?&quot;NewDirectByteBuffer&quot;^?&quot;GetDirectBufferAddress&quot;^?&quot;GetDirectBufferCapacity&quot;^?}'>
    <field name='reserved0' declared_type='void*' type='^v'/>
    <field name='reserved1' declared_type='void*' type='^v'/>
    <field name='reserved2' declared_type='void*' type='^v'/>
    <field name='reserved3' declared_type='void*' type='^v'/>
    <field name='GetVersion' function_pointer='true' declared_type='jint (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='DefineClass' function_pointer='true' declared_type='jclass (*)(JNIEnv *, char *, jobject, jbyte *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jbyte*' type='*' const='true'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jclass' type='^{_jobject=}'/>
    </field>
    <field name='FindClass' function_pointer='true' declared_type='jclass (*)(JNIEnv *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jclass' type='^{_jobject=}'/>
    </field>
    <field name='FromReflectedMethod' function_pointer='true' declared_type='jmethodID (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jmethodID' type='^{_jmethodID=}'/>
    </field>
    <field name='FromReflectedField' function_pointer='true' declared_type='jfieldID (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jfieldID' type='^{_jfieldID=}'/>
    </field>
    <field name='ToReflectedMethod' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, jboolean)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetSuperclass' function_pointer='true' declared_type='jclass (*)(JNIEnv *, jclass)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <retval declared_type='jclass' type='^{_jobject=}'/>
    </field>
    <field name='IsAssignableFrom' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jclass, jclass)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='ToReflectedField' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jfieldID, jboolean)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='Throw' function_pointer='true' declared_type='jint (*)(JNIEnv *, jthrowable)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthrowable' type='^{_jobject=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='ThrowNew' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='ExceptionOccurred' function_pointer='true' declared_type='jthrowable (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jthrowable' type='^{_jobject=}'/>
    </field>
    <field name='ExceptionDescribe' function_pointer='true' declared_type='void (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ExceptionClear' function_pointer='true' declared_type='void (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='FatalError' function_pointer='true' declared_type='void (*)(JNIEnv *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='PushLocalFrame' function_pointer='true' declared_type='jint (*)(JNIEnv *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='PopLocalFrame' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='NewGlobalRef' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='DeleteGlobalRef' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='DeleteLocalRef' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='IsSameObject' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='NewLocalRef' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='EnsureLocalCapacity' function_pointer='true' declared_type='jint (*)(JNIEnv *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='AllocObject' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='NewObject' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='NewObjectV' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jobject (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='NewObjectA' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetObjectClass' function_pointer='true' declared_type='jclass (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jclass' type='^{_jobject=}'/>
    </field>
    <field name='IsInstanceOf' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jclass)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='GetMethodID' function_pointer='true' declared_type='jmethodID (*)(JNIEnv *, jclass, char *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jmethodID' type='^{_jmethodID=}'/>
    </field>
    <field name='CallObjectMethod' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallObjectMethodV' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jobject (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallObjectMethodA' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallBooleanMethod' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallBooleanMethodV' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jboolean (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallBooleanMethodA' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallByteMethod' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallByteMethodV' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jbyte (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallByteMethodA' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallCharMethod' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallCharMethodV' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jchar (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallCharMethodA' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallShortMethod' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallShortMethodV' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jshort (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallShortMethodA' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallIntMethod' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallIntMethodV' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jint (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallIntMethodA' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallLongMethod' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallLongMethodV' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jlong (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallLongMethodA' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallFloatMethod' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallFloatMethodV' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jfloat (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallFloatMethodA' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallDoubleMethod' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallDoubleMethodV' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jdouble (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallDoubleMethodA' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallVoidMethod' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallVoidMethodV' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='void (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallVoidMethodA' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallNonvirtualObjectMethod' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallNonvirtualObjectMethodV' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jobject (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallNonvirtualObjectMethodA' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallNonvirtualBooleanMethod' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallNonvirtualBooleanMethodV' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jboolean (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallNonvirtualBooleanMethodA' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallNonvirtualByteMethod' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallNonvirtualByteMethodV' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jbyte (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallNonvirtualByteMethodA' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallNonvirtualCharMethod' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallNonvirtualCharMethodV' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jchar (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallNonvirtualCharMethodA' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallNonvirtualShortMethod' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallNonvirtualShortMethodV' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jshort (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallNonvirtualShortMethodA' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallNonvirtualIntMethod' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallNonvirtualIntMethodV' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jint (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallNonvirtualIntMethodA' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallNonvirtualLongMethod' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallNonvirtualLongMethodV' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jlong (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallNonvirtualLongMethodA' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallNonvirtualFloatMethod' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallNonvirtualFloatMethodV' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jfloat (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallNonvirtualFloatMethodA' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallNonvirtualDoubleMethod' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallNonvirtualDoubleMethodV' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jdouble (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallNonvirtualDoubleMethodA' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallNonvirtualVoidMethod' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallNonvirtualVoidMethodV' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='void (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallNonvirtualVoidMethodA' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetFieldID' function_pointer='true' declared_type='jfieldID (*)(JNIEnv *, jclass, char *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jfieldID' type='^{_jfieldID=}'/>
    </field>
    <field name='GetObjectField' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetBooleanField' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='GetByteField' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='GetCharField' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='GetShortField' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='GetIntField' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetLongField' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='GetFloatField' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='GetDoubleField' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='SetObjectField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetBooleanField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jboolean)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetByteField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jbyte)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jbyte' type='c'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetCharField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jchar)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jchar' type='S'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetShortField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jshort)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jshort' type='s'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetIntField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetLongField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jlong)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetFloatField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jfloat)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jfloat' type='f'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetDoubleField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jdouble)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jdouble' type='d'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetStaticMethodID' function_pointer='true' declared_type='jmethodID (*)(JNIEnv *, jclass, char *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jmethodID' type='^{_jmethodID=}'/>
    </field>
    <field name='CallStaticObjectMethod' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallStaticObjectMethodV' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jobject (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallStaticObjectMethodA' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallStaticBooleanMethod' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallStaticBooleanMethodV' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jboolean (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallStaticBooleanMethodA' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallStaticByteMethod' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallStaticByteMethodV' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jbyte (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallStaticByteMethodA' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallStaticCharMethod' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallStaticCharMethodV' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jchar (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallStaticCharMethodA' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallStaticShortMethod' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallStaticShortMethodV' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jshort (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallStaticShortMethodA' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallStaticIntMethod' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallStaticIntMethodV' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jint (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallStaticIntMethodA' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallStaticLongMethod' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallStaticLongMethodV' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jlong (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallStaticLongMethodA' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallStaticFloatMethod' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallStaticFloatMethodV' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jfloat (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallStaticFloatMethodA' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallStaticDoubleMethod' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallStaticDoubleMethodV' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jdouble (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallStaticDoubleMethodA' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallStaticVoidMethod' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallStaticVoidMethodV' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='void (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallStaticVoidMethodA' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetStaticFieldID' function_pointer='true' declared_type='jfieldID (*)(JNIEnv *, jclass, char *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jfieldID' type='^{_jfieldID=}'/>
    </field>
    <field name='GetStaticObjectField' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetStaticBooleanField' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='GetStaticByteField' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='GetStaticCharField' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='GetStaticShortField' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='GetStaticIntField' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetStaticLongField' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='GetStaticFloatField' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='GetStaticDoubleField' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='SetStaticObjectField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticBooleanField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jboolean)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticByteField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jbyte)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jbyte' type='c'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticCharField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jchar)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jchar' type='S'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticShortField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jshort)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jshort' type='s'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticIntField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticLongField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jlong)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticFloatField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jfloat)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jfloat' type='f'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticDoubleField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jdouble)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jdouble' type='d'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='NewString' function_pointer='true' declared_type='jstring (*)(JNIEnv *, jchar *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jchar*' type='^S' const='true'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jstring' type='^{_jobject=}'/>
    </field>
    <field name='GetStringLength' function_pointer='true' declared_type='jsize (*)(JNIEnv *, jstring)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <retval declared_type='jsize' type='l' type64='i'/>
    </field>
    <field name='GetStringChars' function_pointer='true' declared_type='jchar *(*)(JNIEnv *, jstring, jboolean *)' type='^?' const='true'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jchar*' type='^S' const='true'/>
    </field>
    <field name='ReleaseStringChars' function_pointer='true' declared_type='void (*)(JNIEnv *, jstring, jchar *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jchar*' type='^S' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='NewStringUTF' function_pointer='true' declared_type='jstring (*)(JNIEnv *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jstring' type='^{_jobject=}'/>
    </field>
    <field name='GetStringUTFLength' function_pointer='true' declared_type='jsize (*)(JNIEnv *, jstring)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <retval declared_type='jsize' type='l' type64='i'/>
    </field>
    <field name='GetStringUTFChars' function_pointer='true' declared_type='char *(*)(JNIEnv *, jstring, jboolean *)' type='^?' const='true'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='char*' type='*' const='true'/>
    </field>
    <field name='ReleaseStringUTFChars' function_pointer='true' declared_type='void (*)(JNIEnv *, jstring, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetArrayLength' function_pointer='true' declared_type='jsize (*)(JNIEnv *, jarray)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jarray' type='^{_jobject=}'/>
      <retval declared_type='jsize' type='l' type64='i'/>
    </field>
    <field name='NewObjectArray' function_pointer='true' declared_type='jobjectArray (*)(JNIEnv *, jsize, jclass, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobjectArray' type='^{_jobject=}'/>
    </field>
    <field name='GetObjectArrayElement' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobjectArray, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobjectArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='SetObjectArrayElement' function_pointer='true' declared_type='void (*)(JNIEnv *, jobjectArray, jsize, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobjectArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='NewBooleanArray' function_pointer='true' declared_type='jbooleanArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jbooleanArray' type='^{_jobject=}'/>
    </field>
    <field name='NewByteArray' function_pointer='true' declared_type='jbyteArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jbyteArray' type='^{_jobject=}'/>
    </field>
    <field name='NewCharArray' function_pointer='true' declared_type='jcharArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jcharArray' type='^{_jobject=}'/>
    </field>
    <field name='NewShortArray' function_pointer='true' declared_type='jshortArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jshortArray' type='^{_jobject=}'/>
    </field>
    <field name='NewIntArray' function_pointer='true' declared_type='jintArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jintArray' type='^{_jobject=}'/>
    </field>
    <field name='NewLongArray' function_pointer='true' declared_type='jlongArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jlongArray' type='^{_jobject=}'/>
    </field>
    <field name='NewFloatArray' function_pointer='true' declared_type='jfloatArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jfloatArray' type='^{_jobject=}'/>
    </field>
    <field name='NewDoubleArray' function_pointer='true' declared_type='jdoubleArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jdoubleArray' type='^{_jobject=}'/>
    </field>
    <field name='GetBooleanArrayElements' function_pointer='true' declared_type='jboolean *(*)(JNIEnv *, jbooleanArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbooleanArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jboolean*' type='*'/>
    </field>
    <field name='GetByteArrayElements' function_pointer='true' declared_type='jbyte *(*)(JNIEnv *, jbyteArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbyteArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jbyte*' type='*'/>
    </field>
    <field name='GetCharArrayElements' function_pointer='true' declared_type='jchar *(*)(JNIEnv *, jcharArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jcharArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jchar*' type='^S'/>
    </field>
    <field name='GetShortArrayElements' function_pointer='true' declared_type='jshort *(*)(JNIEnv *, jshortArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jshortArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jshort*' type='^s'/>
    </field>
    <field name='GetIntArrayElements' function_pointer='true' declared_type='jint *(*)(JNIEnv *, jintArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jintArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jint*' type='^i'/>
    </field>
    <field name='GetLongArrayElements' function_pointer='true' declared_type='jlong *(*)(JNIEnv *, jlongArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jlongArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jlong*' type='^q'/>
    </field>
    <field name='GetFloatArrayElements' function_pointer='true' declared_type='jfloat *(*)(JNIEnv *, jfloatArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jfloatArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jfloat*' type='^f'/>
    </field>
    <field name='GetDoubleArrayElements' function_pointer='true' declared_type='jdouble *(*)(JNIEnv *, jdoubleArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jdoubleArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jdouble*' type='^d'/>
    </field>
    <field name='ReleaseBooleanArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jbooleanArray, jboolean *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbooleanArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseByteArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jbyteArray, jbyte *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbyteArray' type='^{_jobject=}'/>
      <arg declared_type='jbyte*' type='*'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseCharArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jcharArray, jchar *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jcharArray' type='^{_jobject=}'/>
      <arg declared_type='jchar*' type='^S'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseShortArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jshortArray, jshort *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jshortArray' type='^{_jobject=}'/>
      <arg declared_type='jshort*' type='^s'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseIntArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jintArray, jint *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jintArray' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseLongArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jlongArray, jlong *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jlongArray' type='^{_jobject=}'/>
      <arg declared_type='jlong*' type='^q'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseFloatArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jfloatArray, jfloat *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jfloatArray' type='^{_jobject=}'/>
      <arg declared_type='jfloat*' type='^f'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseDoubleArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jdoubleArray, jdouble *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jdoubleArray' type='^{_jobject=}'/>
      <arg declared_type='jdouble*' type='^d'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetBooleanArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jbooleanArray, jsize, jsize, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbooleanArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetByteArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jbyteArray, jsize, jsize, jbyte *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbyteArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jbyte*' type='*'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetCharArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jcharArray, jsize, jsize, jchar *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jcharArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jchar*' type='^S'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetShortArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jshortArray, jsize, jsize, jshort *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jshortArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jshort*' type='^s'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetIntArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jintArray, jsize, jsize, jint *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jintArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetLongArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jlongArray, jsize, jsize, jlong *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jlongArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetFloatArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jfloatArray, jsize, jsize, jfloat *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jfloatArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jfloat*' type='^f'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetDoubleArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jdoubleArray, jsize, jsize, jdouble *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jdoubleArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jdouble*' type='^d'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetBooleanArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jbooleanArray, jsize, jsize, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbooleanArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jboolean*' type='*' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetByteArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jbyteArray, jsize, jsize, jbyte *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbyteArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jbyte*' type='*' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetCharArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jcharArray, jsize, jsize, jchar *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jcharArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jchar*' type='^S' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetShortArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jshortArray, jsize, jsize, jshort *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jshortArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jshort*' type='^s' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetIntArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jintArray, jsize, jsize, jint *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jintArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jint*' type='^i' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetLongArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jlongArray, jsize, jsize, jlong *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jlongArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jlong*' type='^q' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetFloatArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jfloatArray, jsize, jsize, jfloat *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jfloatArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jfloat*' type='^f' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetDoubleArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jdoubleArray, jsize, jsize, jdouble *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jdoubleArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jdouble*' type='^d' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='RegisterNatives' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass, JNINativeMethod *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='JNINativeMethod*' type='^{_JNINativeMethod=**^v}' const='true'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='UnregisterNatives' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='MonitorEnter' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='MonitorExit' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetJavaVM' function_pointer='true' declared_type='jint (*)(JNIEnv *, JavaVM **)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='JavaVM**' type='^^^{JNIInvokeInterface_}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetStringRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jstring, jsize, jsize, jchar *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jchar*' type='^S'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetStringUTFRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jstring, jsize, jsize, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='char*' type='*'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetPrimitiveArrayCritical' function_pointer='true' declared_type='void *(*)(JNIEnv *, jarray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jarray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='void*' type='^v'/>
    </field>
    <field name='ReleasePrimitiveArrayCritical' function_pointer='true' declared_type='void (*)(JNIEnv *, jarray, void *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jarray' type='^{_jobject=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetStringCritical' function_pointer='true' declared_type='jchar *(*)(JNIEnv *, jstring, jboolean *)' type='^?' const='true'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jchar*' type='^S' const='true'/>
    </field>
    <field name='ReleaseStringCritical' function_pointer='true' declared_type='void (*)(JNIEnv *, jstring, jchar *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jchar*' type='^S' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='NewWeakGlobalRef' function_pointer='true' declared_type='jweak (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jweak' type='^{_jobject=}'/>
    </field>
    <field name='DeleteWeakGlobalRef' function_pointer='true' declared_type='void (*)(JNIEnv *, jweak)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jweak' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ExceptionCheck' function_pointer='true' declared_type='jboolean (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='NewDirectByteBuffer' function_pointer='true' declared_type='jobject (*)(JNIEnv *, void *, jlong)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetDirectBufferAddress' function_pointer='true' declared_type='void *(*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void*' type='^v'/>
    </field>
    <field name='GetDirectBufferCapacity' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jlong' type='q'/>
    </field>
  </struct>
  <struct name='JNINativeMethod' type='{_JNINativeMethod=&quot;name&quot;*&quot;signature&quot;*&quot;fnPtr&quot;^v}'>
    <field name='name' declared_type='char*' type='*'/>
    <field name='signature' declared_type='char*' type='*'/>
    <field name='fnPtr' declared_type='void*' type='^v'/>
  </struct>
  <struct name='JVMDI_Event' type='{_JVMDI_Event=&quot;kind&quot;i&quot;u&quot;(?=&quot;single_step&quot;{?=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;location&quot;q}&quot;breakpoint&quot;{?=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;location&quot;q}&quot;frame&quot;{?=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;frame&quot;^{_jframeID}}&quot;field_access&quot;{?=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;location&quot;q&quot;field_clazz&quot;^{_jobject}&quot;object&quot;^{_jobject}&quot;field&quot;^{_jfieldID}}&quot;field_modification&quot;{?=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;location&quot;q&quot;field_clazz&quot;^{_jobject}&quot;object&quot;^{_jobject}&quot;field&quot;^{_jfieldID}&quot;signature_type&quot;c&quot;new_value&quot;(jvalue=&quot;z&quot;C&quot;b&quot;c&quot;c&quot;S&quot;s&quot;s&quot;i&quot;i&quot;j&quot;q&quot;f&quot;f&quot;d&quot;d&quot;l&quot;^{_jobject})}&quot;exception&quot;{?=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;location&quot;q&quot;exception&quot;^{_jobject}&quot;catch_clazz&quot;^{_jobject}&quot;catch_method&quot;^{_jmethodID}&quot;catch_location&quot;q}&quot;exception_catch&quot;{?=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;location&quot;q&quot;exception&quot;^{_jobject}}&quot;user&quot;{?=&quot;object&quot;^{_jobject}&quot;key&quot;i}&quot;thread_change&quot;{?=&quot;thread&quot;^{_jobject}}&quot;class_event&quot;{?=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}})}'>
    <field name='kind' declared_type='jint' type='l' type64='i'/>
    <field name='u' declared_type='union JVMDI_Event::' type='(?=&quot;single_step&quot;{?=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;location&quot;q}&quot;breakpoint&quot;{?=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;location&quot;q}&quot;frame&quot;{?=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;frame&quot;^{_jframeID}}&quot;field_access&quot;{?=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;location&quot;q&quot;field_clazz&quot;^{_jobject}&quot;object&quot;^{_jobject}&quot;field&quot;^{_jfieldID}}&quot;field_modification&quot;{?=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;location&quot;q&quot;field_clazz&quot;^{_jobject}&quot;object&quot;^{_jobject}&quot;field&quot;^{_jfieldID}&quot;signature_type&quot;c&quot;new_value&quot;(jvalue=&quot;z&quot;C&quot;b&quot;c&quot;c&quot;S&quot;s&quot;s&quot;i&quot;i&quot;j&quot;q&quot;f&quot;f&quot;d&quot;d&quot;l&quot;^{_jobject})}&quot;exception&quot;{?=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;location&quot;q&quot;exception&quot;^{_jobject}&quot;catch_clazz&quot;^{_jobject}&quot;catch_method&quot;^{_jmethodID}&quot;catch_location&quot;q}&quot;exception_catch&quot;{?=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;location&quot;q&quot;exception&quot;^{_jobject}}&quot;user&quot;{?=&quot;object&quot;^{_jobject}&quot;key&quot;i}&quot;thread_change&quot;{?=&quot;thread&quot;^{_jobject}}&quot;class_event&quot;{?=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}})'/>
  </struct>
  <struct name='JVMDI_Interface_1' type='{JVMDI_Interface_1_=&quot;SetEventHook&quot;^?&quot;SetEventNotificationMode&quot;^?&quot;GetThreadStatus&quot;^?&quot;GetAllThreads&quot;^?&quot;SuspendThread&quot;^?&quot;ResumeThread&quot;^?&quot;StopThread&quot;^?&quot;InterruptThread&quot;^?&quot;GetThreadInfo&quot;^?&quot;GetOwnedMonitorInfo&quot;^?&quot;GetCurrentContendedMonitor&quot;^?&quot;RunDebugThread&quot;^?&quot;GetTopThreadGroups&quot;^?&quot;GetThreadGroupInfo&quot;^?&quot;GetThreadGroupChildren&quot;^?&quot;GetFrameCount&quot;^?&quot;GetCurrentFrame&quot;^?&quot;GetCallerFrame&quot;^?&quot;GetFrameLocation&quot;^?&quot;NotifyFramePop&quot;^?&quot;GetLocalObject&quot;^?&quot;GetLocalInt&quot;^?&quot;GetLocalLong&quot;^?&quot;GetLocalFloat&quot;^?&quot;GetLocalDouble&quot;^?&quot;SetLocalObject&quot;^?&quot;SetLocalInt&quot;^?&quot;SetLocalLong&quot;^?&quot;SetLocalFloat&quot;^?&quot;SetLocalDouble&quot;^?&quot;CreateRawMonitor&quot;^?&quot;DestroyRawMonitor&quot;^?&quot;RawMonitorEnter&quot;^?&quot;RawMonitorExit&quot;^?&quot;RawMonitorWait&quot;^?&quot;RawMonitorNotify&quot;^?&quot;RawMonitorNotifyAll&quot;^?&quot;SetBreakpoint&quot;^?&quot;ClearBreakpoint&quot;^?&quot;ClearAllBreakpoints&quot;^?&quot;SetFieldAccessWatch&quot;^?&quot;ClearFieldAccessWatch&quot;^?&quot;SetFieldModificationWatch&quot;^?&quot;ClearFieldModificationWatch&quot;^?&quot;SetAllocationHooks&quot;^?&quot;Allocate&quot;^?&quot;Deallocate&quot;^?&quot;GetClassSignature&quot;^?&quot;GetClassStatus&quot;^?&quot;GetSourceFileName&quot;^?&quot;GetClassModifiers&quot;^?&quot;GetClassMethods&quot;^?&quot;GetClassFields&quot;^?&quot;GetImplementedInterfaces&quot;^?&quot;IsInterface&quot;^?&quot;IsArrayClass&quot;^?&quot;GetClassLoader&quot;^?&quot;GetObjectHashCode&quot;^?&quot;GetMonitorInfo&quot;^?&quot;GetFieldName&quot;^?&quot;GetFieldDeclaringClass&quot;^?&quot;GetFieldModifiers&quot;^?&quot;IsFieldSynthetic&quot;^?&quot;GetMethodName&quot;^?&quot;GetMethodDeclaringClass&quot;^?&quot;GetMethodModifiers&quot;^?&quot;GetMaxStack&quot;^?&quot;GetMaxLocals&quot;^?&quot;GetArgumentsSize&quot;^?&quot;GetLineNumberTable&quot;^?&quot;GetMethodLocation&quot;^?&quot;GetLocalVariableTable&quot;^?&quot;GetExceptionHandlerTable&quot;^?&quot;GetThrownExceptions&quot;^?&quot;GetBytecodes&quot;^?&quot;IsMethodNative&quot;^?&quot;IsMethodSynthetic&quot;^?&quot;GetLoadedClasses&quot;^?&quot;GetClassLoaderClasses&quot;^?&quot;PopFrame&quot;^?&quot;SetFrameLocation&quot;^?&quot;GetOperandStack&quot;^?&quot;SetOperandStack&quot;^?&quot;AllInstances&quot;^?&quot;References&quot;^?&quot;GetClassDefinition&quot;^?&quot;RedefineClasses&quot;^?&quot;GetVersionNumber&quot;^?&quot;GetCapabilities&quot;^?&quot;GetSourceDebugExtension&quot;^?&quot;IsMethodObsolete&quot;^?&quot;SuspendThreadList&quot;^?&quot;ResumeThreadList&quot;^?}'>
    <field name='SetEventHook' function_pointer='true' declared_type='jvmdiError (*)(JVMDI_EventHook)' type='^?'>
      <arg declared_type='JVMDI_EventHook' type='^?'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetEventNotificationMode' function_pointer='true' declared_type='jvmdiError (*)(jint, jint, jthread, ...)' type='^?'>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetThreadStatus' function_pointer='true' declared_type='jvmdiError (*)(jthread, jint *, jint *)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetAllThreads' function_pointer='true' declared_type='jvmdiError (*)(jint *, jthread **)' type='^?'>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jthread**' type='^^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SuspendThread' function_pointer='true' declared_type='jvmdiError (*)(jthread)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='ResumeThread' function_pointer='true' declared_type='jvmdiError (*)(jthread)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='StopThread' function_pointer='true' declared_type='jvmdiError (*)(jthread, jobject)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='InterruptThread' function_pointer='true' declared_type='jvmdiError (*)(jthread)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetThreadInfo' function_pointer='true' declared_type='jvmdiError (*)(jthread, JVMDI_thread_info *)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='JVMDI_thread_info*' type='^{_JVMDI_thread_info=*iC^{_jobject}^{_jobject}}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetOwnedMonitorInfo' function_pointer='true' declared_type='jvmdiError (*)(jthread, JVMDI_owned_monitor_info *)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='JVMDI_owned_monitor_info*' type='^{_JVMDI_owned_monitor_info=i^^{_jobject}}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetCurrentContendedMonitor' function_pointer='true' declared_type='jvmdiError (*)(jthread, jobject *)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jobject*' type='^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='RunDebugThread' function_pointer='true' declared_type='jvmdiError (*)(jthread, JVMDI_StartFunction, void *, int)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='JVMDI_StartFunction' type='^?'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='int' type='i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetTopThreadGroups' function_pointer='true' declared_type='jvmdiError (*)(jint *, jthreadGroup **)' type='^?'>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jthreadGroup**' type='^^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetThreadGroupInfo' function_pointer='true' declared_type='jvmdiError (*)(jthreadGroup, JVMDI_thread_group_info *)' type='^?'>
      <arg declared_type='jthreadGroup' type='^{_jobject=}'/>
      <arg declared_type='JVMDI_thread_group_info*' type='^{_JVMDI_thread_group_info=^{_jobject}*iC}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetThreadGroupChildren' function_pointer='true' declared_type='jvmdiError (*)(jthreadGroup, jint *, jthread **, jint *, jthreadGroup **)' type='^?'>
      <arg declared_type='jthreadGroup' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jthread**' type='^^^{_jobject}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jthreadGroup**' type='^^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetFrameCount' function_pointer='true' declared_type='jvmdiError (*)(jthread, jint *)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetCurrentFrame' function_pointer='true' declared_type='jvmdiError (*)(jthread, jframeID *)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jframeID*' type='^^{_jframeID}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetCallerFrame' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jframeID *)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jframeID*' type='^^{_jframeID}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetFrameLocation' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jclass *, jmethodID *, jlocation *)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jclass*' type='^^{_jobject}'/>
      <arg declared_type='jmethodID*' type='^^{_jmethodID}'/>
      <arg declared_type='jlocation*' type='^q'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='NotifyFramePop' function_pointer='true' declared_type='jvmdiError (*)(jframeID)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetLocalObject' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, jobject *)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jobject*' type='^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetLocalInt' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, jint *)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetLocalLong' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, jlong *)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetLocalFloat' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, jfloat *)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jfloat*' type='^f'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetLocalDouble' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, jdouble *)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jdouble*' type='^d'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetLocalObject' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, jobject)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetLocalInt' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, jint)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetLocalLong' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, jlong)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetLocalFloat' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, jfloat)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jfloat' type='f'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetLocalDouble' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, jdouble)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jdouble' type='d'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='CreateRawMonitor' function_pointer='true' declared_type='jvmdiError (*)(char *, JVMDI_RawMonitor *)' type='^?'>
      <arg declared_type='char*' type='*'/>
      <arg declared_type='JVMDI_RawMonitor*' type='^^v'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='DestroyRawMonitor' function_pointer='true' declared_type='jvmdiError (*)(JVMDI_RawMonitor)' type='^?'>
      <arg declared_type='JVMDI_RawMonitor' type='^v'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='RawMonitorEnter' function_pointer='true' declared_type='jvmdiError (*)(JVMDI_RawMonitor)' type='^?'>
      <arg declared_type='JVMDI_RawMonitor' type='^v'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='RawMonitorExit' function_pointer='true' declared_type='jvmdiError (*)(JVMDI_RawMonitor)' type='^?'>
      <arg declared_type='JVMDI_RawMonitor' type='^v'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='RawMonitorWait' function_pointer='true' declared_type='jvmdiError (*)(JVMDI_RawMonitor, jlong)' type='^?'>
      <arg declared_type='JVMDI_RawMonitor' type='^v'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='RawMonitorNotify' function_pointer='true' declared_type='jvmdiError (*)(JVMDI_RawMonitor)' type='^?'>
      <arg declared_type='JVMDI_RawMonitor' type='^v'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='RawMonitorNotifyAll' function_pointer='true' declared_type='jvmdiError (*)(JVMDI_RawMonitor)' type='^?'>
      <arg declared_type='JVMDI_RawMonitor' type='^v'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetBreakpoint' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jlocation)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation' type='q'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='ClearBreakpoint' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jlocation)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation' type='q'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='ClearAllBreakpoints' function_pointer='true' declared_type='jvmdiError (*)()' type='^?'>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetFieldAccessWatch' function_pointer='true' declared_type='jvmdiError (*)(jclass, jfieldID)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='ClearFieldAccessWatch' function_pointer='true' declared_type='jvmdiError (*)(jclass, jfieldID)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetFieldModificationWatch' function_pointer='true' declared_type='jvmdiError (*)(jclass, jfieldID)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='ClearFieldModificationWatch' function_pointer='true' declared_type='jvmdiError (*)(jclass, jfieldID)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetAllocationHooks' function_pointer='true' declared_type='jvmdiError (*)(JVMDI_AllocHook, JVMDI_DeallocHook)' type='^?'>
      <arg declared_type='JVMDI_AllocHook' type='^?'/>
      <arg declared_type='JVMDI_DeallocHook' type='^?'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='Allocate' function_pointer='true' declared_type='jvmdiError (*)(jlong, jbyte **)' type='^?'>
      <arg declared_type='jlong' type='q'/>
      <arg declared_type='jbyte**' type='^*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='Deallocate' function_pointer='true' declared_type='jvmdiError (*)(jbyte *)' type='^?'>
      <arg declared_type='jbyte*' type='*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetClassSignature' function_pointer='true' declared_type='jvmdiError (*)(jclass, char **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetClassStatus' function_pointer='true' declared_type='jvmdiError (*)(jclass, jint *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetSourceFileName' function_pointer='true' declared_type='jvmdiError (*)(jclass, char **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetClassModifiers' function_pointer='true' declared_type='jvmdiError (*)(jclass, jint *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetClassMethods' function_pointer='true' declared_type='jvmdiError (*)(jclass, jint *, jmethodID **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jmethodID**' type='^^^{_jmethodID}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetClassFields' function_pointer='true' declared_type='jvmdiError (*)(jclass, jint *, jfieldID **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jfieldID**' type='^^^{_jfieldID}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetImplementedInterfaces' function_pointer='true' declared_type='jvmdiError (*)(jclass, jint *, jclass **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jclass**' type='^^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='IsInterface' function_pointer='true' declared_type='jvmdiError (*)(jclass, jboolean *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='IsArrayClass' function_pointer='true' declared_type='jvmdiError (*)(jclass, jboolean *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetClassLoader' function_pointer='true' declared_type='jvmdiError (*)(jclass, jobject *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jobject*' type='^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetObjectHashCode' function_pointer='true' declared_type='jvmdiError (*)(jobject, jint *)' type='^?'>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetMonitorInfo' function_pointer='true' declared_type='jvmdiError (*)(jobject, JVMDI_monitor_info *)' type='^?'>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='JVMDI_monitor_info*' type='^{_JVMDI_monitor_info=^{_jobject}ii^^{_jobject}}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetFieldName' function_pointer='true' declared_type='jvmdiError (*)(jclass, jfieldID, char **, char **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='char**' type='^*'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetFieldDeclaringClass' function_pointer='true' declared_type='jvmdiError (*)(jclass, jfieldID, jclass *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jclass*' type='^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetFieldModifiers' function_pointer='true' declared_type='jvmdiError (*)(jclass, jfieldID, jint *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='IsFieldSynthetic' function_pointer='true' declared_type='jvmdiError (*)(jclass, jfieldID, jboolean *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetMethodName' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, char **, char **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='char**' type='^*'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetMethodDeclaringClass' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jclass *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jclass*' type='^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetMethodModifiers' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jint *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetMaxStack' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jint *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetMaxLocals' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jint *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetArgumentsSize' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jint *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetLineNumberTable' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jint *, JVMDI_line_number_entry **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='JVMDI_line_number_entry**' type='^^{?}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetMethodLocation' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jlocation *, jlocation *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation*' type='^q'/>
      <arg declared_type='jlocation*' type='^q'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetLocalVariableTable' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jint *, JVMDI_local_variable_entry **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='JVMDI_local_variable_entry**' type='^^{?}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetExceptionHandlerTable' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jint *, JVMDI_exception_handler_entry **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='JVMDI_exception_handler_entry**' type='^^{?}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetThrownExceptions' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jint *, jclass **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jclass**' type='^^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetBytecodes' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jint *, jbyte **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jbyte**' type='^*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='IsMethodNative' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jboolean *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='IsMethodSynthetic' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jboolean *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetLoadedClasses' function_pointer='true' declared_type='jvmdiError (*)(jint *, jclass **)' type='^?'>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jclass**' type='^^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetClassLoaderClasses' function_pointer='true' declared_type='jvmdiError (*)(jobject, jint *, jclass **)' type='^?'>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jclass**' type='^^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='PopFrame' function_pointer='true' declared_type='jvmdiError (*)(jthread)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetFrameLocation' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jlocation)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jlocation' type='q'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetOperandStack' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint *, JVMDI_operand_stack_element **)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='JVMDI_operand_stack_element**' type='^^{?}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetOperandStack' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, JVMDI_operand_stack_element *)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='JVMDI_operand_stack_element*' type='^{_JVMDI_operand_stack_element=ii}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='AllInstances' function_pointer='true' declared_type='jvmdiError (*)(jclass, jint *, jobject **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jobject**' type='^^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='References' function_pointer='true' declared_type='jvmdiError (*)(jobject, JVMDI_object_reference_info *)' type='^?'>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='JVMDI_object_reference_info*' type='^{_JVMDI_object_reference_info=i^{JVMDI_instance_field}i^{JVMDI_static_field}i^{JVMDI_array_element}i^{JVMDI_frame_slot}}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetClassDefinition' function_pointer='true' declared_type='jvmdiError (*)(jclass, JVMDI_class_definition *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='JVMDI_class_definition*' type='^{_JVMDI_class_definition=^{_jobject}i*}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='RedefineClasses' function_pointer='true' declared_type='jvmdiError (*)(jint, JVMDI_class_definition *)' type='^?'>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='JVMDI_class_definition*' type='^{_JVMDI_class_definition=^{_jobject}i*}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetVersionNumber' function_pointer='true' declared_type='jvmdiError (*)(jint *)' type='^?'>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetCapabilities' function_pointer='true' declared_type='jvmdiError (*)(JVMDI_capabilities *)' type='^?'>
      <arg declared_type='JVMDI_capabilities*' type='^{_JVMDI_capabilities=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetSourceDebugExtension' function_pointer='true' declared_type='jvmdiError (*)(jclass, char **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='IsMethodObsolete' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jboolean *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SuspendThreadList' function_pointer='true' declared_type='jvmdiError (*)(jint, jthread *, jvmdiError *)' type='^?'>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jthread*' type='^^{_jobject}'/>
      <arg declared_type='jvmdiError*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='ResumeThreadList' function_pointer='true' declared_type='jvmdiError (*)(jint, jthread *, jvmdiError *)' type='^?'>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jthread*' type='^^{_jobject}'/>
      <arg declared_type='jvmdiError*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
  </struct>
  <struct name='JVMDI_Interface_1_' type='{JVMDI_Interface_1_=&quot;SetEventHook&quot;^?&quot;SetEventNotificationMode&quot;^?&quot;GetThreadStatus&quot;^?&quot;GetAllThreads&quot;^?&quot;SuspendThread&quot;^?&quot;ResumeThread&quot;^?&quot;StopThread&quot;^?&quot;InterruptThread&quot;^?&quot;GetThreadInfo&quot;^?&quot;GetOwnedMonitorInfo&quot;^?&quot;GetCurrentContendedMonitor&quot;^?&quot;RunDebugThread&quot;^?&quot;GetTopThreadGroups&quot;^?&quot;GetThreadGroupInfo&quot;^?&quot;GetThreadGroupChildren&quot;^?&quot;GetFrameCount&quot;^?&quot;GetCurrentFrame&quot;^?&quot;GetCallerFrame&quot;^?&quot;GetFrameLocation&quot;^?&quot;NotifyFramePop&quot;^?&quot;GetLocalObject&quot;^?&quot;GetLocalInt&quot;^?&quot;GetLocalLong&quot;^?&quot;GetLocalFloat&quot;^?&quot;GetLocalDouble&quot;^?&quot;SetLocalObject&quot;^?&quot;SetLocalInt&quot;^?&quot;SetLocalLong&quot;^?&quot;SetLocalFloat&quot;^?&quot;SetLocalDouble&quot;^?&quot;CreateRawMonitor&quot;^?&quot;DestroyRawMonitor&quot;^?&quot;RawMonitorEnter&quot;^?&quot;RawMonitorExit&quot;^?&quot;RawMonitorWait&quot;^?&quot;RawMonitorNotify&quot;^?&quot;RawMonitorNotifyAll&quot;^?&quot;SetBreakpoint&quot;^?&quot;ClearBreakpoint&quot;^?&quot;ClearAllBreakpoints&quot;^?&quot;SetFieldAccessWatch&quot;^?&quot;ClearFieldAccessWatch&quot;^?&quot;SetFieldModificationWatch&quot;^?&quot;ClearFieldModificationWatch&quot;^?&quot;SetAllocationHooks&quot;^?&quot;Allocate&quot;^?&quot;Deallocate&quot;^?&quot;GetClassSignature&quot;^?&quot;GetClassStatus&quot;^?&quot;GetSourceFileName&quot;^?&quot;GetClassModifiers&quot;^?&quot;GetClassMethods&quot;^?&quot;GetClassFields&quot;^?&quot;GetImplementedInterfaces&quot;^?&quot;IsInterface&quot;^?&quot;IsArrayClass&quot;^?&quot;GetClassLoader&quot;^?&quot;GetObjectHashCode&quot;^?&quot;GetMonitorInfo&quot;^?&quot;GetFieldName&quot;^?&quot;GetFieldDeclaringClass&quot;^?&quot;GetFieldModifiers&quot;^?&quot;IsFieldSynthetic&quot;^?&quot;GetMethodName&quot;^?&quot;GetMethodDeclaringClass&quot;^?&quot;GetMethodModifiers&quot;^?&quot;GetMaxStack&quot;^?&quot;GetMaxLocals&quot;^?&quot;GetArgumentsSize&quot;^?&quot;GetLineNumberTable&quot;^?&quot;GetMethodLocation&quot;^?&quot;GetLocalVariableTable&quot;^?&quot;GetExceptionHandlerTable&quot;^?&quot;GetThrownExceptions&quot;^?&quot;GetBytecodes&quot;^?&quot;IsMethodNative&quot;^?&quot;IsMethodSynthetic&quot;^?&quot;GetLoadedClasses&quot;^?&quot;GetClassLoaderClasses&quot;^?&quot;PopFrame&quot;^?&quot;SetFrameLocation&quot;^?&quot;GetOperandStack&quot;^?&quot;SetOperandStack&quot;^?&quot;AllInstances&quot;^?&quot;References&quot;^?&quot;GetClassDefinition&quot;^?&quot;RedefineClasses&quot;^?&quot;GetVersionNumber&quot;^?&quot;GetCapabilities&quot;^?&quot;GetSourceDebugExtension&quot;^?&quot;IsMethodObsolete&quot;^?&quot;SuspendThreadList&quot;^?&quot;ResumeThreadList&quot;^?}'>
    <field name='SetEventHook' function_pointer='true' declared_type='jvmdiError (*)(JVMDI_EventHook)' type='^?'>
      <arg declared_type='JVMDI_EventHook' type='^?'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetEventNotificationMode' function_pointer='true' declared_type='jvmdiError (*)(jint, jint, jthread, ...)' type='^?'>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetThreadStatus' function_pointer='true' declared_type='jvmdiError (*)(jthread, jint *, jint *)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetAllThreads' function_pointer='true' declared_type='jvmdiError (*)(jint *, jthread **)' type='^?'>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jthread**' type='^^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SuspendThread' function_pointer='true' declared_type='jvmdiError (*)(jthread)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='ResumeThread' function_pointer='true' declared_type='jvmdiError (*)(jthread)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='StopThread' function_pointer='true' declared_type='jvmdiError (*)(jthread, jobject)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='InterruptThread' function_pointer='true' declared_type='jvmdiError (*)(jthread)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetThreadInfo' function_pointer='true' declared_type='jvmdiError (*)(jthread, JVMDI_thread_info *)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='JVMDI_thread_info*' type='^{_JVMDI_thread_info=*iC^{_jobject}^{_jobject}}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetOwnedMonitorInfo' function_pointer='true' declared_type='jvmdiError (*)(jthread, JVMDI_owned_monitor_info *)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='JVMDI_owned_monitor_info*' type='^{_JVMDI_owned_monitor_info=i^^{_jobject}}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetCurrentContendedMonitor' function_pointer='true' declared_type='jvmdiError (*)(jthread, jobject *)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jobject*' type='^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='RunDebugThread' function_pointer='true' declared_type='jvmdiError (*)(jthread, JVMDI_StartFunction, void *, int)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='JVMDI_StartFunction' type='^?'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='int' type='i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetTopThreadGroups' function_pointer='true' declared_type='jvmdiError (*)(jint *, jthreadGroup **)' type='^?'>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jthreadGroup**' type='^^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetThreadGroupInfo' function_pointer='true' declared_type='jvmdiError (*)(jthreadGroup, JVMDI_thread_group_info *)' type='^?'>
      <arg declared_type='jthreadGroup' type='^{_jobject=}'/>
      <arg declared_type='JVMDI_thread_group_info*' type='^{_JVMDI_thread_group_info=^{_jobject}*iC}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetThreadGroupChildren' function_pointer='true' declared_type='jvmdiError (*)(jthreadGroup, jint *, jthread **, jint *, jthreadGroup **)' type='^?'>
      <arg declared_type='jthreadGroup' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jthread**' type='^^^{_jobject}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jthreadGroup**' type='^^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetFrameCount' function_pointer='true' declared_type='jvmdiError (*)(jthread, jint *)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetCurrentFrame' function_pointer='true' declared_type='jvmdiError (*)(jthread, jframeID *)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jframeID*' type='^^{_jframeID}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetCallerFrame' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jframeID *)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jframeID*' type='^^{_jframeID}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetFrameLocation' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jclass *, jmethodID *, jlocation *)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jclass*' type='^^{_jobject}'/>
      <arg declared_type='jmethodID*' type='^^{_jmethodID}'/>
      <arg declared_type='jlocation*' type='^q'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='NotifyFramePop' function_pointer='true' declared_type='jvmdiError (*)(jframeID)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetLocalObject' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, jobject *)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jobject*' type='^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetLocalInt' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, jint *)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetLocalLong' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, jlong *)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetLocalFloat' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, jfloat *)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jfloat*' type='^f'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetLocalDouble' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, jdouble *)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jdouble*' type='^d'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetLocalObject' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, jobject)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetLocalInt' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, jint)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetLocalLong' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, jlong)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetLocalFloat' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, jfloat)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jfloat' type='f'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetLocalDouble' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, jdouble)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jdouble' type='d'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='CreateRawMonitor' function_pointer='true' declared_type='jvmdiError (*)(char *, JVMDI_RawMonitor *)' type='^?'>
      <arg declared_type='char*' type='*'/>
      <arg declared_type='JVMDI_RawMonitor*' type='^^v'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='DestroyRawMonitor' function_pointer='true' declared_type='jvmdiError (*)(JVMDI_RawMonitor)' type='^?'>
      <arg declared_type='JVMDI_RawMonitor' type='^v'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='RawMonitorEnter' function_pointer='true' declared_type='jvmdiError (*)(JVMDI_RawMonitor)' type='^?'>
      <arg declared_type='JVMDI_RawMonitor' type='^v'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='RawMonitorExit' function_pointer='true' declared_type='jvmdiError (*)(JVMDI_RawMonitor)' type='^?'>
      <arg declared_type='JVMDI_RawMonitor' type='^v'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='RawMonitorWait' function_pointer='true' declared_type='jvmdiError (*)(JVMDI_RawMonitor, jlong)' type='^?'>
      <arg declared_type='JVMDI_RawMonitor' type='^v'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='RawMonitorNotify' function_pointer='true' declared_type='jvmdiError (*)(JVMDI_RawMonitor)' type='^?'>
      <arg declared_type='JVMDI_RawMonitor' type='^v'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='RawMonitorNotifyAll' function_pointer='true' declared_type='jvmdiError (*)(JVMDI_RawMonitor)' type='^?'>
      <arg declared_type='JVMDI_RawMonitor' type='^v'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetBreakpoint' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jlocation)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation' type='q'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='ClearBreakpoint' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jlocation)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation' type='q'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='ClearAllBreakpoints' function_pointer='true' declared_type='jvmdiError (*)()' type='^?'>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetFieldAccessWatch' function_pointer='true' declared_type='jvmdiError (*)(jclass, jfieldID)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='ClearFieldAccessWatch' function_pointer='true' declared_type='jvmdiError (*)(jclass, jfieldID)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetFieldModificationWatch' function_pointer='true' declared_type='jvmdiError (*)(jclass, jfieldID)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='ClearFieldModificationWatch' function_pointer='true' declared_type='jvmdiError (*)(jclass, jfieldID)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetAllocationHooks' function_pointer='true' declared_type='jvmdiError (*)(JVMDI_AllocHook, JVMDI_DeallocHook)' type='^?'>
      <arg declared_type='JVMDI_AllocHook' type='^?'/>
      <arg declared_type='JVMDI_DeallocHook' type='^?'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='Allocate' function_pointer='true' declared_type='jvmdiError (*)(jlong, jbyte **)' type='^?'>
      <arg declared_type='jlong' type='q'/>
      <arg declared_type='jbyte**' type='^*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='Deallocate' function_pointer='true' declared_type='jvmdiError (*)(jbyte *)' type='^?'>
      <arg declared_type='jbyte*' type='*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetClassSignature' function_pointer='true' declared_type='jvmdiError (*)(jclass, char **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetClassStatus' function_pointer='true' declared_type='jvmdiError (*)(jclass, jint *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetSourceFileName' function_pointer='true' declared_type='jvmdiError (*)(jclass, char **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetClassModifiers' function_pointer='true' declared_type='jvmdiError (*)(jclass, jint *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetClassMethods' function_pointer='true' declared_type='jvmdiError (*)(jclass, jint *, jmethodID **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jmethodID**' type='^^^{_jmethodID}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetClassFields' function_pointer='true' declared_type='jvmdiError (*)(jclass, jint *, jfieldID **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jfieldID**' type='^^^{_jfieldID}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetImplementedInterfaces' function_pointer='true' declared_type='jvmdiError (*)(jclass, jint *, jclass **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jclass**' type='^^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='IsInterface' function_pointer='true' declared_type='jvmdiError (*)(jclass, jboolean *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='IsArrayClass' function_pointer='true' declared_type='jvmdiError (*)(jclass, jboolean *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetClassLoader' function_pointer='true' declared_type='jvmdiError (*)(jclass, jobject *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jobject*' type='^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetObjectHashCode' function_pointer='true' declared_type='jvmdiError (*)(jobject, jint *)' type='^?'>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetMonitorInfo' function_pointer='true' declared_type='jvmdiError (*)(jobject, JVMDI_monitor_info *)' type='^?'>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='JVMDI_monitor_info*' type='^{_JVMDI_monitor_info=^{_jobject}ii^^{_jobject}}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetFieldName' function_pointer='true' declared_type='jvmdiError (*)(jclass, jfieldID, char **, char **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='char**' type='^*'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetFieldDeclaringClass' function_pointer='true' declared_type='jvmdiError (*)(jclass, jfieldID, jclass *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jclass*' type='^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetFieldModifiers' function_pointer='true' declared_type='jvmdiError (*)(jclass, jfieldID, jint *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='IsFieldSynthetic' function_pointer='true' declared_type='jvmdiError (*)(jclass, jfieldID, jboolean *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetMethodName' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, char **, char **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='char**' type='^*'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetMethodDeclaringClass' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jclass *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jclass*' type='^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetMethodModifiers' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jint *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetMaxStack' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jint *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetMaxLocals' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jint *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetArgumentsSize' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jint *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetLineNumberTable' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jint *, JVMDI_line_number_entry **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='JVMDI_line_number_entry**' type='^^{?}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetMethodLocation' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jlocation *, jlocation *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation*' type='^q'/>
      <arg declared_type='jlocation*' type='^q'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetLocalVariableTable' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jint *, JVMDI_local_variable_entry **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='JVMDI_local_variable_entry**' type='^^{?}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetExceptionHandlerTable' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jint *, JVMDI_exception_handler_entry **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='JVMDI_exception_handler_entry**' type='^^{?}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetThrownExceptions' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jint *, jclass **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jclass**' type='^^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetBytecodes' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jint *, jbyte **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jbyte**' type='^*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='IsMethodNative' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jboolean *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='IsMethodSynthetic' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jboolean *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetLoadedClasses' function_pointer='true' declared_type='jvmdiError (*)(jint *, jclass **)' type='^?'>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jclass**' type='^^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetClassLoaderClasses' function_pointer='true' declared_type='jvmdiError (*)(jobject, jint *, jclass **)' type='^?'>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jclass**' type='^^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='PopFrame' function_pointer='true' declared_type='jvmdiError (*)(jthread)' type='^?'>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetFrameLocation' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jlocation)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jlocation' type='q'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetOperandStack' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint *, JVMDI_operand_stack_element **)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='JVMDI_operand_stack_element**' type='^^{?}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SetOperandStack' function_pointer='true' declared_type='jvmdiError (*)(jframeID, jint, JVMDI_operand_stack_element *)' type='^?'>
      <arg declared_type='jframeID' type='^{_jframeID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='JVMDI_operand_stack_element*' type='^{_JVMDI_operand_stack_element=ii}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='AllInstances' function_pointer='true' declared_type='jvmdiError (*)(jclass, jint *, jobject **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jobject**' type='^^^{_jobject}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='References' function_pointer='true' declared_type='jvmdiError (*)(jobject, JVMDI_object_reference_info *)' type='^?'>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='JVMDI_object_reference_info*' type='^{_JVMDI_object_reference_info=i^{JVMDI_instance_field}i^{JVMDI_static_field}i^{JVMDI_array_element}i^{JVMDI_frame_slot}}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetClassDefinition' function_pointer='true' declared_type='jvmdiError (*)(jclass, JVMDI_class_definition *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='JVMDI_class_definition*' type='^{_JVMDI_class_definition=^{_jobject}i*}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='RedefineClasses' function_pointer='true' declared_type='jvmdiError (*)(jint, JVMDI_class_definition *)' type='^?'>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='JVMDI_class_definition*' type='^{_JVMDI_class_definition=^{_jobject}i*}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetVersionNumber' function_pointer='true' declared_type='jvmdiError (*)(jint *)' type='^?'>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetCapabilities' function_pointer='true' declared_type='jvmdiError (*)(JVMDI_capabilities *)' type='^?'>
      <arg declared_type='JVMDI_capabilities*' type='^{_JVMDI_capabilities=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='GetSourceDebugExtension' function_pointer='true' declared_type='jvmdiError (*)(jclass, char **)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='IsMethodObsolete' function_pointer='true' declared_type='jvmdiError (*)(jclass, jmethodID, jboolean *)' type='^?'>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='SuspendThreadList' function_pointer='true' declared_type='jvmdiError (*)(jint, jthread *, jvmdiError *)' type='^?'>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jthread*' type='^^{_jobject}'/>
      <arg declared_type='jvmdiError*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
    <field name='ResumeThreadList' function_pointer='true' declared_type='jvmdiError (*)(jint, jthread *, jvmdiError *)' type='^?'>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jthread*' type='^^{_jobject}'/>
      <arg declared_type='jvmdiError*' type='^i'/>
      <retval declared_type='jvmdiError' type='l' type64='i'/>
    </field>
  </struct>
  <struct name='JVMDI_breakpoint_event_data' type='{_JVMDI_breakpoint_event_data=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;location&quot;q}'>
    <field name='thread' declared_type='jthread' type='^{_jobject=}'/>
    <field name='clazz' declared_type='jclass' type='^{_jobject=}'/>
    <field name='method' declared_type='jmethodID' type='^{_jmethodID=}'/>
    <field name='location' declared_type='jlocation' type='q'/>
  </struct>
  <struct name='JVMDI_capabilities' type='{_JVMDI_capabilities=&quot;can_watch_field_modification&quot;b1&quot;can_watch_field_access&quot;b1&quot;can_get_bytecodes&quot;b1&quot;can_get_synthetic_attribute&quot;b1&quot;can_get_owned_monitor_info&quot;b1&quot;can_get_current_contended_monitor&quot;b1&quot;can_get_monitor_info&quot;b1&quot;can_get_heap_info&quot;b1&quot;can_get_operand_stack&quot;b1&quot;can_set_operand_stack&quot;b1&quot;can_pop_frame&quot;b1&quot;can_get_class_definition&quot;b1&quot;can_redefine_classes&quot;b1&quot;can_add_method&quot;b1&quot;can_unrestrictedly_redefine_classes&quot;b1&quot;can_suspend_resume_thread_lists&quot;b1}'>
    <field name='can_watch_field_modification' declared_type='unsigned int' type='b1'/>
    <field name='can_watch_field_access' declared_type='unsigned int' type='b1'/>
    <field name='can_get_bytecodes' declared_type='unsigned int' type='b1'/>
    <field name='can_get_synthetic_attribute' declared_type='unsigned int' type='b1'/>
    <field name='can_get_owned_monitor_info' declared_type='unsigned int' type='b1'/>
    <field name='can_get_current_contended_monitor' declared_type='unsigned int' type='b1'/>
    <field name='can_get_monitor_info' declared_type='unsigned int' type='b1'/>
    <field name='can_get_heap_info' declared_type='unsigned int' type='b1'/>
    <field name='can_get_operand_stack' declared_type='unsigned int' type='b1'/>
    <field name='can_set_operand_stack' declared_type='unsigned int' type='b1'/>
    <field name='can_pop_frame' declared_type='unsigned int' type='b1'/>
    <field name='can_get_class_definition' declared_type='unsigned int' type='b1'/>
    <field name='can_redefine_classes' declared_type='unsigned int' type='b1'/>
    <field name='can_add_method' declared_type='unsigned int' type='b1'/>
    <field name='can_unrestrictedly_redefine_classes' declared_type='unsigned int' type='b1'/>
    <field name='can_suspend_resume_thread_lists' declared_type='unsigned int' type='b1'/>
  </struct>
  <struct name='JVMDI_class_definition' type='{_JVMDI_class_definition=&quot;clazz&quot;^{_jobject}&quot;class_byte_count&quot;i&quot;class_bytes&quot;*}'>
    <field name='clazz' declared_type='jclass' type='^{_jobject=}'/>
    <field name='class_byte_count' declared_type='jint' type='l' type64='i'/>
    <field name='class_bytes' declared_type='jbyte*' type='*'/>
  </struct>
  <struct name='JVMDI_class_event_data' type='{_JVMDI_class_event_data=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}}'>
    <field name='thread' declared_type='jthread' type='^{_jobject=}'/>
    <field name='clazz' declared_type='jclass' type='^{_jobject=}'/>
  </struct>
  <struct name='JVMDI_exception_catch_event_data' type='{_JVMDI_exception_catch_event_data=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;location&quot;q&quot;exception&quot;^{_jobject}}'>
    <field name='thread' declared_type='jthread' type='^{_jobject=}'/>
    <field name='clazz' declared_type='jclass' type='^{_jobject=}'/>
    <field name='method' declared_type='jmethodID' type='^{_jmethodID=}'/>
    <field name='location' declared_type='jlocation' type='q'/>
    <field name='exception' declared_type='jobject' type='^{_jobject=}'/>
  </struct>
  <struct name='JVMDI_exception_event_data' type='{_JVMDI_exception_event_data=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;location&quot;q&quot;exception&quot;^{_jobject}&quot;catch_clazz&quot;^{_jobject}&quot;catch_method&quot;^{_jmethodID}&quot;catch_location&quot;q}'>
    <field name='thread' declared_type='jthread' type='^{_jobject=}'/>
    <field name='clazz' declared_type='jclass' type='^{_jobject=}'/>
    <field name='method' declared_type='jmethodID' type='^{_jmethodID=}'/>
    <field name='location' declared_type='jlocation' type='q'/>
    <field name='exception' declared_type='jobject' type='^{_jobject=}'/>
    <field name='catch_clazz' declared_type='jclass' type='^{_jobject=}'/>
    <field name='catch_method' declared_type='jmethodID' type='^{_jmethodID=}'/>
    <field name='catch_location' declared_type='jlocation' type='q'/>
  </struct>
  <struct name='JVMDI_exception_handler_entry' type='{_JVMDI_exception_handler_entry=&quot;start_location&quot;q&quot;end_location&quot;q&quot;handler_location&quot;q&quot;exception&quot;^{_jobject}}'>
    <field name='start_location' declared_type='jlocation' type='q'/>
    <field name='end_location' declared_type='jlocation' type='q'/>
    <field name='handler_location' declared_type='jlocation' type='q'/>
    <field name='exception' declared_type='jclass' type='^{_jobject=}'/>
  </struct>
  <struct name='JVMDI_field_access_event_data' type='{_JVMDI_field_access_event_data=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;location&quot;q&quot;field_clazz&quot;^{_jobject}&quot;object&quot;^{_jobject}&quot;field&quot;^{_jfieldID}}'>
    <field name='thread' declared_type='jthread' type='^{_jobject=}'/>
    <field name='clazz' declared_type='jclass' type='^{_jobject=}'/>
    <field name='method' declared_type='jmethodID' type='^{_jmethodID=}'/>
    <field name='location' declared_type='jlocation' type='q'/>
    <field name='field_clazz' declared_type='jclass' type='^{_jobject=}'/>
    <field name='object' declared_type='jobject' type='^{_jobject=}'/>
    <field name='field' declared_type='jfieldID' type='^{_jfieldID=}'/>
  </struct>
  <struct name='JVMDI_field_modification_event_data' type='{_JVMDI_field_modification_event_data=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;location&quot;q&quot;field_clazz&quot;^{_jobject}&quot;object&quot;^{_jobject}&quot;field&quot;^{_jfieldID}&quot;signature_type&quot;c&quot;new_value&quot;(jvalue=&quot;z&quot;C&quot;b&quot;c&quot;c&quot;S&quot;s&quot;s&quot;i&quot;i&quot;j&quot;q&quot;f&quot;f&quot;d&quot;d&quot;l&quot;^{_jobject})}'>
    <field name='thread' declared_type='jthread' type='^{_jobject=}'/>
    <field name='clazz' declared_type='jclass' type='^{_jobject=}'/>
    <field name='method' declared_type='jmethodID' type='^{_jmethodID=}'/>
    <field name='location' declared_type='jlocation' type='q'/>
    <field name='field_clazz' declared_type='jclass' type='^{_jobject=}'/>
    <field name='object' declared_type='jobject' type='^{_jobject=}'/>
    <field name='field' declared_type='jfieldID' type='^{_jfieldID=}'/>
    <field name='signature_type' declared_type='char' type='c'/>
    <field name='new_value' declared_type='jvalue' type='(jvalue=&quot;z&quot;C&quot;b&quot;c&quot;c&quot;S&quot;s&quot;s&quot;i&quot;i&quot;j&quot;q&quot;f&quot;f&quot;d&quot;d&quot;l&quot;^{_jobject})'/>
  </struct>
  <struct name='JVMDI_frame_event_data' type='{_JVMDI_frame_event_data=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;frame&quot;^{_jframeID}}'>
    <field name='thread' declared_type='jthread' type='^{_jobject=}'/>
    <field name='clazz' declared_type='jclass' type='^{_jobject=}'/>
    <field name='method' declared_type='jmethodID' type='^{_jmethodID=}'/>
    <field name='frame' declared_type='jframeID' type='^{_jframeID=}'/>
  </struct>
  <struct name='JVMDI_line_number_entry' type='{_JVMDI_line_number_entry=&quot;start_location&quot;q&quot;line_number&quot;i}'>
    <field name='start_location' declared_type='jlocation' type='q'/>
    <field name='line_number' declared_type='jint' type='l' type64='i'/>
  </struct>
  <struct name='JVMDI_local_variable_entry' type='{_JVMDI_local_variable_entry=&quot;start_location&quot;q&quot;length&quot;i&quot;name&quot;*&quot;signature&quot;*&quot;slot&quot;i}'>
    <field name='start_location' declared_type='jlocation' type='q'/>
    <field name='length' declared_type='jint' type='l' type64='i'/>
    <field name='name' declared_type='char*' type='*'/>
    <field name='signature' declared_type='char*' type='*'/>
    <field name='slot' declared_type='jint' type='l' type64='i'/>
  </struct>
  <struct name='JVMDI_monitor_info' type='{_JVMDI_monitor_info=&quot;owner&quot;^{_jobject}&quot;entry_count&quot;i&quot;waiter_count&quot;i&quot;waiters&quot;^^{_jobject}}'>
    <field name='owner' declared_type='jthread' type='^{_jobject=}'/>
    <field name='entry_count' declared_type='jint' type='l' type64='i'/>
    <field name='waiter_count' declared_type='jint' type='l' type64='i'/>
    <field name='waiters' declared_type='jthread*' type='^^{_jobject}'/>
  </struct>
  <struct name='JVMDI_object_reference_info' type='{_JVMDI_object_reference_info=&quot;instance_field_count&quot;i&quot;instance_fields&quot;^{JVMDI_instance_field}&quot;static_field_count&quot;i&quot;static_fields&quot;^{JVMDI_static_field}&quot;array_element_count&quot;i&quot;array_elements&quot;^{JVMDI_array_element}&quot;frame_slot_count&quot;i&quot;frame_slots&quot;^{JVMDI_frame_slot}}'>
    <field name='instance_field_count' declared_type='jint' type='l' type64='i'/>
    <field name='instance_fields' declared_type='struct JVMDI_instance_field*' type='^{JVMDI_instance_field=^{_jobject}^{_jfieldID}}'/>
    <field name='static_field_count' declared_type='jint' type='l' type64='i'/>
    <field name='static_fields' declared_type='struct JVMDI_static_field*' type='^{JVMDI_static_field=^{_jobject}^{_jfieldID}}'/>
    <field name='array_element_count' declared_type='jint' type='l' type64='i'/>
    <field name='array_elements' declared_type='struct JVMDI_array_element*' type='^{JVMDI_array_element=^{_jobject}i}'/>
    <field name='frame_slot_count' declared_type='jint' type='l' type64='i'/>
    <field name='frame_slots' declared_type='struct JVMDI_frame_slot*' type='^{JVMDI_frame_slot=^{_jobject}^{_jframeID}i}'/>
  </struct>
  <struct name='JVMDI_operand_stack_element' type='{_JVMDI_operand_stack_element=&quot;word&quot;i&quot;type&quot;i}'>
    <field name='word' declared_type='jint' type='l' type64='i'/>
    <field name='type' declared_type='jint' type='l' type64='i'/>
  </struct>
  <struct name='JVMDI_owned_monitor_info' type='{_JVMDI_owned_monitor_info=&quot;owned_monitor_count&quot;i&quot;owned_monitors&quot;^^{_jobject}}'>
    <field name='owned_monitor_count' declared_type='jint' type='l' type64='i'/>
    <field name='owned_monitors' declared_type='jobject*' type='^^{_jobject}'/>
  </struct>
  <struct name='JVMDI_single_step_event_data' type='{_JVMDI_single_step_event_data=&quot;thread&quot;^{_jobject}&quot;clazz&quot;^{_jobject}&quot;method&quot;^{_jmethodID}&quot;location&quot;q}'>
    <field name='thread' declared_type='jthread' type='^{_jobject=}'/>
    <field name='clazz' declared_type='jclass' type='^{_jobject=}'/>
    <field name='method' declared_type='jmethodID' type='^{_jmethodID=}'/>
    <field name='location' declared_type='jlocation' type='q'/>
  </struct>
  <struct name='JVMDI_thread_change_event_data' type='{_JVMDI_thread_change_event_data=&quot;thread&quot;^{_jobject}}'>
    <field name='thread' declared_type='jthread' type='^{_jobject=}'/>
  </struct>
  <struct name='JVMDI_thread_group_info' type='{_JVMDI_thread_group_info=&quot;parent&quot;^{_jobject}&quot;name&quot;*&quot;max_priority&quot;i&quot;is_daemon&quot;C}'>
    <field name='parent' declared_type='jthreadGroup' type='^{_jobject=}'/>
    <field name='name' declared_type='char*' type='*'/>
    <field name='max_priority' declared_type='jint' type='l' type64='i'/>
    <field name='is_daemon' declared_type='jboolean' type='C'/>
  </struct>
  <struct name='JVMDI_thread_info' type='{_JVMDI_thread_info=&quot;name&quot;*&quot;priority&quot;i&quot;is_daemon&quot;C&quot;thread_group&quot;^{_jobject}&quot;context_class_loader&quot;^{_jobject}}'>
    <field name='name' declared_type='char*' type='*'/>
    <field name='priority' declared_type='jint' type='l' type64='i'/>
    <field name='is_daemon' declared_type='jboolean' type='C'/>
    <field name='thread_group' declared_type='jthreadGroup' type='^{_jobject=}'/>
    <field name='context_class_loader' declared_type='jobject' type='^{_jobject=}'/>
  </struct>
  <struct name='JVMDI_user_event_data' type='{_JVMDI_user_event_data=&quot;object&quot;^{_jobject}&quot;key&quot;i}'>
    <field name='object' declared_type='jobject' type='^{_jobject=}'/>
    <field name='key' declared_type='jint' type='l' type64='i'/>
  </struct>
  <struct name='JVMPI_CallFrame' type='{_JVMPI_CallFrame=&quot;lineno&quot;i&quot;method_id&quot;^{_jmethodID}}'>
    <field name='lineno' declared_type='jint' type='l' type64='i'/>
    <field name='method_id' declared_type='jmethodID' type='^{_jmethodID=}'/>
  </struct>
  <struct name='JVMPI_CallTrace' type='{_JVMPI_CallTrace=&quot;env_id&quot;^^{JNINativeInterface_=&quot;reserved0&quot;^v&quot;reserved1&quot;^v&quot;reserved2&quot;^v&quot;reserved3&quot;^v&quot;GetVersion&quot;^?&quot;DefineClass&quot;^?&quot;FindClass&quot;^?&quot;FromReflectedMethod&quot;^?&quot;FromReflectedField&quot;^?&quot;ToReflectedMethod&quot;^?&quot;GetSuperclass&quot;^?&quot;IsAssignableFrom&quot;^?&quot;ToReflectedField&quot;^?&quot;Throw&quot;^?&quot;ThrowNew&quot;^?&quot;ExceptionOccurred&quot;^?&quot;ExceptionDescribe&quot;^?&quot;ExceptionClear&quot;^?&quot;FatalError&quot;^?&quot;PushLocalFrame&quot;^?&quot;PopLocalFrame&quot;^?&quot;NewGlobalRef&quot;^?&quot;DeleteGlobalRef&quot;^?&quot;DeleteLocalRef&quot;^?&quot;IsSameObject&quot;^?&quot;NewLocalRef&quot;^?&quot;EnsureLocalCapacity&quot;^?&quot;AllocObject&quot;^?&quot;NewObject&quot;^?&quot;NewObjectV&quot;^?&quot;NewObjectA&quot;^?&quot;GetObjectClass&quot;^?&quot;IsInstanceOf&quot;^?&quot;GetMethodID&quot;^?&quot;CallObjectMethod&quot;^?&quot;CallObjectMethodV&quot;^?&quot;CallObjectMethodA&quot;^?&quot;CallBooleanMethod&quot;^?&quot;CallBooleanMethodV&quot;^?&quot;CallBooleanMethodA&quot;^?&quot;CallByteMethod&quot;^?&quot;CallByteMethodV&quot;^?&quot;CallByteMethodA&quot;^?&quot;CallCharMethod&quot;^?&quot;CallCharMethodV&quot;^?&quot;CallCharMethodA&quot;^?&quot;CallShortMethod&quot;^?&quot;CallShortMethodV&quot;^?&quot;CallShortMethodA&quot;^?&quot;CallIntMethod&quot;^?&quot;CallIntMethodV&quot;^?&quot;CallIntMethodA&quot;^?&quot;CallLongMethod&quot;^?&quot;CallLongMethodV&quot;^?&quot;CallLongMethodA&quot;^?&quot;CallFloatMethod&quot;^?&quot;CallFloatMethodV&quot;^?&quot;CallFloatMethodA&quot;^?&quot;CallDoubleMethod&quot;^?&quot;CallDoubleMethodV&quot;^?&quot;CallDoubleMethodA&quot;^?&quot;CallVoidMethod&quot;^?&quot;CallVoidMethodV&quot;^?&quot;CallVoidMethodA&quot;^?&quot;CallNonvirtualObjectMethod&quot;^?&quot;CallNonvirtualObjectMethodV&quot;^?&quot;CallNonvirtualObjectMethodA&quot;^?&quot;CallNonvirtualBooleanMethod&quot;^?&quot;CallNonvirtualBooleanMethodV&quot;^?&quot;CallNonvirtualBooleanMethodA&quot;^?&quot;CallNonvirtualByteMethod&quot;^?&quot;CallNonvirtualByteMethodV&quot;^?&quot;CallNonvirtualByteMethodA&quot;^?&quot;CallNonvirtualCharMethod&quot;^?&quot;CallNonvirtualCharMethodV&quot;^?&quot;CallNonvirtualCharMethodA&quot;^?&quot;CallNonvirtualShortMethod&quot;^?&quot;CallNonvirtualShortMethodV&quot;^?&quot;CallNonvirtualShortMethodA&quot;^?&quot;CallNonvirtualIntMethod&quot;^?&quot;CallNonvirtualIntMethodV&quot;^?&quot;CallNonvirtualIntMethodA&quot;^?&quot;CallNonvirtualLongMethod&quot;^?&quot;CallNonvirtualLongMethodV&quot;^?&quot;CallNonvirtualLongMethodA&quot;^?&quot;CallNonvirtualFloatMethod&quot;^?&quot;CallNonvirtualFloatMethodV&quot;^?&quot;CallNonvirtualFloatMethodA&quot;^?&quot;CallNonvirtualDoubleMethod&quot;^?&quot;CallNonvirtualDoubleMethodV&quot;^?&quot;CallNonvirtualDoubleMethodA&quot;^?&quot;CallNonvirtualVoidMethod&quot;^?&quot;CallNonvirtualVoidMethodV&quot;^?&quot;CallNonvirtualVoidMethodA&quot;^?&quot;GetFieldID&quot;^?&quot;GetObjectField&quot;^?&quot;GetBooleanField&quot;^?&quot;GetByteField&quot;^?&quot;GetCharField&quot;^?&quot;GetShortField&quot;^?&quot;GetIntField&quot;^?&quot;GetLongField&quot;^?&quot;GetFloatField&quot;^?&quot;GetDoubleField&quot;^?&quot;SetObjectField&quot;^?&quot;SetBooleanField&quot;^?&quot;SetByteField&quot;^?&quot;SetCharField&quot;^?&quot;SetShortField&quot;^?&quot;SetIntField&quot;^?&quot;SetLongField&quot;^?&quot;SetFloatField&quot;^?&quot;SetDoubleField&quot;^?&quot;GetStaticMethodID&quot;^?&quot;CallStaticObjectMethod&quot;^?&quot;CallStaticObjectMethodV&quot;^?&quot;CallStaticObjectMethodA&quot;^?&quot;CallStaticBooleanMethod&quot;^?&quot;CallStaticBooleanMethodV&quot;^?&quot;CallStaticBooleanMethodA&quot;^?&quot;CallStaticByteMethod&quot;^?&quot;CallStaticByteMethodV&quot;^?&quot;CallStaticByteMethodA&quot;^?&quot;CallStaticCharMethod&quot;^?&quot;CallStaticCharMethodV&quot;^?&quot;CallStaticCharMethodA&quot;^?&quot;CallStaticShortMethod&quot;^?&quot;CallStaticShortMethodV&quot;^?&quot;CallStaticShortMethodA&quot;^?&quot;CallStaticIntMethod&quot;^?&quot;CallStaticIntMethodV&quot;^?&quot;CallStaticIntMethodA&quot;^?&quot;CallStaticLongMethod&quot;^?&quot;CallStaticLongMethodV&quot;^?&quot;CallStaticLongMethodA&quot;^?&quot;CallStaticFloatMethod&quot;^?&quot;CallStaticFloatMethodV&quot;^?&quot;CallStaticFloatMethodA&quot;^?&quot;CallStaticDoubleMethod&quot;^?&quot;CallStaticDoubleMethodV&quot;^?&quot;CallStaticDoubleMethodA&quot;^?&quot;CallStaticVoidMethod&quot;^?&quot;CallStaticVoidMethodV&quot;^?&quot;CallStaticVoidMethodA&quot;^?&quot;GetStaticFieldID&quot;^?&quot;GetStaticObjectField&quot;^?&quot;GetStaticBooleanField&quot;^?&quot;GetStaticByteField&quot;^?&quot;GetStaticCharField&quot;^?&quot;GetStaticShortField&quot;^?&quot;GetStaticIntField&quot;^?&quot;GetStaticLongField&quot;^?&quot;GetStaticFloatField&quot;^?&quot;GetStaticDoubleField&quot;^?&quot;SetStaticObjectField&quot;^?&quot;SetStaticBooleanField&quot;^?&quot;SetStaticByteField&quot;^?&quot;SetStaticCharField&quot;^?&quot;SetStaticShortField&quot;^?&quot;SetStaticIntField&quot;^?&quot;SetStaticLongField&quot;^?&quot;SetStaticFloatField&quot;^?&quot;SetStaticDoubleField&quot;^?&quot;NewString&quot;^?&quot;GetStringLength&quot;^?&quot;GetStringChars&quot;^?&quot;ReleaseStringChars&quot;^?&quot;NewStringUTF&quot;^?&quot;GetStringUTFLength&quot;^?&quot;GetStringUTFChars&quot;^?&quot;ReleaseStringUTFChars&quot;^?&quot;GetArrayLength&quot;^?&quot;NewObjectArray&quot;^?&quot;GetObjectArrayElement&quot;^?&quot;SetObjectArrayElement&quot;^?&quot;NewBooleanArray&quot;^?&quot;NewByteArray&quot;^?&quot;NewCharArray&quot;^?&quot;NewShortArray&quot;^?&quot;NewIntArray&quot;^?&quot;NewLongArray&quot;^?&quot;NewFloatArray&quot;^?&quot;NewDoubleArray&quot;^?&quot;GetBooleanArrayElements&quot;^?&quot;GetByteArrayElements&quot;^?&quot;GetCharArrayElements&quot;^?&quot;GetShortArrayElements&quot;^?&quot;GetIntArrayElements&quot;^?&quot;GetLongArrayElements&quot;^?&quot;GetFloatArrayElements&quot;^?&quot;GetDoubleArrayElements&quot;^?&quot;ReleaseBooleanArrayElements&quot;^?&quot;ReleaseByteArrayElements&quot;^?&quot;ReleaseCharArrayElements&quot;^?&quot;ReleaseShortArrayElements&quot;^?&quot;ReleaseIntArrayElements&quot;^?&quot;ReleaseLongArrayElements&quot;^?&quot;ReleaseFloatArrayElements&quot;^?&quot;ReleaseDoubleArrayElements&quot;^?&quot;GetBooleanArrayRegion&quot;^?&quot;GetByteArrayRegion&quot;^?&quot;GetCharArrayRegion&quot;^?&quot;GetShortArrayRegion&quot;^?&quot;GetIntArrayRegion&quot;^?&quot;GetLongArrayRegion&quot;^?&quot;GetFloatArrayRegion&quot;^?&quot;GetDoubleArrayRegion&quot;^?&quot;SetBooleanArrayRegion&quot;^?&quot;SetByteArrayRegion&quot;^?&quot;SetCharArrayRegion&quot;^?&quot;SetShortArrayRegion&quot;^?&quot;SetIntArrayRegion&quot;^?&quot;SetLongArrayRegion&quot;^?&quot;SetFloatArrayRegion&quot;^?&quot;SetDoubleArrayRegion&quot;^?&quot;RegisterNatives&quot;^?&quot;UnregisterNatives&quot;^?&quot;MonitorEnter&quot;^?&quot;MonitorExit&quot;^?&quot;GetJavaVM&quot;^?&quot;GetStringRegion&quot;^?&quot;GetStringUTFRegion&quot;^?&quot;GetPrimitiveArrayCritical&quot;^?&quot;ReleasePrimitiveArrayCritical&quot;^?&quot;GetStringCritical&quot;^?&quot;ReleaseStringCritical&quot;^?&quot;NewWeakGlobalRef&quot;^?&quot;DeleteWeakGlobalRef&quot;^?&quot;ExceptionCheck&quot;^?&quot;NewDirectByteBuffer&quot;^?&quot;GetDirectBufferAddress&quot;^?&quot;GetDirectBufferCapacity&quot;^?}&quot;num_frames&quot;i&quot;frames&quot;^{_JVMPI_CallFrame=&quot;lineno&quot;i&quot;method_id&quot;^{_jmethodID}}}'>
    <field name='env_id' declared_type='JNIEnv*' type='^^{JNINativeInterface_=&quot;reserved0&quot;^v&quot;reserved1&quot;^v&quot;reserved2&quot;^v&quot;reserved3&quot;^v&quot;GetVersion&quot;^?&quot;DefineClass&quot;^?&quot;FindClass&quot;^?&quot;FromReflectedMethod&quot;^?&quot;FromReflectedField&quot;^?&quot;ToReflectedMethod&quot;^?&quot;GetSuperclass&quot;^?&quot;IsAssignableFrom&quot;^?&quot;ToReflectedField&quot;^?&quot;Throw&quot;^?&quot;ThrowNew&quot;^?&quot;ExceptionOccurred&quot;^?&quot;ExceptionDescribe&quot;^?&quot;ExceptionClear&quot;^?&quot;FatalError&quot;^?&quot;PushLocalFrame&quot;^?&quot;PopLocalFrame&quot;^?&quot;NewGlobalRef&quot;^?&quot;DeleteGlobalRef&quot;^?&quot;DeleteLocalRef&quot;^?&quot;IsSameObject&quot;^?&quot;NewLocalRef&quot;^?&quot;EnsureLocalCapacity&quot;^?&quot;AllocObject&quot;^?&quot;NewObject&quot;^?&quot;NewObjectV&quot;^?&quot;NewObjectA&quot;^?&quot;GetObjectClass&quot;^?&quot;IsInstanceOf&quot;^?&quot;GetMethodID&quot;^?&quot;CallObjectMethod&quot;^?&quot;CallObjectMethodV&quot;^?&quot;CallObjectMethodA&quot;^?&quot;CallBooleanMethod&quot;^?&quot;CallBooleanMethodV&quot;^?&quot;CallBooleanMethodA&quot;^?&quot;CallByteMethod&quot;^?&quot;CallByteMethodV&quot;^?&quot;CallByteMethodA&quot;^?&quot;CallCharMethod&quot;^?&quot;CallCharMethodV&quot;^?&quot;CallCharMethodA&quot;^?&quot;CallShortMethod&quot;^?&quot;CallShortMethodV&quot;^?&quot;CallShortMethodA&quot;^?&quot;CallIntMethod&quot;^?&quot;CallIntMethodV&quot;^?&quot;CallIntMethodA&quot;^?&quot;CallLongMethod&quot;^?&quot;CallLongMethodV&quot;^?&quot;CallLongMethodA&quot;^?&quot;CallFloatMethod&quot;^?&quot;CallFloatMethodV&quot;^?&quot;CallFloatMethodA&quot;^?&quot;CallDoubleMethod&quot;^?&quot;CallDoubleMethodV&quot;^?&quot;CallDoubleMethodA&quot;^?&quot;CallVoidMethod&quot;^?&quot;CallVoidMethodV&quot;^?&quot;CallVoidMethodA&quot;^?&quot;CallNonvirtualObjectMethod&quot;^?&quot;CallNonvirtualObjectMethodV&quot;^?&quot;CallNonvirtualObjectMethodA&quot;^?&quot;CallNonvirtualBooleanMethod&quot;^?&quot;CallNonvirtualBooleanMethodV&quot;^?&quot;CallNonvirtualBooleanMethodA&quot;^?&quot;CallNonvirtualByteMethod&quot;^?&quot;CallNonvirtualByteMethodV&quot;^?&quot;CallNonvirtualByteMethodA&quot;^?&quot;CallNonvirtualCharMethod&quot;^?&quot;CallNonvirtualCharMethodV&quot;^?&quot;CallNonvirtualCharMethodA&quot;^?&quot;CallNonvirtualShortMethod&quot;^?&quot;CallNonvirtualShortMethodV&quot;^?&quot;CallNonvirtualShortMethodA&quot;^?&quot;CallNonvirtualIntMethod&quot;^?&quot;CallNonvirtualIntMethodV&quot;^?&quot;CallNonvirtualIntMethodA&quot;^?&quot;CallNonvirtualLongMethod&quot;^?&quot;CallNonvirtualLongMethodV&quot;^?&quot;CallNonvirtualLongMethodA&quot;^?&quot;CallNonvirtualFloatMethod&quot;^?&quot;CallNonvirtualFloatMethodV&quot;^?&quot;CallNonvirtualFloatMethodA&quot;^?&quot;CallNonvirtualDoubleMethod&quot;^?&quot;CallNonvirtualDoubleMethodV&quot;^?&quot;CallNonvirtualDoubleMethodA&quot;^?&quot;CallNonvirtualVoidMethod&quot;^?&quot;CallNonvirtualVoidMethodV&quot;^?&quot;CallNonvirtualVoidMethodA&quot;^?&quot;GetFieldID&quot;^?&quot;GetObjectField&quot;^?&quot;GetBooleanField&quot;^?&quot;GetByteField&quot;^?&quot;GetCharField&quot;^?&quot;GetShortField&quot;^?&quot;GetIntField&quot;^?&quot;GetLongField&quot;^?&quot;GetFloatField&quot;^?&quot;GetDoubleField&quot;^?&quot;SetObjectField&quot;^?&quot;SetBooleanField&quot;^?&quot;SetByteField&quot;^?&quot;SetCharField&quot;^?&quot;SetShortField&quot;^?&quot;SetIntField&quot;^?&quot;SetLongField&quot;^?&quot;SetFloatField&quot;^?&quot;SetDoubleField&quot;^?&quot;GetStaticMethodID&quot;^?&quot;CallStaticObjectMethod&quot;^?&quot;CallStaticObjectMethodV&quot;^?&quot;CallStaticObjectMethodA&quot;^?&quot;CallStaticBooleanMethod&quot;^?&quot;CallStaticBooleanMethodV&quot;^?&quot;CallStaticBooleanMethodA&quot;^?&quot;CallStaticByteMethod&quot;^?&quot;CallStaticByteMethodV&quot;^?&quot;CallStaticByteMethodA&quot;^?&quot;CallStaticCharMethod&quot;^?&quot;CallStaticCharMethodV&quot;^?&quot;CallStaticCharMethodA&quot;^?&quot;CallStaticShortMethod&quot;^?&quot;CallStaticShortMethodV&quot;^?&quot;CallStaticShortMethodA&quot;^?&quot;CallStaticIntMethod&quot;^?&quot;CallStaticIntMethodV&quot;^?&quot;CallStaticIntMethodA&quot;^?&quot;CallStaticLongMethod&quot;^?&quot;CallStaticLongMethodV&quot;^?&quot;CallStaticLongMethodA&quot;^?&quot;CallStaticFloatMethod&quot;^?&quot;CallStaticFloatMethodV&quot;^?&quot;CallStaticFloatMethodA&quot;^?&quot;CallStaticDoubleMethod&quot;^?&quot;CallStaticDoubleMethodV&quot;^?&quot;CallStaticDoubleMethodA&quot;^?&quot;CallStaticVoidMethod&quot;^?&quot;CallStaticVoidMethodV&quot;^?&quot;CallStaticVoidMethodA&quot;^?&quot;GetStaticFieldID&quot;^?&quot;GetStaticObjectField&quot;^?&quot;GetStaticBooleanField&quot;^?&quot;GetStaticByteField&quot;^?&quot;GetStaticCharField&quot;^?&quot;GetStaticShortField&quot;^?&quot;GetStaticIntField&quot;^?&quot;GetStaticLongField&quot;^?&quot;GetStaticFloatField&quot;^?&quot;GetStaticDoubleField&quot;^?&quot;SetStaticObjectField&quot;^?&quot;SetStaticBooleanField&quot;^?&quot;SetStaticByteField&quot;^?&quot;SetStaticCharField&quot;^?&quot;SetStaticShortField&quot;^?&quot;SetStaticIntField&quot;^?&quot;SetStaticLongField&quot;^?&quot;SetStaticFloatField&quot;^?&quot;SetStaticDoubleField&quot;^?&quot;NewString&quot;^?&quot;GetStringLength&quot;^?&quot;GetStringChars&quot;^?&quot;ReleaseStringChars&quot;^?&quot;NewStringUTF&quot;^?&quot;GetStringUTFLength&quot;^?&quot;GetStringUTFChars&quot;^?&quot;ReleaseStringUTFChars&quot;^?&quot;GetArrayLength&quot;^?&quot;NewObjectArray&quot;^?&quot;GetObjectArrayElement&quot;^?&quot;SetObjectArrayElement&quot;^?&quot;NewBooleanArray&quot;^?&quot;NewByteArray&quot;^?&quot;NewCharArray&quot;^?&quot;NewShortArray&quot;^?&quot;NewIntArray&quot;^?&quot;NewLongArray&quot;^?&quot;NewFloatArray&quot;^?&quot;NewDoubleArray&quot;^?&quot;GetBooleanArrayElements&quot;^?&quot;GetByteArrayElements&quot;^?&quot;GetCharArrayElements&quot;^?&quot;GetShortArrayElements&quot;^?&quot;GetIntArrayElements&quot;^?&quot;GetLongArrayElements&quot;^?&quot;GetFloatArrayElements&quot;^?&quot;GetDoubleArrayElements&quot;^?&quot;ReleaseBooleanArrayElements&quot;^?&quot;ReleaseByteArrayElements&quot;^?&quot;ReleaseCharArrayElements&quot;^?&quot;ReleaseShortArrayElements&quot;^?&quot;ReleaseIntArrayElements&quot;^?&quot;ReleaseLongArrayElements&quot;^?&quot;ReleaseFloatArrayElements&quot;^?&quot;ReleaseDoubleArrayElements&quot;^?&quot;GetBooleanArrayRegion&quot;^?&quot;GetByteArrayRegion&quot;^?&quot;GetCharArrayRegion&quot;^?&quot;GetShortArrayRegion&quot;^?&quot;GetIntArrayRegion&quot;^?&quot;GetLongArrayRegion&quot;^?&quot;GetFloatArrayRegion&quot;^?&quot;GetDoubleArrayRegion&quot;^?&quot;SetBooleanArrayRegion&quot;^?&quot;SetByteArrayRegion&quot;^?&quot;SetCharArrayRegion&quot;^?&quot;SetShortArrayRegion&quot;^?&quot;SetIntArrayRegion&quot;^?&quot;SetLongArrayRegion&quot;^?&quot;SetFloatArrayRegion&quot;^?&quot;SetDoubleArrayRegion&quot;^?&quot;RegisterNatives&quot;^?&quot;UnregisterNatives&quot;^?&quot;MonitorEnter&quot;^?&quot;MonitorExit&quot;^?&quot;GetJavaVM&quot;^?&quot;GetStringRegion&quot;^?&quot;GetStringUTFRegion&quot;^?&quot;GetPrimitiveArrayCritical&quot;^?&quot;ReleasePrimitiveArrayCritical&quot;^?&quot;GetStringCritical&quot;^?&quot;ReleaseStringCritical&quot;^?&quot;NewWeakGlobalRef&quot;^?&quot;DeleteWeakGlobalRef&quot;^?&quot;ExceptionCheck&quot;^?&quot;NewDirectByteBuffer&quot;^?&quot;GetDirectBufferAddress&quot;^?&quot;GetDirectBufferCapacity&quot;^?}'/>
    <field name='num_frames' declared_type='jint' type='l' type64='i'/>
    <field name='frames' declared_type='JVMPI_CallFrame*' type='^{_JVMPI_CallFrame=&quot;lineno&quot;i&quot;method_id&quot;^{_jmethodID}}'/>
  </struct>
  <struct name='JVMPI_Event' type='{_JVMPI_Event=&quot;event_type&quot;i&quot;env_id&quot;^^{JNINativeInterface_=&quot;reserved0&quot;^v&quot;reserved1&quot;^v&quot;reserved2&quot;^v&quot;reserved3&quot;^v&quot;GetVersion&quot;^?&quot;DefineClass&quot;^?&quot;FindClass&quot;^?&quot;FromReflectedMethod&quot;^?&quot;FromReflectedField&quot;^?&quot;ToReflectedMethod&quot;^?&quot;GetSuperclass&quot;^?&quot;IsAssignableFrom&quot;^?&quot;ToReflectedField&quot;^?&quot;Throw&quot;^?&quot;ThrowNew&quot;^?&quot;ExceptionOccurred&quot;^?&quot;ExceptionDescribe&quot;^?&quot;ExceptionClear&quot;^?&quot;FatalError&quot;^?&quot;PushLocalFrame&quot;^?&quot;PopLocalFrame&quot;^?&quot;NewGlobalRef&quot;^?&quot;DeleteGlobalRef&quot;^?&quot;DeleteLocalRef&quot;^?&quot;IsSameObject&quot;^?&quot;NewLocalRef&quot;^?&quot;EnsureLocalCapacity&quot;^?&quot;AllocObject&quot;^?&quot;NewObject&quot;^?&quot;NewObjectV&quot;^?&quot;NewObjectA&quot;^?&quot;GetObjectClass&quot;^?&quot;IsInstanceOf&quot;^?&quot;GetMethodID&quot;^?&quot;CallObjectMethod&quot;^?&quot;CallObjectMethodV&quot;^?&quot;CallObjectMethodA&quot;^?&quot;CallBooleanMethod&quot;^?&quot;CallBooleanMethodV&quot;^?&quot;CallBooleanMethodA&quot;^?&quot;CallByteMethod&quot;^?&quot;CallByteMethodV&quot;^?&quot;CallByteMethodA&quot;^?&quot;CallCharMethod&quot;^?&quot;CallCharMethodV&quot;^?&quot;CallCharMethodA&quot;^?&quot;CallShortMethod&quot;^?&quot;CallShortMethodV&quot;^?&quot;CallShortMethodA&quot;^?&quot;CallIntMethod&quot;^?&quot;CallIntMethodV&quot;^?&quot;CallIntMethodA&quot;^?&quot;CallLongMethod&quot;^?&quot;CallLongMethodV&quot;^?&quot;CallLongMethodA&quot;^?&quot;CallFloatMethod&quot;^?&quot;CallFloatMethodV&quot;^?&quot;CallFloatMethodA&quot;^?&quot;CallDoubleMethod&quot;^?&quot;CallDoubleMethodV&quot;^?&quot;CallDoubleMethodA&quot;^?&quot;CallVoidMethod&quot;^?&quot;CallVoidMethodV&quot;^?&quot;CallVoidMethodA&quot;^?&quot;CallNonvirtualObjectMethod&quot;^?&quot;CallNonvirtualObjectMethodV&quot;^?&quot;CallNonvirtualObjectMethodA&quot;^?&quot;CallNonvirtualBooleanMethod&quot;^?&quot;CallNonvirtualBooleanMethodV&quot;^?&quot;CallNonvirtualBooleanMethodA&quot;^?&quot;CallNonvirtualByteMethod&quot;^?&quot;CallNonvirtualByteMethodV&quot;^?&quot;CallNonvirtualByteMethodA&quot;^?&quot;CallNonvirtualCharMethod&quot;^?&quot;CallNonvirtualCharMethodV&quot;^?&quot;CallNonvirtualCharMethodA&quot;^?&quot;CallNonvirtualShortMethod&quot;^?&quot;CallNonvirtualShortMethodV&quot;^?&quot;CallNonvirtualShortMethodA&quot;^?&quot;CallNonvirtualIntMethod&quot;^?&quot;CallNonvirtualIntMethodV&quot;^?&quot;CallNonvirtualIntMethodA&quot;^?&quot;CallNonvirtualLongMethod&quot;^?&quot;CallNonvirtualLongMethodV&quot;^?&quot;CallNonvirtualLongMethodA&quot;^?&quot;CallNonvirtualFloatMethod&quot;^?&quot;CallNonvirtualFloatMethodV&quot;^?&quot;CallNonvirtualFloatMethodA&quot;^?&quot;CallNonvirtualDoubleMethod&quot;^?&quot;CallNonvirtualDoubleMethodV&quot;^?&quot;CallNonvirtualDoubleMethodA&quot;^?&quot;CallNonvirtualVoidMethod&quot;^?&quot;CallNonvirtualVoidMethodV&quot;^?&quot;CallNonvirtualVoidMethodA&quot;^?&quot;GetFieldID&quot;^?&quot;GetObjectField&quot;^?&quot;GetBooleanField&quot;^?&quot;GetByteField&quot;^?&quot;GetCharField&quot;^?&quot;GetShortField&quot;^?&quot;GetIntField&quot;^?&quot;GetLongField&quot;^?&quot;GetFloatField&quot;^?&quot;GetDoubleField&quot;^?&quot;SetObjectField&quot;^?&quot;SetBooleanField&quot;^?&quot;SetByteField&quot;^?&quot;SetCharField&quot;^?&quot;SetShortField&quot;^?&quot;SetIntField&quot;^?&quot;SetLongField&quot;^?&quot;SetFloatField&quot;^?&quot;SetDoubleField&quot;^?&quot;GetStaticMethodID&quot;^?&quot;CallStaticObjectMethod&quot;^?&quot;CallStaticObjectMethodV&quot;^?&quot;CallStaticObjectMethodA&quot;^?&quot;CallStaticBooleanMethod&quot;^?&quot;CallStaticBooleanMethodV&quot;^?&quot;CallStaticBooleanMethodA&quot;^?&quot;CallStaticByteMethod&quot;^?&quot;CallStaticByteMethodV&quot;^?&quot;CallStaticByteMethodA&quot;^?&quot;CallStaticCharMethod&quot;^?&quot;CallStaticCharMethodV&quot;^?&quot;CallStaticCharMethodA&quot;^?&quot;CallStaticShortMethod&quot;^?&quot;CallStaticShortMethodV&quot;^?&quot;CallStaticShortMethodA&quot;^?&quot;CallStaticIntMethod&quot;^?&quot;CallStaticIntMethodV&quot;^?&quot;CallStaticIntMethodA&quot;^?&quot;CallStaticLongMethod&quot;^?&quot;CallStaticLongMethodV&quot;^?&quot;CallStaticLongMethodA&quot;^?&quot;CallStaticFloatMethod&quot;^?&quot;CallStaticFloatMethodV&quot;^?&quot;CallStaticFloatMethodA&quot;^?&quot;CallStaticDoubleMethod&quot;^?&quot;CallStaticDoubleMethodV&quot;^?&quot;CallStaticDoubleMethodA&quot;^?&quot;CallStaticVoidMethod&quot;^?&quot;CallStaticVoidMethodV&quot;^?&quot;CallStaticVoidMethodA&quot;^?&quot;GetStaticFieldID&quot;^?&quot;GetStaticObjectField&quot;^?&quot;GetStaticBooleanField&quot;^?&quot;GetStaticByteField&quot;^?&quot;GetStaticCharField&quot;^?&quot;GetStaticShortField&quot;^?&quot;GetStaticIntField&quot;^?&quot;GetStaticLongField&quot;^?&quot;GetStaticFloatField&quot;^?&quot;GetStaticDoubleField&quot;^?&quot;SetStaticObjectField&quot;^?&quot;SetStaticBooleanField&quot;^?&quot;SetStaticByteField&quot;^?&quot;SetStaticCharField&quot;^?&quot;SetStaticShortField&quot;^?&quot;SetStaticIntField&quot;^?&quot;SetStaticLongField&quot;^?&quot;SetStaticFloatField&quot;^?&quot;SetStaticDoubleField&quot;^?&quot;NewString&quot;^?&quot;GetStringLength&quot;^?&quot;GetStringChars&quot;^?&quot;ReleaseStringChars&quot;^?&quot;NewStringUTF&quot;^?&quot;GetStringUTFLength&quot;^?&quot;GetStringUTFChars&quot;^?&quot;ReleaseStringUTFChars&quot;^?&quot;GetArrayLength&quot;^?&quot;NewObjectArray&quot;^?&quot;GetObjectArrayElement&quot;^?&quot;SetObjectArrayElement&quot;^?&quot;NewBooleanArray&quot;^?&quot;NewByteArray&quot;^?&quot;NewCharArray&quot;^?&quot;NewShortArray&quot;^?&quot;NewIntArray&quot;^?&quot;NewLongArray&quot;^?&quot;NewFloatArray&quot;^?&quot;NewDoubleArray&quot;^?&quot;GetBooleanArrayElements&quot;^?&quot;GetByteArrayElements&quot;^?&quot;GetCharArrayElements&quot;^?&quot;GetShortArrayElements&quot;^?&quot;GetIntArrayElements&quot;^?&quot;GetLongArrayElements&quot;^?&quot;GetFloatArrayElements&quot;^?&quot;GetDoubleArrayElements&quot;^?&quot;ReleaseBooleanArrayElements&quot;^?&quot;ReleaseByteArrayElements&quot;^?&quot;ReleaseCharArrayElements&quot;^?&quot;ReleaseShortArrayElements&quot;^?&quot;ReleaseIntArrayElements&quot;^?&quot;ReleaseLongArrayElements&quot;^?&quot;ReleaseFloatArrayElements&quot;^?&quot;ReleaseDoubleArrayElements&quot;^?&quot;GetBooleanArrayRegion&quot;^?&quot;GetByteArrayRegion&quot;^?&quot;GetCharArrayRegion&quot;^?&quot;GetShortArrayRegion&quot;^?&quot;GetIntArrayRegion&quot;^?&quot;GetLongArrayRegion&quot;^?&quot;GetFloatArrayRegion&quot;^?&quot;GetDoubleArrayRegion&quot;^?&quot;SetBooleanArrayRegion&quot;^?&quot;SetByteArrayRegion&quot;^?&quot;SetCharArrayRegion&quot;^?&quot;SetShortArrayRegion&quot;^?&quot;SetIntArrayRegion&quot;^?&quot;SetLongArrayRegion&quot;^?&quot;SetFloatArrayRegion&quot;^?&quot;SetDoubleArrayRegion&quot;^?&quot;RegisterNatives&quot;^?&quot;UnregisterNatives&quot;^?&quot;MonitorEnter&quot;^?&quot;MonitorExit&quot;^?&quot;GetJavaVM&quot;^?&quot;GetStringRegion&quot;^?&quot;GetStringUTFRegion&quot;^?&quot;GetPrimitiveArrayCritical&quot;^?&quot;ReleasePrimitiveArrayCritical&quot;^?&quot;GetStringCritical&quot;^?&quot;ReleaseStringCritical&quot;^?&quot;NewWeakGlobalRef&quot;^?&quot;DeleteWeakGlobalRef&quot;^?&quot;ExceptionCheck&quot;^?&quot;NewDirectByteBuffer&quot;^?&quot;GetDirectBufferAddress&quot;^?&quot;GetDirectBufferCapacity&quot;^?}&quot;u&quot;(?=&quot;class_load&quot;{?=&quot;class_name&quot;*&quot;source_name&quot;*&quot;num_interfaces&quot;i&quot;num_methods&quot;i&quot;methods&quot;^{?}&quot;num_static_fields&quot;i&quot;statics&quot;^{?}&quot;num_instance_fields&quot;i&quot;instances&quot;^{?}&quot;class_id&quot;^{_jobjectID}}&quot;class_unload&quot;{?=&quot;class_id&quot;^{_jobjectID}}&quot;class_load_hook&quot;{?=&quot;class_data&quot;*&quot;class_data_len&quot;i&quot;new_class_data&quot;*&quot;new_class_data_len&quot;i&quot;malloc_f&quot;^?}&quot;obj_alloc&quot;{?=&quot;arena_id&quot;i&quot;class_id&quot;^{_jobjectID}&quot;is_array&quot;i&quot;size&quot;i&quot;obj_id&quot;^{_jobjectID}}&quot;obj_free&quot;{?=&quot;obj_id&quot;^{_jobjectID}}&quot;obj_move&quot;{?=&quot;arena_id&quot;i&quot;obj_id&quot;^{_jobjectID}&quot;new_arena_id&quot;i&quot;new_obj_id&quot;^{_jobjectID}}&quot;new_arena&quot;{?=&quot;arena_id&quot;i&quot;arena_name&quot;*}&quot;delete_arena&quot;{?=&quot;arena_id&quot;i}&quot;thread_start&quot;{?=&quot;thread_name&quot;*&quot;group_name&quot;*&quot;parent_name&quot;*&quot;thread_id&quot;^{_jobjectID}&quot;thread_env_id&quot;^^{JNINativeInterface_}}&quot;heap_dump&quot;{?=&quot;dump_level&quot;i&quot;begin&quot;*&quot;end&quot;*&quot;num_traces&quot;i&quot;traces&quot;^{?}}&quot;jni_globalref_alloc&quot;{?=&quot;obj_id&quot;^{_jobjectID}&quot;ref_id&quot;^{_jobject}}&quot;jni_globalref_free&quot;{?=&quot;ref_id&quot;^{_jobject}}&quot;method&quot;{?=&quot;method_id&quot;^{_jmethodID}}&quot;method_entry2&quot;{?=&quot;method_id&quot;^{_jmethodID}&quot;obj_id&quot;^{_jobjectID}}&quot;compiled_method_load&quot;{?=&quot;method_id&quot;^{_jmethodID}&quot;code_addr&quot;^v&quot;code_size&quot;i&quot;lineno_table_size&quot;i&quot;lineno_table&quot;^{?}}&quot;compiled_method_unload&quot;{?=&quot;method_id&quot;^{_jmethodID}}&quot;instruction&quot;{?=&quot;method_id&quot;^{_jmethodID}&quot;offset&quot;i&quot;u&quot;(?=&quot;if_info&quot;{?=&quot;is_true&quot;C}&quot;tableswitch_info&quot;{?=&quot;key&quot;i&quot;low&quot;i&quot;hi&quot;i}&quot;lookupswitch_info&quot;{?=&quot;chosen_pair_index&quot;i&quot;pairs_total&quot;i})}&quot;monitor_dump&quot;{?=&quot;begin&quot;*&quot;end&quot;*&quot;num_traces&quot;i&quot;traces&quot;^{?}&quot;threads_status&quot;^i}&quot;raw_monitor&quot;{?=&quot;name&quot;*&quot;id&quot;^{_JVMPI_RawMonitor}}&quot;monitor&quot;{?=&quot;object&quot;^{_jobjectID}}&quot;monitor_wait&quot;{?=&quot;object&quot;^{_jobjectID}&quot;timeout&quot;q}&quot;gc_info&quot;{?=&quot;used_objects&quot;q&quot;used_object_space&quot;q&quot;total_object_space&quot;q}&quot;object_dump&quot;{?=&quot;data_len&quot;i&quot;data&quot;*})}'>
    <field name='event_type' declared_type='jint' type='l' type64='i'/>
    <field name='env_id' declared_type='JNIEnv*' type='^^{JNINativeInterface_=&quot;reserved0&quot;^v&quot;reserved1&quot;^v&quot;reserved2&quot;^v&quot;reserved3&quot;^v&quot;GetVersion&quot;^?&quot;DefineClass&quot;^?&quot;FindClass&quot;^?&quot;FromReflectedMethod&quot;^?&quot;FromReflectedField&quot;^?&quot;ToReflectedMethod&quot;^?&quot;GetSuperclass&quot;^?&quot;IsAssignableFrom&quot;^?&quot;ToReflectedField&quot;^?&quot;Throw&quot;^?&quot;ThrowNew&quot;^?&quot;ExceptionOccurred&quot;^?&quot;ExceptionDescribe&quot;^?&quot;ExceptionClear&quot;^?&quot;FatalError&quot;^?&quot;PushLocalFrame&quot;^?&quot;PopLocalFrame&quot;^?&quot;NewGlobalRef&quot;^?&quot;DeleteGlobalRef&quot;^?&quot;DeleteLocalRef&quot;^?&quot;IsSameObject&quot;^?&quot;NewLocalRef&quot;^?&quot;EnsureLocalCapacity&quot;^?&quot;AllocObject&quot;^?&quot;NewObject&quot;^?&quot;NewObjectV&quot;^?&quot;NewObjectA&quot;^?&quot;GetObjectClass&quot;^?&quot;IsInstanceOf&quot;^?&quot;GetMethodID&quot;^?&quot;CallObjectMethod&quot;^?&quot;CallObjectMethodV&quot;^?&quot;CallObjectMethodA&quot;^?&quot;CallBooleanMethod&quot;^?&quot;CallBooleanMethodV&quot;^?&quot;CallBooleanMethodA&quot;^?&quot;CallByteMethod&quot;^?&quot;CallByteMethodV&quot;^?&quot;CallByteMethodA&quot;^?&quot;CallCharMethod&quot;^?&quot;CallCharMethodV&quot;^?&quot;CallCharMethodA&quot;^?&quot;CallShortMethod&quot;^?&quot;CallShortMethodV&quot;^?&quot;CallShortMethodA&quot;^?&quot;CallIntMethod&quot;^?&quot;CallIntMethodV&quot;^?&quot;CallIntMethodA&quot;^?&quot;CallLongMethod&quot;^?&quot;CallLongMethodV&quot;^?&quot;CallLongMethodA&quot;^?&quot;CallFloatMethod&quot;^?&quot;CallFloatMethodV&quot;^?&quot;CallFloatMethodA&quot;^?&quot;CallDoubleMethod&quot;^?&quot;CallDoubleMethodV&quot;^?&quot;CallDoubleMethodA&quot;^?&quot;CallVoidMethod&quot;^?&quot;CallVoidMethodV&quot;^?&quot;CallVoidMethodA&quot;^?&quot;CallNonvirtualObjectMethod&quot;^?&quot;CallNonvirtualObjectMethodV&quot;^?&quot;CallNonvirtualObjectMethodA&quot;^?&quot;CallNonvirtualBooleanMethod&quot;^?&quot;CallNonvirtualBooleanMethodV&quot;^?&quot;CallNonvirtualBooleanMethodA&quot;^?&quot;CallNonvirtualByteMethod&quot;^?&quot;CallNonvirtualByteMethodV&quot;^?&quot;CallNonvirtualByteMethodA&quot;^?&quot;CallNonvirtualCharMethod&quot;^?&quot;CallNonvirtualCharMethodV&quot;^?&quot;CallNonvirtualCharMethodA&quot;^?&quot;CallNonvirtualShortMethod&quot;^?&quot;CallNonvirtualShortMethodV&quot;^?&quot;CallNonvirtualShortMethodA&quot;^?&quot;CallNonvirtualIntMethod&quot;^?&quot;CallNonvirtualIntMethodV&quot;^?&quot;CallNonvirtualIntMethodA&quot;^?&quot;CallNonvirtualLongMethod&quot;^?&quot;CallNonvirtualLongMethodV&quot;^?&quot;CallNonvirtualLongMethodA&quot;^?&quot;CallNonvirtualFloatMethod&quot;^?&quot;CallNonvirtualFloatMethodV&quot;^?&quot;CallNonvirtualFloatMethodA&quot;^?&quot;CallNonvirtualDoubleMethod&quot;^?&quot;CallNonvirtualDoubleMethodV&quot;^?&quot;CallNonvirtualDoubleMethodA&quot;^?&quot;CallNonvirtualVoidMethod&quot;^?&quot;CallNonvirtualVoidMethodV&quot;^?&quot;CallNonvirtualVoidMethodA&quot;^?&quot;GetFieldID&quot;^?&quot;GetObjectField&quot;^?&quot;GetBooleanField&quot;^?&quot;GetByteField&quot;^?&quot;GetCharField&quot;^?&quot;GetShortField&quot;^?&quot;GetIntField&quot;^?&quot;GetLongField&quot;^?&quot;GetFloatField&quot;^?&quot;GetDoubleField&quot;^?&quot;SetObjectField&quot;^?&quot;SetBooleanField&quot;^?&quot;SetByteField&quot;^?&quot;SetCharField&quot;^?&quot;SetShortField&quot;^?&quot;SetIntField&quot;^?&quot;SetLongField&quot;^?&quot;SetFloatField&quot;^?&quot;SetDoubleField&quot;^?&quot;GetStaticMethodID&quot;^?&quot;CallStaticObjectMethod&quot;^?&quot;CallStaticObjectMethodV&quot;^?&quot;CallStaticObjectMethodA&quot;^?&quot;CallStaticBooleanMethod&quot;^?&quot;CallStaticBooleanMethodV&quot;^?&quot;CallStaticBooleanMethodA&quot;^?&quot;CallStaticByteMethod&quot;^?&quot;CallStaticByteMethodV&quot;^?&quot;CallStaticByteMethodA&quot;^?&quot;CallStaticCharMethod&quot;^?&quot;CallStaticCharMethodV&quot;^?&quot;CallStaticCharMethodA&quot;^?&quot;CallStaticShortMethod&quot;^?&quot;CallStaticShortMethodV&quot;^?&quot;CallStaticShortMethodA&quot;^?&quot;CallStaticIntMethod&quot;^?&quot;CallStaticIntMethodV&quot;^?&quot;CallStaticIntMethodA&quot;^?&quot;CallStaticLongMethod&quot;^?&quot;CallStaticLongMethodV&quot;^?&quot;CallStaticLongMethodA&quot;^?&quot;CallStaticFloatMethod&quot;^?&quot;CallStaticFloatMethodV&quot;^?&quot;CallStaticFloatMethodA&quot;^?&quot;CallStaticDoubleMethod&quot;^?&quot;CallStaticDoubleMethodV&quot;^?&quot;CallStaticDoubleMethodA&quot;^?&quot;CallStaticVoidMethod&quot;^?&quot;CallStaticVoidMethodV&quot;^?&quot;CallStaticVoidMethodA&quot;^?&quot;GetStaticFieldID&quot;^?&quot;GetStaticObjectField&quot;^?&quot;GetStaticBooleanField&quot;^?&quot;GetStaticByteField&quot;^?&quot;GetStaticCharField&quot;^?&quot;GetStaticShortField&quot;^?&quot;GetStaticIntField&quot;^?&quot;GetStaticLongField&quot;^?&quot;GetStaticFloatField&quot;^?&quot;GetStaticDoubleField&quot;^?&quot;SetStaticObjectField&quot;^?&quot;SetStaticBooleanField&quot;^?&quot;SetStaticByteField&quot;^?&quot;SetStaticCharField&quot;^?&quot;SetStaticShortField&quot;^?&quot;SetStaticIntField&quot;^?&quot;SetStaticLongField&quot;^?&quot;SetStaticFloatField&quot;^?&quot;SetStaticDoubleField&quot;^?&quot;NewString&quot;^?&quot;GetStringLength&quot;^?&quot;GetStringChars&quot;^?&quot;ReleaseStringChars&quot;^?&quot;NewStringUTF&quot;^?&quot;GetStringUTFLength&quot;^?&quot;GetStringUTFChars&quot;^?&quot;ReleaseStringUTFChars&quot;^?&quot;GetArrayLength&quot;^?&quot;NewObjectArray&quot;^?&quot;GetObjectArrayElement&quot;^?&quot;SetObjectArrayElement&quot;^?&quot;NewBooleanArray&quot;^?&quot;NewByteArray&quot;^?&quot;NewCharArray&quot;^?&quot;NewShortArray&quot;^?&quot;NewIntArray&quot;^?&quot;NewLongArray&quot;^?&quot;NewFloatArray&quot;^?&quot;NewDoubleArray&quot;^?&quot;GetBooleanArrayElements&quot;^?&quot;GetByteArrayElements&quot;^?&quot;GetCharArrayElements&quot;^?&quot;GetShortArrayElements&quot;^?&quot;GetIntArrayElements&quot;^?&quot;GetLongArrayElements&quot;^?&quot;GetFloatArrayElements&quot;^?&quot;GetDoubleArrayElements&quot;^?&quot;ReleaseBooleanArrayElements&quot;^?&quot;ReleaseByteArrayElements&quot;^?&quot;ReleaseCharArrayElements&quot;^?&quot;ReleaseShortArrayElements&quot;^?&quot;ReleaseIntArrayElements&quot;^?&quot;ReleaseLongArrayElements&quot;^?&quot;ReleaseFloatArrayElements&quot;^?&quot;ReleaseDoubleArrayElements&quot;^?&quot;GetBooleanArrayRegion&quot;^?&quot;GetByteArrayRegion&quot;^?&quot;GetCharArrayRegion&quot;^?&quot;GetShortArrayRegion&quot;^?&quot;GetIntArrayRegion&quot;^?&quot;GetLongArrayRegion&quot;^?&quot;GetFloatArrayRegion&quot;^?&quot;GetDoubleArrayRegion&quot;^?&quot;SetBooleanArrayRegion&quot;^?&quot;SetByteArrayRegion&quot;^?&quot;SetCharArrayRegion&quot;^?&quot;SetShortArrayRegion&quot;^?&quot;SetIntArrayRegion&quot;^?&quot;SetLongArrayRegion&quot;^?&quot;SetFloatArrayRegion&quot;^?&quot;SetDoubleArrayRegion&quot;^?&quot;RegisterNatives&quot;^?&quot;UnregisterNatives&quot;^?&quot;MonitorEnter&quot;^?&quot;MonitorExit&quot;^?&quot;GetJavaVM&quot;^?&quot;GetStringRegion&quot;^?&quot;GetStringUTFRegion&quot;^?&quot;GetPrimitiveArrayCritical&quot;^?&quot;ReleasePrimitiveArrayCritical&quot;^?&quot;GetStringCritical&quot;^?&quot;ReleaseStringCritical&quot;^?&quot;NewWeakGlobalRef&quot;^?&quot;DeleteWeakGlobalRef&quot;^?&quot;ExceptionCheck&quot;^?&quot;NewDirectByteBuffer&quot;^?&quot;GetDirectBufferAddress&quot;^?&quot;GetDirectBufferCapacity&quot;^?}'/>
    <field name='u' declared_type='union JVMPI_Event::' type='(?=&quot;class_load&quot;{?=&quot;class_name&quot;*&quot;source_name&quot;*&quot;num_interfaces&quot;i&quot;num_methods&quot;i&quot;methods&quot;^{?}&quot;num_static_fields&quot;i&quot;statics&quot;^{?}&quot;num_instance_fields&quot;i&quot;instances&quot;^{?}&quot;class_id&quot;^{_jobjectID}}&quot;class_unload&quot;{?=&quot;class_id&quot;^{_jobjectID}}&quot;class_load_hook&quot;{?=&quot;class_data&quot;*&quot;class_data_len&quot;i&quot;new_class_data&quot;*&quot;new_class_data_len&quot;i&quot;malloc_f&quot;^?}&quot;obj_alloc&quot;{?=&quot;arena_id&quot;i&quot;class_id&quot;^{_jobjectID}&quot;is_array&quot;i&quot;size&quot;i&quot;obj_id&quot;^{_jobjectID}}&quot;obj_free&quot;{?=&quot;obj_id&quot;^{_jobjectID}}&quot;obj_move&quot;{?=&quot;arena_id&quot;i&quot;obj_id&quot;^{_jobjectID}&quot;new_arena_id&quot;i&quot;new_obj_id&quot;^{_jobjectID}}&quot;new_arena&quot;{?=&quot;arena_id&quot;i&quot;arena_name&quot;*}&quot;delete_arena&quot;{?=&quot;arena_id&quot;i}&quot;thread_start&quot;{?=&quot;thread_name&quot;*&quot;group_name&quot;*&quot;parent_name&quot;*&quot;thread_id&quot;^{_jobjectID}&quot;thread_env_id&quot;^^{JNINativeInterface_}}&quot;heap_dump&quot;{?=&quot;dump_level&quot;i&quot;begin&quot;*&quot;end&quot;*&quot;num_traces&quot;i&quot;traces&quot;^{?}}&quot;jni_globalref_alloc&quot;{?=&quot;obj_id&quot;^{_jobjectID}&quot;ref_id&quot;^{_jobject}}&quot;jni_globalref_free&quot;{?=&quot;ref_id&quot;^{_jobject}}&quot;method&quot;{?=&quot;method_id&quot;^{_jmethodID}}&quot;method_entry2&quot;{?=&quot;method_id&quot;^{_jmethodID}&quot;obj_id&quot;^{_jobjectID}}&quot;compiled_method_load&quot;{?=&quot;method_id&quot;^{_jmethodID}&quot;code_addr&quot;^v&quot;code_size&quot;i&quot;lineno_table_size&quot;i&quot;lineno_table&quot;^{?}}&quot;compiled_method_unload&quot;{?=&quot;method_id&quot;^{_jmethodID}}&quot;instruction&quot;{?=&quot;method_id&quot;^{_jmethodID}&quot;offset&quot;i&quot;u&quot;(?=&quot;if_info&quot;{?=&quot;is_true&quot;C}&quot;tableswitch_info&quot;{?=&quot;key&quot;i&quot;low&quot;i&quot;hi&quot;i}&quot;lookupswitch_info&quot;{?=&quot;chosen_pair_index&quot;i&quot;pairs_total&quot;i})}&quot;monitor_dump&quot;{?=&quot;begin&quot;*&quot;end&quot;*&quot;num_traces&quot;i&quot;traces&quot;^{?}&quot;threads_status&quot;^i}&quot;raw_monitor&quot;{?=&quot;name&quot;*&quot;id&quot;^{_JVMPI_RawMonitor}}&quot;monitor&quot;{?=&quot;object&quot;^{_jobjectID}}&quot;monitor_wait&quot;{?=&quot;object&quot;^{_jobjectID}&quot;timeout&quot;q}&quot;gc_info&quot;{?=&quot;used_objects&quot;q&quot;used_object_space&quot;q&quot;total_object_space&quot;q}&quot;object_dump&quot;{?=&quot;data_len&quot;i&quot;data&quot;*})'/>
  </struct>
  <struct name='JVMPI_Field' type='{_JVMPI_Field=&quot;field_name&quot;*&quot;field_signature&quot;*}'>
    <field name='field_name' declared_type='char*' type='*'/>
    <field name='field_signature' declared_type='char*' type='*'/>
  </struct>
  <struct name='JVMPI_HeapDumpArg' type='{_JVMPI_HeapDumpArg=&quot;heap_dump_level&quot;i}'>
    <field name='heap_dump_level' declared_type='jint' type='l' type64='i'/>
  </struct>
  <struct name='JVMPI_Interface' type='{_JVMPI_Interface=&quot;version&quot;i&quot;NotifyEvent&quot;^?&quot;EnableEvent&quot;^?&quot;DisableEvent&quot;^?&quot;RequestEvent&quot;^?&quot;GetCallTrace&quot;^?&quot;ProfilerExit&quot;^?&quot;RawMonitorCreate&quot;^?&quot;RawMonitorEnter&quot;^?&quot;RawMonitorExit&quot;^?&quot;RawMonitorWait&quot;^?&quot;RawMonitorNotifyAll&quot;^?&quot;RawMonitorDestroy&quot;^?&quot;GetCurrentThreadCpuTime&quot;^?&quot;SuspendThread&quot;^?&quot;ResumeThread&quot;^?&quot;GetThreadStatus&quot;^?&quot;ThreadHasRun&quot;^?&quot;CreateSystemThread&quot;^?&quot;SetThreadLocalStorage&quot;^?&quot;GetThreadLocalStorage&quot;^?&quot;DisableGC&quot;^?&quot;EnableGC&quot;^?&quot;RunGC&quot;^?&quot;GetThreadObject&quot;^?&quot;GetMethodClass&quot;^?&quot;jobjectID2jobject&quot;^?&quot;jobject2jobjectID&quot;^?&quot;SuspendThreadList&quot;^?&quot;ResumeThreadList&quot;^?}'>
    <field name='version' declared_type='jint' type='l' type64='i'/>
    <field name='NotifyEvent' function_pointer='true' declared_type='void (*)(JVMPI_Event *)' type='^?'>
      <arg declared_type='JVMPI_Event*' type='^{_JVMPI_Event=i^^{JNINativeInterface_=^v^v^v^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}(?={?=**ii^{?}i^{?}i^{?}^{_jobjectID}}{?=^{_jobjectID}}{?=*i*i^?}{?=i^{_jobjectID}ii^{_jobjectID}}{?=^{_jobjectID}}{?=i^{_jobjectID}i^{_jobjectID}}{?=i*}{?=i}{?=***^{_jobjectID}^^{JNINativeInterface_}}{?=i**i^{?}}{?=^{_jobjectID}^{_jobject}}{?=^{_jobject}}{?=^{_jmethodID}}{?=^{_jmethodID}^{_jobjectID}}{?=^{_jmethodID}^vii^{?}}{?=^{_jmethodID}}{?=^{_jmethodID}i(?={?=C}{?=iii}{?=ii})}{?=**i^{?}^i}{?=*^{_JVMPI_RawMonitor}}{?=^{_jobjectID}}{?=^{_jobjectID}q}{?=qqq}{?=i*})}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='EnableEvent' function_pointer='true' declared_type='jint (*)(jint, void *)' type='^?'>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='DisableEvent' function_pointer='true' declared_type='jint (*)(jint, void *)' type='^?'>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='RequestEvent' function_pointer='true' declared_type='jint (*)(jint, void *)' type='^?'>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetCallTrace' function_pointer='true' declared_type='void (*)(JVMPI_CallTrace *, jint)' type='^?'>
      <arg declared_type='JVMPI_CallTrace*' type='^{_JVMPI_CallTrace=^^{JNINativeInterface_=^v^v^v^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}i^{_JVMPI_CallFrame=i^{_jmethodID}}}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ProfilerExit' function_pointer='true' declared_type='void (*)(jint)' type='^?'>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='RawMonitorCreate' function_pointer='true' declared_type='JVMPI_RawMonitor (*)(char *)' type='^?'>
      <arg declared_type='char*' type='*'/>
      <retval declared_type='JVMPI_RawMonitor' type='^{_JVMPI_RawMonitor=}'/>
    </field>
    <field name='RawMonitorEnter' function_pointer='true' declared_type='void (*)(JVMPI_RawMonitor)' type='^?'>
      <arg declared_type='JVMPI_RawMonitor' type='^{_JVMPI_RawMonitor=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='RawMonitorExit' function_pointer='true' declared_type='void (*)(JVMPI_RawMonitor)' type='^?'>
      <arg declared_type='JVMPI_RawMonitor' type='^{_JVMPI_RawMonitor=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='RawMonitorWait' function_pointer='true' declared_type='void (*)(JVMPI_RawMonitor, jlong)' type='^?'>
      <arg declared_type='JVMPI_RawMonitor' type='^{_JVMPI_RawMonitor=}'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='RawMonitorNotifyAll' function_pointer='true' declared_type='void (*)(JVMPI_RawMonitor)' type='^?'>
      <arg declared_type='JVMPI_RawMonitor' type='^{_JVMPI_RawMonitor=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='RawMonitorDestroy' function_pointer='true' declared_type='void (*)(JVMPI_RawMonitor)' type='^?'>
      <arg declared_type='JVMPI_RawMonitor' type='^{_JVMPI_RawMonitor=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetCurrentThreadCpuTime' function_pointer='true' declared_type='jlong (*)(void)' type='^?'>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='SuspendThread' function_pointer='true' declared_type='void (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ResumeThread' function_pointer='true' declared_type='void (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetThreadStatus' function_pointer='true' declared_type='jint (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='ThreadHasRun' function_pointer='true' declared_type='jboolean (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CreateSystemThread' function_pointer='true' declared_type='jint (*)(char *, jint, void (*)(void *))' type='^?'>
      <arg declared_type='char*' type='*'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='void (*)(void *)' type='^?'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='SetThreadLocalStorage' function_pointer='true' declared_type='void (*)(JNIEnv *, void *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetThreadLocalStorage' function_pointer='true' declared_type='void *(*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='void*' type='^v'/>
    </field>
    <field name='DisableGC' function_pointer='true' declared_type='void (*)(void)' type='^?'>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='EnableGC' function_pointer='true' declared_type='void (*)(void)' type='^?'>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='RunGC' function_pointer='true' declared_type='void (*)(void)' type='^?'>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetThreadObject' function_pointer='true' declared_type='jobjectID (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jobjectID' type='^{_jobjectID=}'/>
    </field>
    <field name='GetMethodClass' function_pointer='true' declared_type='jobjectID (*)(jmethodID)' type='^?'>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jobjectID' type='^{_jobjectID=}'/>
    </field>
    <field name='jobjectID2jobject' function_pointer='true' declared_type='jobject (*)(jobjectID)' type='^?'>
      <arg declared_type='jobjectID' type='^{_jobjectID=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='jobject2jobjectID' function_pointer='true' declared_type='jobjectID (*)(jobject)' type='^?'>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobjectID' type='^{_jobjectID=}'/>
    </field>
    <field name='SuspendThreadList' function_pointer='true' declared_type='void (*)(jint, JNIEnv **, jint *)' type='^?'>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='JNIEnv**' type='^^^{JNINativeInterface_}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ResumeThreadList' function_pointer='true' declared_type='void (*)(jint, JNIEnv **, jint *)' type='^?'>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='JNIEnv**' type='^^^{JNINativeInterface_}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='void' type='v'/>
    </field>
  </struct>
  <struct name='JVMPI_Lineno' type='{_JVMPI_Lineno=&quot;offset&quot;i&quot;lineno&quot;i}'>
    <field name='offset' declared_type='jint' type='l' type64='i'/>
    <field name='lineno' declared_type='jint' type='l' type64='i'/>
  </struct>
  <struct name='JVMPI_Method' type='{_JVMPI_Method=&quot;method_name&quot;*&quot;method_signature&quot;*&quot;start_lineno&quot;i&quot;end_lineno&quot;i&quot;method_id&quot;^{_jmethodID}}'>
    <field name='method_name' declared_type='char*' type='*'/>
    <field name='method_signature' declared_type='char*' type='*'/>
    <field name='start_lineno' declared_type='jint' type='l' type64='i'/>
    <field name='end_lineno' declared_type='jint' type='l' type64='i'/>
    <field name='method_id' declared_type='jmethodID' type='^{_jmethodID=}'/>
  </struct>
  <struct name='JavaVM' type='{JNIInvokeInterface_=&quot;reserved0&quot;^v&quot;reserved1&quot;^v&quot;reserved2&quot;^v&quot;DestroyJavaVM&quot;^?&quot;AttachCurrentThread&quot;^?&quot;DetachCurrentThread&quot;^?&quot;GetEnv&quot;^?&quot;AttachCurrentThreadAsDaemon&quot;^?}'>
    <field name='reserved0' declared_type='void*' type='^v'/>
    <field name='reserved1' declared_type='void*' type='^v'/>
    <field name='reserved2' declared_type='void*' type='^v'/>
    <field name='DestroyJavaVM' function_pointer='true' declared_type='jint (*)(JavaVM *)' type='^?'>
      <arg declared_type='JavaVM*' type='^^{JNIInvokeInterface_}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='AttachCurrentThread' function_pointer='true' declared_type='jint (*)(JavaVM *, void **, void *)' type='^?'>
      <arg declared_type='JavaVM*' type='^^{JNIInvokeInterface_}'/>
      <arg declared_type='void**' type='^^v'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='DetachCurrentThread' function_pointer='true' declared_type='jint (*)(JavaVM *)' type='^?'>
      <arg declared_type='JavaVM*' type='^^{JNIInvokeInterface_}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetEnv' function_pointer='true' declared_type='jint (*)(JavaVM *, void **, jint)' type='^?'>
      <arg declared_type='JavaVM*' type='^^{JNIInvokeInterface_}'/>
      <arg declared_type='void**' type='^^v'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='AttachCurrentThreadAsDaemon' function_pointer='true' declared_type='jint (*)(JavaVM *, void **, void *)' type='^?'>
      <arg declared_type='JavaVM*' type='^^{JNIInvokeInterface_}'/>
      <arg declared_type='void**' type='^^v'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
  </struct>
  <struct name='JavaVMAttachArgs' type='{JavaVMAttachArgs=&quot;version&quot;i&quot;name&quot;*&quot;group&quot;^{_jobject}}'>
    <field name='version' declared_type='jint' type='l' type64='i'/>
    <field name='name' declared_type='char*' type='*'/>
    <field name='group' declared_type='jobject' type='^{_jobject=}'/>
  </struct>
  <struct name='JavaVMInitArgs' type='{JavaVMInitArgs=&quot;version&quot;i&quot;nOptions&quot;i&quot;options&quot;^{JavaVMOption}&quot;ignoreUnrecognized&quot;C}'>
    <field name='version' declared_type='jint' type='l' type64='i'/>
    <field name='nOptions' declared_type='jint' type='l' type64='i'/>
    <field name='options' declared_type='JavaVMOption*' type='^{JavaVMOption=*^v}'/>
    <field name='ignoreUnrecognized' declared_type='jboolean' type='C'/>
  </struct>
  <struct name='JavaVMOption' type='{JavaVMOption=&quot;optionString&quot;*&quot;extraInfo&quot;^v}'>
    <field name='optionString' declared_type='char*' type='*'/>
    <field name='extraInfo' declared_type='void*' type='^v'/>
  </struct>
  <struct name='JavaVM_' type='{JavaVM_=&quot;functions&quot;^{JNIInvokeInterface_}}'>
    <field name='functions' declared_type='struct JNIInvokeInterface_*' type='^{JNIInvokeInterface_=^v^v^v^?^?^?^?^?}' const='true'/>
  </struct>
  <struct name='JmmInterface' type='{jmmInterface_1_=&quot;reserved1&quot;^v&quot;reserved2&quot;^v&quot;GetVersion&quot;^?&quot;GetOptionalSupport&quot;^?&quot;GetInputArguments&quot;^?&quot;GetThreadInfo&quot;^?&quot;reserved3&quot;^v&quot;GetMemoryPools&quot;^?&quot;GetMemoryManagers&quot;^?&quot;GetMemoryPoolUsage&quot;^?&quot;GetPeakMemoryPoolUsage&quot;^?&quot;reserved4&quot;^v&quot;GetMemoryUsage&quot;^?&quot;GetLongAttribute&quot;^?&quot;GetBoolAttribute&quot;^?&quot;SetBoolAttribute&quot;^?&quot;GetLongAttributes&quot;^?&quot;FindCircularBlockedThreads&quot;^?&quot;GetThreadCpuTime&quot;^?&quot;GetVMGlobalNames&quot;^?&quot;GetVMGlobals&quot;^?&quot;GetInternalThreadTimes&quot;^?&quot;ResetStatistic&quot;^?&quot;SetPoolSensor&quot;^?&quot;SetPoolThreshold&quot;^?&quot;GetPoolCollectionUsage&quot;^?&quot;GetGCExtAttributeInfo&quot;^?&quot;GetLastGCStat&quot;^?&quot;GetThreadCpuTimeWithKind&quot;^?}'>
    <field name='reserved1' declared_type='void*' type='^v'/>
    <field name='reserved2' declared_type='void*' type='^v'/>
    <field name='GetVersion' function_pointer='true' declared_type='jint (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetOptionalSupport' function_pointer='true' declared_type='jint (*)(JNIEnv *, jmmOptionalSupport *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jmmOptionalSupport*' type='^{_jmmOptionalSupport=b1b1b1b1b1b1b26}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetInputArguments' function_pointer='true' declared_type='jobject (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetThreadInfo' function_pointer='true' declared_type='jint (*)(JNIEnv *, jlongArray, jint, jobjectArray)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jlongArray' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jobjectArray' type='^{_jobject=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='reserved3' declared_type='void*' type='^v'/>
    <field name='GetMemoryPools' function_pointer='true' declared_type='jobjectArray (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobjectArray' type='^{_jobject=}'/>
    </field>
    <field name='GetMemoryManagers' function_pointer='true' declared_type='jobjectArray (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobjectArray' type='^{_jobject=}'/>
    </field>
    <field name='GetMemoryPoolUsage' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetPeakMemoryPoolUsage' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='reserved4' declared_type='void*' type='^v'/>
    <field name='GetMemoryUsage' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jboolean)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetLongAttribute' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jmmLongAttribute)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmmLongAttribute' type='i'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='GetBoolAttribute' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jmmBoolAttribute)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jmmBoolAttribute' type='i'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='SetBoolAttribute' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jmmBoolAttribute, jboolean)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jmmBoolAttribute' type='i'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='GetLongAttributes' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jmmLongAttribute *, jint, jlong *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmmLongAttribute*' type='^i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='FindCircularBlockedThreads' function_pointer='true' declared_type='jobjectArray (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jobjectArray' type='^{_jobject=}'/>
    </field>
    <field name='GetThreadCpuTime' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jlong)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='GetVMGlobalNames' function_pointer='true' declared_type='jobjectArray (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jobjectArray' type='^{_jobject=}'/>
    </field>
    <field name='GetVMGlobals' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobjectArray, jmmVMGlobal *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobjectArray' type='^{_jobject=}'/>
      <arg declared_type='jmmVMGlobal*' type='^{_jmmVMGlobal=^{_jobject}(jvalue=CcSsiqfd^{_jobject})iiC^v^v}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetInternalThreadTimes' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobjectArray, jlongArray)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobjectArray' type='^{_jobject=}'/>
      <arg declared_type='jlongArray' type='^{_jobject=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='ResetStatistic' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jvalue, jmmStatisticType)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jvalue' type='(jvalue=CcSsiqfd^{_jobject})'/>
      <arg declared_type='jmmStatisticType' type='i'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='SetPoolSensor' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jmmThresholdType, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmmThresholdType' type='i'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetPoolThreshold' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jmmThresholdType, jlong)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmmThresholdType' type='i'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='GetPoolCollectionUsage' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetGCExtAttributeInfo' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jmmExtAttributeInfo *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmmExtAttributeInfo*' type='^{_jmmExtAttributeInfo=*c*}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetLastGCStat' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jmmGCStat *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmmGCStat*' type='^{_jmmGCStat=qqq^{_jobject}^{_jobject}i^(jvalue)i}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetThreadCpuTimeWithKind' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jlong, jboolean)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jlong' type='q'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='jlong' type='q'/>
    </field>
  </struct>
  <struct name='jawt' type='{jawt=&quot;version&quot;i&quot;GetDrawingSurface&quot;^?&quot;FreeDrawingSurface&quot;^?&quot;Lock&quot;^?&quot;Unlock&quot;^?&quot;GetComponent&quot;^?}'>
    <field name='version' declared_type='jint' type='l' type64='i'/>
    <field name='GetDrawingSurface' function_pointer='true' declared_type='JAWT_DrawingSurface *(*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='JAWT_DrawingSurface*' type='^{jawt_DrawingSurface=^^{JNINativeInterface_}^{_jobject}^?^?^?^?}'/>
    </field>
    <field name='FreeDrawingSurface' function_pointer='true' declared_type='void (*)(JAWT_DrawingSurface *)' type='^?'>
      <arg declared_type='JAWT_DrawingSurface*' type='^{jawt_DrawingSurface=^^{JNINativeInterface_}^{_jobject}^?^?^?^?}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='Lock' function_pointer='true' declared_type='void (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='Unlock' function_pointer='true' declared_type='void (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetComponent' function_pointer='true' declared_type='jobject (*)(JNIEnv *, void *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
  </struct>
  <struct name='jawt_DrawingSurface' type='{jawt_DrawingSurface=&quot;env&quot;^^{JNINativeInterface_}&quot;target&quot;^{_jobject}&quot;Lock&quot;^?&quot;GetDrawingSurfaceInfo&quot;^?&quot;FreeDrawingSurfaceInfo&quot;^?&quot;Unlock&quot;^?}'>
    <field name='env' declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
    <field name='target' declared_type='jobject' type='^{_jobject=}'/>
    <field name='Lock' function_pointer='true' declared_type='jint (*)(struct jawt_DrawingSurface *)' type='^?'>
      <arg declared_type='struct jawt_DrawingSurface*' type='^{jawt_DrawingSurface=^^{JNINativeInterface_}^{_jobject}^?^?^?^?}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetDrawingSurfaceInfo' function_pointer='true' declared_type='JAWT_DrawingSurfaceInfo *(*)(struct jawt_DrawingSurface *)' type='^?'>
      <arg declared_type='struct jawt_DrawingSurface*' type='^{jawt_DrawingSurface=^^{JNINativeInterface_}^{_jobject}^?^?^?^?}'/>
      <retval declared_type='JAWT_DrawingSurfaceInfo*' type='^{jawt_DrawingSurfaceInfo=^v^{jawt_DrawingSurface}{jawt_Rectangle=iiii}i^{jawt_Rectangle}}'/>
    </field>
    <field name='FreeDrawingSurfaceInfo' function_pointer='true' declared_type='void (*)(JAWT_DrawingSurfaceInfo *)' type='^?'>
      <arg declared_type='JAWT_DrawingSurfaceInfo*' type='^{jawt_DrawingSurfaceInfo=^v^{jawt_DrawingSurface}{jawt_Rectangle=iiii}i^{jawt_Rectangle}}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='Unlock' function_pointer='true' declared_type='void (*)(struct jawt_DrawingSurface *)' type='^?'>
      <arg declared_type='struct jawt_DrawingSurface*' type='^{jawt_DrawingSurface=^^{JNINativeInterface_}^{_jobject}^?^?^?^?}'/>
      <retval declared_type='void' type='v'/>
    </field>
  </struct>
  <struct name='jawt_DrawingSurfaceInfo' type='{jawt_DrawingSurfaceInfo=&quot;platformInfo&quot;^v&quot;ds&quot;^{jawt_DrawingSurface}&quot;bounds&quot;{jawt_Rectangle=&quot;x&quot;i&quot;y&quot;i&quot;width&quot;i&quot;height&quot;i}&quot;clipSize&quot;i&quot;clip&quot;^{jawt_Rectangle}}'>
    <field name='platformInfo' declared_type='void*' type='^v'/>
    <field name='ds' declared_type='struct jawt_DrawingSurface*' type='^{jawt_DrawingSurface=^^{JNINativeInterface_}^{_jobject}^?^?^?^?}'/>
    <field name='bounds' declared_type='JAWT_Rectangle' type='{jawt_Rectangle=&quot;x&quot;i&quot;y&quot;i&quot;width&quot;i&quot;height&quot;i}'/>
    <field name='clipSize' declared_type='jint' type='l' type64='i'/>
    <field name='clip' declared_type='JAWT_Rectangle*' type='^{jawt_Rectangle=iiii}'/>
  </struct>
  <struct name='jawt_Rectangle' type='{jawt_Rectangle=&quot;x&quot;i&quot;y&quot;i&quot;width&quot;i&quot;height&quot;i}'>
    <field name='x' declared_type='jint' type='l' type64='i'/>
    <field name='y' declared_type='jint' type='l' type64='i'/>
    <field name='width' declared_type='jint' type='l' type64='i'/>
    <field name='height' declared_type='jint' type='l' type64='i'/>
  </struct>
  <struct name='jdwpCmdPacket' type='{_jdwpCmdPacket=&quot;len&quot;i&quot;id&quot;i&quot;flags&quot;c&quot;cmdSet&quot;c&quot;cmd&quot;c&quot;data&quot;*}'>
    <field name='len' declared_type='jint' type='l' type64='i'/>
    <field name='id' declared_type='jint' type='l' type64='i'/>
    <field name='flags' declared_type='jbyte' type='c'/>
    <field name='cmdSet' declared_type='jbyte' type='c'/>
    <field name='cmd' declared_type='jbyte' type='c'/>
    <field name='data' declared_type='jbyte*' type='*'/>
  </struct>
  <struct name='jdwpPacket' type='{_jdwpPacket=&quot;type&quot;(?=&quot;cmd&quot;{?=&quot;len&quot;i&quot;id&quot;i&quot;flags&quot;c&quot;cmdSet&quot;c&quot;cmd&quot;c&quot;data&quot;*}&quot;reply&quot;{?=&quot;len&quot;i&quot;id&quot;i&quot;flags&quot;c&quot;errorCode&quot;s&quot;data&quot;*})}'>
    <field name='type' declared_type='union jdwpPacket::' type='(?=&quot;cmd&quot;{?=&quot;len&quot;i&quot;id&quot;i&quot;flags&quot;c&quot;cmdSet&quot;c&quot;cmd&quot;c&quot;data&quot;*}&quot;reply&quot;{?=&quot;len&quot;i&quot;id&quot;i&quot;flags&quot;c&quot;errorCode&quot;s&quot;data&quot;*})'/>
  </struct>
  <struct name='jdwpReplyPacket' type='{_jdwpReplyPacket=&quot;len&quot;i&quot;id&quot;i&quot;flags&quot;c&quot;errorCode&quot;s&quot;data&quot;*}'>
    <field name='len' declared_type='jint' type='l' type64='i'/>
    <field name='id' declared_type='jint' type='l' type64='i'/>
    <field name='flags' declared_type='jbyte' type='c'/>
    <field name='errorCode' declared_type='jshort' type='s'/>
    <field name='data' declared_type='jbyte*' type='*'/>
  </struct>
  <struct name='jdwpTransportCallback' type='{jdwpTransportCallback=&quot;alloc&quot;^?&quot;free&quot;^?}'>
    <field name='alloc' function_pointer='true' declared_type='void *(*)(jint)' type='^?'>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void*' type='^v'/>
    </field>
    <field name='free' function_pointer='true' declared_type='void (*)(void *)' type='^?'>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </field>
  </struct>
  <struct name='jdwpTransportEnv' type='{jdwpTransportNativeInterface_=&quot;reserved1&quot;^v&quot;GetCapabilities&quot;^?&quot;Attach&quot;^?&quot;StartListening&quot;^?&quot;StopListening&quot;^?&quot;Accept&quot;^?&quot;IsOpen&quot;^?&quot;Close&quot;^?&quot;ReadPacket&quot;^?&quot;WritePacket&quot;^?&quot;GetLastError&quot;^?}'>
    <field name='reserved1' declared_type='void*' type='^v'/>
    <field name='GetCapabilities' function_pointer='true' declared_type='jdwpTransportError (*)(jdwpTransportEnv *, JDWPTransportCapabilities *)' type='^?'>
      <arg declared_type='jdwpTransportEnv*' type='^^{jdwpTransportNativeInterface_}'/>
      <arg declared_type='JDWPTransportCapabilities*' type='^{_JDWPTransportCapabilities=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}'/>
      <retval declared_type='jdwpTransportError' type='i'/>
    </field>
    <field name='Attach' function_pointer='true' declared_type='jdwpTransportError (*)(jdwpTransportEnv *, char *, jlong, jlong)' type='^?'>
      <arg declared_type='jdwpTransportEnv*' type='^^{jdwpTransportNativeInterface_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='jlong' type='q'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jdwpTransportError' type='i'/>
    </field>
    <field name='StartListening' function_pointer='true' declared_type='jdwpTransportError (*)(jdwpTransportEnv *, char *, char **)' type='^?'>
      <arg declared_type='jdwpTransportEnv*' type='^^{jdwpTransportNativeInterface_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jdwpTransportError' type='i'/>
    </field>
    <field name='StopListening' function_pointer='true' declared_type='jdwpTransportError (*)(jdwpTransportEnv *)' type='^?'>
      <arg declared_type='jdwpTransportEnv*' type='^^{jdwpTransportNativeInterface_}'/>
      <retval declared_type='jdwpTransportError' type='i'/>
    </field>
    <field name='Accept' function_pointer='true' declared_type='jdwpTransportError (*)(jdwpTransportEnv *, jlong, jlong)' type='^?'>
      <arg declared_type='jdwpTransportEnv*' type='^^{jdwpTransportNativeInterface_}'/>
      <arg declared_type='jlong' type='q'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jdwpTransportError' type='i'/>
    </field>
    <field name='IsOpen' function_pointer='true' declared_type='jboolean (*)(jdwpTransportEnv *)' type='^?'>
      <arg declared_type='jdwpTransportEnv*' type='^^{jdwpTransportNativeInterface_}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='Close' function_pointer='true' declared_type='jdwpTransportError (*)(jdwpTransportEnv *)' type='^?'>
      <arg declared_type='jdwpTransportEnv*' type='^^{jdwpTransportNativeInterface_}'/>
      <retval declared_type='jdwpTransportError' type='i'/>
    </field>
    <field name='ReadPacket' function_pointer='true' declared_type='jdwpTransportError (*)(jdwpTransportEnv *, jdwpPacket *)' type='^?'>
      <arg declared_type='jdwpTransportEnv*' type='^^{jdwpTransportNativeInterface_}'/>
      <arg declared_type='jdwpPacket*' type='^{_jdwpPacket=(?={?=iiccc*}{?=iics*})}'/>
      <retval declared_type='jdwpTransportError' type='i'/>
    </field>
    <field name='WritePacket' function_pointer='true' declared_type='jdwpTransportError (*)(jdwpTransportEnv *, jdwpPacket *)' type='^?'>
      <arg declared_type='jdwpTransportEnv*' type='^^{jdwpTransportNativeInterface_}'/>
      <arg declared_type='jdwpPacket*' type='^{_jdwpPacket=(?={?=iiccc*}{?=iics*})}' const='true'/>
      <retval declared_type='jdwpTransportError' type='i'/>
    </field>
    <field name='GetLastError' function_pointer='true' declared_type='jdwpTransportError (*)(jdwpTransportEnv *, char **)' type='^?'>
      <arg declared_type='jdwpTransportEnv*' type='^^{jdwpTransportNativeInterface_}'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jdwpTransportError' type='i'/>
    </field>
  </struct>
  <struct name='jdwpTransportNativeInterface_' type='{jdwpTransportNativeInterface_=&quot;reserved1&quot;^v&quot;GetCapabilities&quot;^?&quot;Attach&quot;^?&quot;StartListening&quot;^?&quot;StopListening&quot;^?&quot;Accept&quot;^?&quot;IsOpen&quot;^?&quot;Close&quot;^?&quot;ReadPacket&quot;^?&quot;WritePacket&quot;^?&quot;GetLastError&quot;^?}'>
    <field name='reserved1' declared_type='void*' type='^v'/>
    <field name='GetCapabilities' function_pointer='true' declared_type='jdwpTransportError (*)(jdwpTransportEnv *, JDWPTransportCapabilities *)' type='^?'>
      <arg declared_type='jdwpTransportEnv*' type='^^{jdwpTransportNativeInterface_}'/>
      <arg declared_type='JDWPTransportCapabilities*' type='^{_JDWPTransportCapabilities=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}'/>
      <retval declared_type='jdwpTransportError' type='i'/>
    </field>
    <field name='Attach' function_pointer='true' declared_type='jdwpTransportError (*)(jdwpTransportEnv *, char *, jlong, jlong)' type='^?'>
      <arg declared_type='jdwpTransportEnv*' type='^^{jdwpTransportNativeInterface_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='jlong' type='q'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jdwpTransportError' type='i'/>
    </field>
    <field name='StartListening' function_pointer='true' declared_type='jdwpTransportError (*)(jdwpTransportEnv *, char *, char **)' type='^?'>
      <arg declared_type='jdwpTransportEnv*' type='^^{jdwpTransportNativeInterface_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jdwpTransportError' type='i'/>
    </field>
    <field name='StopListening' function_pointer='true' declared_type='jdwpTransportError (*)(jdwpTransportEnv *)' type='^?'>
      <arg declared_type='jdwpTransportEnv*' type='^^{jdwpTransportNativeInterface_}'/>
      <retval declared_type='jdwpTransportError' type='i'/>
    </field>
    <field name='Accept' function_pointer='true' declared_type='jdwpTransportError (*)(jdwpTransportEnv *, jlong, jlong)' type='^?'>
      <arg declared_type='jdwpTransportEnv*' type='^^{jdwpTransportNativeInterface_}'/>
      <arg declared_type='jlong' type='q'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jdwpTransportError' type='i'/>
    </field>
    <field name='IsOpen' function_pointer='true' declared_type='jboolean (*)(jdwpTransportEnv *)' type='^?'>
      <arg declared_type='jdwpTransportEnv*' type='^^{jdwpTransportNativeInterface_}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='Close' function_pointer='true' declared_type='jdwpTransportError (*)(jdwpTransportEnv *)' type='^?'>
      <arg declared_type='jdwpTransportEnv*' type='^^{jdwpTransportNativeInterface_}'/>
      <retval declared_type='jdwpTransportError' type='i'/>
    </field>
    <field name='ReadPacket' function_pointer='true' declared_type='jdwpTransportError (*)(jdwpTransportEnv *, jdwpPacket *)' type='^?'>
      <arg declared_type='jdwpTransportEnv*' type='^^{jdwpTransportNativeInterface_}'/>
      <arg declared_type='jdwpPacket*' type='^{_jdwpPacket=(?={?=iiccc*}{?=iics*})}'/>
      <retval declared_type='jdwpTransportError' type='i'/>
    </field>
    <field name='WritePacket' function_pointer='true' declared_type='jdwpTransportError (*)(jdwpTransportEnv *, jdwpPacket *)' type='^?'>
      <arg declared_type='jdwpTransportEnv*' type='^^{jdwpTransportNativeInterface_}'/>
      <arg declared_type='jdwpPacket*' type='^{_jdwpPacket=(?={?=iiccc*}{?=iics*})}' const='true'/>
      <retval declared_type='jdwpTransportError' type='i'/>
    </field>
    <field name='GetLastError' function_pointer='true' declared_type='jdwpTransportError (*)(jdwpTransportEnv *, char **)' type='^?'>
      <arg declared_type='jdwpTransportEnv*' type='^^{jdwpTransportNativeInterface_}'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jdwpTransportError' type='i'/>
    </field>
  </struct>
  <struct name='jmmExtAttributeInfo' type='{_jmmExtAttributeInfo=&quot;name&quot;*&quot;type&quot;c&quot;description&quot;*}'>
    <field name='name' declared_type='char*' type='*' const='true'/>
    <field name='type' declared_type='char' type='c'/>
    <field name='description' declared_type='char*' type='*' const='true'/>
  </struct>
  <struct name='jmmGCStat' type='{_jmmGCStat=&quot;gc_index&quot;q&quot;start_time&quot;q&quot;end_time&quot;q&quot;usage_before_gc&quot;^{_jobject}&quot;usage_after_gc&quot;^{_jobject}&quot;gc_ext_attribute_values_size&quot;i&quot;gc_ext_attribute_values&quot;^(jvalue)&quot;num_gc_ext_attributes&quot;i}'>
    <field name='gc_index' declared_type='jlong' type='q'/>
    <field name='start_time' declared_type='jlong' type='q'/>
    <field name='end_time' declared_type='jlong' type='q'/>
    <field name='usage_before_gc' declared_type='jobjectArray' type='^{_jobject=}'/>
    <field name='usage_after_gc' declared_type='jobjectArray' type='^{_jobject=}'/>
    <field name='gc_ext_attribute_values_size' declared_type='jint' type='l' type64='i'/>
    <field name='gc_ext_attribute_values' declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})'/>
    <field name='num_gc_ext_attributes' declared_type='jint' type='l' type64='i'/>
  </struct>
  <struct name='jmmInterface_1_' type='{jmmInterface_1_=&quot;reserved1&quot;^v&quot;reserved2&quot;^v&quot;GetVersion&quot;^?&quot;GetOptionalSupport&quot;^?&quot;GetInputArguments&quot;^?&quot;GetThreadInfo&quot;^?&quot;reserved3&quot;^v&quot;GetMemoryPools&quot;^?&quot;GetMemoryManagers&quot;^?&quot;GetMemoryPoolUsage&quot;^?&quot;GetPeakMemoryPoolUsage&quot;^?&quot;reserved4&quot;^v&quot;GetMemoryUsage&quot;^?&quot;GetLongAttribute&quot;^?&quot;GetBoolAttribute&quot;^?&quot;SetBoolAttribute&quot;^?&quot;GetLongAttributes&quot;^?&quot;FindCircularBlockedThreads&quot;^?&quot;GetThreadCpuTime&quot;^?&quot;GetVMGlobalNames&quot;^?&quot;GetVMGlobals&quot;^?&quot;GetInternalThreadTimes&quot;^?&quot;ResetStatistic&quot;^?&quot;SetPoolSensor&quot;^?&quot;SetPoolThreshold&quot;^?&quot;GetPoolCollectionUsage&quot;^?&quot;GetGCExtAttributeInfo&quot;^?&quot;GetLastGCStat&quot;^?&quot;GetThreadCpuTimeWithKind&quot;^?}'>
    <field name='reserved1' declared_type='void*' type='^v'/>
    <field name='reserved2' declared_type='void*' type='^v'/>
    <field name='GetVersion' function_pointer='true' declared_type='jint (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetOptionalSupport' function_pointer='true' declared_type='jint (*)(JNIEnv *, jmmOptionalSupport *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jmmOptionalSupport*' type='^{_jmmOptionalSupport=b1b1b1b1b1b1b26}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetInputArguments' function_pointer='true' declared_type='jobject (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetThreadInfo' function_pointer='true' declared_type='jint (*)(JNIEnv *, jlongArray, jint, jobjectArray)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jlongArray' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jobjectArray' type='^{_jobject=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='reserved3' declared_type='void*' type='^v'/>
    <field name='GetMemoryPools' function_pointer='true' declared_type='jobjectArray (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobjectArray' type='^{_jobject=}'/>
    </field>
    <field name='GetMemoryManagers' function_pointer='true' declared_type='jobjectArray (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobjectArray' type='^{_jobject=}'/>
    </field>
    <field name='GetMemoryPoolUsage' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetPeakMemoryPoolUsage' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='reserved4' declared_type='void*' type='^v'/>
    <field name='GetMemoryUsage' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jboolean)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetLongAttribute' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jmmLongAttribute)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmmLongAttribute' type='i'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='GetBoolAttribute' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jmmBoolAttribute)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jmmBoolAttribute' type='i'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='SetBoolAttribute' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jmmBoolAttribute, jboolean)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jmmBoolAttribute' type='i'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='GetLongAttributes' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jmmLongAttribute *, jint, jlong *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmmLongAttribute*' type='^i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='FindCircularBlockedThreads' function_pointer='true' declared_type='jobjectArray (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jobjectArray' type='^{_jobject=}'/>
    </field>
    <field name='GetThreadCpuTime' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jlong)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='GetVMGlobalNames' function_pointer='true' declared_type='jobjectArray (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jobjectArray' type='^{_jobject=}'/>
    </field>
    <field name='GetVMGlobals' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobjectArray, jmmVMGlobal *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobjectArray' type='^{_jobject=}'/>
      <arg declared_type='jmmVMGlobal*' type='^{_jmmVMGlobal=^{_jobject}(jvalue=CcSsiqfd^{_jobject})iiC^v^v}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetInternalThreadTimes' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobjectArray, jlongArray)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobjectArray' type='^{_jobject=}'/>
      <arg declared_type='jlongArray' type='^{_jobject=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='ResetStatistic' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jvalue, jmmStatisticType)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jvalue' type='(jvalue=CcSsiqfd^{_jobject})'/>
      <arg declared_type='jmmStatisticType' type='i'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='SetPoolSensor' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jmmThresholdType, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmmThresholdType' type='i'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetPoolThreshold' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jmmThresholdType, jlong)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmmThresholdType' type='i'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='GetPoolCollectionUsage' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetGCExtAttributeInfo' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jmmExtAttributeInfo *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmmExtAttributeInfo*' type='^{_jmmExtAttributeInfo=*c*}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetLastGCStat' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jmmGCStat *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmmGCStat*' type='^{_jmmGCStat=qqq^{_jobject}^{_jobject}i^(jvalue)i}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetThreadCpuTimeWithKind' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jlong, jboolean)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jlong' type='q'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='jlong' type='q'/>
    </field>
  </struct>
  <struct name='jmmOptionalSupport' type='{_jmmOptionalSupport=&quot;isLowMemoryDetectionSupported&quot;b1&quot;isCompilationTimeMonitoringSupported&quot;b1&quot;isThreadContentionMonitoringSupported&quot;b1&quot;isCurrentThreadCpuTimeSupported&quot;b1&quot;isOtherThreadCpuTimeSupported&quot;b1&quot;isBootClassPathSupported&quot;b1&quot;&quot;b26}'>
    <field name='isLowMemoryDetectionSupported' declared_type='unsigned int' type='b1'/>
    <field name='isCompilationTimeMonitoringSupported' declared_type='unsigned int' type='b1'/>
    <field name='isThreadContentionMonitoringSupported' declared_type='unsigned int' type='b1'/>
    <field name='isCurrentThreadCpuTimeSupported' declared_type='unsigned int' type='b1'/>
    <field name='isOtherThreadCpuTimeSupported' declared_type='unsigned int' type='b1'/>
    <field name='isBootClassPathSupported' declared_type='unsigned int' type='b1'/>
    <field declared_type='unsigned int' type='b26'/>
  </struct>
  <struct name='jmmVMGlobal' type='{_jmmVMGlobal=&quot;name&quot;^{_jobject}&quot;value&quot;(jvalue=&quot;z&quot;C&quot;b&quot;c&quot;c&quot;S&quot;s&quot;s&quot;i&quot;i&quot;j&quot;q&quot;f&quot;f&quot;d&quot;d&quot;l&quot;^{_jobject})&quot;type&quot;i&quot;source&quot;i&quot;writeable&quot;C&quot;reserved1&quot;^v&quot;reserved2&quot;^v}'>
    <field name='name' declared_type='jstring' type='^{_jobject=}'/>
    <field name='value' declared_type='jvalue' type='(jvalue=&quot;z&quot;C&quot;b&quot;c&quot;c&quot;S&quot;s&quot;s&quot;i&quot;i&quot;j&quot;q&quot;f&quot;f&quot;d&quot;d&quot;l&quot;^{_jobject})'/>
    <field name='type' declared_type='jmmVMGlobalType' type='i'/>
    <field name='source' declared_type='jmmVMGlobalSource' type='i'/>
    <field name='writeable' declared_type='jboolean' type='C'/>
    <field name='reserved1' declared_type='void*' type='^v'/>
    <field name='reserved2' declared_type='void*' type='^v'/>
  </struct>
  <struct name='jniNativeInterface' type='{JNINativeInterface_=&quot;reserved0&quot;^v&quot;reserved1&quot;^v&quot;reserved2&quot;^v&quot;reserved3&quot;^v&quot;GetVersion&quot;^?&quot;DefineClass&quot;^?&quot;FindClass&quot;^?&quot;FromReflectedMethod&quot;^?&quot;FromReflectedField&quot;^?&quot;ToReflectedMethod&quot;^?&quot;GetSuperclass&quot;^?&quot;IsAssignableFrom&quot;^?&quot;ToReflectedField&quot;^?&quot;Throw&quot;^?&quot;ThrowNew&quot;^?&quot;ExceptionOccurred&quot;^?&quot;ExceptionDescribe&quot;^?&quot;ExceptionClear&quot;^?&quot;FatalError&quot;^?&quot;PushLocalFrame&quot;^?&quot;PopLocalFrame&quot;^?&quot;NewGlobalRef&quot;^?&quot;DeleteGlobalRef&quot;^?&quot;DeleteLocalRef&quot;^?&quot;IsSameObject&quot;^?&quot;NewLocalRef&quot;^?&quot;EnsureLocalCapacity&quot;^?&quot;AllocObject&quot;^?&quot;NewObject&quot;^?&quot;NewObjectV&quot;^?&quot;NewObjectA&quot;^?&quot;GetObjectClass&quot;^?&quot;IsInstanceOf&quot;^?&quot;GetMethodID&quot;^?&quot;CallObjectMethod&quot;^?&quot;CallObjectMethodV&quot;^?&quot;CallObjectMethodA&quot;^?&quot;CallBooleanMethod&quot;^?&quot;CallBooleanMethodV&quot;^?&quot;CallBooleanMethodA&quot;^?&quot;CallByteMethod&quot;^?&quot;CallByteMethodV&quot;^?&quot;CallByteMethodA&quot;^?&quot;CallCharMethod&quot;^?&quot;CallCharMethodV&quot;^?&quot;CallCharMethodA&quot;^?&quot;CallShortMethod&quot;^?&quot;CallShortMethodV&quot;^?&quot;CallShortMethodA&quot;^?&quot;CallIntMethod&quot;^?&quot;CallIntMethodV&quot;^?&quot;CallIntMethodA&quot;^?&quot;CallLongMethod&quot;^?&quot;CallLongMethodV&quot;^?&quot;CallLongMethodA&quot;^?&quot;CallFloatMethod&quot;^?&quot;CallFloatMethodV&quot;^?&quot;CallFloatMethodA&quot;^?&quot;CallDoubleMethod&quot;^?&quot;CallDoubleMethodV&quot;^?&quot;CallDoubleMethodA&quot;^?&quot;CallVoidMethod&quot;^?&quot;CallVoidMethodV&quot;^?&quot;CallVoidMethodA&quot;^?&quot;CallNonvirtualObjectMethod&quot;^?&quot;CallNonvirtualObjectMethodV&quot;^?&quot;CallNonvirtualObjectMethodA&quot;^?&quot;CallNonvirtualBooleanMethod&quot;^?&quot;CallNonvirtualBooleanMethodV&quot;^?&quot;CallNonvirtualBooleanMethodA&quot;^?&quot;CallNonvirtualByteMethod&quot;^?&quot;CallNonvirtualByteMethodV&quot;^?&quot;CallNonvirtualByteMethodA&quot;^?&quot;CallNonvirtualCharMethod&quot;^?&quot;CallNonvirtualCharMethodV&quot;^?&quot;CallNonvirtualCharMethodA&quot;^?&quot;CallNonvirtualShortMethod&quot;^?&quot;CallNonvirtualShortMethodV&quot;^?&quot;CallNonvirtualShortMethodA&quot;^?&quot;CallNonvirtualIntMethod&quot;^?&quot;CallNonvirtualIntMethodV&quot;^?&quot;CallNonvirtualIntMethodA&quot;^?&quot;CallNonvirtualLongMethod&quot;^?&quot;CallNonvirtualLongMethodV&quot;^?&quot;CallNonvirtualLongMethodA&quot;^?&quot;CallNonvirtualFloatMethod&quot;^?&quot;CallNonvirtualFloatMethodV&quot;^?&quot;CallNonvirtualFloatMethodA&quot;^?&quot;CallNonvirtualDoubleMethod&quot;^?&quot;CallNonvirtualDoubleMethodV&quot;^?&quot;CallNonvirtualDoubleMethodA&quot;^?&quot;CallNonvirtualVoidMethod&quot;^?&quot;CallNonvirtualVoidMethodV&quot;^?&quot;CallNonvirtualVoidMethodA&quot;^?&quot;GetFieldID&quot;^?&quot;GetObjectField&quot;^?&quot;GetBooleanField&quot;^?&quot;GetByteField&quot;^?&quot;GetCharField&quot;^?&quot;GetShortField&quot;^?&quot;GetIntField&quot;^?&quot;GetLongField&quot;^?&quot;GetFloatField&quot;^?&quot;GetDoubleField&quot;^?&quot;SetObjectField&quot;^?&quot;SetBooleanField&quot;^?&quot;SetByteField&quot;^?&quot;SetCharField&quot;^?&quot;SetShortField&quot;^?&quot;SetIntField&quot;^?&quot;SetLongField&quot;^?&quot;SetFloatField&quot;^?&quot;SetDoubleField&quot;^?&quot;GetStaticMethodID&quot;^?&quot;CallStaticObjectMethod&quot;^?&quot;CallStaticObjectMethodV&quot;^?&quot;CallStaticObjectMethodA&quot;^?&quot;CallStaticBooleanMethod&quot;^?&quot;CallStaticBooleanMethodV&quot;^?&quot;CallStaticBooleanMethodA&quot;^?&quot;CallStaticByteMethod&quot;^?&quot;CallStaticByteMethodV&quot;^?&quot;CallStaticByteMethodA&quot;^?&quot;CallStaticCharMethod&quot;^?&quot;CallStaticCharMethodV&quot;^?&quot;CallStaticCharMethodA&quot;^?&quot;CallStaticShortMethod&quot;^?&quot;CallStaticShortMethodV&quot;^?&quot;CallStaticShortMethodA&quot;^?&quot;CallStaticIntMethod&quot;^?&quot;CallStaticIntMethodV&quot;^?&quot;CallStaticIntMethodA&quot;^?&quot;CallStaticLongMethod&quot;^?&quot;CallStaticLongMethodV&quot;^?&quot;CallStaticLongMethodA&quot;^?&quot;CallStaticFloatMethod&quot;^?&quot;CallStaticFloatMethodV&quot;^?&quot;CallStaticFloatMethodA&quot;^?&quot;CallStaticDoubleMethod&quot;^?&quot;CallStaticDoubleMethodV&quot;^?&quot;CallStaticDoubleMethodA&quot;^?&quot;CallStaticVoidMethod&quot;^?&quot;CallStaticVoidMethodV&quot;^?&quot;CallStaticVoidMethodA&quot;^?&quot;GetStaticFieldID&quot;^?&quot;GetStaticObjectField&quot;^?&quot;GetStaticBooleanField&quot;^?&quot;GetStaticByteField&quot;^?&quot;GetStaticCharField&quot;^?&quot;GetStaticShortField&quot;^?&quot;GetStaticIntField&quot;^?&quot;GetStaticLongField&quot;^?&quot;GetStaticFloatField&quot;^?&quot;GetStaticDoubleField&quot;^?&quot;SetStaticObjectField&quot;^?&quot;SetStaticBooleanField&quot;^?&quot;SetStaticByteField&quot;^?&quot;SetStaticCharField&quot;^?&quot;SetStaticShortField&quot;^?&quot;SetStaticIntField&quot;^?&quot;SetStaticLongField&quot;^?&quot;SetStaticFloatField&quot;^?&quot;SetStaticDoubleField&quot;^?&quot;NewString&quot;^?&quot;GetStringLength&quot;^?&quot;GetStringChars&quot;^?&quot;ReleaseStringChars&quot;^?&quot;NewStringUTF&quot;^?&quot;GetStringUTFLength&quot;^?&quot;GetStringUTFChars&quot;^?&quot;ReleaseStringUTFChars&quot;^?&quot;GetArrayLength&quot;^?&quot;NewObjectArray&quot;^?&quot;GetObjectArrayElement&quot;^?&quot;SetObjectArrayElement&quot;^?&quot;NewBooleanArray&quot;^?&quot;NewByteArray&quot;^?&quot;NewCharArray&quot;^?&quot;NewShortArray&quot;^?&quot;NewIntArray&quot;^?&quot;NewLongArray&quot;^?&quot;NewFloatArray&quot;^?&quot;NewDoubleArray&quot;^?&quot;GetBooleanArrayElements&quot;^?&quot;GetByteArrayElements&quot;^?&quot;GetCharArrayElements&quot;^?&quot;GetShortArrayElements&quot;^?&quot;GetIntArrayElements&quot;^?&quot;GetLongArrayElements&quot;^?&quot;GetFloatArrayElements&quot;^?&quot;GetDoubleArrayElements&quot;^?&quot;ReleaseBooleanArrayElements&quot;^?&quot;ReleaseByteArrayElements&quot;^?&quot;ReleaseCharArrayElements&quot;^?&quot;ReleaseShortArrayElements&quot;^?&quot;ReleaseIntArrayElements&quot;^?&quot;ReleaseLongArrayElements&quot;^?&quot;ReleaseFloatArrayElements&quot;^?&quot;ReleaseDoubleArrayElements&quot;^?&quot;GetBooleanArrayRegion&quot;^?&quot;GetByteArrayRegion&quot;^?&quot;GetCharArrayRegion&quot;^?&quot;GetShortArrayRegion&quot;^?&quot;GetIntArrayRegion&quot;^?&quot;GetLongArrayRegion&quot;^?&quot;GetFloatArrayRegion&quot;^?&quot;GetDoubleArrayRegion&quot;^?&quot;SetBooleanArrayRegion&quot;^?&quot;SetByteArrayRegion&quot;^?&quot;SetCharArrayRegion&quot;^?&quot;SetShortArrayRegion&quot;^?&quot;SetIntArrayRegion&quot;^?&quot;SetLongArrayRegion&quot;^?&quot;SetFloatArrayRegion&quot;^?&quot;SetDoubleArrayRegion&quot;^?&quot;RegisterNatives&quot;^?&quot;UnregisterNatives&quot;^?&quot;MonitorEnter&quot;^?&quot;MonitorExit&quot;^?&quot;GetJavaVM&quot;^?&quot;GetStringRegion&quot;^?&quot;GetStringUTFRegion&quot;^?&quot;GetPrimitiveArrayCritical&quot;^?&quot;ReleasePrimitiveArrayCritical&quot;^?&quot;GetStringCritical&quot;^?&quot;ReleaseStringCritical&quot;^?&quot;NewWeakGlobalRef&quot;^?&quot;DeleteWeakGlobalRef&quot;^?&quot;ExceptionCheck&quot;^?&quot;NewDirectByteBuffer&quot;^?&quot;GetDirectBufferAddress&quot;^?&quot;GetDirectBufferCapacity&quot;^?}'>
    <field name='reserved0' declared_type='void*' type='^v'/>
    <field name='reserved1' declared_type='void*' type='^v'/>
    <field name='reserved2' declared_type='void*' type='^v'/>
    <field name='reserved3' declared_type='void*' type='^v'/>
    <field name='GetVersion' function_pointer='true' declared_type='jint (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='DefineClass' function_pointer='true' declared_type='jclass (*)(JNIEnv *, char *, jobject, jbyte *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jbyte*' type='*' const='true'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jclass' type='^{_jobject=}'/>
    </field>
    <field name='FindClass' function_pointer='true' declared_type='jclass (*)(JNIEnv *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jclass' type='^{_jobject=}'/>
    </field>
    <field name='FromReflectedMethod' function_pointer='true' declared_type='jmethodID (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jmethodID' type='^{_jmethodID=}'/>
    </field>
    <field name='FromReflectedField' function_pointer='true' declared_type='jfieldID (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jfieldID' type='^{_jfieldID=}'/>
    </field>
    <field name='ToReflectedMethod' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, jboolean)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetSuperclass' function_pointer='true' declared_type='jclass (*)(JNIEnv *, jclass)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <retval declared_type='jclass' type='^{_jobject=}'/>
    </field>
    <field name='IsAssignableFrom' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jclass, jclass)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='ToReflectedField' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jfieldID, jboolean)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='Throw' function_pointer='true' declared_type='jint (*)(JNIEnv *, jthrowable)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthrowable' type='^{_jobject=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='ThrowNew' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='ExceptionOccurred' function_pointer='true' declared_type='jthrowable (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jthrowable' type='^{_jobject=}'/>
    </field>
    <field name='ExceptionDescribe' function_pointer='true' declared_type='void (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ExceptionClear' function_pointer='true' declared_type='void (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='FatalError' function_pointer='true' declared_type='void (*)(JNIEnv *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='PushLocalFrame' function_pointer='true' declared_type='jint (*)(JNIEnv *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='PopLocalFrame' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='NewGlobalRef' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='DeleteGlobalRef' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='DeleteLocalRef' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='IsSameObject' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='NewLocalRef' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='EnsureLocalCapacity' function_pointer='true' declared_type='jint (*)(JNIEnv *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='AllocObject' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='NewObject' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='NewObjectV' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jobject (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='NewObjectA' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetObjectClass' function_pointer='true' declared_type='jclass (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jclass' type='^{_jobject=}'/>
    </field>
    <field name='IsInstanceOf' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jclass)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='GetMethodID' function_pointer='true' declared_type='jmethodID (*)(JNIEnv *, jclass, char *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jmethodID' type='^{_jmethodID=}'/>
    </field>
    <field name='CallObjectMethod' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallObjectMethodV' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jobject (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallObjectMethodA' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallBooleanMethod' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallBooleanMethodV' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jboolean (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallBooleanMethodA' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallByteMethod' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallByteMethodV' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jbyte (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallByteMethodA' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallCharMethod' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallCharMethodV' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jchar (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallCharMethodA' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallShortMethod' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallShortMethodV' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jshort (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallShortMethodA' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallIntMethod' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallIntMethodV' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jint (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallIntMethodA' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallLongMethod' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallLongMethodV' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jlong (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallLongMethodA' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallFloatMethod' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallFloatMethodV' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jfloat (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallFloatMethodA' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallDoubleMethod' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallDoubleMethodV' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='jdouble (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallDoubleMethodA' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallVoidMethod' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallVoidMethodV' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jmethodID, va_list)' type='^?' declared_type64='void (*)(JNIEnv *, jobject, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallVoidMethodA' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallNonvirtualObjectMethod' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallNonvirtualObjectMethodV' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jobject (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallNonvirtualObjectMethodA' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallNonvirtualBooleanMethod' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallNonvirtualBooleanMethodV' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jboolean (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallNonvirtualBooleanMethodA' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallNonvirtualByteMethod' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallNonvirtualByteMethodV' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jbyte (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallNonvirtualByteMethodA' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallNonvirtualCharMethod' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallNonvirtualCharMethodV' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jchar (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallNonvirtualCharMethodA' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallNonvirtualShortMethod' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallNonvirtualShortMethodV' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jshort (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallNonvirtualShortMethodA' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallNonvirtualIntMethod' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallNonvirtualIntMethodV' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jint (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallNonvirtualIntMethodA' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallNonvirtualLongMethod' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallNonvirtualLongMethodV' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jlong (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallNonvirtualLongMethodA' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallNonvirtualFloatMethod' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallNonvirtualFloatMethodV' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jfloat (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallNonvirtualFloatMethodA' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallNonvirtualDoubleMethod' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallNonvirtualDoubleMethodV' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='jdouble (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallNonvirtualDoubleMethodA' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallNonvirtualVoidMethod' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallNonvirtualVoidMethodV' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jclass, jmethodID, va_list)' type='^?' declared_type64='void (*)(JNIEnv *, jobject, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallNonvirtualVoidMethodA' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetFieldID' function_pointer='true' declared_type='jfieldID (*)(JNIEnv *, jclass, char *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jfieldID' type='^{_jfieldID=}'/>
    </field>
    <field name='GetObjectField' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetBooleanField' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='GetByteField' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='GetCharField' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='GetShortField' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='GetIntField' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetLongField' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='GetFloatField' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='GetDoubleField' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jobject, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='SetObjectField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetBooleanField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jboolean)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetByteField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jbyte)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jbyte' type='c'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetCharField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jchar)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jchar' type='S'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetShortField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jshort)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jshort' type='s'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetIntField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetLongField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jlong)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetFloatField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jfloat)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jfloat' type='f'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetDoubleField' function_pointer='true' declared_type='void (*)(JNIEnv *, jobject, jfieldID, jdouble)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jdouble' type='d'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetStaticMethodID' function_pointer='true' declared_type='jmethodID (*)(JNIEnv *, jclass, char *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jmethodID' type='^{_jmethodID=}'/>
    </field>
    <field name='CallStaticObjectMethod' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallStaticObjectMethodV' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jobject (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallStaticObjectMethodA' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='CallStaticBooleanMethod' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallStaticBooleanMethodV' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jboolean (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallStaticBooleanMethodA' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='CallStaticByteMethod' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallStaticByteMethodV' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jbyte (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallStaticByteMethodA' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='CallStaticCharMethod' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallStaticCharMethodV' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jchar (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallStaticCharMethodA' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='CallStaticShortMethod' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallStaticShortMethodV' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jshort (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallStaticShortMethodA' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='CallStaticIntMethod' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallStaticIntMethodV' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jint (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallStaticIntMethodA' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='CallStaticLongMethod' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallStaticLongMethodV' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jlong (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallStaticLongMethodA' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='CallStaticFloatMethod' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallStaticFloatMethodV' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jfloat (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallStaticFloatMethodA' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='CallStaticDoubleMethod' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallStaticDoubleMethodV' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='jdouble (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallStaticDoubleMethodA' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='CallStaticVoidMethod' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jmethodID, ...)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallStaticVoidMethodV' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jmethodID, va_list)' type='^?' declared_type64='void (*)(JNIEnv *, jclass, jmethodID, __va_list_tag *)'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CallStaticVoidMethodA' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jmethodID, jvalue *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jvalue*' type='^(jvalue=CcSsiqfd^{_jobject})' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetStaticFieldID' function_pointer='true' declared_type='jfieldID (*)(JNIEnv *, jclass, char *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jfieldID' type='^{_jfieldID=}'/>
    </field>
    <field name='GetStaticObjectField' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetStaticBooleanField' function_pointer='true' declared_type='jboolean (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='GetStaticByteField' function_pointer='true' declared_type='jbyte (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jbyte' type='c'/>
    </field>
    <field name='GetStaticCharField' function_pointer='true' declared_type='jchar (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jchar' type='S'/>
    </field>
    <field name='GetStaticShortField' function_pointer='true' declared_type='jshort (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jshort' type='s'/>
    </field>
    <field name='GetStaticIntField' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetStaticLongField' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jlong' type='q'/>
    </field>
    <field name='GetStaticFloatField' function_pointer='true' declared_type='jfloat (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jfloat' type='f'/>
    </field>
    <field name='GetStaticDoubleField' function_pointer='true' declared_type='jdouble (*)(JNIEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jdouble' type='d'/>
    </field>
    <field name='SetStaticObjectField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticBooleanField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jboolean)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticByteField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jbyte)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jbyte' type='c'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticCharField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jchar)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jchar' type='S'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticShortField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jshort)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jshort' type='s'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticIntField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticLongField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jlong)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticFloatField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jfloat)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jfloat' type='f'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetStaticDoubleField' function_pointer='true' declared_type='void (*)(JNIEnv *, jclass, jfieldID, jdouble)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jdouble' type='d'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='NewString' function_pointer='true' declared_type='jstring (*)(JNIEnv *, jchar *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jchar*' type='^S' const='true'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jstring' type='^{_jobject=}'/>
    </field>
    <field name='GetStringLength' function_pointer='true' declared_type='jsize (*)(JNIEnv *, jstring)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <retval declared_type='jsize' type='l' type64='i'/>
    </field>
    <field name='GetStringChars' function_pointer='true' declared_type='jchar *(*)(JNIEnv *, jstring, jboolean *)' type='^?' const='true'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jchar*' type='^S' const='true'/>
    </field>
    <field name='ReleaseStringChars' function_pointer='true' declared_type='void (*)(JNIEnv *, jstring, jchar *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jchar*' type='^S' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='NewStringUTF' function_pointer='true' declared_type='jstring (*)(JNIEnv *, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jstring' type='^{_jobject=}'/>
    </field>
    <field name='GetStringUTFLength' function_pointer='true' declared_type='jsize (*)(JNIEnv *, jstring)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <retval declared_type='jsize' type='l' type64='i'/>
    </field>
    <field name='GetStringUTFChars' function_pointer='true' declared_type='char *(*)(JNIEnv *, jstring, jboolean *)' type='^?' const='true'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='char*' type='*' const='true'/>
    </field>
    <field name='ReleaseStringUTFChars' function_pointer='true' declared_type='void (*)(JNIEnv *, jstring, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetArrayLength' function_pointer='true' declared_type='jsize (*)(JNIEnv *, jarray)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jarray' type='^{_jobject=}'/>
      <retval declared_type='jsize' type='l' type64='i'/>
    </field>
    <field name='NewObjectArray' function_pointer='true' declared_type='jobjectArray (*)(JNIEnv *, jsize, jclass, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jobjectArray' type='^{_jobject=}'/>
    </field>
    <field name='GetObjectArrayElement' function_pointer='true' declared_type='jobject (*)(JNIEnv *, jobjectArray, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobjectArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='SetObjectArrayElement' function_pointer='true' declared_type='void (*)(JNIEnv *, jobjectArray, jsize, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobjectArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='NewBooleanArray' function_pointer='true' declared_type='jbooleanArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jbooleanArray' type='^{_jobject=}'/>
    </field>
    <field name='NewByteArray' function_pointer='true' declared_type='jbyteArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jbyteArray' type='^{_jobject=}'/>
    </field>
    <field name='NewCharArray' function_pointer='true' declared_type='jcharArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jcharArray' type='^{_jobject=}'/>
    </field>
    <field name='NewShortArray' function_pointer='true' declared_type='jshortArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jshortArray' type='^{_jobject=}'/>
    </field>
    <field name='NewIntArray' function_pointer='true' declared_type='jintArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jintArray' type='^{_jobject=}'/>
    </field>
    <field name='NewLongArray' function_pointer='true' declared_type='jlongArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jlongArray' type='^{_jobject=}'/>
    </field>
    <field name='NewFloatArray' function_pointer='true' declared_type='jfloatArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jfloatArray' type='^{_jobject=}'/>
    </field>
    <field name='NewDoubleArray' function_pointer='true' declared_type='jdoubleArray (*)(JNIEnv *, jsize)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <retval declared_type='jdoubleArray' type='^{_jobject=}'/>
    </field>
    <field name='GetBooleanArrayElements' function_pointer='true' declared_type='jboolean *(*)(JNIEnv *, jbooleanArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbooleanArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jboolean*' type='*'/>
    </field>
    <field name='GetByteArrayElements' function_pointer='true' declared_type='jbyte *(*)(JNIEnv *, jbyteArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbyteArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jbyte*' type='*'/>
    </field>
    <field name='GetCharArrayElements' function_pointer='true' declared_type='jchar *(*)(JNIEnv *, jcharArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jcharArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jchar*' type='^S'/>
    </field>
    <field name='GetShortArrayElements' function_pointer='true' declared_type='jshort *(*)(JNIEnv *, jshortArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jshortArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jshort*' type='^s'/>
    </field>
    <field name='GetIntArrayElements' function_pointer='true' declared_type='jint *(*)(JNIEnv *, jintArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jintArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jint*' type='^i'/>
    </field>
    <field name='GetLongArrayElements' function_pointer='true' declared_type='jlong *(*)(JNIEnv *, jlongArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jlongArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jlong*' type='^q'/>
    </field>
    <field name='GetFloatArrayElements' function_pointer='true' declared_type='jfloat *(*)(JNIEnv *, jfloatArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jfloatArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jfloat*' type='^f'/>
    </field>
    <field name='GetDoubleArrayElements' function_pointer='true' declared_type='jdouble *(*)(JNIEnv *, jdoubleArray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jdoubleArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jdouble*' type='^d'/>
    </field>
    <field name='ReleaseBooleanArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jbooleanArray, jboolean *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbooleanArray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseByteArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jbyteArray, jbyte *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbyteArray' type='^{_jobject=}'/>
      <arg declared_type='jbyte*' type='*'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseCharArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jcharArray, jchar *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jcharArray' type='^{_jobject=}'/>
      <arg declared_type='jchar*' type='^S'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseShortArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jshortArray, jshort *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jshortArray' type='^{_jobject=}'/>
      <arg declared_type='jshort*' type='^s'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseIntArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jintArray, jint *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jintArray' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseLongArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jlongArray, jlong *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jlongArray' type='^{_jobject=}'/>
      <arg declared_type='jlong*' type='^q'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseFloatArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jfloatArray, jfloat *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jfloatArray' type='^{_jobject=}'/>
      <arg declared_type='jfloat*' type='^f'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ReleaseDoubleArrayElements' function_pointer='true' declared_type='void (*)(JNIEnv *, jdoubleArray, jdouble *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jdoubleArray' type='^{_jobject=}'/>
      <arg declared_type='jdouble*' type='^d'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetBooleanArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jbooleanArray, jsize, jsize, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbooleanArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetByteArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jbyteArray, jsize, jsize, jbyte *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbyteArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jbyte*' type='*'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetCharArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jcharArray, jsize, jsize, jchar *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jcharArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jchar*' type='^S'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetShortArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jshortArray, jsize, jsize, jshort *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jshortArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jshort*' type='^s'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetIntArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jintArray, jsize, jsize, jint *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jintArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetLongArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jlongArray, jsize, jsize, jlong *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jlongArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetFloatArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jfloatArray, jsize, jsize, jfloat *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jfloatArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jfloat*' type='^f'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetDoubleArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jdoubleArray, jsize, jsize, jdouble *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jdoubleArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jdouble*' type='^d'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetBooleanArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jbooleanArray, jsize, jsize, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbooleanArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jboolean*' type='*' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetByteArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jbyteArray, jsize, jsize, jbyte *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jbyteArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jbyte*' type='*' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetCharArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jcharArray, jsize, jsize, jchar *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jcharArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jchar*' type='^S' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetShortArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jshortArray, jsize, jsize, jshort *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jshortArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jshort*' type='^s' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetIntArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jintArray, jsize, jsize, jint *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jintArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jint*' type='^i' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetLongArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jlongArray, jsize, jsize, jlong *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jlongArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jlong*' type='^q' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetFloatArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jfloatArray, jsize, jsize, jfloat *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jfloatArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jfloat*' type='^f' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SetDoubleArrayRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jdoubleArray, jsize, jsize, jdouble *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jdoubleArray' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jdouble*' type='^d' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='RegisterNatives' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass, JNINativeMethod *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='JNINativeMethod*' type='^{_JNINativeMethod=**^v}' const='true'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='UnregisterNatives' function_pointer='true' declared_type='jint (*)(JNIEnv *, jclass)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='MonitorEnter' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='MonitorExit' function_pointer='true' declared_type='jint (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetJavaVM' function_pointer='true' declared_type='jint (*)(JNIEnv *, JavaVM **)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='JavaVM**' type='^^^{JNIInvokeInterface_}'/>
      <retval declared_type='jint' type='l' type64='i'/>
    </field>
    <field name='GetStringRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jstring, jsize, jsize, jchar *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jchar*' type='^S'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetStringUTFRegion' function_pointer='true' declared_type='void (*)(JNIEnv *, jstring, jsize, jsize, char *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='jsize' type='l' type64='i'/>
      <arg declared_type='char*' type='*'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetPrimitiveArrayCritical' function_pointer='true' declared_type='void *(*)(JNIEnv *, jarray, jboolean *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jarray' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='void*' type='^v'/>
    </field>
    <field name='ReleasePrimitiveArrayCritical' function_pointer='true' declared_type='void (*)(JNIEnv *, jarray, void *, jint)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jarray' type='^{_jobject=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GetStringCritical' function_pointer='true' declared_type='jchar *(*)(JNIEnv *, jstring, jboolean *)' type='^?' const='true'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jchar*' type='^S' const='true'/>
    </field>
    <field name='ReleaseStringCritical' function_pointer='true' declared_type='void (*)(JNIEnv *, jstring, jchar *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jstring' type='^{_jobject=}'/>
      <arg declared_type='jchar*' type='^S' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='NewWeakGlobalRef' function_pointer='true' declared_type='jweak (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jweak' type='^{_jobject=}'/>
    </field>
    <field name='DeleteWeakGlobalRef' function_pointer='true' declared_type='void (*)(JNIEnv *, jweak)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jweak' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ExceptionCheck' function_pointer='true' declared_type='jboolean (*)(JNIEnv *)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jboolean' type='C'/>
    </field>
    <field name='NewDirectByteBuffer' function_pointer='true' declared_type='jobject (*)(JNIEnv *, void *, jlong)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jobject' type='^{_jobject=}'/>
    </field>
    <field name='GetDirectBufferAddress' function_pointer='true' declared_type='void *(*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void*' type='^v'/>
    </field>
    <field name='GetDirectBufferCapacity' function_pointer='true' declared_type='jlong (*)(JNIEnv *, jobject)' type='^?'>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jlong' type='q'/>
    </field>
  </struct>
  <struct name='jvmtiAddrLocationMap' type='{_jvmtiAddrLocationMap=&quot;start_address&quot;^v&quot;location&quot;q}'>
    <field name='start_address' declared_type='void*' type='^v' const='true'/>
    <field name='location' declared_type='jlocation' type='q'/>
  </struct>
  <struct name='jvmtiCapabilities' type='{_jvmtiCapabilities=&quot;can_tag_objects&quot;b1&quot;can_generate_field_modification_events&quot;b1&quot;can_generate_field_access_events&quot;b1&quot;can_get_bytecodes&quot;b1&quot;can_get_synthetic_attribute&quot;b1&quot;can_get_owned_monitor_info&quot;b1&quot;can_get_current_contended_monitor&quot;b1&quot;can_get_monitor_info&quot;b1&quot;can_pop_frame&quot;b1&quot;can_redefine_classes&quot;b1&quot;can_signal_thread&quot;b1&quot;can_get_source_file_name&quot;b1&quot;can_get_line_numbers&quot;b1&quot;can_get_source_debug_extension&quot;b1&quot;can_access_local_variables&quot;b1&quot;can_maintain_original_method_order&quot;b1&quot;can_generate_single_step_events&quot;b1&quot;can_generate_exception_events&quot;b1&quot;can_generate_frame_pop_events&quot;b1&quot;can_generate_breakpoint_events&quot;b1&quot;can_suspend&quot;b1&quot;can_redefine_any_class&quot;b1&quot;can_get_current_thread_cpu_time&quot;b1&quot;can_get_thread_cpu_time&quot;b1&quot;can_generate_method_entry_events&quot;b1&quot;can_generate_method_exit_events&quot;b1&quot;can_generate_all_class_hook_events&quot;b1&quot;can_generate_compiled_method_load_events&quot;b1&quot;can_generate_monitor_events&quot;b1&quot;can_generate_vm_object_alloc_events&quot;b1&quot;can_generate_native_method_bind_events&quot;b1&quot;can_generate_garbage_collection_events&quot;b1&quot;can_generate_object_free_events&quot;b1&quot;&quot;b15&quot;&quot;b16&quot;&quot;b16&quot;&quot;b16&quot;&quot;b16&quot;&quot;b16}'>
    <field name='can_tag_objects' declared_type='unsigned int' type='b1'/>
    <field name='can_generate_field_modification_events' declared_type='unsigned int' type='b1'/>
    <field name='can_generate_field_access_events' declared_type='unsigned int' type='b1'/>
    <field name='can_get_bytecodes' declared_type='unsigned int' type='b1'/>
    <field name='can_get_synthetic_attribute' declared_type='unsigned int' type='b1'/>
    <field name='can_get_owned_monitor_info' declared_type='unsigned int' type='b1'/>
    <field name='can_get_current_contended_monitor' declared_type='unsigned int' type='b1'/>
    <field name='can_get_monitor_info' declared_type='unsigned int' type='b1'/>
    <field name='can_pop_frame' declared_type='unsigned int' type='b1'/>
    <field name='can_redefine_classes' declared_type='unsigned int' type='b1'/>
    <field name='can_signal_thread' declared_type='unsigned int' type='b1'/>
    <field name='can_get_source_file_name' declared_type='unsigned int' type='b1'/>
    <field name='can_get_line_numbers' declared_type='unsigned int' type='b1'/>
    <field name='can_get_source_debug_extension' declared_type='unsigned int' type='b1'/>
    <field name='can_access_local_variables' declared_type='unsigned int' type='b1'/>
    <field name='can_maintain_original_method_order' declared_type='unsigned int' type='b1'/>
    <field name='can_generate_single_step_events' declared_type='unsigned int' type='b1'/>
    <field name='can_generate_exception_events' declared_type='unsigned int' type='b1'/>
    <field name='can_generate_frame_pop_events' declared_type='unsigned int' type='b1'/>
    <field name='can_generate_breakpoint_events' declared_type='unsigned int' type='b1'/>
    <field name='can_suspend' declared_type='unsigned int' type='b1'/>
    <field name='can_redefine_any_class' declared_type='unsigned int' type='b1'/>
    <field name='can_get_current_thread_cpu_time' declared_type='unsigned int' type='b1'/>
    <field name='can_get_thread_cpu_time' declared_type='unsigned int' type='b1'/>
    <field name='can_generate_method_entry_events' declared_type='unsigned int' type='b1'/>
    <field name='can_generate_method_exit_events' declared_type='unsigned int' type='b1'/>
    <field name='can_generate_all_class_hook_events' declared_type='unsigned int' type='b1'/>
    <field name='can_generate_compiled_method_load_events' declared_type='unsigned int' type='b1'/>
    <field name='can_generate_monitor_events' declared_type='unsigned int' type='b1'/>
    <field name='can_generate_vm_object_alloc_events' declared_type='unsigned int' type='b1'/>
    <field name='can_generate_native_method_bind_events' declared_type='unsigned int' type='b1'/>
    <field name='can_generate_garbage_collection_events' declared_type='unsigned int' type='b1'/>
    <field name='can_generate_object_free_events' declared_type='unsigned int' type='b1'/>
    <field declared_type='unsigned int' type='b15'/>
    <field declared_type='unsigned int' type='b16'/>
    <field declared_type='unsigned int' type='b16'/>
    <field declared_type='unsigned int' type='b16'/>
    <field declared_type='unsigned int' type='b16'/>
    <field declared_type='unsigned int' type='b16'/>
  </struct>
  <struct name='jvmtiClassDefinition' type='{_jvmtiClassDefinition=&quot;klass&quot;^{_jobject}&quot;class_byte_count&quot;i&quot;class_bytes&quot;*}'>
    <field name='klass' declared_type='jclass' type='^{_jobject=}'/>
    <field name='class_byte_count' declared_type='jint' type='l' type64='i'/>
    <field name='class_bytes' declared_type='unsigned char*' type='*' const='true'/>
  </struct>
  <struct name='jvmtiEnv' type='{jvmtiInterface_1_=&quot;reserved1&quot;^v&quot;SetEventNotificationMode&quot;^?&quot;reserved3&quot;^v&quot;GetAllThreads&quot;^?&quot;SuspendThread&quot;^?&quot;ResumeThread&quot;^?&quot;StopThread&quot;^?&quot;InterruptThread&quot;^?&quot;GetThreadInfo&quot;^?&quot;GetOwnedMonitorInfo&quot;^?&quot;GetCurrentContendedMonitor&quot;^?&quot;RunAgentThread&quot;^?&quot;GetTopThreadGroups&quot;^?&quot;GetThreadGroupInfo&quot;^?&quot;GetThreadGroupChildren&quot;^?&quot;GetFrameCount&quot;^?&quot;GetThreadState&quot;^?&quot;reserved18&quot;^v&quot;GetFrameLocation&quot;^?&quot;NotifyFramePop&quot;^?&quot;GetLocalObject&quot;^?&quot;GetLocalInt&quot;^?&quot;GetLocalLong&quot;^?&quot;GetLocalFloat&quot;^?&quot;GetLocalDouble&quot;^?&quot;SetLocalObject&quot;^?&quot;SetLocalInt&quot;^?&quot;SetLocalLong&quot;^?&quot;SetLocalFloat&quot;^?&quot;SetLocalDouble&quot;^?&quot;CreateRawMonitor&quot;^?&quot;DestroyRawMonitor&quot;^?&quot;RawMonitorEnter&quot;^?&quot;RawMonitorExit&quot;^?&quot;RawMonitorWait&quot;^?&quot;RawMonitorNotify&quot;^?&quot;RawMonitorNotifyAll&quot;^?&quot;SetBreakpoint&quot;^?&quot;ClearBreakpoint&quot;^?&quot;reserved40&quot;^v&quot;SetFieldAccessWatch&quot;^?&quot;ClearFieldAccessWatch&quot;^?&quot;SetFieldModificationWatch&quot;^?&quot;ClearFieldModificationWatch&quot;^?&quot;reserved45&quot;^v&quot;Allocate&quot;^?&quot;Deallocate&quot;^?&quot;GetClassSignature&quot;^?&quot;GetClassStatus&quot;^?&quot;GetSourceFileName&quot;^?&quot;GetClassModifiers&quot;^?&quot;GetClassMethods&quot;^?&quot;GetClassFields&quot;^?&quot;GetImplementedInterfaces&quot;^?&quot;IsInterface&quot;^?&quot;IsArrayClass&quot;^?&quot;GetClassLoader&quot;^?&quot;GetObjectHashCode&quot;^?&quot;GetObjectMonitorUsage&quot;^?&quot;GetFieldName&quot;^?&quot;GetFieldDeclaringClass&quot;^?&quot;GetFieldModifiers&quot;^?&quot;IsFieldSynthetic&quot;^?&quot;GetMethodName&quot;^?&quot;GetMethodDeclaringClass&quot;^?&quot;GetMethodModifiers&quot;^?&quot;reserved67&quot;^v&quot;GetMaxLocals&quot;^?&quot;GetArgumentsSize&quot;^?&quot;GetLineNumberTable&quot;^?&quot;GetMethodLocation&quot;^?&quot;GetLocalVariableTable&quot;^?&quot;reserved73&quot;^v&quot;reserved74&quot;^v&quot;GetBytecodes&quot;^?&quot;IsMethodNative&quot;^?&quot;IsMethodSynthetic&quot;^?&quot;GetLoadedClasses&quot;^?&quot;GetClassLoaderClasses&quot;^?&quot;PopFrame&quot;^?&quot;reserved81&quot;^v&quot;reserved82&quot;^v&quot;reserved83&quot;^v&quot;reserved84&quot;^v&quot;reserved85&quot;^v&quot;reserved86&quot;^v&quot;RedefineClasses&quot;^?&quot;GetVersionNumber&quot;^?&quot;GetCapabilities&quot;^?&quot;GetSourceDebugExtension&quot;^?&quot;IsMethodObsolete&quot;^?&quot;SuspendThreadList&quot;^?&quot;ResumeThreadList&quot;^?&quot;reserved94&quot;^v&quot;reserved95&quot;^v&quot;reserved96&quot;^v&quot;reserved97&quot;^v&quot;reserved98&quot;^v&quot;reserved99&quot;^v&quot;GetAllStackTraces&quot;^?&quot;GetThreadListStackTraces&quot;^?&quot;GetThreadLocalStorage&quot;^?&quot;SetThreadLocalStorage&quot;^?&quot;GetStackTrace&quot;^?&quot;reserved105&quot;^v&quot;GetTag&quot;^?&quot;SetTag&quot;^?&quot;ForceGarbageCollection&quot;^?&quot;IterateOverObjectsReachableFromObject&quot;^?&quot;IterateOverReachableObjects&quot;^?&quot;IterateOverHeap&quot;^?&quot;IterateOverInstancesOfClass&quot;^?&quot;reserved113&quot;^v&quot;GetObjectsWithTags&quot;^?&quot;reserved115&quot;^v&quot;reserved116&quot;^v&quot;reserved117&quot;^v&quot;reserved118&quot;^v&quot;reserved119&quot;^v&quot;SetJNIFunctionTable&quot;^?&quot;GetJNIFunctionTable&quot;^?&quot;SetEventCallbacks&quot;^?&quot;GenerateEvents&quot;^?&quot;GetExtensionFunctions&quot;^?&quot;GetExtensionEvents&quot;^?&quot;SetExtensionEventCallback&quot;^?&quot;DisposeEnvironment&quot;^?&quot;GetErrorName&quot;^?&quot;GetJLocationFormat&quot;^?&quot;GetSystemProperties&quot;^?&quot;GetSystemProperty&quot;^?&quot;SetSystemProperty&quot;^?&quot;GetPhase&quot;^?&quot;GetCurrentThreadCpuTimerInfo&quot;^?&quot;GetCurrentThreadCpuTime&quot;^?&quot;GetThreadCpuTimerInfo&quot;^?&quot;GetThreadCpuTime&quot;^?&quot;GetTimerInfo&quot;^?&quot;GetTime&quot;^?&quot;GetPotentialCapabilities&quot;^?&quot;reserved141&quot;^v&quot;AddCapabilities&quot;^?&quot;RelinquishCapabilities&quot;^?&quot;GetAvailableProcessors&quot;^?&quot;reserved145&quot;^v&quot;reserved146&quot;^v&quot;GetEnvironmentLocalStorage&quot;^?&quot;SetEnvironmentLocalStorage&quot;^?&quot;AddToBootstrapClassLoaderSearch&quot;^?&quot;SetVerboseFlag&quot;^?&quot;reserved151&quot;^v&quot;reserved152&quot;^v&quot;reserved153&quot;^v&quot;GetObjectSize&quot;^?}'>
    <field name='reserved1' declared_type='void*' type='^v'/>
    <field name='SetEventNotificationMode' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiEventMode, jvmtiEvent, jthread, ...)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiEventMode' type='i'/>
      <arg declared_type='jvmtiEvent' type='i'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved3' declared_type='void*' type='^v'/>
    <field name='GetAllThreads' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *, jthread **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jthread**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SuspendThread' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='ResumeThread' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='StopThread' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jobject)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='InterruptThread' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadInfo' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jvmtiThreadInfo *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jvmtiThreadInfo*' type='^{_jvmtiThreadInfo=*iC^{_jobject}^{_jobject}}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetOwnedMonitorInfo' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint *, jobject **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jobject**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetCurrentContendedMonitor' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jobject *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jobject*' type='^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RunAgentThread' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jvmtiStartFunction, void *, jint)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jvmtiStartFunction' type='^?'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetTopThreadGroups' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *, jthreadGroup **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jthreadGroup**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadGroupInfo' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthreadGroup, jvmtiThreadGroupInfo *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthreadGroup' type='^{_jobject=}'/>
      <arg declared_type='jvmtiThreadGroupInfo*' type='^{_jvmtiThreadGroupInfo=^{_jobject}*iC}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadGroupChildren' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthreadGroup, jint *, jthread **, jint *, jthreadGroup **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthreadGroup' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jthread**' type='^^^{_jobject}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jthreadGroup**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetFrameCount' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadState' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved18' declared_type='void*' type='^v'/>
    <field name='GetFrameLocation' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jmethodID *, jlocation *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jmethodID*' type='^^{_jmethodID}'/>
      <arg declared_type='jlocation*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='NotifyFramePop' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLocalObject' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jobject *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jobject*' type='^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLocalInt' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLocalLong' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jlong *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLocalFloat' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jfloat *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jfloat*' type='^f'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLocalDouble' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jdouble *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jdouble*' type='^d'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetLocalObject' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jobject)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetLocalInt' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jint)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetLocalLong' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jlong)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetLocalFloat' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jfloat)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jfloat' type='f'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetLocalDouble' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jdouble)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jdouble' type='d'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='CreateRawMonitor' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, char *, jrawMonitorID *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='jrawMonitorID*' type='^^{_jrawMonitorID}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='DestroyRawMonitor' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jrawMonitorID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jrawMonitorID' type='^{_jrawMonitorID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RawMonitorEnter' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jrawMonitorID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jrawMonitorID' type='^{_jrawMonitorID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RawMonitorExit' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jrawMonitorID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jrawMonitorID' type='^{_jrawMonitorID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RawMonitorWait' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jrawMonitorID, jlong)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jrawMonitorID' type='^{_jrawMonitorID=}'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RawMonitorNotify' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jrawMonitorID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jrawMonitorID' type='^{_jrawMonitorID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RawMonitorNotifyAll' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jrawMonitorID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jrawMonitorID' type='^{_jrawMonitorID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetBreakpoint' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jlocation)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation' type='q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='ClearBreakpoint' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jlocation)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation' type='q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved40' declared_type='void*' type='^v'/>
    <field name='SetFieldAccessWatch' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='ClearFieldAccessWatch' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetFieldModificationWatch' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='ClearFieldModificationWatch' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved45' declared_type='void*' type='^v'/>
    <field name='Allocate' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jlong, unsigned char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jlong' type='q'/>
      <arg declared_type='unsigned char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='Deallocate' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, unsigned char *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='unsigned char*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassSignature' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, char **, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char**' type='^*'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassStatus' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetSourceFileName' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassModifiers' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassMethods' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jint *, jmethodID **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jmethodID**' type='^^^{_jmethodID}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassFields' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jint *, jfieldID **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jfieldID**' type='^^^{_jfieldID}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetImplementedInterfaces' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jint *, jclass **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jclass**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IsInterface' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jboolean *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IsArrayClass' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jboolean *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassLoader' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jobject *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jobject*' type='^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetObjectHashCode' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetObjectMonitorUsage' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jvmtiMonitorUsage *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jvmtiMonitorUsage*' type='^{_jvmtiMonitorUsage=^{_jobject}ii^^{_jobject}i^^{_jobject}}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetFieldName' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID, char **, char **, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='char**' type='^*'/>
      <arg declared_type='char**' type='^*'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetFieldDeclaringClass' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID, jclass *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jclass*' type='^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetFieldModifiers' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IsFieldSynthetic' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID, jboolean *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetMethodName' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, char **, char **, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='char**' type='^*'/>
      <arg declared_type='char**' type='^*'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetMethodDeclaringClass' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jclass *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jclass*' type='^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetMethodModifiers' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved67' declared_type='void*' type='^v'/>
    <field name='GetMaxLocals' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetArgumentsSize' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLineNumberTable' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jint *, jvmtiLineNumberEntry **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jvmtiLineNumberEntry**' type='^^{?}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetMethodLocation' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jlocation *, jlocation *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation*' type='^q'/>
      <arg declared_type='jlocation*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLocalVariableTable' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jint *, jvmtiLocalVariableEntry **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jvmtiLocalVariableEntry**' type='^^{?}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved73' declared_type='void*' type='^v'/>
    <field name='reserved74' declared_type='void*' type='^v'/>
    <field name='GetBytecodes' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jint *, unsigned char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='unsigned char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IsMethodNative' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jboolean *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IsMethodSynthetic' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jboolean *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLoadedClasses' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *, jclass **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jclass**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassLoaderClasses' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jint *, jclass **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jclass**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='PopFrame' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved81' declared_type='void*' type='^v'/>
    <field name='reserved82' declared_type='void*' type='^v'/>
    <field name='reserved83' declared_type='void*' type='^v'/>
    <field name='reserved84' declared_type='void*' type='^v'/>
    <field name='reserved85' declared_type='void*' type='^v'/>
    <field name='reserved86' declared_type='void*' type='^v'/>
    <field name='RedefineClasses' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jvmtiClassDefinition *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jvmtiClassDefinition*' type='^{_jvmtiClassDefinition=^{_jobject}i*}' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetVersionNumber' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetCapabilities' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiCapabilities *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiCapabilities*' type='^{_jvmtiCapabilities=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b15b16b16b16b16b16}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetSourceDebugExtension' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IsMethodObsolete' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jboolean *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SuspendThreadList' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jthread *, jvmtiError *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jthread*' type='^^{_jobject}' const='true'/>
      <arg declared_type='jvmtiError*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='ResumeThreadList' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jthread *, jvmtiError *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jthread*' type='^^{_jobject}' const='true'/>
      <arg declared_type='jvmtiError*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved94' declared_type='void*' type='^v'/>
    <field name='reserved95' declared_type='void*' type='^v'/>
    <field name='reserved96' declared_type='void*' type='^v'/>
    <field name='reserved97' declared_type='void*' type='^v'/>
    <field name='reserved98' declared_type='void*' type='^v'/>
    <field name='reserved99' declared_type='void*' type='^v'/>
    <field name='GetAllStackTraces' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jvmtiStackInfo **, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jvmtiStackInfo**' type='^^{?}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadListStackTraces' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jthread *, jint, jvmtiStackInfo **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jthread*' type='^^{_jobject}' const='true'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jvmtiStackInfo**' type='^^{?}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadLocalStorage' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, void **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='void**' type='^^v'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetThreadLocalStorage' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, void *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetStackTrace' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jvmtiFrameInfo *, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jvmtiFrameInfo*' type='^{_jvmtiFrameInfo=^{_jmethodID}q}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved105' declared_type='void*' type='^v'/>
    <field name='GetTag' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jlong *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetTag' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jlong)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='ForceGarbageCollection' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IterateOverObjectsReachableFromObject' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jvmtiObjectReferenceCallback, void *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jvmtiObjectReferenceCallback' type='^?'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IterateOverReachableObjects' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiHeapRootCallback, jvmtiStackReferenceCallback, jvmtiObjectReferenceCallback, void *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiHeapRootCallback' type='^?'/>
      <arg declared_type='jvmtiStackReferenceCallback' type='^?'/>
      <arg declared_type='jvmtiObjectReferenceCallback' type='^?'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IterateOverHeap' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiHeapObjectFilter, jvmtiHeapObjectCallback, void *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiHeapObjectFilter' type='i'/>
      <arg declared_type='jvmtiHeapObjectCallback' type='^?'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IterateOverInstancesOfClass' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jvmtiHeapObjectFilter, jvmtiHeapObjectCallback, void *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jvmtiHeapObjectFilter' type='i'/>
      <arg declared_type='jvmtiHeapObjectCallback' type='^?'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved113' declared_type='void*' type='^v'/>
    <field name='GetObjectsWithTags' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jlong *, jint *, jobject **, jlong **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jlong*' type='^q' const='true'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jobject**' type='^^^{_jobject}'/>
      <arg declared_type='jlong**' type='^^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved115' declared_type='void*' type='^v'/>
    <field name='reserved116' declared_type='void*' type='^v'/>
    <field name='reserved117' declared_type='void*' type='^v'/>
    <field name='reserved118' declared_type='void*' type='^v'/>
    <field name='reserved119' declared_type='void*' type='^v'/>
    <field name='SetJNIFunctionTable' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jniNativeInterface *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jniNativeInterface*' type='^{JNINativeInterface_=^v^v^v^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetJNIFunctionTable' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jniNativeInterface **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jniNativeInterface**' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetEventCallbacks' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiEventCallbacks *, jint)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiEventCallbacks*' type='^{_jvmtiEventCallbacks=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}' const='true'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GenerateEvents' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiEvent)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiEvent' type='i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetExtensionFunctions' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *, jvmtiExtensionFunctionInfo **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jvmtiExtensionFunctionInfo**' type='^^{?}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetExtensionEvents' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *, jvmtiExtensionEventInfo **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jvmtiExtensionEventInfo**' type='^^{?}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetExtensionEventCallback' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jvmtiExtensionEvent)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jvmtiExtensionEvent' type='^?'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='DisposeEnvironment' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetErrorName' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiError, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiError' type='i'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetJLocationFormat' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiJlocationFormat *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiJlocationFormat*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetSystemProperties' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *, char ***)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='char***' type='^^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetSystemProperty' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, char *, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetSystemProperty' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, char *, char *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetPhase' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiPhase *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiPhase*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetCurrentThreadCpuTimerInfo' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiTimerInfo *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiTimerInfo*' type='^{_jvmtiTimerInfo=qCCiqq}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetCurrentThreadCpuTime' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jlong *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadCpuTimerInfo' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiTimerInfo *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiTimerInfo*' type='^{_jvmtiTimerInfo=qCCiqq}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadCpuTime' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jlong *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetTimerInfo' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiTimerInfo *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiTimerInfo*' type='^{_jvmtiTimerInfo=qCCiqq}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetTime' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jlong *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetPotentialCapabilities' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiCapabilities *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiCapabilities*' type='^{_jvmtiCapabilities=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b15b16b16b16b16b16}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved141' declared_type='void*' type='^v'/>
    <field name='AddCapabilities' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiCapabilities *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiCapabilities*' type='^{_jvmtiCapabilities=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b15b16b16b16b16b16}' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RelinquishCapabilities' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiCapabilities *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiCapabilities*' type='^{_jvmtiCapabilities=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b15b16b16b16b16b16}' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetAvailableProcessors' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved145' declared_type='void*' type='^v'/>
    <field name='reserved146' declared_type='void*' type='^v'/>
    <field name='GetEnvironmentLocalStorage' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, void **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='void**' type='^^v'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetEnvironmentLocalStorage' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, void *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='AddToBootstrapClassLoaderSearch' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, char *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetVerboseFlag' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiVerboseFlag, jboolean)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiVerboseFlag' type='i'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved151' declared_type='void*' type='^v'/>
    <field name='reserved152' declared_type='void*' type='^v'/>
    <field name='reserved153' declared_type='void*' type='^v'/>
    <field name='GetObjectSize' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jlong *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
  </struct>
  <struct name='jvmtiEventCallbacks' type='{_jvmtiEventCallbacks=&quot;VMInit&quot;^?&quot;VMDeath&quot;^?&quot;ThreadStart&quot;^?&quot;ThreadEnd&quot;^?&quot;ClassFileLoadHook&quot;^?&quot;ClassLoad&quot;^?&quot;ClassPrepare&quot;^?&quot;VMStart&quot;^?&quot;Exception&quot;^?&quot;ExceptionCatch&quot;^?&quot;SingleStep&quot;^?&quot;FramePop&quot;^?&quot;Breakpoint&quot;^?&quot;FieldAccess&quot;^?&quot;FieldModification&quot;^?&quot;MethodEntry&quot;^?&quot;MethodExit&quot;^?&quot;NativeMethodBind&quot;^?&quot;CompiledMethodLoad&quot;^?&quot;CompiledMethodUnload&quot;^?&quot;DynamicCodeGenerated&quot;^?&quot;DataDumpRequest&quot;^?&quot;reserved72&quot;^?&quot;MonitorWait&quot;^?&quot;MonitorWaited&quot;^?&quot;MonitorContendedEnter&quot;^?&quot;MonitorContendedEntered&quot;^?&quot;reserved77&quot;^?&quot;reserved78&quot;^?&quot;reserved79&quot;^?&quot;reserved80&quot;^?&quot;GarbageCollectionStart&quot;^?&quot;GarbageCollectionFinish&quot;^?&quot;ObjectFree&quot;^?&quot;VMObjectAlloc&quot;^?}'>
    <field name='VMInit' function_pointer='true' declared_type='jvmtiEventVMInit' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='VMDeath' function_pointer='true' declared_type='jvmtiEventVMDeath' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ThreadStart' function_pointer='true' declared_type='jvmtiEventThreadStart' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ThreadEnd' function_pointer='true' declared_type='jvmtiEventThreadEnd' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ClassFileLoadHook' function_pointer='true' declared_type='jvmtiEventClassFileLoadHook' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='unsigned char*' type='*' const='true'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='unsigned char**' type='^*'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ClassLoad' function_pointer='true' declared_type='jvmtiEventClassLoad' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ClassPrepare' function_pointer='true' declared_type='jvmtiEventClassPrepare' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='VMStart' function_pointer='true' declared_type='jvmtiEventVMStart' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='Exception' function_pointer='true' declared_type='jvmtiEventException' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation' type='q'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation' type='q'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ExceptionCatch' function_pointer='true' declared_type='jvmtiEventExceptionCatch' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation' type='q'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='SingleStep' function_pointer='true' declared_type='jvmtiEventSingleStep' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation' type='q'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='FramePop' function_pointer='true' declared_type='jvmtiEventFramePop' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='Breakpoint' function_pointer='true' declared_type='jvmtiEventBreakpoint' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation' type='q'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='FieldAccess' function_pointer='true' declared_type='jvmtiEventFieldAccess' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation' type='q'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='FieldModification' function_pointer='true' declared_type='jvmtiEventFieldModification' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation' type='q'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='char' type='c'/>
      <arg declared_type='jvalue' type='(jvalue=CcSsiqfd^{_jobject})'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='MethodEntry' function_pointer='true' declared_type='jvmtiEventMethodEntry' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='MethodExit' function_pointer='true' declared_type='jvmtiEventMethodExit' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jboolean' type='C'/>
      <arg declared_type='jvalue' type='(jvalue=CcSsiqfd^{_jobject})'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='NativeMethodBind' function_pointer='true' declared_type='jvmtiEventNativeMethodBind' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='void**' type='^^v'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CompiledMethodLoad' function_pointer='true' declared_type='jvmtiEventCompiledMethodLoad' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jvmtiAddrLocationMap*' type='^{_jvmtiAddrLocationMap=^vq}' const='true'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='CompiledMethodUnload' function_pointer='true' declared_type='jvmtiEventCompiledMethodUnload' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='DynamicCodeGenerated' function_pointer='true' declared_type='jvmtiEventDynamicCodeGenerated' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='DataDumpRequest' function_pointer='true' declared_type='jvmtiEventDataDumpRequest' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='reserved72' function_pointer='true' declared_type='jvmtiEventReserved' type='^?'>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='MonitorWait' function_pointer='true' declared_type='jvmtiEventMonitorWait' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='MonitorWaited' function_pointer='true' declared_type='jvmtiEventMonitorWaited' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='MonitorContendedEnter' function_pointer='true' declared_type='jvmtiEventMonitorContendedEnter' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='MonitorContendedEntered' function_pointer='true' declared_type='jvmtiEventMonitorContendedEntered' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='reserved77' function_pointer='true' declared_type='jvmtiEventReserved' type='^?'>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='reserved78' function_pointer='true' declared_type='jvmtiEventReserved' type='^?'>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='reserved79' function_pointer='true' declared_type='jvmtiEventReserved' type='^?'>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='reserved80' function_pointer='true' declared_type='jvmtiEventReserved' type='^?'>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GarbageCollectionStart' function_pointer='true' declared_type='jvmtiEventGarbageCollectionStart' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='GarbageCollectionFinish' function_pointer='true' declared_type='jvmtiEventGarbageCollectionFinish' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='ObjectFree' function_pointer='true' declared_type='jvmtiEventObjectFree' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='VMObjectAlloc' function_pointer='true' declared_type='jvmtiEventVMObjectAlloc' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='void' type='v'/>
    </field>
  </struct>
  <struct name='jvmtiExtensionEventInfo' type='{_jvmtiExtensionEventInfo=&quot;extension_event_index&quot;i&quot;id&quot;*&quot;short_description&quot;*&quot;param_count&quot;i&quot;params&quot;^{_jvmtiParamInfo=&quot;name&quot;*&quot;kind&quot;i&quot;base_type&quot;i&quot;null_ok&quot;C}}'>
    <field name='extension_event_index' declared_type='jint' type='l' type64='i'/>
    <field name='id' declared_type='char*' type='*'/>
    <field name='short_description' declared_type='char*' type='*'/>
    <field name='param_count' declared_type='jint' type='l' type64='i'/>
    <field name='params' declared_type='jvmtiParamInfo*' type='^{_jvmtiParamInfo=&quot;name&quot;*&quot;kind&quot;i&quot;base_type&quot;i&quot;null_ok&quot;C}'/>
  </struct>
  <struct name='jvmtiExtensionFunctionInfo' type='{_jvmtiExtensionFunctionInfo=&quot;func&quot;^?&quot;id&quot;*&quot;short_description&quot;*&quot;param_count&quot;i&quot;params&quot;^{_jvmtiParamInfo=&quot;name&quot;*&quot;kind&quot;i&quot;base_type&quot;i&quot;null_ok&quot;C}&quot;error_count&quot;i&quot;errors&quot;^i}'>
    <field name='func' function_pointer='true' declared_type='jvmtiExtensionFunction' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='id' declared_type='char*' type='*'/>
    <field name='short_description' declared_type='char*' type='*'/>
    <field name='param_count' declared_type='jint' type='l' type64='i'/>
    <field name='params' declared_type='jvmtiParamInfo*' type='^{_jvmtiParamInfo=&quot;name&quot;*&quot;kind&quot;i&quot;base_type&quot;i&quot;null_ok&quot;C}'/>
    <field name='error_count' declared_type='jint' type='l' type64='i'/>
    <field name='errors' declared_type='jvmtiError*' type='^i'/>
  </struct>
  <struct name='jvmtiFrameInfo' type='{_jvmtiFrameInfo=&quot;method&quot;^{_jmethodID}&quot;location&quot;q}'>
    <field name='method' declared_type='jmethodID' type='^{_jmethodID=}'/>
    <field name='location' declared_type='jlocation' type='q'/>
  </struct>
  <struct name='jvmtiInterface_1' type='{jvmtiInterface_1_=&quot;reserved1&quot;^v&quot;SetEventNotificationMode&quot;^?&quot;reserved3&quot;^v&quot;GetAllThreads&quot;^?&quot;SuspendThread&quot;^?&quot;ResumeThread&quot;^?&quot;StopThread&quot;^?&quot;InterruptThread&quot;^?&quot;GetThreadInfo&quot;^?&quot;GetOwnedMonitorInfo&quot;^?&quot;GetCurrentContendedMonitor&quot;^?&quot;RunAgentThread&quot;^?&quot;GetTopThreadGroups&quot;^?&quot;GetThreadGroupInfo&quot;^?&quot;GetThreadGroupChildren&quot;^?&quot;GetFrameCount&quot;^?&quot;GetThreadState&quot;^?&quot;reserved18&quot;^v&quot;GetFrameLocation&quot;^?&quot;NotifyFramePop&quot;^?&quot;GetLocalObject&quot;^?&quot;GetLocalInt&quot;^?&quot;GetLocalLong&quot;^?&quot;GetLocalFloat&quot;^?&quot;GetLocalDouble&quot;^?&quot;SetLocalObject&quot;^?&quot;SetLocalInt&quot;^?&quot;SetLocalLong&quot;^?&quot;SetLocalFloat&quot;^?&quot;SetLocalDouble&quot;^?&quot;CreateRawMonitor&quot;^?&quot;DestroyRawMonitor&quot;^?&quot;RawMonitorEnter&quot;^?&quot;RawMonitorExit&quot;^?&quot;RawMonitorWait&quot;^?&quot;RawMonitorNotify&quot;^?&quot;RawMonitorNotifyAll&quot;^?&quot;SetBreakpoint&quot;^?&quot;ClearBreakpoint&quot;^?&quot;reserved40&quot;^v&quot;SetFieldAccessWatch&quot;^?&quot;ClearFieldAccessWatch&quot;^?&quot;SetFieldModificationWatch&quot;^?&quot;ClearFieldModificationWatch&quot;^?&quot;reserved45&quot;^v&quot;Allocate&quot;^?&quot;Deallocate&quot;^?&quot;GetClassSignature&quot;^?&quot;GetClassStatus&quot;^?&quot;GetSourceFileName&quot;^?&quot;GetClassModifiers&quot;^?&quot;GetClassMethods&quot;^?&quot;GetClassFields&quot;^?&quot;GetImplementedInterfaces&quot;^?&quot;IsInterface&quot;^?&quot;IsArrayClass&quot;^?&quot;GetClassLoader&quot;^?&quot;GetObjectHashCode&quot;^?&quot;GetObjectMonitorUsage&quot;^?&quot;GetFieldName&quot;^?&quot;GetFieldDeclaringClass&quot;^?&quot;GetFieldModifiers&quot;^?&quot;IsFieldSynthetic&quot;^?&quot;GetMethodName&quot;^?&quot;GetMethodDeclaringClass&quot;^?&quot;GetMethodModifiers&quot;^?&quot;reserved67&quot;^v&quot;GetMaxLocals&quot;^?&quot;GetArgumentsSize&quot;^?&quot;GetLineNumberTable&quot;^?&quot;GetMethodLocation&quot;^?&quot;GetLocalVariableTable&quot;^?&quot;reserved73&quot;^v&quot;reserved74&quot;^v&quot;GetBytecodes&quot;^?&quot;IsMethodNative&quot;^?&quot;IsMethodSynthetic&quot;^?&quot;GetLoadedClasses&quot;^?&quot;GetClassLoaderClasses&quot;^?&quot;PopFrame&quot;^?&quot;reserved81&quot;^v&quot;reserved82&quot;^v&quot;reserved83&quot;^v&quot;reserved84&quot;^v&quot;reserved85&quot;^v&quot;reserved86&quot;^v&quot;RedefineClasses&quot;^?&quot;GetVersionNumber&quot;^?&quot;GetCapabilities&quot;^?&quot;GetSourceDebugExtension&quot;^?&quot;IsMethodObsolete&quot;^?&quot;SuspendThreadList&quot;^?&quot;ResumeThreadList&quot;^?&quot;reserved94&quot;^v&quot;reserved95&quot;^v&quot;reserved96&quot;^v&quot;reserved97&quot;^v&quot;reserved98&quot;^v&quot;reserved99&quot;^v&quot;GetAllStackTraces&quot;^?&quot;GetThreadListStackTraces&quot;^?&quot;GetThreadLocalStorage&quot;^?&quot;SetThreadLocalStorage&quot;^?&quot;GetStackTrace&quot;^?&quot;reserved105&quot;^v&quot;GetTag&quot;^?&quot;SetTag&quot;^?&quot;ForceGarbageCollection&quot;^?&quot;IterateOverObjectsReachableFromObject&quot;^?&quot;IterateOverReachableObjects&quot;^?&quot;IterateOverHeap&quot;^?&quot;IterateOverInstancesOfClass&quot;^?&quot;reserved113&quot;^v&quot;GetObjectsWithTags&quot;^?&quot;reserved115&quot;^v&quot;reserved116&quot;^v&quot;reserved117&quot;^v&quot;reserved118&quot;^v&quot;reserved119&quot;^v&quot;SetJNIFunctionTable&quot;^?&quot;GetJNIFunctionTable&quot;^?&quot;SetEventCallbacks&quot;^?&quot;GenerateEvents&quot;^?&quot;GetExtensionFunctions&quot;^?&quot;GetExtensionEvents&quot;^?&quot;SetExtensionEventCallback&quot;^?&quot;DisposeEnvironment&quot;^?&quot;GetErrorName&quot;^?&quot;GetJLocationFormat&quot;^?&quot;GetSystemProperties&quot;^?&quot;GetSystemProperty&quot;^?&quot;SetSystemProperty&quot;^?&quot;GetPhase&quot;^?&quot;GetCurrentThreadCpuTimerInfo&quot;^?&quot;GetCurrentThreadCpuTime&quot;^?&quot;GetThreadCpuTimerInfo&quot;^?&quot;GetThreadCpuTime&quot;^?&quot;GetTimerInfo&quot;^?&quot;GetTime&quot;^?&quot;GetPotentialCapabilities&quot;^?&quot;reserved141&quot;^v&quot;AddCapabilities&quot;^?&quot;RelinquishCapabilities&quot;^?&quot;GetAvailableProcessors&quot;^?&quot;reserved145&quot;^v&quot;reserved146&quot;^v&quot;GetEnvironmentLocalStorage&quot;^?&quot;SetEnvironmentLocalStorage&quot;^?&quot;AddToBootstrapClassLoaderSearch&quot;^?&quot;SetVerboseFlag&quot;^?&quot;reserved151&quot;^v&quot;reserved152&quot;^v&quot;reserved153&quot;^v&quot;GetObjectSize&quot;^?}'>
    <field name='reserved1' declared_type='void*' type='^v'/>
    <field name='SetEventNotificationMode' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiEventMode, jvmtiEvent, jthread, ...)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiEventMode' type='i'/>
      <arg declared_type='jvmtiEvent' type='i'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved3' declared_type='void*' type='^v'/>
    <field name='GetAllThreads' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *, jthread **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jthread**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SuspendThread' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='ResumeThread' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='StopThread' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jobject)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='InterruptThread' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadInfo' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jvmtiThreadInfo *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jvmtiThreadInfo*' type='^{_jvmtiThreadInfo=*iC^{_jobject}^{_jobject}}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetOwnedMonitorInfo' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint *, jobject **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jobject**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetCurrentContendedMonitor' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jobject *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jobject*' type='^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RunAgentThread' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jvmtiStartFunction, void *, jint)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jvmtiStartFunction' type='^?'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetTopThreadGroups' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *, jthreadGroup **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jthreadGroup**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadGroupInfo' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthreadGroup, jvmtiThreadGroupInfo *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthreadGroup' type='^{_jobject=}'/>
      <arg declared_type='jvmtiThreadGroupInfo*' type='^{_jvmtiThreadGroupInfo=^{_jobject}*iC}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadGroupChildren' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthreadGroup, jint *, jthread **, jint *, jthreadGroup **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthreadGroup' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jthread**' type='^^^{_jobject}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jthreadGroup**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetFrameCount' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadState' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved18' declared_type='void*' type='^v'/>
    <field name='GetFrameLocation' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jmethodID *, jlocation *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jmethodID*' type='^^{_jmethodID}'/>
      <arg declared_type='jlocation*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='NotifyFramePop' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLocalObject' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jobject *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jobject*' type='^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLocalInt' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLocalLong' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jlong *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLocalFloat' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jfloat *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jfloat*' type='^f'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLocalDouble' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jdouble *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jdouble*' type='^d'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetLocalObject' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jobject)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetLocalInt' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jint)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetLocalLong' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jlong)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetLocalFloat' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jfloat)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jfloat' type='f'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetLocalDouble' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jdouble)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jdouble' type='d'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='CreateRawMonitor' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, char *, jrawMonitorID *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='jrawMonitorID*' type='^^{_jrawMonitorID}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='DestroyRawMonitor' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jrawMonitorID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jrawMonitorID' type='^{_jrawMonitorID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RawMonitorEnter' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jrawMonitorID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jrawMonitorID' type='^{_jrawMonitorID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RawMonitorExit' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jrawMonitorID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jrawMonitorID' type='^{_jrawMonitorID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RawMonitorWait' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jrawMonitorID, jlong)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jrawMonitorID' type='^{_jrawMonitorID=}'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RawMonitorNotify' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jrawMonitorID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jrawMonitorID' type='^{_jrawMonitorID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RawMonitorNotifyAll' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jrawMonitorID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jrawMonitorID' type='^{_jrawMonitorID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetBreakpoint' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jlocation)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation' type='q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='ClearBreakpoint' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jlocation)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation' type='q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved40' declared_type='void*' type='^v'/>
    <field name='SetFieldAccessWatch' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='ClearFieldAccessWatch' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetFieldModificationWatch' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='ClearFieldModificationWatch' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved45' declared_type='void*' type='^v'/>
    <field name='Allocate' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jlong, unsigned char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jlong' type='q'/>
      <arg declared_type='unsigned char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='Deallocate' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, unsigned char *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='unsigned char*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassSignature' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, char **, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char**' type='^*'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassStatus' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetSourceFileName' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassModifiers' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassMethods' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jint *, jmethodID **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jmethodID**' type='^^^{_jmethodID}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassFields' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jint *, jfieldID **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jfieldID**' type='^^^{_jfieldID}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetImplementedInterfaces' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jint *, jclass **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jclass**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IsInterface' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jboolean *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IsArrayClass' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jboolean *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassLoader' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jobject *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jobject*' type='^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetObjectHashCode' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetObjectMonitorUsage' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jvmtiMonitorUsage *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jvmtiMonitorUsage*' type='^{_jvmtiMonitorUsage=^{_jobject}ii^^{_jobject}i^^{_jobject}}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetFieldName' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID, char **, char **, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='char**' type='^*'/>
      <arg declared_type='char**' type='^*'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetFieldDeclaringClass' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID, jclass *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jclass*' type='^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetFieldModifiers' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IsFieldSynthetic' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID, jboolean *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetMethodName' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, char **, char **, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='char**' type='^*'/>
      <arg declared_type='char**' type='^*'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetMethodDeclaringClass' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jclass *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jclass*' type='^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetMethodModifiers' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved67' declared_type='void*' type='^v'/>
    <field name='GetMaxLocals' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetArgumentsSize' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLineNumberTable' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jint *, jvmtiLineNumberEntry **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jvmtiLineNumberEntry**' type='^^{?}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetMethodLocation' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jlocation *, jlocation *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation*' type='^q'/>
      <arg declared_type='jlocation*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLocalVariableTable' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jint *, jvmtiLocalVariableEntry **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jvmtiLocalVariableEntry**' type='^^{?}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved73' declared_type='void*' type='^v'/>
    <field name='reserved74' declared_type='void*' type='^v'/>
    <field name='GetBytecodes' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jint *, unsigned char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='unsigned char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IsMethodNative' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jboolean *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IsMethodSynthetic' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jboolean *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLoadedClasses' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *, jclass **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jclass**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassLoaderClasses' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jint *, jclass **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jclass**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='PopFrame' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved81' declared_type='void*' type='^v'/>
    <field name='reserved82' declared_type='void*' type='^v'/>
    <field name='reserved83' declared_type='void*' type='^v'/>
    <field name='reserved84' declared_type='void*' type='^v'/>
    <field name='reserved85' declared_type='void*' type='^v'/>
    <field name='reserved86' declared_type='void*' type='^v'/>
    <field name='RedefineClasses' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jvmtiClassDefinition *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jvmtiClassDefinition*' type='^{_jvmtiClassDefinition=^{_jobject}i*}' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetVersionNumber' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetCapabilities' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiCapabilities *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiCapabilities*' type='^{_jvmtiCapabilities=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b15b16b16b16b16b16}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetSourceDebugExtension' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IsMethodObsolete' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jboolean *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SuspendThreadList' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jthread *, jvmtiError *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jthread*' type='^^{_jobject}' const='true'/>
      <arg declared_type='jvmtiError*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='ResumeThreadList' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jthread *, jvmtiError *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jthread*' type='^^{_jobject}' const='true'/>
      <arg declared_type='jvmtiError*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved94' declared_type='void*' type='^v'/>
    <field name='reserved95' declared_type='void*' type='^v'/>
    <field name='reserved96' declared_type='void*' type='^v'/>
    <field name='reserved97' declared_type='void*' type='^v'/>
    <field name='reserved98' declared_type='void*' type='^v'/>
    <field name='reserved99' declared_type='void*' type='^v'/>
    <field name='GetAllStackTraces' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jvmtiStackInfo **, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jvmtiStackInfo**' type='^^{?}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadListStackTraces' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jthread *, jint, jvmtiStackInfo **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jthread*' type='^^{_jobject}' const='true'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jvmtiStackInfo**' type='^^{?}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadLocalStorage' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, void **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='void**' type='^^v'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetThreadLocalStorage' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, void *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetStackTrace' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jvmtiFrameInfo *, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jvmtiFrameInfo*' type='^{_jvmtiFrameInfo=^{_jmethodID}q}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved105' declared_type='void*' type='^v'/>
    <field name='GetTag' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jlong *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetTag' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jlong)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='ForceGarbageCollection' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IterateOverObjectsReachableFromObject' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jvmtiObjectReferenceCallback, void *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jvmtiObjectReferenceCallback' type='^?'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IterateOverReachableObjects' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiHeapRootCallback, jvmtiStackReferenceCallback, jvmtiObjectReferenceCallback, void *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiHeapRootCallback' type='^?'/>
      <arg declared_type='jvmtiStackReferenceCallback' type='^?'/>
      <arg declared_type='jvmtiObjectReferenceCallback' type='^?'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IterateOverHeap' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiHeapObjectFilter, jvmtiHeapObjectCallback, void *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiHeapObjectFilter' type='i'/>
      <arg declared_type='jvmtiHeapObjectCallback' type='^?'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IterateOverInstancesOfClass' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jvmtiHeapObjectFilter, jvmtiHeapObjectCallback, void *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jvmtiHeapObjectFilter' type='i'/>
      <arg declared_type='jvmtiHeapObjectCallback' type='^?'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved113' declared_type='void*' type='^v'/>
    <field name='GetObjectsWithTags' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jlong *, jint *, jobject **, jlong **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jlong*' type='^q' const='true'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jobject**' type='^^^{_jobject}'/>
      <arg declared_type='jlong**' type='^^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved115' declared_type='void*' type='^v'/>
    <field name='reserved116' declared_type='void*' type='^v'/>
    <field name='reserved117' declared_type='void*' type='^v'/>
    <field name='reserved118' declared_type='void*' type='^v'/>
    <field name='reserved119' declared_type='void*' type='^v'/>
    <field name='SetJNIFunctionTable' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jniNativeInterface *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jniNativeInterface*' type='^{JNINativeInterface_=^v^v^v^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetJNIFunctionTable' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jniNativeInterface **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jniNativeInterface**' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetEventCallbacks' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiEventCallbacks *, jint)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiEventCallbacks*' type='^{_jvmtiEventCallbacks=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}' const='true'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GenerateEvents' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiEvent)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiEvent' type='i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetExtensionFunctions' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *, jvmtiExtensionFunctionInfo **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jvmtiExtensionFunctionInfo**' type='^^{?}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetExtensionEvents' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *, jvmtiExtensionEventInfo **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jvmtiExtensionEventInfo**' type='^^{?}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetExtensionEventCallback' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jvmtiExtensionEvent)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jvmtiExtensionEvent' type='^?'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='DisposeEnvironment' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetErrorName' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiError, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiError' type='i'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetJLocationFormat' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiJlocationFormat *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiJlocationFormat*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetSystemProperties' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *, char ***)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='char***' type='^^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetSystemProperty' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, char *, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetSystemProperty' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, char *, char *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetPhase' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiPhase *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiPhase*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetCurrentThreadCpuTimerInfo' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiTimerInfo *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiTimerInfo*' type='^{_jvmtiTimerInfo=qCCiqq}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetCurrentThreadCpuTime' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jlong *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadCpuTimerInfo' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiTimerInfo *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiTimerInfo*' type='^{_jvmtiTimerInfo=qCCiqq}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadCpuTime' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jlong *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetTimerInfo' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiTimerInfo *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiTimerInfo*' type='^{_jvmtiTimerInfo=qCCiqq}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetTime' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jlong *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetPotentialCapabilities' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiCapabilities *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiCapabilities*' type='^{_jvmtiCapabilities=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b15b16b16b16b16b16}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved141' declared_type='void*' type='^v'/>
    <field name='AddCapabilities' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiCapabilities *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiCapabilities*' type='^{_jvmtiCapabilities=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b15b16b16b16b16b16}' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RelinquishCapabilities' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiCapabilities *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiCapabilities*' type='^{_jvmtiCapabilities=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b15b16b16b16b16b16}' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetAvailableProcessors' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved145' declared_type='void*' type='^v'/>
    <field name='reserved146' declared_type='void*' type='^v'/>
    <field name='GetEnvironmentLocalStorage' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, void **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='void**' type='^^v'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetEnvironmentLocalStorage' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, void *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='AddToBootstrapClassLoaderSearch' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, char *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetVerboseFlag' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiVerboseFlag, jboolean)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiVerboseFlag' type='i'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved151' declared_type='void*' type='^v'/>
    <field name='reserved152' declared_type='void*' type='^v'/>
    <field name='reserved153' declared_type='void*' type='^v'/>
    <field name='GetObjectSize' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jlong *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
  </struct>
  <struct name='jvmtiInterface_1_' type='{jvmtiInterface_1_=&quot;reserved1&quot;^v&quot;SetEventNotificationMode&quot;^?&quot;reserved3&quot;^v&quot;GetAllThreads&quot;^?&quot;SuspendThread&quot;^?&quot;ResumeThread&quot;^?&quot;StopThread&quot;^?&quot;InterruptThread&quot;^?&quot;GetThreadInfo&quot;^?&quot;GetOwnedMonitorInfo&quot;^?&quot;GetCurrentContendedMonitor&quot;^?&quot;RunAgentThread&quot;^?&quot;GetTopThreadGroups&quot;^?&quot;GetThreadGroupInfo&quot;^?&quot;GetThreadGroupChildren&quot;^?&quot;GetFrameCount&quot;^?&quot;GetThreadState&quot;^?&quot;reserved18&quot;^v&quot;GetFrameLocation&quot;^?&quot;NotifyFramePop&quot;^?&quot;GetLocalObject&quot;^?&quot;GetLocalInt&quot;^?&quot;GetLocalLong&quot;^?&quot;GetLocalFloat&quot;^?&quot;GetLocalDouble&quot;^?&quot;SetLocalObject&quot;^?&quot;SetLocalInt&quot;^?&quot;SetLocalLong&quot;^?&quot;SetLocalFloat&quot;^?&quot;SetLocalDouble&quot;^?&quot;CreateRawMonitor&quot;^?&quot;DestroyRawMonitor&quot;^?&quot;RawMonitorEnter&quot;^?&quot;RawMonitorExit&quot;^?&quot;RawMonitorWait&quot;^?&quot;RawMonitorNotify&quot;^?&quot;RawMonitorNotifyAll&quot;^?&quot;SetBreakpoint&quot;^?&quot;ClearBreakpoint&quot;^?&quot;reserved40&quot;^v&quot;SetFieldAccessWatch&quot;^?&quot;ClearFieldAccessWatch&quot;^?&quot;SetFieldModificationWatch&quot;^?&quot;ClearFieldModificationWatch&quot;^?&quot;reserved45&quot;^v&quot;Allocate&quot;^?&quot;Deallocate&quot;^?&quot;GetClassSignature&quot;^?&quot;GetClassStatus&quot;^?&quot;GetSourceFileName&quot;^?&quot;GetClassModifiers&quot;^?&quot;GetClassMethods&quot;^?&quot;GetClassFields&quot;^?&quot;GetImplementedInterfaces&quot;^?&quot;IsInterface&quot;^?&quot;IsArrayClass&quot;^?&quot;GetClassLoader&quot;^?&quot;GetObjectHashCode&quot;^?&quot;GetObjectMonitorUsage&quot;^?&quot;GetFieldName&quot;^?&quot;GetFieldDeclaringClass&quot;^?&quot;GetFieldModifiers&quot;^?&quot;IsFieldSynthetic&quot;^?&quot;GetMethodName&quot;^?&quot;GetMethodDeclaringClass&quot;^?&quot;GetMethodModifiers&quot;^?&quot;reserved67&quot;^v&quot;GetMaxLocals&quot;^?&quot;GetArgumentsSize&quot;^?&quot;GetLineNumberTable&quot;^?&quot;GetMethodLocation&quot;^?&quot;GetLocalVariableTable&quot;^?&quot;reserved73&quot;^v&quot;reserved74&quot;^v&quot;GetBytecodes&quot;^?&quot;IsMethodNative&quot;^?&quot;IsMethodSynthetic&quot;^?&quot;GetLoadedClasses&quot;^?&quot;GetClassLoaderClasses&quot;^?&quot;PopFrame&quot;^?&quot;reserved81&quot;^v&quot;reserved82&quot;^v&quot;reserved83&quot;^v&quot;reserved84&quot;^v&quot;reserved85&quot;^v&quot;reserved86&quot;^v&quot;RedefineClasses&quot;^?&quot;GetVersionNumber&quot;^?&quot;GetCapabilities&quot;^?&quot;GetSourceDebugExtension&quot;^?&quot;IsMethodObsolete&quot;^?&quot;SuspendThreadList&quot;^?&quot;ResumeThreadList&quot;^?&quot;reserved94&quot;^v&quot;reserved95&quot;^v&quot;reserved96&quot;^v&quot;reserved97&quot;^v&quot;reserved98&quot;^v&quot;reserved99&quot;^v&quot;GetAllStackTraces&quot;^?&quot;GetThreadListStackTraces&quot;^?&quot;GetThreadLocalStorage&quot;^?&quot;SetThreadLocalStorage&quot;^?&quot;GetStackTrace&quot;^?&quot;reserved105&quot;^v&quot;GetTag&quot;^?&quot;SetTag&quot;^?&quot;ForceGarbageCollection&quot;^?&quot;IterateOverObjectsReachableFromObject&quot;^?&quot;IterateOverReachableObjects&quot;^?&quot;IterateOverHeap&quot;^?&quot;IterateOverInstancesOfClass&quot;^?&quot;reserved113&quot;^v&quot;GetObjectsWithTags&quot;^?&quot;reserved115&quot;^v&quot;reserved116&quot;^v&quot;reserved117&quot;^v&quot;reserved118&quot;^v&quot;reserved119&quot;^v&quot;SetJNIFunctionTable&quot;^?&quot;GetJNIFunctionTable&quot;^?&quot;SetEventCallbacks&quot;^?&quot;GenerateEvents&quot;^?&quot;GetExtensionFunctions&quot;^?&quot;GetExtensionEvents&quot;^?&quot;SetExtensionEventCallback&quot;^?&quot;DisposeEnvironment&quot;^?&quot;GetErrorName&quot;^?&quot;GetJLocationFormat&quot;^?&quot;GetSystemProperties&quot;^?&quot;GetSystemProperty&quot;^?&quot;SetSystemProperty&quot;^?&quot;GetPhase&quot;^?&quot;GetCurrentThreadCpuTimerInfo&quot;^?&quot;GetCurrentThreadCpuTime&quot;^?&quot;GetThreadCpuTimerInfo&quot;^?&quot;GetThreadCpuTime&quot;^?&quot;GetTimerInfo&quot;^?&quot;GetTime&quot;^?&quot;GetPotentialCapabilities&quot;^?&quot;reserved141&quot;^v&quot;AddCapabilities&quot;^?&quot;RelinquishCapabilities&quot;^?&quot;GetAvailableProcessors&quot;^?&quot;reserved145&quot;^v&quot;reserved146&quot;^v&quot;GetEnvironmentLocalStorage&quot;^?&quot;SetEnvironmentLocalStorage&quot;^?&quot;AddToBootstrapClassLoaderSearch&quot;^?&quot;SetVerboseFlag&quot;^?&quot;reserved151&quot;^v&quot;reserved152&quot;^v&quot;reserved153&quot;^v&quot;GetObjectSize&quot;^?}'>
    <field name='reserved1' declared_type='void*' type='^v'/>
    <field name='SetEventNotificationMode' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiEventMode, jvmtiEvent, jthread, ...)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiEventMode' type='i'/>
      <arg declared_type='jvmtiEvent' type='i'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved3' declared_type='void*' type='^v'/>
    <field name='GetAllThreads' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *, jthread **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jthread**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SuspendThread' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='ResumeThread' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='StopThread' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jobject)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='InterruptThread' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadInfo' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jvmtiThreadInfo *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jvmtiThreadInfo*' type='^{_jvmtiThreadInfo=*iC^{_jobject}^{_jobject}}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetOwnedMonitorInfo' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint *, jobject **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jobject**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetCurrentContendedMonitor' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jobject *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jobject*' type='^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RunAgentThread' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jvmtiStartFunction, void *, jint)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jvmtiStartFunction' type='^?'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetTopThreadGroups' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *, jthreadGroup **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jthreadGroup**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadGroupInfo' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthreadGroup, jvmtiThreadGroupInfo *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthreadGroup' type='^{_jobject=}'/>
      <arg declared_type='jvmtiThreadGroupInfo*' type='^{_jvmtiThreadGroupInfo=^{_jobject}*iC}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadGroupChildren' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthreadGroup, jint *, jthread **, jint *, jthreadGroup **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthreadGroup' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jthread**' type='^^^{_jobject}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jthreadGroup**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetFrameCount' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadState' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved18' declared_type='void*' type='^v'/>
    <field name='GetFrameLocation' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jmethodID *, jlocation *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jmethodID*' type='^^{_jmethodID}'/>
      <arg declared_type='jlocation*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='NotifyFramePop' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLocalObject' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jobject *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jobject*' type='^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLocalInt' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLocalLong' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jlong *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLocalFloat' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jfloat *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jfloat*' type='^f'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLocalDouble' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jdouble *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jdouble*' type='^d'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetLocalObject' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jobject)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetLocalInt' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jint)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetLocalLong' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jlong)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetLocalFloat' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jfloat)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jfloat' type='f'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetLocalDouble' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jdouble)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jdouble' type='d'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='CreateRawMonitor' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, char *, jrawMonitorID *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='jrawMonitorID*' type='^^{_jrawMonitorID}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='DestroyRawMonitor' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jrawMonitorID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jrawMonitorID' type='^{_jrawMonitorID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RawMonitorEnter' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jrawMonitorID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jrawMonitorID' type='^{_jrawMonitorID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RawMonitorExit' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jrawMonitorID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jrawMonitorID' type='^{_jrawMonitorID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RawMonitorWait' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jrawMonitorID, jlong)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jrawMonitorID' type='^{_jrawMonitorID=}'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RawMonitorNotify' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jrawMonitorID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jrawMonitorID' type='^{_jrawMonitorID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RawMonitorNotifyAll' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jrawMonitorID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jrawMonitorID' type='^{_jrawMonitorID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetBreakpoint' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jlocation)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation' type='q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='ClearBreakpoint' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jlocation)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation' type='q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved40' declared_type='void*' type='^v'/>
    <field name='SetFieldAccessWatch' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='ClearFieldAccessWatch' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetFieldModificationWatch' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='ClearFieldModificationWatch' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved45' declared_type='void*' type='^v'/>
    <field name='Allocate' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jlong, unsigned char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jlong' type='q'/>
      <arg declared_type='unsigned char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='Deallocate' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, unsigned char *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='unsigned char*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassSignature' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, char **, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char**' type='^*'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassStatus' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetSourceFileName' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassModifiers' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassMethods' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jint *, jmethodID **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jmethodID**' type='^^^{_jmethodID}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassFields' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jint *, jfieldID **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jfieldID**' type='^^^{_jfieldID}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetImplementedInterfaces' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jint *, jclass **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jclass**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IsInterface' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jboolean *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IsArrayClass' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jboolean *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassLoader' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jobject *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jobject*' type='^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetObjectHashCode' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetObjectMonitorUsage' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jvmtiMonitorUsage *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jvmtiMonitorUsage*' type='^{_jvmtiMonitorUsage=^{_jobject}ii^^{_jobject}i^^{_jobject}}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetFieldName' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID, char **, char **, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='char**' type='^*'/>
      <arg declared_type='char**' type='^*'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetFieldDeclaringClass' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID, jclass *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jclass*' type='^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetFieldModifiers' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IsFieldSynthetic' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jfieldID, jboolean *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jfieldID' type='^{_jfieldID=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetMethodName' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, char **, char **, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='char**' type='^*'/>
      <arg declared_type='char**' type='^*'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetMethodDeclaringClass' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jclass *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jclass*' type='^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetMethodModifiers' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved67' declared_type='void*' type='^v'/>
    <field name='GetMaxLocals' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetArgumentsSize' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLineNumberTable' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jint *, jvmtiLineNumberEntry **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jvmtiLineNumberEntry**' type='^^{?}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetMethodLocation' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jlocation *, jlocation *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jlocation*' type='^q'/>
      <arg declared_type='jlocation*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLocalVariableTable' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jint *, jvmtiLocalVariableEntry **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jvmtiLocalVariableEntry**' type='^^{?}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved73' declared_type='void*' type='^v'/>
    <field name='reserved74' declared_type='void*' type='^v'/>
    <field name='GetBytecodes' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jint *, unsigned char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='unsigned char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IsMethodNative' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jboolean *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IsMethodSynthetic' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jboolean *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetLoadedClasses' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *, jclass **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jclass**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetClassLoaderClasses' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jint *, jclass **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jclass**' type='^^^{_jobject}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='PopFrame' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved81' declared_type='void*' type='^v'/>
    <field name='reserved82' declared_type='void*' type='^v'/>
    <field name='reserved83' declared_type='void*' type='^v'/>
    <field name='reserved84' declared_type='void*' type='^v'/>
    <field name='reserved85' declared_type='void*' type='^v'/>
    <field name='reserved86' declared_type='void*' type='^v'/>
    <field name='RedefineClasses' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jvmtiClassDefinition *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jvmtiClassDefinition*' type='^{_jvmtiClassDefinition=^{_jobject}i*}' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetVersionNumber' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetCapabilities' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiCapabilities *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiCapabilities*' type='^{_jvmtiCapabilities=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b15b16b16b16b16b16}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetSourceDebugExtension' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IsMethodObsolete' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jmethodID, jboolean *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jmethodID' type='^{_jmethodID=}'/>
      <arg declared_type='jboolean*' type='*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SuspendThreadList' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jthread *, jvmtiError *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jthread*' type='^^{_jobject}' const='true'/>
      <arg declared_type='jvmtiError*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='ResumeThreadList' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jthread *, jvmtiError *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jthread*' type='^^{_jobject}' const='true'/>
      <arg declared_type='jvmtiError*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved94' declared_type='void*' type='^v'/>
    <field name='reserved95' declared_type='void*' type='^v'/>
    <field name='reserved96' declared_type='void*' type='^v'/>
    <field name='reserved97' declared_type='void*' type='^v'/>
    <field name='reserved98' declared_type='void*' type='^v'/>
    <field name='reserved99' declared_type='void*' type='^v'/>
    <field name='GetAllStackTraces' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jvmtiStackInfo **, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jvmtiStackInfo**' type='^^{?}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadListStackTraces' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jthread *, jint, jvmtiStackInfo **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jthread*' type='^^{_jobject}' const='true'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jvmtiStackInfo**' type='^^{?}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadLocalStorage' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, void **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='void**' type='^^v'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetThreadLocalStorage' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, void *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetStackTrace' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jint, jint, jvmtiFrameInfo *, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jvmtiFrameInfo*' type='^{_jvmtiFrameInfo=^{_jmethodID}q}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved105' declared_type='void*' type='^v'/>
    <field name='GetTag' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jlong *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetTag' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jlong)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jlong' type='q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='ForceGarbageCollection' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IterateOverObjectsReachableFromObject' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jvmtiObjectReferenceCallback, void *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jvmtiObjectReferenceCallback' type='^?'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IterateOverReachableObjects' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiHeapRootCallback, jvmtiStackReferenceCallback, jvmtiObjectReferenceCallback, void *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiHeapRootCallback' type='^?'/>
      <arg declared_type='jvmtiStackReferenceCallback' type='^?'/>
      <arg declared_type='jvmtiObjectReferenceCallback' type='^?'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IterateOverHeap' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiHeapObjectFilter, jvmtiHeapObjectCallback, void *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiHeapObjectFilter' type='i'/>
      <arg declared_type='jvmtiHeapObjectCallback' type='^?'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='IterateOverInstancesOfClass' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jclass, jvmtiHeapObjectFilter, jvmtiHeapObjectCallback, void *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jclass' type='^{_jobject=}'/>
      <arg declared_type='jvmtiHeapObjectFilter' type='i'/>
      <arg declared_type='jvmtiHeapObjectCallback' type='^?'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved113' declared_type='void*' type='^v'/>
    <field name='GetObjectsWithTags' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jlong *, jint *, jobject **, jlong **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jlong*' type='^q' const='true'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jobject**' type='^^^{_jobject}'/>
      <arg declared_type='jlong**' type='^^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved115' declared_type='void*' type='^v'/>
    <field name='reserved116' declared_type='void*' type='^v'/>
    <field name='reserved117' declared_type='void*' type='^v'/>
    <field name='reserved118' declared_type='void*' type='^v'/>
    <field name='reserved119' declared_type='void*' type='^v'/>
    <field name='SetJNIFunctionTable' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jniNativeInterface *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jniNativeInterface*' type='^{JNINativeInterface_=^v^v^v^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetJNIFunctionTable' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jniNativeInterface **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jniNativeInterface**' type='^^{JNINativeInterface_}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetEventCallbacks' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiEventCallbacks *, jint)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiEventCallbacks*' type='^{_jvmtiEventCallbacks=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}' const='true'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GenerateEvents' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiEvent)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiEvent' type='i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetExtensionFunctions' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *, jvmtiExtensionFunctionInfo **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jvmtiExtensionFunctionInfo**' type='^^{?}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetExtensionEvents' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *, jvmtiExtensionEventInfo **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='jvmtiExtensionEventInfo**' type='^^{?}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetExtensionEventCallback' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint, jvmtiExtensionEvent)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint' type='l' type64='i'/>
      <arg declared_type='jvmtiExtensionEvent' type='^?'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='DisposeEnvironment' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetErrorName' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiError, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiError' type='i'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetJLocationFormat' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiJlocationFormat *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiJlocationFormat*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetSystemProperties' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *, char ***)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <arg declared_type='char***' type='^^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetSystemProperty' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, char *, char **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char**' type='^*'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetSystemProperty' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, char *, char *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetPhase' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiPhase *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiPhase*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetCurrentThreadCpuTimerInfo' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiTimerInfo *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiTimerInfo*' type='^{_jvmtiTimerInfo=qCCiqq}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetCurrentThreadCpuTime' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jlong *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadCpuTimerInfo' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiTimerInfo *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiTimerInfo*' type='^{_jvmtiTimerInfo=qCCiqq}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetThreadCpuTime' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jthread, jlong *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jthread' type='^{_jobject=}'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetTimerInfo' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiTimerInfo *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiTimerInfo*' type='^{_jvmtiTimerInfo=qCCiqq}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetTime' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jlong *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetPotentialCapabilities' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiCapabilities *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiCapabilities*' type='^{_jvmtiCapabilities=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b15b16b16b16b16b16}'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved141' declared_type='void*' type='^v'/>
    <field name='AddCapabilities' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiCapabilities *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiCapabilities*' type='^{_jvmtiCapabilities=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b15b16b16b16b16b16}' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='RelinquishCapabilities' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiCapabilities *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiCapabilities*' type='^{_jvmtiCapabilities=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b15b16b16b16b16b16}' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='GetAvailableProcessors' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jint *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jint*' type='^i'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved145' declared_type='void*' type='^v'/>
    <field name='reserved146' declared_type='void*' type='^v'/>
    <field name='GetEnvironmentLocalStorage' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, void **)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='void**' type='^^v'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetEnvironmentLocalStorage' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, void *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='AddToBootstrapClassLoaderSearch' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, char *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='char*' type='*' const='true'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='SetVerboseFlag' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jvmtiVerboseFlag, jboolean)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jvmtiVerboseFlag' type='i'/>
      <arg declared_type='jboolean' type='C'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
    <field name='reserved151' declared_type='void*' type='^v'/>
    <field name='reserved152' declared_type='void*' type='^v'/>
    <field name='reserved153' declared_type='void*' type='^v'/>
    <field name='GetObjectSize' function_pointer='true' declared_type='jvmtiError (*)(jvmtiEnv *, jobject, jlong *)' type='^?'>
      <arg declared_type='jvmtiEnv*' type='^^{jvmtiInterface_1_}'/>
      <arg declared_type='jobject' type='^{_jobject=}'/>
      <arg declared_type='jlong*' type='^q'/>
      <retval declared_type='jvmtiError' type='i'/>
    </field>
  </struct>
  <struct name='jvmtiLineNumberEntry' type='{_jvmtiLineNumberEntry=&quot;start_location&quot;q&quot;line_number&quot;i}'>
    <field name='start_location' declared_type='jlocation' type='q'/>
    <field name='line_number' declared_type='jint' type='l' type64='i'/>
  </struct>
  <struct name='jvmtiLocalVariableEntry' type='{_jvmtiLocalVariableEntry=&quot;start_location&quot;q&quot;length&quot;i&quot;name&quot;*&quot;signature&quot;*&quot;generic_signature&quot;*&quot;slot&quot;i}'>
    <field name='start_location' declared_type='jlocation' type='q'/>
    <field name='length' declared_type='jint' type='l' type64='i'/>
    <field name='name' declared_type='char*' type='*'/>
    <field name='signature' declared_type='char*' type='*'/>
    <field name='generic_signature' declared_type='char*' type='*'/>
    <field name='slot' declared_type='jint' type='l' type64='i'/>
  </struct>
  <struct name='jvmtiMonitorUsage' type='{_jvmtiMonitorUsage=&quot;owner&quot;^{_jobject}&quot;entry_count&quot;i&quot;waiter_count&quot;i&quot;waiters&quot;^^{_jobject}&quot;notify_waiter_count&quot;i&quot;notify_waiters&quot;^^{_jobject}}'>
    <field name='owner' declared_type='jthread' type='^{_jobject=}'/>
    <field name='entry_count' declared_type='jint' type='l' type64='i'/>
    <field name='waiter_count' declared_type='jint' type='l' type64='i'/>
    <field name='waiters' declared_type='jthread*' type='^^{_jobject}'/>
    <field name='notify_waiter_count' declared_type='jint' type='l' type64='i'/>
    <field name='notify_waiters' declared_type='jthread*' type='^^{_jobject}'/>
  </struct>
  <struct name='jvmtiParamInfo' type='{_jvmtiParamInfo=&quot;name&quot;*&quot;kind&quot;i&quot;base_type&quot;i&quot;null_ok&quot;C}'>
    <field name='name' declared_type='char*' type='*'/>
    <field name='kind' declared_type='jvmtiParamKind' type='i'/>
    <field name='base_type' declared_type='jvmtiParamTypes' type='i'/>
    <field name='null_ok' declared_type='jboolean' type='C'/>
  </struct>
  <struct name='jvmtiStackInfo' type='{_jvmtiStackInfo=&quot;thread&quot;^{_jobject}&quot;state&quot;i&quot;frame_buffer&quot;^{_jvmtiFrameInfo=&quot;method&quot;^{_jmethodID}&quot;location&quot;q}&quot;frame_count&quot;i}'>
    <field name='thread' declared_type='jthread' type='^{_jobject=}'/>
    <field name='state' declared_type='jint' type='l' type64='i'/>
    <field name='frame_buffer' declared_type='jvmtiFrameInfo*' type='^{_jvmtiFrameInfo=&quot;method&quot;^{_jmethodID}&quot;location&quot;q}'/>
    <field name='frame_count' declared_type='jint' type='l' type64='i'/>
  </struct>
  <struct name='jvmtiThreadGroupInfo' type='{_jvmtiThreadGroupInfo=&quot;parent&quot;^{_jobject}&quot;name&quot;*&quot;max_priority&quot;i&quot;is_daemon&quot;C}'>
    <field name='parent' declared_type='jthreadGroup' type='^{_jobject=}'/>
    <field name='name' declared_type='char*' type='*'/>
    <field name='max_priority' declared_type='jint' type='l' type64='i'/>
    <field name='is_daemon' declared_type='jboolean' type='C'/>
  </struct>
  <struct name='jvmtiThreadInfo' type='{_jvmtiThreadInfo=&quot;name&quot;*&quot;priority&quot;i&quot;is_daemon&quot;C&quot;thread_group&quot;^{_jobject}&quot;context_class_loader&quot;^{_jobject}}'>
    <field name='name' declared_type='char*' type='*'/>
    <field name='priority' declared_type='jint' type='l' type64='i'/>
    <field name='is_daemon' declared_type='jboolean' type='C'/>
    <field name='thread_group' declared_type='jthreadGroup' type='^{_jobject=}'/>
    <field name='context_class_loader' declared_type='jobject' type='^{_jobject=}'/>
  </struct>
  <struct name='jvmtiTimerInfo' type='{_jvmtiTimerInfo=&quot;max_value&quot;q&quot;may_skip_forward&quot;C&quot;may_skip_backward&quot;C&quot;kind&quot;i&quot;reserved1&quot;q&quot;reserved2&quot;q}'>
    <field name='max_value' declared_type='jlong' type='q'/>
    <field name='may_skip_forward' declared_type='jboolean' type='C'/>
    <field name='may_skip_backward' declared_type='jboolean' type='C'/>
    <field name='kind' declared_type='jvmtiTimerKind' type='i'/>
    <field name='reserved1' declared_type='jlong' type='q'/>
    <field name='reserved2' declared_type='jlong' type='q'/>
  </struct>
  <opaque name='JVMPI_RawMonitor' type='^{_JVMPI_RawMonitor=}'/>
  <opaque name='jfieldID' type='^{_jfieldID=}'/>
  <opaque name='jframeID' type='^{_jframeID=}'/>
  <opaque name='jmethodID' type='^{_jmethodID=}'/>
  <opaque name='jobject' type='^{_jobject=}'/>
  <opaque name='jobjectID' type='^{_jobjectID=}'/>
  <opaque name='jrawMonitorID' type='^{_jrawMonitorID=}'/>
  <constant name='NSDefaultJavaClassPathKey' declared_type='NSString*' type='@'/>
  <constant name='NSDefaultJavaCompilerKey' declared_type='NSString*' type='@'/>
  <constant name='NSDefaultJavaDebugLibraryKey' declared_type='NSString*' type='@'/>
  <constant name='NSDefaultJavaLibraryKey' declared_type='NSString*' type='@'/>
  <constant name='NSDefaultJavaVMKey' declared_type='NSString*' type='@'/>
  <constant name='NSDefaultJavaVendorKey' declared_type='NSString*' type='@'/>
  <constant name='NSDefaultObjCJavaDebugLibraryKey' declared_type='NSString*' type='@'/>
  <constant name='NSDefaultObjCJavaLibraryKey' declared_type='NSString*' type='@'/>
  <constant name='NSInvalidJavaClassException' declared_type='NSString*' type='@'/>
  <constant name='NSJavaVMArgumentsKey' declared_type='NSString*' type='@'/>
  <constant name='j_vm' declared_type='JavaVM*' type='^^{JNIInvokeInterface_}'/>
  <constant name='jvmdi_interface' declared_type='JVMDI_Interface_1*' type='^{JVMDI_Interface_1_=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
  <enum name='JAWT_LOCK_BOUNDS_CHANGED' value='4'/>
  <enum name='JAWT_LOCK_CLIP_CHANGED' value='2'/>
  <enum name='JAWT_LOCK_ERROR' value='1'/>
  <enum name='JAWT_LOCK_SURFACE_CHANGED' value='8'/>
  <enum name='JAWT_VERSION_1_3' value='65539'/>
  <enum name='JAWT_VERSION_1_4' value='65540'/>
  <enum name='JDWPTRANSPORT_ERROR_ILLEGAL_ARGUMENT' value='103'/>
  <enum name='JDWPTRANSPORT_ERROR_ILLEGAL_STATE' value='201'/>
  <enum name='JDWPTRANSPORT_ERROR_INTERNAL' value='113'/>
  <enum name='JDWPTRANSPORT_ERROR_IO_ERROR' value='202'/>
  <enum name='JDWPTRANSPORT_ERROR_MSG_NOT_AVAILABLE' value='204'/>
  <enum name='JDWPTRANSPORT_ERROR_NONE' value='0'/>
  <enum name='JDWPTRANSPORT_ERROR_OUT_OF_MEMORY' value='110'/>
  <enum name='JDWPTRANSPORT_ERROR_TIMEOUT' value='203'/>
  <enum name='JDWPTRANSPORT_FLAGS_NONE' value='0'/>
  <enum name='JDWPTRANSPORT_FLAGS_REPLY' value='128'/>
  <enum name='JDWPTRANSPORT_VERSION_1_0' value='65536'/>
  <enum name='JDWP_ArrayReference' value='13'/>
  <enum name='JDWP_ArrayReference_GetValues' value='2'/>
  <enum name='JDWP_ArrayReference_Length' value='1'/>
  <enum name='JDWP_ArrayReference_SetValues' value='3'/>
  <enum name='JDWP_ArrayType' value='4'/>
  <enum name='JDWP_ArrayType_NewInstance' value='1'/>
  <enum name='JDWP_ClassLoaderReference' value='14'/>
  <enum name='JDWP_ClassLoaderReference_VisibleClasses' value='1'/>
  <enum name='JDWP_ClassObjectReference' value='17'/>
  <enum name='JDWP_ClassObjectReference_ReflectedType' value='1'/>
  <enum name='JDWP_ClassStatus_ERROR' value='8'/>
  <enum name='JDWP_ClassStatus_INITIALIZED' value='4'/>
  <enum name='JDWP_ClassStatus_PREPARED' value='2'/>
  <enum name='JDWP_ClassStatus_VERIFIED' value='1'/>
  <enum name='JDWP_ClassType' value='3'/>
  <enum name='JDWP_ClassType_InvokeMethod' value='3'/>
  <enum name='JDWP_ClassType_NewInstance' value='4'/>
  <enum name='JDWP_ClassType_SetValues' value='2'/>
  <enum name='JDWP_ClassType_Superclass' value='1'/>
  <enum name='JDWP_Error_ABSENT_INFORMATION' value='101'/>
  <enum name='JDWP_Error_ACCESS_DENIED' value='111'/>
  <enum name='JDWP_Error_ADD_METHOD_NOT_IMPLEMENTED' value='63'/>
  <enum name='JDWP_Error_ALREADY_INVOKING' value='502'/>
  <enum name='JDWP_Error_CIRCULAR_CLASS_DEFINITION' value='61'/>
  <enum name='JDWP_Error_CLASS_MODIFIERS_CHANGE_NOT_IMPLEMENTED' value='70'/>
  <enum name='JDWP_Error_CLASS_NOT_PREPARED' value='22'/>
  <enum name='JDWP_Error_DELETE_METHOD_NOT_IMPLEMENTED' value='67'/>
  <enum name='JDWP_Error_DUPLICATE' value='40'/>
  <enum name='JDWP_Error_FAILS_VERIFICATION' value='62'/>
  <enum name='JDWP_Error_HIERARCHY_CHANGE_NOT_IMPLEMENTED' value='66'/>
  <enum name='JDWP_Error_ILLEGAL_ARGUMENT' value='103'/>
  <enum name='JDWP_Error_INTERNAL' value='113'/>
  <enum name='JDWP_Error_INTERRUPT' value='52'/>
  <enum name='JDWP_Error_INVALID_ARRAY' value='508'/>
  <enum name='JDWP_Error_INVALID_CLASS' value='21'/>
  <enum name='JDWP_Error_INVALID_CLASS_FORMAT' value='60'/>
  <enum name='JDWP_Error_INVALID_CLASS_LOADER' value='507'/>
  <enum name='JDWP_Error_INVALID_COUNT' value='512'/>
  <enum name='JDWP_Error_INVALID_EVENT_TYPE' value='102'/>
  <enum name='JDWP_Error_INVALID_FIELDID' value='25'/>
  <enum name='JDWP_Error_INVALID_FRAMEID' value='30'/>
  <enum name='JDWP_Error_INVALID_INDEX' value='503'/>
  <enum name='JDWP_Error_INVALID_LENGTH' value='504'/>
  <enum name='JDWP_Error_INVALID_LOCATION' value='24'/>
  <enum name='JDWP_Error_INVALID_METHODID' value='23'/>
  <enum name='JDWP_Error_INVALID_MONITOR' value='50'/>
  <enum name='JDWP_Error_INVALID_OBJECT' value='20'/>
  <enum name='JDWP_Error_INVALID_PRIORITY' value='12'/>
  <enum name='JDWP_Error_INVALID_SLOT' value='35'/>
  <enum name='JDWP_Error_INVALID_STRING' value='506'/>
  <enum name='JDWP_Error_INVALID_TAG' value='500'/>
  <enum name='JDWP_Error_INVALID_THREAD' value='10'/>
  <enum name='JDWP_Error_INVALID_THREAD_GROUP' value='11'/>
  <enum name='JDWP_Error_INVALID_TYPESTATE' value='65'/>
  <enum name='JDWP_Error_METHOD_MODIFIERS_CHANGE_NOT_IMPLEMENTED' value='71'/>
  <enum name='JDWP_Error_NAMES_DONT_MATCH' value='69'/>
  <enum name='JDWP_Error_NATIVE_METHOD' value='511'/>
  <enum name='JDWP_Error_NONE' value='0'/>
  <enum name='JDWP_Error_NOT_CURRENT_FRAME' value='33'/>
  <enum name='JDWP_Error_NOT_FOUND' value='41'/>
  <enum name='JDWP_Error_NOT_IMPLEMENTED' value='99'/>
  <enum name='JDWP_Error_NOT_MONITOR_OWNER' value='51'/>
  <enum name='JDWP_Error_NO_MORE_FRAMES' value='31'/>
  <enum name='JDWP_Error_NULL_POINTER' value='100'/>
  <enum name='JDWP_Error_OPAQUE_FRAME' value='32'/>
  <enum name='JDWP_Error_OUT_OF_MEMORY' value='110'/>
  <enum name='JDWP_Error_SCHEMA_CHANGE_NOT_IMPLEMENTED' value='64'/>
  <enum name='JDWP_Error_THREAD_NOT_SUSPENDED' value='13'/>
  <enum name='JDWP_Error_THREAD_SUSPENDED' value='14'/>
  <enum name='JDWP_Error_TRANSPORT_INIT' value='510'/>
  <enum name='JDWP_Error_TRANSPORT_LOAD' value='509'/>
  <enum name='JDWP_Error_TYPE_MISMATCH' value='34'/>
  <enum name='JDWP_Error_UNATTACHED_THREAD' value='115'/>
  <enum name='JDWP_Error_UNSUPPORTED_VERSION' value='68'/>
  <enum name='JDWP_Error_VM_DEAD' value='112'/>
  <enum name='JDWP_Event' value='64'/>
  <enum name='JDWP_EventKind_BREAKPOINT' value='2'/>
  <enum name='JDWP_EventKind_CLASS_LOAD' value='10'/>
  <enum name='JDWP_EventKind_CLASS_PREPARE' value='8'/>
  <enum name='JDWP_EventKind_CLASS_UNLOAD' value='9'/>
  <enum name='JDWP_EventKind_EXCEPTION' value='4'/>
  <enum name='JDWP_EventKind_EXCEPTION_CATCH' value='30'/>
  <enum name='JDWP_EventKind_FIELD_ACCESS' value='20'/>
  <enum name='JDWP_EventKind_FIELD_MODIFICATION' value='21'/>
  <enum name='JDWP_EventKind_FRAME_POP' value='3'/>
  <enum name='JDWP_EventKind_METHOD_ENTRY' value='40'/>
  <enum name='JDWP_EventKind_METHOD_EXIT' value='41'/>
  <enum name='JDWP_EventKind_SINGLE_STEP' value='1'/>
  <enum name='JDWP_EventKind_THREAD_END' value='7'/>
  <enum name='JDWP_EventKind_THREAD_START' value='6'/>
  <enum name='JDWP_EventKind_USER_DEFINED' value='5'/>
  <enum name='JDWP_EventKind_VM_DEATH' value='99'/>
  <enum name='JDWP_EventKind_VM_DISCONNECTED' value='100'/>
  <enum name='JDWP_EventKind_VM_INIT' value='90'/>
  <enum name='JDWP_EventRequest' value='15'/>
  <enum name='JDWP_EventRequest_Clear' value='2'/>
  <enum name='JDWP_EventRequest_ClearAllBreakpoints' value='3'/>
  <enum name='JDWP_EventRequest_Set' value='1'/>
  <enum name='JDWP_EventRequest_Set_Out_modifiers_Modifier_ClassExclude' value='6'/>
  <enum name='JDWP_EventRequest_Set_Out_modifiers_Modifier_ClassMatch' value='5'/>
  <enum name='JDWP_EventRequest_Set_Out_modifiers_Modifier_ClassOnly' value='4'/>
  <enum name='JDWP_EventRequest_Set_Out_modifiers_Modifier_Conditional' value='2'/>
  <enum name='JDWP_EventRequest_Set_Out_modifiers_Modifier_Count' value='1'/>
  <enum name='JDWP_EventRequest_Set_Out_modifiers_Modifier_ExceptionOnly' value='8'/>
  <enum name='JDWP_EventRequest_Set_Out_modifiers_Modifier_FieldOnly' value='9'/>
  <enum name='JDWP_EventRequest_Set_Out_modifiers_Modifier_InstanceOnly' value='11'/>
  <enum name='JDWP_EventRequest_Set_Out_modifiers_Modifier_LocationOnly' value='7'/>
  <enum name='JDWP_EventRequest_Set_Out_modifiers_Modifier_Step' value='10'/>
  <enum name='JDWP_EventRequest_Set_Out_modifiers_Modifier_ThreadOnly' value='3'/>
  <enum name='JDWP_Event_Composite' value='100'/>
  <enum name='JDWP_Field' value='8'/>
  <enum name='JDWP_HIGHEST_COMMAND_SET' value='17'/>
  <enum name='JDWP_InterfaceType' value='5'/>
  <enum name='JDWP_InvokeOptions_INVOKE_NONVIRTUAL' value='2'/>
  <enum name='JDWP_InvokeOptions_INVOKE_SINGLE_THREADED' value='1'/>
  <enum name='JDWP_Method' value='6'/>
  <enum name='JDWP_Method_Bytecodes' value='3'/>
  <enum name='JDWP_Method_IsObsolete' value='4'/>
  <enum name='JDWP_Method_LineTable' value='1'/>
  <enum name='JDWP_Method_VariableTable' value='2'/>
  <enum name='JDWP_Method_VariableTableWithGeneric' value='5'/>
  <enum name='JDWP_ObjectReference' value='9'/>
  <enum name='JDWP_ObjectReference_DisableCollection' value='7'/>
  <enum name='JDWP_ObjectReference_EnableCollection' value='8'/>
  <enum name='JDWP_ObjectReference_GetValues' value='2'/>
  <enum name='JDWP_ObjectReference_InvokeMethod' value='6'/>
  <enum name='JDWP_ObjectReference_IsCollected' value='9'/>
  <enum name='JDWP_ObjectReference_MonitorInfo' value='5'/>
  <enum name='JDWP_ObjectReference_ReferenceType' value='1'/>
  <enum name='JDWP_ObjectReference_SetValues' value='3'/>
  <enum name='JDWP_REQUEST_NONE' value='-1'/>
  <enum name='JDWP_ReferenceType' value='2'/>
  <enum name='JDWP_ReferenceType_ClassLoader' value='2'/>
  <enum name='JDWP_ReferenceType_ClassObject' value='11'/>
  <enum name='JDWP_ReferenceType_Fields' value='4'/>
  <enum name='JDWP_ReferenceType_FieldsWithGeneric' value='14'/>
  <enum name='JDWP_ReferenceType_GetValues' value='6'/>
  <enum name='JDWP_ReferenceType_Interfaces' value='10'/>
  <enum name='JDWP_ReferenceType_Methods' value='5'/>
  <enum name='JDWP_ReferenceType_MethodsWithGeneric' value='15'/>
  <enum name='JDWP_ReferenceType_Modifiers' value='3'/>
  <enum name='JDWP_ReferenceType_NestedTypes' value='8'/>
  <enum name='JDWP_ReferenceType_Signature' value='1'/>
  <enum name='JDWP_ReferenceType_SignatureWithGeneric' value='13'/>
  <enum name='JDWP_ReferenceType_SourceDebugExtension' value='12'/>
  <enum name='JDWP_ReferenceType_SourceFile' value='7'/>
  <enum name='JDWP_ReferenceType_Status' value='9'/>
  <enum name='JDWP_StackFrame' value='16'/>
  <enum name='JDWP_StackFrame_GetValues' value='1'/>
  <enum name='JDWP_StackFrame_PopFrames' value='4'/>
  <enum name='JDWP_StackFrame_SetValues' value='2'/>
  <enum name='JDWP_StackFrame_ThisObject' value='3'/>
  <enum name='JDWP_StepDepth_INTO' value='0'/>
  <enum name='JDWP_StepDepth_OUT' value='2'/>
  <enum name='JDWP_StepDepth_OVER' value='1'/>
  <enum name='JDWP_StepSize_LINE' value='1'/>
  <enum name='JDWP_StepSize_MIN' value='0'/>
  <enum name='JDWP_StringReference' value='10'/>
  <enum name='JDWP_StringReference_Value' value='1'/>
  <enum name='JDWP_SuspendPolicy_ALL' value='2'/>
  <enum name='JDWP_SuspendPolicy_EVENT_THREAD' value='1'/>
  <enum name='JDWP_SuspendPolicy_NONE' value='0'/>
  <enum name='JDWP_SuspendStatus_SUSPEND_STATUS_SUSPENDED' value='1'/>
  <enum name='JDWP_Tag_ARRAY' value='91'/>
  <enum name='JDWP_Tag_BOOLEAN' value='90'/>
  <enum name='JDWP_Tag_BYTE' value='66'/>
  <enum name='JDWP_Tag_CHAR' value='67'/>
  <enum name='JDWP_Tag_CLASS_LOADER' value='108'/>
  <enum name='JDWP_Tag_CLASS_OBJECT' value='99'/>
  <enum name='JDWP_Tag_DOUBLE' value='68'/>
  <enum name='JDWP_Tag_FLOAT' value='70'/>
  <enum name='JDWP_Tag_INT' value='73'/>
  <enum name='JDWP_Tag_LONG' value='74'/>
  <enum name='JDWP_Tag_OBJECT' value='76'/>
  <enum name='JDWP_Tag_SHORT' value='83'/>
  <enum name='JDWP_Tag_STRING' value='115'/>
  <enum name='JDWP_Tag_THREAD' value='116'/>
  <enum name='JDWP_Tag_THREAD_GROUP' value='103'/>
  <enum name='JDWP_Tag_VOID' value='86'/>
  <enum name='JDWP_ThreadGroupReference' value='12'/>
  <enum name='JDWP_ThreadGroupReference_Children' value='3'/>
  <enum name='JDWP_ThreadGroupReference_Name' value='1'/>
  <enum name='JDWP_ThreadGroupReference_Parent' value='2'/>
  <enum name='JDWP_ThreadReference' value='11'/>
  <enum name='JDWP_ThreadReference_CurrentContendedMonitor' value='9'/>
  <enum name='JDWP_ThreadReference_FrameCount' value='7'/>
  <enum name='JDWP_ThreadReference_Frames' value='6'/>
  <enum name='JDWP_ThreadReference_Interrupt' value='11'/>
  <enum name='JDWP_ThreadReference_Name' value='1'/>
  <enum name='JDWP_ThreadReference_OwnedMonitors' value='8'/>
  <enum name='JDWP_ThreadReference_Resume' value='3'/>
  <enum name='JDWP_ThreadReference_Status' value='4'/>
  <enum name='JDWP_ThreadReference_Stop' value='10'/>
  <enum name='JDWP_ThreadReference_Suspend' value='2'/>
  <enum name='JDWP_ThreadReference_SuspendCount' value='12'/>
  <enum name='JDWP_ThreadReference_ThreadGroup' value='5'/>
  <enum name='JDWP_ThreadStatus_MONITOR' value='3'/>
  <enum name='JDWP_ThreadStatus_RUNNING' value='1'/>
  <enum name='JDWP_ThreadStatus_SLEEPING' value='2'/>
  <enum name='JDWP_ThreadStatus_WAIT' value='4'/>
  <enum name='JDWP_ThreadStatus_ZOMBIE' value='0'/>
  <enum name='JDWP_TypeTag_ARRAY' value='3'/>
  <enum name='JDWP_TypeTag_CLASS' value='1'/>
  <enum name='JDWP_TypeTag_INTERFACE' value='2'/>
  <enum name='JDWP_VirtualMachine' value='1'/>
  <enum name='JDWP_VirtualMachine_AllClasses' value='3'/>
  <enum name='JDWP_VirtualMachine_AllClassesWithGeneric' value='20'/>
  <enum name='JDWP_VirtualMachine_AllThreads' value='4'/>
  <enum name='JDWP_VirtualMachine_Capabilities' value='12'/>
  <enum name='JDWP_VirtualMachine_CapabilitiesNew' value='17'/>
  <enum name='JDWP_VirtualMachine_ClassPaths' value='13'/>
  <enum name='JDWP_VirtualMachine_ClassesBySignature' value='2'/>
  <enum name='JDWP_VirtualMachine_CreateString' value='11'/>
  <enum name='JDWP_VirtualMachine_Dispose' value='6'/>
  <enum name='JDWP_VirtualMachine_DisposeObjects' value='14'/>
  <enum name='JDWP_VirtualMachine_Exit' value='10'/>
  <enum name='JDWP_VirtualMachine_HoldEvents' value='15'/>
  <enum name='JDWP_VirtualMachine_IDSizes' value='7'/>
  <enum name='JDWP_VirtualMachine_RedefineClasses' value='18'/>
  <enum name='JDWP_VirtualMachine_ReleaseEvents' value='16'/>
  <enum name='JDWP_VirtualMachine_Resume' value='9'/>
  <enum name='JDWP_VirtualMachine_SetDefaultStratum' value='19'/>
  <enum name='JDWP_VirtualMachine_Suspend' value='8'/>
  <enum name='JDWP_VirtualMachine_TopLevelThreadGroups' value='5'/>
  <enum name='JDWP_VirtualMachine_Version' value='1'/>
  <enum name='JMM_CLASS_INIT_TOTAL_COUNT' value='110'/>
  <enum name='JMM_CLASS_INIT_TOTAL_TIME_MS' value='111'/>
  <enum name='JMM_CLASS_LOADED_BYTES' value='101'/>
  <enum name='JMM_CLASS_LOADED_COUNT' value='1'/>
  <enum name='JMM_CLASS_UNLOADED_BYTES' value='102'/>
  <enum name='JMM_CLASS_UNLOADED_COUNT' value='2'/>
  <enum name='JMM_CLASS_VERIFY_TOTAL_TIME_MS' value='113'/>
  <enum name='JMM_COLLECTION_USAGE_THRESHOLD_HIGH' value='903'/>
  <enum name='JMM_COLLECTION_USAGE_THRESHOLD_LOW' value='904'/>
  <enum name='JMM_COMPILE_TOTAL_TIME_MS' value='8'/>
  <enum name='JMM_GC_COUNT' value='10'/>
  <enum name='JMM_GC_EXT_ATTRIBUTE_INFO_SIZE' value='401'/>
  <enum name='JMM_GC_TIME_MS' value='9'/>
  <enum name='JMM_INTERNAL_ATTRIBUTE_INDEX' value='100'/>
  <enum name='JMM_JVM_INIT_DONE_TIME_MS' value='7'/>
  <enum name='JMM_METHOD_DATA_SIZE_BYTES' value='112'/>
  <enum name='JMM_OS_ATTRIBUTE_INDEX' value='200'/>
  <enum name='JMM_OS_MEM_TOTAL_PHYSICAL_BYTES' value='202'/>
  <enum name='JMM_OS_PROCESS_ID' value='201'/>
  <enum name='JMM_SAFEPOINT_COUNT' value='105'/>
  <enum name='JMM_SHARED_CLASS_LOADED_BYTES' value='116'/>
  <enum name='JMM_SHARED_CLASS_LOADED_COUNT' value='114'/>
  <enum name='JMM_SHARED_CLASS_UNLOADED_BYTES' value='117'/>
  <enum name='JMM_SHARED_CLASS_UNLOADED_COUNT' value='115'/>
  <enum name='JMM_STAT_GC_STAT' value='806'/>
  <enum name='JMM_STAT_PEAK_POOL_USAGE' value='805'/>
  <enum name='JMM_STAT_PEAK_THREAD_COUNT' value='801'/>
  <enum name='JMM_STAT_THREAD_CONTENTION_COUNT' value='802'/>
  <enum name='JMM_STAT_THREAD_CONTENTION_STAT' value='804'/>
  <enum name='JMM_STAT_THREAD_CONTENTION_TIME' value='803'/>
  <enum name='JMM_THREAD_CONTENTION_MONITORING' value='23'/>
  <enum name='JMM_THREAD_CPU_TIME' value='24'/>
  <enum name='JMM_THREAD_DAEMON_COUNT' value='6'/>
  <enum name='JMM_THREAD_LIVE_COUNT' value='4'/>
  <enum name='JMM_THREAD_PEAK_COUNT' value='5'/>
  <enum name='JMM_THREAD_STATE_FLAG_NATIVE' value='4096'/>
  <enum name='JMM_THREAD_STATE_FLAG_SUSPENDED' value='256'/>
  <enum name='JMM_THREAD_STATE_MONITOR' value='3'/>
  <enum name='JMM_THREAD_STATE_NEW' value='9'/>
  <enum name='JMM_THREAD_STATE_RUNNING' value='1'/>
  <enum name='JMM_THREAD_STATE_RUNNING_NATIVE' value='8'/>
  <enum name='JMM_THREAD_STATE_SLEEP' value='2'/>
  <enum name='JMM_THREAD_STATE_SUSPENDED' value='6'/>
  <enum name='JMM_THREAD_STATE_TERMINATED' value='7'/>
  <enum name='JMM_THREAD_STATE_TIMED_WAIT' value='5'/>
  <enum name='JMM_THREAD_STATE_UNKNOWN' value='-1'/>
  <enum name='JMM_THREAD_STATE_WAIT' value='4'/>
  <enum name='JMM_THREAD_STATE_ZOMBIE' value='0'/>
  <enum name='JMM_THREAD_TOTAL_COUNT' value='3'/>
  <enum name='JMM_TOTAL_APP_TIME_MS' value='108'/>
  <enum name='JMM_TOTAL_CLASSLOAD_TIME_MS' value='103'/>
  <enum name='JMM_TOTAL_SAFEPOINTSYNC_TIME_MS' value='106'/>
  <enum name='JMM_TOTAL_STOPPED_TIME_MS' value='107'/>
  <enum name='JMM_USAGE_THRESHOLD_HIGH' value='901'/>
  <enum name='JMM_USAGE_THRESHOLD_LOW' value='902'/>
  <enum name='JMM_VERBOSE_CLASS' value='22'/>
  <enum name='JMM_VERBOSE_GC' value='21'/>
  <enum name='JMM_VERSION_1' value='536936448'/>
  <enum name='JMM_VERSION_1_0' value='536936448'/>
  <enum name='JMM_VMGLOBAL_SOURCE_DEFAULT' value='1'/>
  <enum name='JMM_VMGLOBAL_SOURCE_WASSET' value='2'/>
  <enum name='JMM_VMGLOBAL_TYPE_JBOOLEAN' value='1'/>
  <enum name='JMM_VMGLOBAL_TYPE_JLONG' value='3'/>
  <enum name='JMM_VMGLOBAL_TYPE_JSTRING' value='2'/>
  <enum name='JMM_VMGLOBAL_TYPE_UNKNOWN' value='0'/>
  <enum name='JMM_VM_GLOBAL_COUNT' value='104'/>
  <enum name='JMM_VM_THREAD_COUNT' value='109'/>
  <enum name='JNI_ABORT' value='2'/>
  <enum name='JNI_COMMIT' value='1'/>
  <enum name='JNI_EDETACHED' value='-2'/>
  <enum name='JNI_EEXIST' value='-5'/>
  <enum name='JNI_EINVAL' value='-6'/>
  <enum name='JNI_ENOMEM' value='-4'/>
  <enum name='JNI_ERR' value='-1'/>
  <enum name='JNI_EVERSION' value='-3'/>
  <enum name='JNI_FALSE' value='0'/>
  <enum name='JNI_OK' value='0'/>
  <enum name='JNI_TRUE' value='1'/>
  <enum name='JNI_VERSION_1_1' value='65537'/>
  <enum name='JNI_VERSION_1_2' value='65538'/>
  <enum name='JNI_VERSION_1_4' value='65540'/>
  <enum name='JVMDI_CLASS_STATUS_ERROR' value='8'/>
  <enum name='JVMDI_CLASS_STATUS_INITIALIZED' value='4'/>
  <enum name='JVMDI_CLASS_STATUS_PREPARED' value='2'/>
  <enum name='JVMDI_CLASS_STATUS_VERIFIED' value='1'/>
  <enum name='JVMDI_DISABLE' value='0'/>
  <enum name='JVMDI_ENABLE' value='1'/>
  <enum name='JVMDI_ERROR_ABSENT_INFORMATION' value='101'/>
  <enum name='JVMDI_ERROR_ACCESS_DENIED' value='111'/>
  <enum name='JVMDI_ERROR_ADD_METHOD_NOT_IMPLEMENTED' value='63'/>
  <enum name='JVMDI_ERROR_CIRCULAR_CLASS_DEFINITION' value='61'/>
  <enum name='JVMDI_ERROR_CLASS_MODIFIERS_CHANGE_NOT_IMPLEMENTED' value='70'/>
  <enum name='JVMDI_ERROR_CLASS_NOT_PREPARED' value='22'/>
  <enum name='JVMDI_ERROR_DELETE_METHOD_NOT_IMPLEMENTED' value='67'/>
  <enum name='JVMDI_ERROR_DUPLICATE' value='40'/>
  <enum name='JVMDI_ERROR_DUPLICATE_BREAKPOINT' value='40'/>
  <enum name='JVMDI_ERROR_DUPLICATE_FRAME_POP' value='40'/>
  <enum name='JVMDI_ERROR_FAILS_VERIFICATION' value='62'/>
  <enum name='JVMDI_ERROR_HIERARCHY_CHANGE_NOT_IMPLEMENTED' value='66'/>
  <enum name='JVMDI_ERROR_ILLEGAL_ARGUMENT' value='103'/>
  <enum name='JVMDI_ERROR_INTERNAL' value='113'/>
  <enum name='JVMDI_ERROR_INTERRUPT' value='52'/>
  <enum name='JVMDI_ERROR_INVALID_CLASS' value='21'/>
  <enum name='JVMDI_ERROR_INVALID_CLASS_FORMAT' value='60'/>
  <enum name='JVMDI_ERROR_INVALID_EVENT_TYPE' value='102'/>
  <enum name='JVMDI_ERROR_INVALID_FIELDID' value='25'/>
  <enum name='JVMDI_ERROR_INVALID_FRAMEID' value='30'/>
  <enum name='JVMDI_ERROR_INVALID_LOCATION' value='24'/>
  <enum name='JVMDI_ERROR_INVALID_METHODID' value='23'/>
  <enum name='JVMDI_ERROR_INVALID_MONITOR' value='50'/>
  <enum name='JVMDI_ERROR_INVALID_OBJECT' value='20'/>
  <enum name='JVMDI_ERROR_INVALID_PRIORITY' value='12'/>
  <enum name='JVMDI_ERROR_INVALID_SLOT' value='35'/>
  <enum name='JVMDI_ERROR_INVALID_THREAD' value='10'/>
  <enum name='JVMDI_ERROR_INVALID_THREAD_GROUP' value='11'/>
  <enum name='JVMDI_ERROR_INVALID_TYPESTATE' value='65'/>
  <enum name='JVMDI_ERROR_METHOD_MODIFIERS_CHANGE_NOT_IMPLEMENTED' value='71'/>
  <enum name='JVMDI_ERROR_NAMES_DONT_MATCH' value='69'/>
  <enum name='JVMDI_ERROR_NONE' value='0'/>
  <enum name='JVMDI_ERROR_NOT_CURRENT_FRAME' value='33'/>
  <enum name='JVMDI_ERROR_NOT_FOUND' value='41'/>
  <enum name='JVMDI_ERROR_NOT_IMPLEMENTED' value='99'/>
  <enum name='JVMDI_ERROR_NOT_MONITOR_OWNER' value='51'/>
  <enum name='JVMDI_ERROR_NO_MORE_FRAMES' value='31'/>
  <enum name='JVMDI_ERROR_NO_SUCH_BREAKPOINT' value='41'/>
  <enum name='JVMDI_ERROR_NULL_POINTER' value='100'/>
  <enum name='JVMDI_ERROR_OPAQUE_FRAME' value='32'/>
  <enum name='JVMDI_ERROR_OUT_OF_MEMORY' value='110'/>
  <enum name='JVMDI_ERROR_SCHEMA_CHANGE_NOT_IMPLEMENTED' value='64'/>
  <enum name='JVMDI_ERROR_THREAD_NOT_SUSPENDED' value='13'/>
  <enum name='JVMDI_ERROR_THREAD_SUSPENDED' value='14'/>
  <enum name='JVMDI_ERROR_TYPE_MISMATCH' value='34'/>
  <enum name='JVMDI_ERROR_UNATTACHED_THREAD' value='115'/>
  <enum name='JVMDI_ERROR_UNSUPPORTED_VERSION' value='68'/>
  <enum name='JVMDI_ERROR_VM_DEAD' value='112'/>
  <enum name='JVMDI_EVENT_BREAKPOINT' value='2'/>
  <enum name='JVMDI_EVENT_CLASS_LOAD' value='10'/>
  <enum name='JVMDI_EVENT_CLASS_PREPARE' value='8'/>
  <enum name='JVMDI_EVENT_CLASS_UNLOAD' value='9'/>
  <enum name='JVMDI_EVENT_EXCEPTION' value='4'/>
  <enum name='JVMDI_EVENT_EXCEPTION_CATCH' value='30'/>
  <enum name='JVMDI_EVENT_FIELD_ACCESS' value='20'/>
  <enum name='JVMDI_EVENT_FIELD_MODIFICATION' value='21'/>
  <enum name='JVMDI_EVENT_FRAME_POP' value='3'/>
  <enum name='JVMDI_EVENT_METHOD_ENTRY' value='40'/>
  <enum name='JVMDI_EVENT_METHOD_EXIT' value='41'/>
  <enum name='JVMDI_EVENT_SINGLE_STEP' value='1'/>
  <enum name='JVMDI_EVENT_THREAD_END' value='7'/>
  <enum name='JVMDI_EVENT_THREAD_START' value='6'/>
  <enum name='JVMDI_EVENT_USER_DEFINED' value='5'/>
  <enum name='JVMDI_EVENT_VM_DEATH' value='99'/>
  <enum name='JVMDI_EVENT_VM_INIT' value='90'/>
  <enum name='JVMDI_MAX_EVENT_TYPE_VAL' value='99'/>
  <enum name='JVMDI_MONITOR_WAIT_FOREVER' value='0'/>
  <enum name='JVMDI_OPERAND_TYPE_DOUBLE0' value='6'/>
  <enum name='JVMDI_OPERAND_TYPE_DOUBLE1' value='7'/>
  <enum name='JVMDI_OPERAND_TYPE_FLOAT' value='3'/>
  <enum name='JVMDI_OPERAND_TYPE_INT' value='2'/>
  <enum name='JVMDI_OPERAND_TYPE_LONG0' value='4'/>
  <enum name='JVMDI_OPERAND_TYPE_LONG1' value='5'/>
  <enum name='JVMDI_OPERAND_TYPE_REFERENCE' value='1'/>
  <enum name='JVMDI_OPERAND_TYPE_RETURN_ADDRESS' value='8'/>
  <enum name='JVMDI_SUSPEND_STATUS_BREAK' value='2'/>
  <enum name='JVMDI_SUSPEND_STATUS_SUSPENDED' value='1'/>
  <enum name='JVMDI_THREAD_MAX_PRIORITY' value='10'/>
  <enum name='JVMDI_THREAD_MIN_PRIORITY' value='1'/>
  <enum name='JVMDI_THREAD_NORM_PRIORITY' value='5'/>
  <enum name='JVMDI_THREAD_STATUS_MONITOR' value='3'/>
  <enum name='JVMDI_THREAD_STATUS_RUNNING' value='1'/>
  <enum name='JVMDI_THREAD_STATUS_SLEEPING' value='2'/>
  <enum name='JVMDI_THREAD_STATUS_UNKNOWN' value='-1'/>
  <enum name='JVMDI_THREAD_STATUS_WAIT' value='4'/>
  <enum name='JVMDI_THREAD_STATUS_ZOMBIE' value='0'/>
  <enum name='JVMDI_VERSION_1' value='536936448'/>
  <enum name='JVMDI_VERSION_1_1' value='536936449'/>
  <enum name='JVMDI_VERSION_1_2' value='536936450'/>
  <enum name='JVMDI_VERSION_1_3' value='536936451'/>
  <enum name='JVMPI_BOOLEAN' value='4'/>
  <enum name='JVMPI_BYTE' value='8'/>
  <enum name='JVMPI_CHAR' value='5'/>
  <enum name='JVMPI_CLASS' value='2'/>
  <enum name='JVMPI_DOUBLE' value='7'/>
  <enum name='JVMPI_DUMP_LEVEL_0' value='0'/>
  <enum name='JVMPI_DUMP_LEVEL_1' value='1'/>
  <enum name='JVMPI_DUMP_LEVEL_2' value='2'/>
  <enum name='JVMPI_EVENT_ARENA_DELETE' value='49'/>
  <enum name='JVMPI_EVENT_ARENA_NEW' value='48'/>
  <enum name='JVMPI_EVENT_CLASS_LOAD' value='42'/>
  <enum name='JVMPI_EVENT_CLASS_LOAD_HOOK' value='35'/>
  <enum name='JVMPI_EVENT_CLASS_UNLOAD' value='43'/>
  <enum name='JVMPI_EVENT_COMPILED_METHOD_LOAD' value='7'/>
  <enum name='JVMPI_EVENT_COMPILED_METHOD_UNLOAD' value='8'/>
  <enum name='JVMPI_EVENT_DATA_DUMP_REQUEST' value='44'/>
  <enum name='JVMPI_EVENT_DATA_RESET_REQUEST' value='45'/>
  <enum name='JVMPI_EVENT_DELETE_ARENA' value='49'/>
  <enum name='JVMPI_EVENT_DUMP_DATA_REQUEST' value='44'/>
  <enum name='JVMPI_EVENT_GC_FINISH' value='61'/>
  <enum name='JVMPI_EVENT_GC_START' value='60'/>
  <enum name='JVMPI_EVENT_HEAP_DUMP' value='37'/>
  <enum name='JVMPI_EVENT_INSTRUCTION_START' value='9'/>
  <enum name='JVMPI_EVENT_JNI_GLOBALREF_ALLOC' value='38'/>
  <enum name='JVMPI_EVENT_JNI_GLOBALREF_FREE' value='39'/>
  <enum name='JVMPI_EVENT_JNI_WEAK_GLOBALREF_ALLOC' value='40'/>
  <enum name='JVMPI_EVENT_JNI_WEAK_GLOBALREF_FREE' value='41'/>
  <enum name='JVMPI_EVENT_JVM_INIT_DONE' value='46'/>
  <enum name='JVMPI_EVENT_JVM_SHUT_DOWN' value='47'/>
  <enum name='JVMPI_EVENT_LOAD_COMPILED_METHOD' value='7'/>
  <enum name='JVMPI_EVENT_METHOD_ENTRY' value='1'/>
  <enum name='JVMPI_EVENT_METHOD_ENTRY2' value='2'/>
  <enum name='JVMPI_EVENT_METHOD_EXIT' value='3'/>
  <enum name='JVMPI_EVENT_MONITOR_CONTENDED_ENTER' value='54'/>
  <enum name='JVMPI_EVENT_MONITOR_CONTENDED_ENTERED' value='55'/>
  <enum name='JVMPI_EVENT_MONITOR_CONTENDED_EXIT' value='56'/>
  <enum name='JVMPI_EVENT_MONITOR_DUMP' value='59'/>
  <enum name='JVMPI_EVENT_MONITOR_WAIT' value='57'/>
  <enum name='JVMPI_EVENT_MONITOR_WAITED' value='58'/>
  <enum name='JVMPI_EVENT_NEW_ARENA' value='48'/>
  <enum name='JVMPI_EVENT_OBJECT_ALLOC' value='4'/>
  <enum name='JVMPI_EVENT_OBJECT_DUMP' value='50'/>
  <enum name='JVMPI_EVENT_OBJECT_FREE' value='5'/>
  <enum name='JVMPI_EVENT_OBJECT_MOVE' value='6'/>
  <enum name='JVMPI_EVENT_OBJ_ALLOC' value='4'/>
  <enum name='JVMPI_EVENT_OBJ_FREE' value='5'/>
  <enum name='JVMPI_EVENT_OBJ_MOVE' value='6'/>
  <enum name='JVMPI_EVENT_RAW_MONITOR_CONTENDED_ENTER' value='51'/>
  <enum name='JVMPI_EVENT_RAW_MONITOR_CONTENDED_ENTERED' value='52'/>
  <enum name='JVMPI_EVENT_RAW_MONITOR_CONTENDED_EXIT' value='53'/>
  <enum name='JVMPI_EVENT_RESET_DATA_REQUEST' value='45'/>
  <enum name='JVMPI_EVENT_THREAD_END' value='34'/>
  <enum name='JVMPI_EVENT_THREAD_START' value='33'/>
  <enum name='JVMPI_EVENT_UNLOAD_COMPILED_METHOD' value='8'/>
  <enum name='JVMPI_FAIL' value='-1'/>
  <enum name='JVMPI_FLOAT' value='6'/>
  <enum name='JVMPI_GC_CLASS_DUMP' value='32'/>
  <enum name='JVMPI_GC_INSTANCE_DUMP' value='33'/>
  <enum name='JVMPI_GC_OBJ_ARRAY_DUMP' value='34'/>
  <enum name='JVMPI_GC_PRIM_ARRAY_DUMP' value='35'/>
  <enum name='JVMPI_GC_ROOT_JAVA_FRAME' value='3'/>
  <enum name='JVMPI_GC_ROOT_JNI_GLOBAL' value='1'/>
  <enum name='JVMPI_GC_ROOT_JNI_LOCAL' value='2'/>
  <enum name='JVMPI_GC_ROOT_MONITOR_USED' value='7'/>
  <enum name='JVMPI_GC_ROOT_NATIVE_STACK' value='4'/>
  <enum name='JVMPI_GC_ROOT_STICKY_CLASS' value='5'/>
  <enum name='JVMPI_GC_ROOT_THREAD_BLOCK' value='6'/>
  <enum name='JVMPI_GC_ROOT_THREAD_OBJ' value='8'/>
  <enum name='JVMPI_GC_ROOT_UNKNOWN' value='255'/>
  <enum name='JVMPI_INT' value='10'/>
  <enum name='JVMPI_LONG' value='11'/>
  <enum name='JVMPI_MAXIMUM_PRIORITY' value='10'/>
  <enum name='JVMPI_MAX_EVENT_TYPE_VAL' value='61'/>
  <enum name='JVMPI_MINIMUM_PRIORITY' value='1'/>
  <enum name='JVMPI_MONITOR_JAVA' value='1'/>
  <enum name='JVMPI_MONITOR_RAW' value='2'/>
  <enum name='JVMPI_NORMAL_OBJECT' value='0'/>
  <enum name='JVMPI_NORMAL_PRIORITY' value='5'/>
  <enum name='JVMPI_NOT_AVAILABLE' value='1'/>
  <enum name='JVMPI_REQUESTED_EVENT' value='268435456'/>
  <enum name='JVMPI_SHORT' value='9'/>
  <enum name='JVMPI_SUCCESS' value='0'/>
  <enum name='JVMPI_THREAD_CONDVAR_WAIT' value='3'/>
  <enum name='JVMPI_THREAD_INTERRUPTED' value='16384'/>
  <enum name='JVMPI_THREAD_MONITOR_WAIT' value='2'/>
  <enum name='JVMPI_THREAD_RUNNABLE' value='1'/>
  <enum name='JVMPI_THREAD_SUSPENDED' value='32768'/>
  <enum name='JVMPI_VERSION_1' value='268435457'/>
  <enum name='JVMPI_VERSION_1_1' value='268435458'/>
  <enum name='JVMPI_VERSION_1_2' value='268435459'/>
  <enum name='JVMTI_CLASS_STATUS_ARRAY' value='16'/>
  <enum name='JVMTI_CLASS_STATUS_ERROR' value='8'/>
  <enum name='JVMTI_CLASS_STATUS_INITIALIZED' value='4'/>
  <enum name='JVMTI_CLASS_STATUS_PREPARED' value='2'/>
  <enum name='JVMTI_CLASS_STATUS_PRIMITIVE' value='32'/>
  <enum name='JVMTI_CLASS_STATUS_VERIFIED' value='1'/>
  <enum name='JVMTI_DISABLE' value='0'/>
  <enum name='JVMTI_ENABLE' value='1'/>
  <enum name='JVMTI_ERROR_ABSENT_INFORMATION' value='101'/>
  <enum name='JVMTI_ERROR_ACCESS_DENIED' value='111'/>
  <enum name='JVMTI_ERROR_CIRCULAR_CLASS_DEFINITION' value='61'/>
  <enum name='JVMTI_ERROR_CLASS_NOT_PREPARED' value='22'/>
  <enum name='JVMTI_ERROR_DUPLICATE' value='40'/>
  <enum name='JVMTI_ERROR_FAILS_VERIFICATION' value='62'/>
  <enum name='JVMTI_ERROR_ILLEGAL_ARGUMENT' value='103'/>
  <enum name='JVMTI_ERROR_INTERNAL' value='113'/>
  <enum name='JVMTI_ERROR_INTERRUPT' value='52'/>
  <enum name='JVMTI_ERROR_INVALID_CLASS' value='21'/>
  <enum name='JVMTI_ERROR_INVALID_CLASS_FORMAT' value='60'/>
  <enum name='JVMTI_ERROR_INVALID_ENVIRONMENT' value='116'/>
  <enum name='JVMTI_ERROR_INVALID_EVENT_TYPE' value='102'/>
  <enum name='JVMTI_ERROR_INVALID_FIELDID' value='25'/>
  <enum name='JVMTI_ERROR_INVALID_LOCATION' value='24'/>
  <enum name='JVMTI_ERROR_INVALID_METHODID' value='23'/>
  <enum name='JVMTI_ERROR_INVALID_MONITOR' value='50'/>
  <enum name='JVMTI_ERROR_INVALID_OBJECT' value='20'/>
  <enum name='JVMTI_ERROR_INVALID_PRIORITY' value='12'/>
  <enum name='JVMTI_ERROR_INVALID_SLOT' value='35'/>
  <enum name='JVMTI_ERROR_INVALID_THREAD' value='10'/>
  <enum name='JVMTI_ERROR_INVALID_THREAD_GROUP' value='11'/>
  <enum name='JVMTI_ERROR_INVALID_TYPESTATE' value='65'/>
  <enum name='JVMTI_ERROR_MAX' value='116'/>
  <enum name='JVMTI_ERROR_MUST_POSSESS_CAPABILITY' value='99'/>
  <enum name='JVMTI_ERROR_NAMES_DONT_MATCH' value='69'/>
  <enum name='JVMTI_ERROR_NATIVE_METHOD' value='104'/>
  <enum name='JVMTI_ERROR_NONE' value='0'/>
  <enum name='JVMTI_ERROR_NOT_AVAILABLE' value='98'/>
  <enum name='JVMTI_ERROR_NOT_FOUND' value='41'/>
  <enum name='JVMTI_ERROR_NOT_MONITOR_OWNER' value='51'/>
  <enum name='JVMTI_ERROR_NO_MORE_FRAMES' value='31'/>
  <enum name='JVMTI_ERROR_NULL_POINTER' value='100'/>
  <enum name='JVMTI_ERROR_OPAQUE_FRAME' value='32'/>
  <enum name='JVMTI_ERROR_OUT_OF_MEMORY' value='110'/>
  <enum name='JVMTI_ERROR_THREAD_NOT_ALIVE' value='15'/>
  <enum name='JVMTI_ERROR_THREAD_NOT_SUSPENDED' value='13'/>
  <enum name='JVMTI_ERROR_THREAD_SUSPENDED' value='14'/>
  <enum name='JVMTI_ERROR_TYPE_MISMATCH' value='34'/>
  <enum name='JVMTI_ERROR_UNATTACHED_THREAD' value='115'/>
  <enum name='JVMTI_ERROR_UNMODIFIABLE_CLASS' value='79'/>
  <enum name='JVMTI_ERROR_UNSUPPORTED_REDEFINITION_CLASS_MODIFIERS_CHANGED' value='70'/>
  <enum name='JVMTI_ERROR_UNSUPPORTED_REDEFINITION_HIERARCHY_CHANGED' value='66'/>
  <enum name='JVMTI_ERROR_UNSUPPORTED_REDEFINITION_METHOD_ADDED' value='63'/>
  <enum name='JVMTI_ERROR_UNSUPPORTED_REDEFINITION_METHOD_DELETED' value='67'/>
  <enum name='JVMTI_ERROR_UNSUPPORTED_REDEFINITION_METHOD_MODIFIERS_CHANGED' value='71'/>
  <enum name='JVMTI_ERROR_UNSUPPORTED_REDEFINITION_SCHEMA_CHANGED' value='64'/>
  <enum name='JVMTI_ERROR_UNSUPPORTED_VERSION' value='68'/>
  <enum name='JVMTI_ERROR_WRONG_PHASE' value='112'/>
  <enum name='JVMTI_EVENT_BREAKPOINT' value='62'/>
  <enum name='JVMTI_EVENT_CLASS_FILE_LOAD_HOOK' value='54'/>
  <enum name='JVMTI_EVENT_CLASS_LOAD' value='55'/>
  <enum name='JVMTI_EVENT_CLASS_PREPARE' value='56'/>
  <enum name='JVMTI_EVENT_COMPILED_METHOD_LOAD' value='68'/>
  <enum name='JVMTI_EVENT_COMPILED_METHOD_UNLOAD' value='69'/>
  <enum name='JVMTI_EVENT_DATA_DUMP_REQUEST' value='71'/>
  <enum name='JVMTI_EVENT_DYNAMIC_CODE_GENERATED' value='70'/>
  <enum name='JVMTI_EVENT_EXCEPTION' value='58'/>
  <enum name='JVMTI_EVENT_EXCEPTION_CATCH' value='59'/>
  <enum name='JVMTI_EVENT_FIELD_ACCESS' value='63'/>
  <enum name='JVMTI_EVENT_FIELD_MODIFICATION' value='64'/>
  <enum name='JVMTI_EVENT_FRAME_POP' value='61'/>
  <enum name='JVMTI_EVENT_GARBAGE_COLLECTION_FINISH' value='82'/>
  <enum name='JVMTI_EVENT_GARBAGE_COLLECTION_START' value='81'/>
  <enum name='JVMTI_EVENT_METHOD_ENTRY' value='65'/>
  <enum name='JVMTI_EVENT_METHOD_EXIT' value='66'/>
  <enum name='JVMTI_EVENT_MONITOR_CONTENDED_ENTER' value='75'/>
  <enum name='JVMTI_EVENT_MONITOR_CONTENDED_ENTERED' value='76'/>
  <enum name='JVMTI_EVENT_MONITOR_WAIT' value='73'/>
  <enum name='JVMTI_EVENT_MONITOR_WAITED' value='74'/>
  <enum name='JVMTI_EVENT_NATIVE_METHOD_BIND' value='67'/>
  <enum name='JVMTI_EVENT_OBJECT_FREE' value='83'/>
  <enum name='JVMTI_EVENT_SINGLE_STEP' value='60'/>
  <enum name='JVMTI_EVENT_THREAD_END' value='53'/>
  <enum name='JVMTI_EVENT_THREAD_START' value='52'/>
  <enum name='JVMTI_EVENT_VM_DEATH' value='51'/>
  <enum name='JVMTI_EVENT_VM_INIT' value='50'/>
  <enum name='JVMTI_EVENT_VM_OBJECT_ALLOC' value='84'/>
  <enum name='JVMTI_EVENT_VM_START' value='57'/>
  <enum name='JVMTI_HEAP_OBJECT_EITHER' value='3'/>
  <enum name='JVMTI_HEAP_OBJECT_TAGGED' value='1'/>
  <enum name='JVMTI_HEAP_OBJECT_UNTAGGED' value='2'/>
  <enum name='JVMTI_HEAP_ROOT_JNI_GLOBAL' value='1'/>
  <enum name='JVMTI_HEAP_ROOT_JNI_LOCAL' value='5'/>
  <enum name='JVMTI_HEAP_ROOT_MONITOR' value='3'/>
  <enum name='JVMTI_HEAP_ROOT_OTHER' value='7'/>
  <enum name='JVMTI_HEAP_ROOT_STACK_LOCAL' value='4'/>
  <enum name='JVMTI_HEAP_ROOT_SYSTEM_CLASS' value='2'/>
  <enum name='JVMTI_HEAP_ROOT_THREAD' value='6'/>
  <enum name='JVMTI_ITERATION_ABORT' value='0'/>
  <enum name='JVMTI_ITERATION_CONTINUE' value='1'/>
  <enum name='JVMTI_ITERATION_IGNORE' value='2'/>
  <enum name='JVMTI_JAVA_LANG_THREAD_STATE_BLOCKED' value='1025'/>
  <enum name='JVMTI_JAVA_LANG_THREAD_STATE_MASK' value='1207'/>
  <enum name='JVMTI_JAVA_LANG_THREAD_STATE_NEW' value='0'/>
  <enum name='JVMTI_JAVA_LANG_THREAD_STATE_RUNNABLE' value='5'/>
  <enum name='JVMTI_JAVA_LANG_THREAD_STATE_TERMINATED' value='2'/>
  <enum name='JVMTI_JAVA_LANG_THREAD_STATE_TIMED_WAITING' value='161'/>
  <enum name='JVMTI_JAVA_LANG_THREAD_STATE_WAITING' value='145'/>
  <enum name='JVMTI_JLOCATION_JVMBCI' value='1'/>
  <enum name='JVMTI_JLOCATION_MACHINEPC' value='2'/>
  <enum name='JVMTI_JLOCATION_OTHER' value='0'/>
  <enum name='JVMTI_KIND_ALLOC_ALLOC_BUF' value='95'/>
  <enum name='JVMTI_KIND_ALLOC_BUF' value='94'/>
  <enum name='JVMTI_KIND_IN' value='91'/>
  <enum name='JVMTI_KIND_IN_BUF' value='93'/>
  <enum name='JVMTI_KIND_IN_PTR' value='92'/>
  <enum name='JVMTI_KIND_OUT' value='96'/>
  <enum name='JVMTI_KIND_OUT_BUF' value='97'/>
  <enum name='JVMTI_MAX_EVENT_TYPE_VAL' value='84'/>
  <enum name='JVMTI_MIN_EVENT_TYPE_VAL' value='50'/>
  <enum name='JVMTI_PHASE_DEAD' value='8'/>
  <enum name='JVMTI_PHASE_LIVE' value='4'/>
  <enum name='JVMTI_PHASE_ONLOAD' value='1'/>
  <enum name='JVMTI_PHASE_PRIMORDIAL' value='2'/>
  <enum name='JVMTI_PHASE_START' value='6'/>
  <enum name='JVMTI_REFERENCE_ARRAY_ELEMENT' value='3'/>
  <enum name='JVMTI_REFERENCE_CLASS' value='1'/>
  <enum name='JVMTI_REFERENCE_CLASS_LOADER' value='4'/>
  <enum name='JVMTI_REFERENCE_CONSTANT_POOL' value='9'/>
  <enum name='JVMTI_REFERENCE_FIELD' value='2'/>
  <enum name='JVMTI_REFERENCE_INTERFACE' value='7'/>
  <enum name='JVMTI_REFERENCE_PROTECTION_DOMAIN' value='6'/>
  <enum name='JVMTI_REFERENCE_SIGNERS' value='5'/>
  <enum name='JVMTI_REFERENCE_STATIC_FIELD' value='8'/>
  <enum name='JVMTI_THREAD_MAX_PRIORITY' value='10'/>
  <enum name='JVMTI_THREAD_MIN_PRIORITY' value='1'/>
  <enum name='JVMTI_THREAD_NORM_PRIORITY' value='5'/>
  <enum name='JVMTI_THREAD_STATE_ALIVE' value='1'/>
  <enum name='JVMTI_THREAD_STATE_BLOCKED_ON_MONITOR_ENTER' value='1024'/>
  <enum name='JVMTI_THREAD_STATE_INTERRUPTED' value='2097152'/>
  <enum name='JVMTI_THREAD_STATE_IN_NATIVE' value='4194304'/>
  <enum name='JVMTI_THREAD_STATE_IN_OBJECT_WAIT' value='256'/>
  <enum name='JVMTI_THREAD_STATE_PARKED' value='512'/>
  <enum name='JVMTI_THREAD_STATE_RUNNABLE' value='4'/>
  <enum name='JVMTI_THREAD_STATE_SLEEPING' value='64'/>
  <enum name='JVMTI_THREAD_STATE_SUSPENDED' value='1048576'/>
  <enum name='JVMTI_THREAD_STATE_TERMINATED' value='2'/>
  <enum name='JVMTI_THREAD_STATE_VENDOR_1' value='268435456'/>
  <enum name='JVMTI_THREAD_STATE_VENDOR_2' value='536870912'/>
  <enum name='JVMTI_THREAD_STATE_VENDOR_3' value='1073741824'/>
  <enum name='JVMTI_THREAD_STATE_WAITING' value='128'/>
  <enum name='JVMTI_THREAD_STATE_WAITING_INDEFINITELY' value='16'/>
  <enum name='JVMTI_THREAD_STATE_WAITING_WITH_TIMEOUT' value='32'/>
  <enum name='JVMTI_TIMER_ELAPSED' value='32'/>
  <enum name='JVMTI_TIMER_TOTAL_CPU' value='31'/>
  <enum name='JVMTI_TIMER_USER_CPU' value='30'/>
  <enum name='JVMTI_TYPE_CCHAR' value='115'/>
  <enum name='JVMTI_TYPE_CVOID' value='116'/>
  <enum name='JVMTI_TYPE_JBOOLEAN' value='108'/>
  <enum name='JVMTI_TYPE_JBYTE' value='101'/>
  <enum name='JVMTI_TYPE_JCHAR' value='102'/>
  <enum name='JVMTI_TYPE_JCLASS' value='111'/>
  <enum name='JVMTI_TYPE_JDOUBLE' value='107'/>
  <enum name='JVMTI_TYPE_JFIELDID' value='113'/>
  <enum name='JVMTI_TYPE_JFLOAT' value='106'/>
  <enum name='JVMTI_TYPE_JINT' value='104'/>
  <enum name='JVMTI_TYPE_JLONG' value='105'/>
  <enum name='JVMTI_TYPE_JMETHODID' value='114'/>
  <enum name='JVMTI_TYPE_JNIENV' value='117'/>
  <enum name='JVMTI_TYPE_JOBJECT' value='109'/>
  <enum name='JVMTI_TYPE_JSHORT' value='103'/>
  <enum name='JVMTI_TYPE_JTHREAD' value='110'/>
  <enum name='JVMTI_TYPE_JVALUE' value='112'/>
  <enum name='JVMTI_VERBOSE_CLASS' value='2'/>
  <enum name='JVMTI_VERBOSE_GC' value='1'/>
  <enum name='JVMTI_VERBOSE_JNI' value='4'/>
  <enum name='JVMTI_VERBOSE_OTHER' value='0'/>
  <enum name='JVMTI_VERSION' value='805371937'/>
  <enum name='JVMTI_VERSION_1' value='805371904'/>
  <enum name='JVMTI_VERSION_1_0' value='805371904'/>
  <enum name='JVMTI_VERSION_INTERFACE_JNI' value='0'/>
  <enum name='JVMTI_VERSION_INTERFACE_JVMTI' value='805306368'/>
  <enum name='JVMTI_VERSION_MASK_INTERFACE_TYPE' value='1879048192'/>
  <enum name='JVMTI_VERSION_MASK_MAJOR' value='268369920'/>
  <enum name='JVMTI_VERSION_MASK_MICRO' value='255'/>
  <enum name='JVMTI_VERSION_MASK_MINOR' value='65280'/>
  <enum name='JVMTI_VERSION_SHIFT_MAJOR' value='16'/>
  <enum name='JVMTI_VERSION_SHIFT_MICRO' value='0'/>
  <enum name='JVMTI_VERSION_SHIFT_MINOR' value='8'/>
  <function name='Agent_OnLoad'>
    <arg name='vm' declared_type='JavaVM*' type='^^{JNIInvokeInterface_}'/>
    <arg name='options' declared_type='char*' type='*'/>
    <arg name='reserved' declared_type='void*' type='^v'/>
    <retval declared_type='jint' type='l' type64='i'/>
  </function>
  <function name='Agent_OnUnload'>
    <arg name='vm' declared_type='JavaVM*' type='^^{JNIInvokeInterface_}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='JAWT_GetAWT'>
    <arg name='env' declared_type='JNIEnv*' type='^^{JNINativeInterface_}'/>
    <arg name='awt' declared_type='JAWT*' type='^{jawt=i^?^?^?^?^?}'/>
    <retval declared_type='jboolean' type='C'/>
  </function>
  <function name='JNI_CreateJavaVM'>
    <arg name='pvm' declared_type='JavaVM**' type='^^^{JNIInvokeInterface_}'/>
    <arg name='penv' declared_type='void**' type='^^v'/>
    <arg name='args' declared_type='void*' type='^v'/>
    <retval declared_type='jint' type='l' type64='i'/>
  </function>
  <function name='JNI_GetCreatedJavaVMs'>
    <arg declared_type='JavaVM**' type='^^^{JNIInvokeInterface_}'/>
    <arg declared_type='jsize' type='l' type64='i'/>
    <arg declared_type='jsize*' type='^i'/>
    <retval declared_type='jint' type='l' type64='i'/>
  </function>
  <function name='JNI_GetDefaultJavaVMInitArgs'>
    <arg name='args' declared_type='void*' type='^v'/>
    <retval declared_type='jint' type='l' type64='i'/>
  </function>
  <function name='JNI_OnLoad'>
    <arg name='vm' declared_type='JavaVM*' type='^^{JNIInvokeInterface_}'/>
    <arg name='reserved' declared_type='void*' type='^v'/>
    <retval declared_type='jint' type='l' type64='i'/>
  </function>
  <function name='JNI_OnUnload'>
    <arg name='vm' declared_type='JavaVM*' type='^^{JNIInvokeInterface_}'/>
    <arg name='reserved' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <class name='NSJavaConfiguration'>
    <method class_method='true' selector='configurationForVendor:'>
      <arg name='vendorName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSJavaConfiguration*' type='@'/>
    </method>
    <method class_method='true' selector='defaultConfiguration'>
      <retval declared_type='NSJavaConfiguration*' type='@'/>
    </method>
    <method selector='init'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithVendor:'>
      <arg name='vendorName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='valueForKey:'>
      <arg name='keyName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='valueForKey:expandEnvironmentVariables:'>
      <arg name='keyName' declared_type='NSString*' type='@' index='0'/>
      <arg name='flag' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='vendorName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method class_method='true' selector='vendorNames'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
  </class>
  <class name='NSJavaVirtualMachine'>
    <method selector='attachCurrentThread'>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='defaultClassPath'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method class_method='true' selector='defaultVirtualMachine'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='defineClass:withName:'>
      <arg name='javaClassData' declared_type='NSData*' type='@' index='0'/>
      <arg name='className' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='Class' type='#'/>
    </method>
    <method selector='detachCurrentThread'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='findClass:'>
      <arg name='className' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='Class' type='#'/>
    </method>
    <method selector='initWithClassPath:'>
      <arg name='classPath' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
  </class>
  <class name='NSObject'>
    <method selector='awtMessage:message:env:'>
      <arg name='messageID' declared_type='jint' type='l' type64='i' index='0'/>
      <arg name='message' declared_type='jobject' type='^{_jobject=}' index='1'/>
      <arg name='env' declared_type='JNIEnv*' type='^^{JNINativeInterface_}' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' variadic='true' selector='newWithSignature:'>
      <arg name='signature' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method class_method='true' selector='newWithSignature:arguments:'>
      <arg name='signature' declared_type='NSString*' type='@' index='0'/>
      <arg name='args' declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
  </class>
  <informal_protocol name='AWTCocoaComponent'>
    <method type='v20@0:4l8^{_jobject=}12r^^{JNINativeInterface_}16' type64='v36@0:8i16^{_jobject=}20r^^{JNINativeInterface_}28' selector='awtMessage:message:env:'>
      <arg name='messageID' declared_type='jint' type='l' type64='i' index='0'/>
      <arg name='message' declared_type='jobject' type='^{_jobject=}' index='1'/>
      <arg name='env' declared_type='JNIEnv*' type='^^{JNINativeInterface_}' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='InstantiatingJavaObjects'>
    <method class_method='true' variadic='true' type='@12@0:4@8' type64='@24@0:8@16' selector='newWithSignature:'>
      <arg name='signature' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method class_method='true' type='@16@0:4@8*12' type64='@32@0:8@16[1{__va_list_tag=II^v^v}]24' selector='newWithSignature:arguments:'>
      <arg name='signature' declared_type='NSString*' type='@' index='0'/>
      <arg name='args' declared_type='va_list' type='*' type64='^{__va_list_tag=II^v^v}' declared_type64='__va_list_tag*' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
  </informal_protocol>
</signatures>
