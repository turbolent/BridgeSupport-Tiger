<?xml version='1.0'?>
<signatures version='1.0'>
  <depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
  <depends_on path='/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework'/>
  <depends_on path='/System/Library/Frameworks/Foundation.framework'/>
  <depends_on path='/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework'/>
  <depends_on path='/System/Library/Frameworks/AudioToolbox.framework'/>
  <depends_on path='/System/Library/Frameworks/AudioUnit.framework'/>
  <depends_on path='/System/Library/Frameworks/Security.framework'/>
  <depends_on path='/System/Library/Frameworks/IOKit.framework'/>
  <depends_on path='/System/Library/Frameworks/CoreData.framework'/>
  <depends_on path='/System/Library/Frameworks/QuartzCore.framework'/>
  <opaque name='NSModalSession' type='^{_NSModalSession=}'/>
  <opaque name='NSOpenGLContextAuxiliary' type='^{_CGLContextObject=}'/>
  <opaque name='NSOpenGLPixelFormatAuxiliary' type='^{_CGLPixelFormatObject=}'/>
  <opaque name='NSScreenAuxiliaryOpaque' type='^{NSScreenAuxiliary=}'/>
  <opaque name='_NSProgressIndicatorThreadInfo' type='^{__NSProgressIndicatorThreadInfo=}'/>
  <opaque name='_NSThreadPrivate' type='^{NSThreadPrivate=}'/>
  <constant name='NSAFMAscender' declared_type='NSString*' type='@'/>
  <constant name='NSAFMCapHeight' declared_type='NSString*' type='@'/>
  <constant name='NSAFMCharacterSet' declared_type='NSString*' type='@'/>
  <constant name='NSAFMDescender' declared_type='NSString*' type='@'/>
  <constant name='NSAFMEncodingScheme' declared_type='NSString*' type='@'/>
  <constant name='NSAFMFamilyName' declared_type='NSString*' type='@'/>
  <constant name='NSAFMFontName' declared_type='NSString*' type='@'/>
  <constant name='NSAFMFormatVersion' declared_type='NSString*' type='@'/>
  <constant name='NSAFMFullName' declared_type='NSString*' type='@'/>
  <constant name='NSAFMItalicAngle' declared_type='NSString*' type='@'/>
  <constant name='NSAFMMappingScheme' declared_type='NSString*' type='@'/>
  <constant name='NSAFMNotice' declared_type='NSString*' type='@'/>
  <constant name='NSAFMUnderlinePosition' declared_type='NSString*' type='@'/>
  <constant name='NSAFMUnderlineThickness' declared_type='NSString*' type='@'/>
  <constant name='NSAFMVersion' declared_type='NSString*' type='@'/>
  <constant name='NSAFMWeight' declared_type='NSString*' type='@'/>
  <constant name='NSAFMXHeight' declared_type='NSString*' type='@'/>
  <constant name='NSAbortModalException' declared_type='NSString*' type='@'/>
  <constant name='NSAbortPrintingException' declared_type='NSString*' type='@'/>
  <constant name='NSAccessibilityAllowedValuesAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityApplicationActivatedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityApplicationDeactivatedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityApplicationHiddenNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityApplicationRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityApplicationShownNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityAscendingSortDirectionValue' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityAttachmentTextAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityAttributedStringForRangeParameterizedAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityBackgroundColorTextAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityBoundsForRangeParameterizedAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityBrowserRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityBusyIndicatorRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityButtonRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityCancelAction' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityCancelButtonAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityCenterTabStopMarkerTypeValue' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityCentimetersUnitValue' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityCheckBoxRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityChildrenAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityClearButtonAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityCloseButtonAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityCloseButtonSubrole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityColorWellRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityColumnRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityColumnTitlesAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityColumnsAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityComboBoxRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityConfirmAction' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityContentsAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityCreatedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityDecimalTabStopMarkerTypeValue' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityDecrementAction' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityDecrementArrowSubrole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityDecrementButtonAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityDecrementPageSubrole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityDefaultButtonAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityDeleteAction' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityDescendingSortDirectionValue' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityDescriptionAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityDialogSubrole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityDisclosedByRowAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityDisclosedRowsAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityDisclosingAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityDisclosureLevelAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityDocumentAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityDrawerCreatedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityDrawerRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityEditedAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityEnabledAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityErrorCodeExceptionInfo' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityException' declared_type='NSString*' type='@'/>
  <constant name='NSAccessibilityExpandedAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityFilenameAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityFirstLineIndentMarkerTypeValue' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityFloatingWindowSubrole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityFocusedAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityFocusedUIElementAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityFocusedUIElementChangedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityFocusedWindowAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityFocusedWindowChangedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityFontFamilyKey' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityFontNameKey' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityFontSizeKey' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityFontTextAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityForegroundColorTextAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityFrontmostAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityGroupRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityGrowAreaAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityGrowAreaRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityHeadIndentMarkerTypeValue' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityHeaderAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityHelpAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityHelpTagCreatedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityHelpTagRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityHiddenAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityHorizontalOrientationValue' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityHorizontalScrollBarAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityImageRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityInchesUnitValue' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityIncrementAction' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityIncrementArrowSubrole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityIncrementButtonAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityIncrementPageSubrole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityIncrementorRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityIndexAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityInsertionPointLineNumberAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityLabelUIElementsAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityLabelValueAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityLeftTabStopMarkerTypeValue' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityLineForIndexParameterizedAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityLinkRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityLinkTextAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityLinkedUIElementsAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityListRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMainAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMainWindowAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMainWindowChangedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMarkerGroupUIElementAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMarkerTypeAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMarkerTypeDescriptionAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMarkerUIElementsAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMarkerValuesAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMatteContentUIElementAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMatteHoleAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMatteRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMaxValueAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMenuBarAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMenuBarRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMenuButtonRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMenuItemRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMenuRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMinValueAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMinimizeButtonAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMinimizeButtonSubrole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMinimizedAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMisspelledTextAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityModalAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityMovedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityNextContentsAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityNumberOfCharactersAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityOrientationAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityOutlineRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityOutlineRowSubrole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityOverflowButtonAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityParentAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityPicasUnitValue' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityPickAction' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityPointsUnitValue' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityPopUpButtonRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityPositionAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityPressAction' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityPreviousContentsAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityProgressIndicatorRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityProxyAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityRTFForRangeParameterizedAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityRadioButtonRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityRadioGroupRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityRaiseAction' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityRangeForIndexParameterizedAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityRangeForLineParameterizedAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityRangeForPositionParameterizedAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityResizedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityRightTabStopMarkerTypeValue' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityRoleAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityRoleDescriptionAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityRowCountChangedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityRowRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityRowsAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityRulerMarkerRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityRulerRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityScrollAreaRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityScrollBarRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySearchButtonAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySearchFieldSubrole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySearchMenuAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySecureTextFieldSubrole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySelectedAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySelectedChildrenAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySelectedChildrenChangedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySelectedColumnsAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySelectedColumnsChangedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySelectedRowsAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySelectedRowsChangedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySelectedTextAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySelectedTextChangedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySelectedTextRangeAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityServesAsTitleForUIElementsAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityShadowTextAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySharedCharacterRangeAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySharedTextUIElementsAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySheetCreatedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySheetRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityShowMenuAction' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityShownMenuAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySizeAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySliderRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySortButtonRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySortDirectionAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySplitGroupRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySplitterRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySplittersAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityStandardWindowSubrole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityStaticTextRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityStrikethroughColorTextAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityStrikethroughTextAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityStringForRangeParameterizedAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityStyleRangeForIndexParameterizedAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySubroleAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySuperscriptTextAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySystemDialogSubrole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySystemFloatingWindowSubrole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilitySystemWideRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityTabGroupRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityTableRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityTableRowSubrole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityTabsAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityTailIndentMarkerTypeValue' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityTextAreaRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityTextAttachmentSubrole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityTextFieldRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityTextLinkSubrole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityTitleAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityTitleChangedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityTitleUIElementAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityToolbarButtonAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityToolbarButtonSubrole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityToolbarRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityTopLevelUIElementAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityUIElementDestroyedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityURLAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityUnderlineColorTextAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityUnderlineTextAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityUnitDescriptionAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityUnitsAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityUnknownMarkerTypeValue' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityUnknownRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityUnknownSortDirectionValue' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityUnknownSubrole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityUnknownUnitValue' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityValueAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityValueChangedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityValueIndicatorRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityVerticalOrientationValue' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityVerticalScrollBarAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityVisibleCharacterRangeAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityVisibleChildrenAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityVisibleColumnsAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityVisibleNameKey' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityVisibleRowsAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityWindowAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityWindowCreatedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityWindowDeminiaturizedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityWindowMiniaturizedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityWindowMovedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityWindowResizedNotification' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityWindowRole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityWindowsAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityZoomButtonAttribute' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAccessibilityZoomButtonSubrole' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSAlignmentBinding' declared_type='NSString*' type='@'/>
  <constant name='NSAllowsEditingMultipleValuesSelectionBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSAllowsNullArgumentBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSAlternateImageBinding' declared_type='NSString*' type='@'/>
  <constant name='NSAlternateTitleBinding' declared_type='NSString*' type='@'/>
  <constant name='NSAlwaysPresentsApplicationModalAlertsBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSAnimateBinding' declared_type='NSString*' type='@'/>
  <constant name='NSAnimationDelayBinding' declared_type='NSString*' type='@'/>
  <constant name='NSAnimationProgressMark' declared_type='NSString*' type='@'/>
  <constant name='NSAnimationProgressMarkNotification' declared_type='NSString*' type='@'/>
  <constant name='NSAntialiasThresholdChangedNotification' declared_type='NSString*' type='@'/>
  <constant name='NSApp' declared_type='id' type='@'/>
  <constant name='NSAppKitIgnoredException' declared_type='NSString*' type='@'/>
  <constant name='NSAppKitVersionNumber' declared_type='double' type='d' const='true'/>
  <constant name='NSAppKitVirtualMemoryException' declared_type='NSString*' type='@'/>
  <constant name='NSApplicationDidBecomeActiveNotification' declared_type='NSString*' type='@'/>
  <constant name='NSApplicationDidChangeScreenParametersNotification' declared_type='NSString*' type='@'/>
  <constant name='NSApplicationDidFinishLaunchingNotification' declared_type='NSString*' type='@'/>
  <constant name='NSApplicationDidHideNotification' declared_type='NSString*' type='@'/>
  <constant name='NSApplicationDidResignActiveNotification' declared_type='NSString*' type='@'/>
  <constant name='NSApplicationDidUnhideNotification' declared_type='NSString*' type='@'/>
  <constant name='NSApplicationDidUpdateNotification' declared_type='NSString*' type='@'/>
  <constant name='NSApplicationFileType' declared_type='NSString*' type='@'/>
  <constant name='NSApplicationWillBecomeActiveNotification' declared_type='NSString*' type='@'/>
  <constant name='NSApplicationWillFinishLaunchingNotification' declared_type='NSString*' type='@'/>
  <constant name='NSApplicationWillHideNotification' declared_type='NSString*' type='@'/>
  <constant name='NSApplicationWillResignActiveNotification' declared_type='NSString*' type='@'/>
  <constant name='NSApplicationWillTerminateNotification' declared_type='NSString*' type='@'/>
  <constant name='NSApplicationWillUnhideNotification' declared_type='NSString*' type='@'/>
  <constant name='NSApplicationWillUpdateNotification' declared_type='NSString*' type='@'/>
  <constant name='NSArgumentBinding' declared_type='NSString*' type='@'/>
  <constant name='NSAttachmentAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSAttributedStringBinding' declared_type='NSString*' type='@'/>
  <constant name='NSAuthorDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSBackgroundColorAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSBackgroundColorDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSBadBitmapParametersException' declared_type='NSString*' type='@'/>
  <constant name='NSBadComparisonException' declared_type='NSString*' type='@'/>
  <constant name='NSBadRTFColorTableException' declared_type='NSString*' type='@'/>
  <constant name='NSBadRTFDirectiveException' declared_type='NSString*' type='@'/>
  <constant name='NSBadRTFFontTableException' declared_type='NSString*' type='@'/>
  <constant name='NSBadRTFStyleSheetException' declared_type='NSString*' type='@'/>
  <constant name='NSBaseURLDocumentOption' declared_type='NSString*' type='@'/>
  <constant name='NSBaselineOffsetAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSBlack' declared_type='float' type='f' const='true'/>
  <constant name='NSBottomMarginDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSBrowserColumnConfigurationDidChangeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSBrowserIllegalDelegateException' declared_type='NSString*' type='@'/>
  <constant name='NSCalibratedBlackColorSpace' declared_type='NSString*' type='@'/>
  <constant name='NSCalibratedRGBColorSpace' declared_type='NSString*' type='@'/>
  <constant name='NSCalibratedWhiteColorSpace' declared_type='NSString*' type='@'/>
  <constant name='NSCharacterEncodingDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSCharacterEncodingDocumentOption' declared_type='NSString*' type='@'/>
  <constant name='NSCharacterShapeAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSCocoaVersionDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSColorListDidChangeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSColorListIOException' declared_type='NSString*' type='@'/>
  <constant name='NSColorListNotEditableException' declared_type='NSString*' type='@'/>
  <constant name='NSColorPanelColorDidChangeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSColorPboardType' declared_type='NSString*' type='@'/>
  <constant name='NSComboBoxSelectionDidChangeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSComboBoxSelectionIsChangingNotification' declared_type='NSString*' type='@'/>
  <constant name='NSComboBoxWillDismissNotification' declared_type='NSString*' type='@'/>
  <constant name='NSComboBoxWillPopUpNotification' declared_type='NSString*' type='@'/>
  <constant name='NSCommentDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSCompanyDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSConditionallySetsEditableBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSConditionallySetsEnabledBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSConditionallySetsHiddenBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSContentArrayBinding' declared_type='NSString*' type='@'/>
  <constant name='NSContentArrayForMultipleSelectionBinding' declared_type='NSString*' type='@'/>
  <constant name='NSContentBinding' declared_type='NSString*' type='@'/>
  <constant name='NSContentHeightBinding' declared_type='NSString*' type='@'/>
  <constant name='NSContentObjectBinding' declared_type='NSString*' type='@'/>
  <constant name='NSContentObjectsBinding' declared_type='NSString*' type='@'/>
  <constant name='NSContentSetBinding' declared_type='NSString*' type='@'/>
  <constant name='NSContentValuesBinding' declared_type='NSString*' type='@'/>
  <constant name='NSContentWidthBinding' declared_type='NSString*' type='@'/>
  <constant name='NSContextHelpModeDidActivateNotification' declared_type='NSString*' type='@'/>
  <constant name='NSContextHelpModeDidDeactivateNotification' declared_type='NSString*' type='@'/>
  <constant name='NSContinuouslyUpdatesValueBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSControlTextDidBeginEditingNotification' declared_type='NSString*' type='@'/>
  <constant name='NSControlTextDidChangeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSControlTextDidEndEditingNotification' declared_type='NSString*' type='@'/>
  <constant name='NSControlTintDidChangeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSConvertedDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSCopyrightDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSCreatesSortDescriptorBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSCreationTimeDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSCriticalValueBinding' declared_type='NSString*' type='@'/>
  <constant name='NSCursorAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSCustomColorSpace' declared_type='NSString*' type='@'/>
  <constant name='NSDarkGray' declared_type='float' type='f' const='true'/>
  <constant name='NSDataBinding' declared_type='NSString*' type='@'/>
  <constant name='NSDefaultAttributesDocumentOption' declared_type='NSString*' type='@'/>
  <constant name='NSDefaultTabIntervalDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSDeletesObjectsOnRemoveBindingsOption' declared_type='NSString*' type='@'/>
  <constant name='NSDeviceBitsPerSample' declared_type='NSString*' type='@'/>
  <constant name='NSDeviceBlackColorSpace' declared_type='NSString*' type='@'/>
  <constant name='NSDeviceCMYKColorSpace' declared_type='NSString*' type='@'/>
  <constant name='NSDeviceColorSpaceName' declared_type='NSString*' type='@'/>
  <constant name='NSDeviceIsPrinter' declared_type='NSString*' type='@'/>
  <constant name='NSDeviceIsScreen' declared_type='NSString*' type='@'/>
  <constant name='NSDeviceRGBColorSpace' declared_type='NSString*' type='@'/>
  <constant name='NSDeviceResolution' declared_type='NSString*' type='@'/>
  <constant name='NSDeviceSize' declared_type='NSString*' type='@'/>
  <constant name='NSDeviceWhiteColorSpace' declared_type='NSString*' type='@'/>
  <constant name='NSDirectoryFileType' declared_type='NSString*' type='@'/>
  <constant name='NSDisplayNameBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSDisplayPatternBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSDisplayPatternTitleBinding' declared_type='NSString*' type='@'/>
  <constant name='NSDisplayPatternValueBinding' declared_type='NSString*' type='@'/>
  <constant name='NSDocFormatTextDocumentType' declared_type='NSString*' type='@'/>
  <constant name='NSDocumentEditedBinding' declared_type='NSString*' type='@'/>
  <constant name='NSDocumentTypeDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSDocumentTypeDocumentOption' declared_type='NSString*' type='@'/>
  <constant name='NSDoubleClickArgumentBinding' declared_type='NSString*' type='@'/>
  <constant name='NSDoubleClickTargetBinding' declared_type='NSString*' type='@'/>
  <constant name='NSDragPboard' declared_type='NSString*' type='@'/>
  <constant name='NSDraggingException' declared_type='NSString*' type='@'/>
  <constant name='NSDrawerDidCloseNotification' declared_type='NSString*' type='@'/>
  <constant name='NSDrawerDidOpenNotification' declared_type='NSString*' type='@'/>
  <constant name='NSDrawerWillCloseNotification' declared_type='NSString*' type='@'/>
  <constant name='NSDrawerWillOpenNotification' declared_type='NSString*' type='@'/>
  <constant name='NSEditableBinding' declared_type='NSString*' type='@'/>
  <constant name='NSEditorDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSEnabledBinding' declared_type='NSString*' type='@'/>
  <constant name='NSEventTrackingRunLoopMode' declared_type='NSString*' type='@'/>
  <constant name='NSExcludedElementsDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSExpansionAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSFileContentsPboardType' declared_type='NSString*' type='@'/>
  <constant name='NSFilenamesPboardType' declared_type='NSString*' type='@'/>
  <constant name='NSFilesPromisePboardType' declared_type='NSString*' type='@'/>
  <constant name='NSFilesystemFileType' declared_type='NSString*' type='@'/>
  <constant name='NSFilterPredicateBinding' declared_type='NSString*' type='@'/>
  <constant name='NSFindPboard' declared_type='NSString*' type='@'/>
  <constant name='NSFontAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSFontBinding' declared_type='NSString*' type='@'/>
  <constant name='NSFontBoldBinding' declared_type='NSString*' type='@'/>
  <constant name='NSFontCascadeListAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSFontCharacterSetAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSFontColorAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSFontFaceAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSFontFamilyAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSFontFamilyNameBinding' declared_type='NSString*' type='@'/>
  <constant name='NSFontFixedAdvanceAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSFontIdentityMatrix' declared_type='float*' type='^f' const='true'/>
  <constant name='NSFontItalicBinding' declared_type='NSString*' type='@'/>
  <constant name='NSFontMatrixAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSFontNameAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSFontNameBinding' declared_type='NSString*' type='@'/>
  <constant name='NSFontPboard' declared_type='NSString*' type='@'/>
  <constant name='NSFontPboardType' declared_type='NSString*' type='@'/>
  <constant name='NSFontSetChangedNotification' declared_type='NSString*' type='@'/>
  <constant name='NSFontSizeAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSFontSizeBinding' declared_type='NSString*' type='@'/>
  <constant name='NSFontSlantTrait' declared_type='NSString*' type='@'/>
  <constant name='NSFontSymbolicTrait' declared_type='NSString*' type='@'/>
  <constant name='NSFontTraitsAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSFontUnavailableException' declared_type='NSString*' type='@'/>
  <constant name='NSFontVariationAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSFontVariationAxisDefaultValueKey' declared_type='NSString*' type='@'/>
  <constant name='NSFontVariationAxisIdentifierKey' declared_type='NSString*' type='@'/>
  <constant name='NSFontVariationAxisMaximumValueKey' declared_type='NSString*' type='@'/>
  <constant name='NSFontVariationAxisMinimumValueKey' declared_type='NSString*' type='@'/>
  <constant name='NSFontVariationAxisNameKey' declared_type='NSString*' type='@'/>
  <constant name='NSFontVisibleNameAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSFontWeightTrait' declared_type='NSString*' type='@'/>
  <constant name='NSFontWidthTrait' declared_type='NSString*' type='@'/>
  <constant name='NSForegroundColorAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSGeneralPboard' declared_type='NSString*' type='@'/>
  <constant name='NSGlyphInfoAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSGraphicsContextDestinationAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSGraphicsContextPDFFormat' declared_type='NSString*' type='@'/>
  <constant name='NSGraphicsContextPSFormat' declared_type='NSString*' type='@'/>
  <constant name='NSGraphicsContextRepresentationFormatAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSHTMLPboardType' declared_type='NSString*' type='@'/>
  <constant name='NSHTMLTextDocumentType' declared_type='NSString*' type='@'/>
  <constant name='NSHandlesContentAsCompoundValueBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSHeaderTitleBinding' declared_type='NSString*' type='@'/>
  <constant name='NSHiddenBinding' declared_type='NSString*' type='@'/>
  <constant name='NSHyphenationFactorDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSIllegalSelectorException' declared_type='NSString*' type='@'/>
  <constant name='NSImageBinding' declared_type='NSString*' type='@'/>
  <constant name='NSImageCacheException' declared_type='NSString*' type='@'/>
  <constant name='NSImageColorSyncProfileData' declared_type='NSString*' type='@'/>
  <constant name='NSImageCompressionFactor' declared_type='NSString*' type='@'/>
  <constant name='NSImageCompressionMethod' declared_type='NSString*' type='@'/>
  <constant name='NSImageCurrentFrame' declared_type='NSString*' type='@'/>
  <constant name='NSImageCurrentFrameDuration' declared_type='NSString*' type='@'/>
  <constant name='NSImageDitherTransparency' declared_type='NSString*' type='@'/>
  <constant name='NSImageEXIFData' declared_type='NSString*' type='@'/>
  <constant name='NSImageFrameCount' declared_type='NSString*' type='@'/>
  <constant name='NSImageGamma' declared_type='NSString*' type='@'/>
  <constant name='NSImageInterlaced' declared_type='NSString*' type='@'/>
  <constant name='NSImageLoopCount' declared_type='NSString*' type='@'/>
  <constant name='NSImageProgressive' declared_type='NSString*' type='@'/>
  <constant name='NSImageRGBColorTable' declared_type='NSString*' type='@'/>
  <constant name='NSImageRepRegistryDidChangeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSInkTextPboardType' declared_type='NSString*' type='@'/>
  <constant name='NSInsertsNullPlaceholderBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSInterfaceStyleDefault' declared_type='NSString*' type='@'/>
  <constant name='NSInvokesSeparatelyWithArrayObjectsBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSIsIndeterminateBinding' declared_type='NSString*' type='@'/>
  <constant name='NSKernAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSKeywordsDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSLabelBinding' declared_type='NSString*' type='@'/>
  <constant name='NSLeftMarginDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSLigatureAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSLightGray' declared_type='float' type='f' const='true'/>
  <constant name='NSLinkAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSMacSimpleTextDocumentType' declared_type='NSString*' type='@'/>
  <constant name='NSManagedObjectContextBinding' declared_type='NSString*' type='@'/>
  <constant name='NSMaxValueBinding' declared_type='NSString*' type='@'/>
  <constant name='NSMaxWidthBinding' declared_type='NSString*' type='@'/>
  <constant name='NSMaximumRecentsBinding' declared_type='NSString*' type='@'/>
  <constant name='NSMenuDidAddItemNotification' declared_type='NSString*' type='@'/>
  <constant name='NSMenuDidChangeItemNotification' declared_type='NSString*' type='@'/>
  <constant name='NSMenuDidEndTrackingNotification' declared_type='NSString*' type='@'/>
  <constant name='NSMenuDidRemoveItemNotification' declared_type='NSString*' type='@'/>
  <constant name='NSMenuDidSendActionNotification' declared_type='NSString*' type='@'/>
  <constant name='NSMenuWillSendActionNotification' declared_type='NSString*' type='@'/>
  <constant name='NSMinValueBinding' declared_type='NSString*' type='@'/>
  <constant name='NSMinWidthBinding' declared_type='NSString*' type='@'/>
  <constant name='NSMixedStateImageBinding' declared_type='NSString*' type='@'/>
  <constant name='NSModalPanelRunLoopMode' declared_type='NSString*' type='@'/>
  <constant name='NSModificationTimeDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSMultipleValuesMarker' declared_type='id' type='@'/>
  <constant name='NSMultipleValuesPlaceholderBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSNamedColorSpace' declared_type='NSString*' type='@'/>
  <constant name='NSNibLoadingException' declared_type='NSString*' type='@'/>
  <constant name='NSNibOwner' declared_type='NSString*' type='@'/>
  <constant name='NSNibTopLevelObjects' declared_type='NSString*' type='@'/>
  <constant name='NSNoSelectionMarker' declared_type='id' type='@'/>
  <constant name='NSNoSelectionPlaceholderBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSNotApplicableMarker' declared_type='id' type='@'/>
  <constant name='NSNotApplicablePlaceholderBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSNullPlaceholderBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSObliquenessAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSObservedKeyPathKey' declared_type='NSString*' type='@'/>
  <constant name='NSObservedObjectKey' declared_type='NSString*' type='@'/>
  <constant name='NSOffStateImageBinding' declared_type='NSString*' type='@'/>
  <constant name='NSOnStateImageBinding' declared_type='NSString*' type='@'/>
  <constant name='NSOptionsKey' declared_type='NSString*' type='@'/>
  <constant name='NSOutlineViewColumnDidMoveNotification' declared_type='NSString*' type='@'/>
  <constant name='NSOutlineViewColumnDidResizeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSOutlineViewItemDidCollapseNotification' declared_type='NSString*' type='@'/>
  <constant name='NSOutlineViewItemDidExpandNotification' declared_type='NSString*' type='@'/>
  <constant name='NSOutlineViewItemWillCollapseNotification' declared_type='NSString*' type='@'/>
  <constant name='NSOutlineViewItemWillExpandNotification' declared_type='NSString*' type='@'/>
  <constant name='NSOutlineViewSelectionDidChangeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSOutlineViewSelectionIsChangingNotification' declared_type='NSString*' type='@'/>
  <constant name='NSPDFPboardType' declared_type='NSString*' type='@'/>
  <constant name='NSPICTPboardType' declared_type='NSString*' type='@'/>
  <constant name='NSPPDIncludeNotFoundException' declared_type='NSString*' type='@'/>
  <constant name='NSPPDIncludeStackOverflowException' declared_type='NSString*' type='@'/>
  <constant name='NSPPDIncludeStackUnderflowException' declared_type='NSString*' type='@'/>
  <constant name='NSPPDParseException' declared_type='NSString*' type='@'/>
  <constant name='NSPaperSizeDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSParagraphStyleAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSPasteboardCommunicationException' declared_type='NSString*' type='@'/>
  <constant name='NSPatternColorSpace' declared_type='NSString*' type='@'/>
  <constant name='NSPlainFileType' declared_type='NSString*' type='@'/>
  <constant name='NSPlainTextDocumentType' declared_type='NSString*' type='@'/>
  <constant name='NSPopUpButtonCellWillPopUpNotification' declared_type='NSString*' type='@'/>
  <constant name='NSPopUpButtonWillPopUpNotification' declared_type='NSString*' type='@'/>
  <constant name='NSPostScriptPboardType' declared_type='NSString*' type='@'/>
  <constant name='NSPredicateBinding' declared_type='NSString*' type='@'/>
  <constant name='NSPredicateFormatBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSPrefixSpacesDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSPrintAllPages' declared_type='NSString*' type='@'/>
  <constant name='NSPrintBottomMargin' declared_type='NSString*' type='@'/>
  <constant name='NSPrintCancelJob' declared_type='NSString*' type='@'/>
  <constant name='NSPrintCopies' declared_type='NSString*' type='@'/>
  <constant name='NSPrintDetailedErrorReporting' declared_type='NSString*' type='@'/>
  <constant name='NSPrintFaxCoverSheetName' declared_type='NSString*' type='@'/>
  <constant name='NSPrintFaxHighResolution' declared_type='NSString*' type='@'/>
  <constant name='NSPrintFaxJob' declared_type='NSString*' type='@'/>
  <constant name='NSPrintFaxModem' declared_type='NSString*' type='@'/>
  <constant name='NSPrintFaxNumber' declared_type='NSString*' type='@'/>
  <constant name='NSPrintFaxReceiverNames' declared_type='NSString*' type='@'/>
  <constant name='NSPrintFaxReceiverNumbers' declared_type='NSString*' type='@'/>
  <constant name='NSPrintFaxReturnReceipt' declared_type='NSString*' type='@'/>
  <constant name='NSPrintFaxSendTime' declared_type='NSString*' type='@'/>
  <constant name='NSPrintFaxTrimPageEnds' declared_type='NSString*' type='@'/>
  <constant name='NSPrintFaxUseCoverSheet' declared_type='NSString*' type='@'/>
  <constant name='NSPrintFirstPage' declared_type='NSString*' type='@'/>
  <constant name='NSPrintFormName' declared_type='NSString*' type='@'/>
  <constant name='NSPrintHeaderAndFooter' declared_type='NSString*' type='@'/>
  <constant name='NSPrintHorizontalPagination' declared_type='NSString*' type='@'/>
  <constant name='NSPrintHorizontallyCentered' declared_type='NSString*' type='@'/>
  <constant name='NSPrintJobDisposition' declared_type='NSString*' type='@'/>
  <constant name='NSPrintJobFeatures' declared_type='NSString*' type='@'/>
  <constant name='NSPrintLastPage' declared_type='NSString*' type='@'/>
  <constant name='NSPrintLeftMargin' declared_type='NSString*' type='@'/>
  <constant name='NSPrintManualFeed' declared_type='NSString*' type='@'/>
  <constant name='NSPrintMustCollate' declared_type='NSString*' type='@'/>
  <constant name='NSPrintOperationExistsException' declared_type='NSString*' type='@'/>
  <constant name='NSPrintOrientation' declared_type='NSString*' type='@'/>
  <constant name='NSPrintPackageException' declared_type='NSString*' type='@'/>
  <constant name='NSPrintPagesAcross' declared_type='NSString*' type='@'/>
  <constant name='NSPrintPagesDown' declared_type='NSString*' type='@'/>
  <constant name='NSPrintPagesPerSheet' declared_type='NSString*' type='@'/>
  <constant name='NSPrintPaperFeed' declared_type='NSString*' type='@'/>
  <constant name='NSPrintPaperName' declared_type='NSString*' type='@'/>
  <constant name='NSPrintPaperSize' declared_type='NSString*' type='@'/>
  <constant name='NSPrintPhotoJobStyleHint' declared_type='NSString*' type='@'/>
  <constant name='NSPrintPreviewJob' declared_type='NSString*' type='@'/>
  <constant name='NSPrintPrinter' declared_type='NSString*' type='@'/>
  <constant name='NSPrintPrinterName' declared_type='NSString*' type='@'/>
  <constant name='NSPrintReversePageOrder' declared_type='NSString*' type='@'/>
  <constant name='NSPrintRightMargin' declared_type='NSString*' type='@'/>
  <constant name='NSPrintSaveJob' declared_type='NSString*' type='@'/>
  <constant name='NSPrintSavePath' declared_type='NSString*' type='@'/>
  <constant name='NSPrintScalingFactor' declared_type='NSString*' type='@'/>
  <constant name='NSPrintSpoolJob' declared_type='NSString*' type='@'/>
  <constant name='NSPrintTime' declared_type='NSString*' type='@'/>
  <constant name='NSPrintTopMargin' declared_type='NSString*' type='@'/>
  <constant name='NSPrintVerticalPagination' declared_type='NSString*' type='@'/>
  <constant name='NSPrintVerticallyCentered' declared_type='NSString*' type='@'/>
  <constant name='NSPrintingCommunicationException' declared_type='NSString*' type='@'/>
  <constant name='NSRTFDPboardType' declared_type='NSString*' type='@'/>
  <constant name='NSRTFDTextDocumentType' declared_type='NSString*' type='@'/>
  <constant name='NSRTFPboardType' declared_type='NSString*' type='@'/>
  <constant name='NSRTFPropertyStackOverflowException' declared_type='NSString*' type='@'/>
  <constant name='NSRTFTextDocumentType' declared_type='NSString*' type='@'/>
  <constant name='NSRaisesForNotApplicableKeysBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSReadOnlyDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSRecentSearchesBinding' declared_type='NSString*' type='@'/>
  <constant name='NSRepresentedFilenameBinding' declared_type='NSString*' type='@'/>
  <constant name='NSRightMarginDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSRowHeightBinding' declared_type='NSString*' type='@'/>
  <constant name='NSRulerPboard' declared_type='NSString*' type='@'/>
  <constant name='NSRulerPboardType' declared_type='NSString*' type='@'/>
  <constant name='NSSelectedIdentifierBinding' declared_type='NSString*' type='@'/>
  <constant name='NSSelectedIndexBinding' declared_type='NSString*' type='@'/>
  <constant name='NSSelectedLabelBinding' declared_type='NSString*' type='@'/>
  <constant name='NSSelectedObjectBinding' declared_type='NSString*' type='@'/>
  <constant name='NSSelectedObjectsBinding' declared_type='NSString*' type='@'/>
  <constant name='NSSelectedTagBinding' declared_type='NSString*' type='@'/>
  <constant name='NSSelectedValueBinding' declared_type='NSString*' type='@'/>
  <constant name='NSSelectedValuesBinding' declared_type='NSString*' type='@'/>
  <constant name='NSSelectionIndexPathsBinding' declared_type='NSString*' type='@'/>
  <constant name='NSSelectionIndexesBinding' declared_type='NSString*' type='@'/>
  <constant name='NSSelectorNameBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSSelectsAllWhenSettingContentBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSShadowAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSShellCommandFileType' declared_type='NSString*' type='@'/>
  <constant name='NSSortDescriptorsBinding' declared_type='NSString*' type='@'/>
  <constant name='NSSoundPboardType' declared_type='NSString*' type='@' const='true'/>
  <constant name='NSSplitViewDidResizeSubviewsNotification' declared_type='NSString*' type='@'/>
  <constant name='NSSplitViewWillResizeSubviewsNotification' declared_type='NSString*' type='@'/>
  <constant name='NSStrikethroughColorAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSStrikethroughStyleAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSStringPboardType' declared_type='NSString*' type='@'/>
  <constant name='NSStrokeColorAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSStrokeWidthAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSSubjectDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSSuperscriptAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSSystemColorsDidChangeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSTIFFException' declared_type='NSString*' type='@'/>
  <constant name='NSTIFFPboardType' declared_type='NSString*' type='@'/>
  <constant name='NSTabColumnTerminatorsAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSTableViewColumnDidMoveNotification' declared_type='NSString*' type='@'/>
  <constant name='NSTableViewColumnDidResizeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSTableViewSelectionDidChangeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSTableViewSelectionIsChangingNotification' declared_type='NSString*' type='@'/>
  <constant name='NSTabularTextPboardType' declared_type='NSString*' type='@'/>
  <constant name='NSTargetBinding' declared_type='NSString*' type='@'/>
  <constant name='NSTextColorBinding' declared_type='NSString*' type='@'/>
  <constant name='NSTextDidBeginEditingNotification' declared_type='NSString*' type='@'/>
  <constant name='NSTextDidChangeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSTextDidEndEditingNotification' declared_type='NSString*' type='@'/>
  <constant name='NSTextEncodingNameDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSTextEncodingNameDocumentOption' declared_type='NSString*' type='@'/>
  <constant name='NSTextLineTooLongException' declared_type='NSString*' type='@'/>
  <constant name='NSTextNoSelectionException' declared_type='NSString*' type='@'/>
  <constant name='NSTextReadException' declared_type='NSString*' type='@'/>
  <constant name='NSTextSizeMultiplierDocumentOption' declared_type='NSString*' type='@'/>
  <constant name='NSTextStorageDidProcessEditingNotification' declared_type='NSString*' type='@'/>
  <constant name='NSTextStorageWillProcessEditingNotification' declared_type='NSString*' type='@'/>
  <constant name='NSTextViewDidChangeSelectionNotification' declared_type='NSString*' type='@'/>
  <constant name='NSTextViewDidChangeTypingAttributesNotification' declared_type='NSString*' type='@'/>
  <constant name='NSTextViewWillChangeNotifyingTextViewNotification' declared_type='NSString*' type='@'/>
  <constant name='NSTextWriteException' declared_type='NSString*' type='@'/>
  <constant name='NSTimeoutDocumentOption' declared_type='NSString*' type='@'/>
  <constant name='NSTitleBinding' declared_type='NSString*' type='@'/>
  <constant name='NSTitleDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSToolTipAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSToolTipBinding' declared_type='NSString*' type='@'/>
  <constant name='NSToolbarCustomizeToolbarItemIdentifier' declared_type='NSString*' type='@'/>
  <constant name='NSToolbarDidRemoveItemNotification' declared_type='NSString*' type='@'/>
  <constant name='NSToolbarFlexibleSpaceItemIdentifier' declared_type='NSString*' type='@'/>
  <constant name='NSToolbarPrintItemIdentifier' declared_type='NSString*' type='@'/>
  <constant name='NSToolbarSeparatorItemIdentifier' declared_type='NSString*' type='@'/>
  <constant name='NSToolbarShowColorsItemIdentifier' declared_type='NSString*' type='@'/>
  <constant name='NSToolbarShowFontsItemIdentifier' declared_type='NSString*' type='@'/>
  <constant name='NSToolbarSpaceItemIdentifier' declared_type='NSString*' type='@'/>
  <constant name='NSToolbarWillAddItemNotification' declared_type='NSString*' type='@'/>
  <constant name='NSTopMarginDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSTypedStreamVersionException' declared_type='NSString*' type='@'/>
  <constant name='NSURLPboardType' declared_type='NSString*' type='@'/>
  <constant name='NSUnderlineByWordMask' declared_type='unsigned int' type='I'/>
  <constant name='NSUnderlineColorAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSUnderlineStrikethroughMask' declared_type='unsigned int' type='I'/>
  <constant name='NSUnderlineStyleAttributeName' declared_type='NSString*' type='@'/>
  <constant name='NSVCardPboardType' declared_type='NSString*' type='@'/>
  <constant name='NSValidatesImmediatelyBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSValueBinding' declared_type='NSString*' type='@'/>
  <constant name='NSValuePathBinding' declared_type='NSString*' type='@'/>
  <constant name='NSValueTransformerBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSValueTransformerNameBindingOption' declared_type='NSString*' type='@'/>
  <constant name='NSValueURLBinding' declared_type='NSString*' type='@'/>
  <constant name='NSViewAnimationEffectKey' declared_type='NSString*' type='@'/>
  <constant name='NSViewAnimationEndFrameKey' declared_type='NSString*' type='@'/>
  <constant name='NSViewAnimationFadeInEffect' declared_type='NSString*' type='@'/>
  <constant name='NSViewAnimationFadeOutEffect' declared_type='NSString*' type='@'/>
  <constant name='NSViewAnimationStartFrameKey' declared_type='NSString*' type='@'/>
  <constant name='NSViewAnimationTargetKey' declared_type='NSString*' type='@'/>
  <constant name='NSViewBoundsDidChangeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSViewFocusDidChangeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSViewFrameDidChangeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSViewGlobalFrameDidChangeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSViewModeDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSViewSizeDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSViewZoomDocumentAttribute' declared_type='NSString*' type='@'/>
  <constant name='NSVisibleBinding' declared_type='NSString*' type='@'/>
  <constant name='NSVoiceAge' declared_type='NSString*' type='@'/>
  <constant name='NSVoiceDemoText' declared_type='NSString*' type='@'/>
  <constant name='NSVoiceGender' declared_type='NSString*' type='@'/>
  <constant name='NSVoiceGenderFemale' declared_type='NSString*' type='@'/>
  <constant name='NSVoiceGenderMale' declared_type='NSString*' type='@'/>
  <constant name='NSVoiceGenderNeuter' declared_type='NSString*' type='@'/>
  <constant name='NSVoiceIdentifier' declared_type='NSString*' type='@'/>
  <constant name='NSVoiceLanguage' declared_type='NSString*' type='@'/>
  <constant name='NSVoiceName' declared_type='NSString*' type='@'/>
  <constant name='NSWarningValueBinding' declared_type='NSString*' type='@'/>
  <constant name='NSWebArchiveTextDocumentType' declared_type='NSString*' type='@'/>
  <constant name='NSWebPreferencesDocumentOption' declared_type='NSString*' type='@'/>
  <constant name='NSWebResourceLoadDelegateDocumentOption' declared_type='NSString*' type='@'/>
  <constant name='NSWhite' declared_type='float' type='f' const='true'/>
  <constant name='NSWidthBinding' declared_type='NSString*' type='@'/>
  <constant name='NSWindowDidBecomeKeyNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWindowDidBecomeMainNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWindowDidChangeScreenNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWindowDidChangeScreenProfileNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWindowDidDeminiaturizeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWindowDidEndSheetNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWindowDidExposeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWindowDidMiniaturizeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWindowDidMoveNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWindowDidResignKeyNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWindowDidResignMainNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWindowDidResizeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWindowDidUpdateNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWindowServerCommunicationException' declared_type='NSString*' type='@'/>
  <constant name='NSWindowWillBeginSheetNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWindowWillCloseNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWindowWillMiniaturizeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWindowWillMoveNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWordMLTextDocumentType' declared_type='NSString*' type='@'/>
  <constant name='NSWordTablesReadException' declared_type='NSString*' type='@'/>
  <constant name='NSWordTablesWriteException' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceCompressOperation' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceCopyOperation' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceDecompressOperation' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceDecryptOperation' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceDestroyOperation' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceDidLaunchApplicationNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceDidMountNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceDidPerformFileOperationNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceDidTerminateApplicationNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceDidUnmountNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceDidWakeNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceDuplicateOperation' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceEncryptOperation' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceLinkOperation' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceMoveOperation' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceRecycleOperation' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceSessionDidBecomeActiveNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceSessionDidResignActiveNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceWillLaunchApplicationNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceWillPowerOffNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceWillSleepNotification' declared_type='NSString*' type='@'/>
  <constant name='NSWorkspaceWillUnmountNotification' declared_type='NSString*' type='@'/>
  <enum name='NSAWTEventType' value='16'/>
  <enum name='NSAboveBottom' value='4'/>
  <enum name='NSAboveTop' value='1'/>
  <enum name='NSAddTraitFontAction' value='2'/>
  <enum name='NSAdobeCNS1CharacterCollection' value='1'/>
  <enum name='NSAdobeGB1CharacterCollection' value='2'/>
  <enum name='NSAdobeJapan1CharacterCollection' value='3'/>
  <enum name='NSAdobeJapan2CharacterCollection' value='4'/>
  <enum name='NSAdobeKorea1CharacterCollection' value='5'/>
  <enum name='NSAlertAlternateReturn' value='0'/>
  <enum name='NSAlertDefaultReturn' value='1'/>
  <enum name='NSAlertErrorReturn' value='-2'/>
  <enum name='NSAlertFirstButtonReturn' value='1000'/>
  <enum name='NSAlertOtherReturn' value='-1'/>
  <enum name='NSAlertSecondButtonReturn' value='1001'/>
  <enum name='NSAlertThirdButtonReturn' value='1002'/>
  <enum name='NSAllScrollerParts' value='2'/>
  <enum name='NSAlphaFirstBitmapFormat' value='1'/>
  <enum name='NSAlphaNonpremultipliedBitmapFormat' value='2'/>
  <enum name='NSAlphaShiftKeyMask' value='65536'/>
  <enum name='NSAlternateKeyMask' value='524288'/>
  <enum name='NSAnimationBlocking' value='0'/>
  <enum name='NSAnimationEaseIn' value='1'/>
  <enum name='NSAnimationEaseInOut' value='0'/>
  <enum name='NSAnimationEaseOut' value='2'/>
  <enum name='NSAnimationEffectDisappearingItemDefault' value='0'/>
  <enum name='NSAnimationEffectPoof' value='10'/>
  <enum name='NSAnimationLinear' value='3'/>
  <enum name='NSAnimationNonblocking' value='1'/>
  <enum name='NSAnimationNonblockingThreaded' value='2'/>
  <enum name='NSAnyEventMask' value='4294967295'/>
  <enum name='NSAnyType' value='0'/>
  <enum name='NSAppKitDefined' value='13'/>
  <enum name='NSAppKitDefinedMask' value='8192'/>
  <enum name='NSAppKitVersionNumber10_0' value='577'/>
  <enum name='NSAppKitVersionNumber10_1' value='620'/>
  <enum name='NSAppKitVersionNumber10_2' value='663'/>
  <enum name='NSAppKitVersionNumber10_2_3' value='663.6'/>
  <enum name='NSAppKitVersionNumber10_3' value='743'/>
  <enum name='NSAppKitVersionNumber10_3_2' value='743.14'/>
  <enum name='NSAppKitVersionNumber10_3_3' value='743.2'/>
  <enum name='NSAppKitVersionNumber10_3_5' value='743.24'/>
  <enum name='NSAppKitVersionNumberWithColumnResizingBrowser' value='685.0'/>
  <enum name='NSAppKitVersionNumberWithContinuousScrollingBrowser' value='680.0'/>
  <enum name='NSAppKitVersionNumberWithCursorSizeSupport' value='682.0'/>
  <enum name='NSAppKitVersionNumberWithCustomSheetPosition' value='686.0'/>
  <enum name='NSAppKitVersionNumberWithDirectionalTabs' value='631.0'/>
  <enum name='NSAppKitVersionNumberWithPatternColorLeakFix' value='641.0'/>
  <enum name='NSApplicationActivatedEventType' value='1'/>
  <enum name='NSApplicationDeactivatedEventType' value='2'/>
  <enum name='NSApplicationDefined' value='15'/>
  <enum name='NSApplicationDefinedMask' value='32768'/>
  <enum name='NSApplicationDelegateReplyCancel' value='1'/>
  <enum name='NSApplicationDelegateReplyFailure' value='2'/>
  <enum name='NSApplicationDelegateReplySuccess' value='0'/>
  <enum name='NSAscendingPageOrder' value='1'/>
  <enum name='NSAtBottom' value='5'/>
  <enum name='NSAtTop' value='2'/>
  <enum name='NSAttachmentCharacter' value='65532'/>
  <enum name='NSAutoPagination' value='0'/>
  <enum name='NSAutosaveOperation' value='3'/>
  <enum name='NSBMPFileType' value='1'/>
  <enum name='NSBackTabCharacter' value='25'/>
  <enum name='NSBackgroundTab' value='1'/>
  <enum name='NSBackingStoreBuffered' value='2'/>
  <enum name='NSBackingStoreNonretained' value='1'/>
  <enum name='NSBackingStoreRetained' value='0'/>
  <enum name='NSBackspaceCharacter' value='8'/>
  <enum name='NSBacktabTextMovement' value='18'/>
  <enum name='NSBeginFunctionKey' value='63274'/>
  <enum name='NSBelowBottom' value='6'/>
  <enum name='NSBelowTop' value='3'/>
  <enum name='NSBevelLineJoinStyle' value='2'/>
  <enum name='NSBezelBorder' value='2'/>
  <enum name='NSBlueControlTint' value='1'/>
  <enum name='NSBoldFontMask' value='2'/>
  <enum name='NSBorderlessWindowMask' value='0'/>
  <enum name='NSBottomTabsBezelBorder' value='2'/>
  <enum name='NSBoxOldStyle' value='3'/>
  <enum name='NSBoxPrimary' value='0'/>
  <enum name='NSBoxSecondary' value='1'/>
  <enum name='NSBoxSeparator' value='2'/>
  <enum name='NSBreakFunctionKey' value='63282'/>
  <enum name='NSBrowserAutoColumnResizing' value='1'/>
  <enum name='NSBrowserNoColumnResizing' value='0'/>
  <enum name='NSBrowserUserColumnResizing' value='2'/>
  <enum name='NSButtLineCapStyle' value='0'/>
  <enum name='NSCMYKColorSpaceModel' value='2'/>
  <enum name='NSCMYKModeColorPanel' value='2'/>
  <enum name='NSCancelButton' value='0'/>
  <enum name='NSCancelTextMovement' value='23'/>
  <enum name='NSCarriageReturnCharacter' value='13'/>
  <enum name='NSCellAllowsMixedState' value='16'/>
  <enum name='NSCellChangesContents' value='14'/>
  <enum name='NSCellDisabled' value='0'/>
  <enum name='NSCellEditable' value='3'/>
  <enum name='NSCellHasImageHorizontal' value='12'/>
  <enum name='NSCellHasImageOnLeftOrBottom' value='13'/>
  <enum name='NSCellHasOverlappingImage' value='11'/>
  <enum name='NSCellHighlighted' value='5'/>
  <enum name='NSCellIsBordered' value='10'/>
  <enum name='NSCellIsInsetButton' value='15'/>
  <enum name='NSCellLightsByBackground' value='9'/>
  <enum name='NSCellLightsByContents' value='6'/>
  <enum name='NSCellLightsByGray' value='7'/>
  <enum name='NSCellState' value='1'/>
  <enum name='NSCenterTabStopType' value='2'/>
  <enum name='NSCenterTextAlignment' value='2'/>
  <enum name='NSChangeAutosaved' value='4'/>
  <enum name='NSChangeBackgroundCell' value='8'/>
  <enum name='NSChangeBackgroundCellMask' value='8'/>
  <enum name='NSChangeCleared' value='2'/>
  <enum name='NSChangeDone' value='0'/>
  <enum name='NSChangeGrayCell' value='4'/>
  <enum name='NSChangeGrayCellMask' value='4'/>
  <enum name='NSChangeReadOtherContents' value='3'/>
  <enum name='NSChangeUndone' value='1'/>
  <enum name='NSCircularBezelStyle' value='7'/>
  <enum name='NSCircularSlider' value='1'/>
  <enum name='NSClearControlTint' value='7'/>
  <enum name='NSClearDisplayFunctionKey' value='63290'/>
  <enum name='NSClearLineFunctionKey' value='63289'/>
  <enum name='NSClipPagination' value='2'/>
  <enum name='NSClockAndCalendarDatePickerStyle' value='1'/>
  <enum name='NSClosableWindowMask' value='2'/>
  <enum name='NSClosePathBezierPathElement' value='3'/>
  <enum name='NSColorListModeColorPanel' value='5'/>
  <enum name='NSColorPanelAllModesMask' value='65535'/>
  <enum name='NSColorPanelCMYKModeMask' value='4'/>
  <enum name='NSColorPanelColorListModeMask' value='32'/>
  <enum name='NSColorPanelCrayonModeMask' value='128'/>
  <enum name='NSColorPanelCustomPaletteModeMask' value='16'/>
  <enum name='NSColorPanelGrayModeMask' value='1'/>
  <enum name='NSColorPanelHSBModeMask' value='8'/>
  <enum name='NSColorPanelRGBModeMask' value='2'/>
  <enum name='NSColorPanelWheelModeMask' value='64'/>
  <enum name='NSCommandKeyMask' value='1048576'/>
  <enum name='NSCompositeClear' value='0'/>
  <enum name='NSCompositeCopy' value='1'/>
  <enum name='NSCompositeDestinationAtop' value='9'/>
  <enum name='NSCompositeDestinationIn' value='7'/>
  <enum name='NSCompositeDestinationOut' value='8'/>
  <enum name='NSCompositeDestinationOver' value='6'/>
  <enum name='NSCompositeHighlight' value='12'/>
  <enum name='NSCompositePlusDarker' value='11'/>
  <enum name='NSCompositePlusLighter' value='13'/>
  <enum name='NSCompositeSourceAtop' value='5'/>
  <enum name='NSCompositeSourceIn' value='3'/>
  <enum name='NSCompositeSourceOut' value='4'/>
  <enum name='NSCompositeSourceOver' value='2'/>
  <enum name='NSCompositeXOR' value='10'/>
  <enum name='NSCompressedFontMask' value='512'/>
  <enum name='NSCondensedFontMask' value='64'/>
  <enum name='NSContentsCellMask' value='1'/>
  <enum name='NSContinuousCapacityLevelIndicatorStyle' value='1'/>
  <enum name='NSControlGlyph' value='16777215'/>
  <enum name='NSControlKeyMask' value='262144'/>
  <enum name='NSCrayonModeColorPanel' value='7'/>
  <enum name='NSCriticalAlertStyle' value='2'/>
  <enum name='NSCriticalRequest' value='0'/>
  <enum name='NSCursorPointingDevice' value='2'/>
  <enum name='NSCursorUpdate' value='17'/>
  <enum name='NSCursorUpdateMask' value='131072'/>
  <enum name='NSCurveToBezierPathElement' value='2'/>
  <enum name='NSCustomPaletteModeColorPanel' value='4'/>
  <enum name='NSDecimalTabStopType' value='3'/>
  <enum name='NSDefaultControlTint' value='0'/>
  <enum name='NSDefaultTokenStyle' value='0'/>
  <enum name='NSDeleteCharFunctionKey' value='63294'/>
  <enum name='NSDeleteCharacter' value='127'/>
  <enum name='NSDeleteFunctionKey' value='63272'/>
  <enum name='NSDeleteLineFunctionKey' value='63292'/>
  <enum name='NSDescendingPageOrder' value='-1'/>
  <enum name='NSDeviceIndependentModifierFlagsMask' value='4294901760'/>
  <enum name='NSDeviceNColorSpaceModel' value='4'/>
  <enum name='NSDirectSelection' value='0'/>
  <enum name='NSDisclosureBezelStyle' value='5'/>
  <enum name='NSDiscreteCapacityLevelIndicatorStyle' value='2'/>
  <enum name='NSDisplayWindowRunLoopOrdering' value='600000'/>
  <enum name='NSDocModalWindowMask' value='64'/>
  <enum name='NSDockWindowLevel' value='20'/>
  <enum name='NSDoubleType' value='6'/>
  <enum name='NSDownArrowFunctionKey' value='63233'/>
  <enum name='NSDownTextMovement' value='22'/>
  <enum name='NSDragOperationAll' value='15'/>
  <enum name='NSDragOperationAll_Obsolete' value='15'/>
  <enum name='NSDragOperationCopy' value='1'/>
  <enum name='NSDragOperationDelete' value='32'/>
  <enum name='NSDragOperationEvery' value='4294967295'/>
  <enum name='NSDragOperationGeneric' value='4'/>
  <enum name='NSDragOperationLink' value='2'/>
  <enum name='NSDragOperationMove' value='16'/>
  <enum name='NSDragOperationNone' value='0'/>
  <enum name='NSDragOperationPrivate' value='8'/>
  <enum name='NSDrawerClosedState' value='0'/>
  <enum name='NSDrawerClosingState' value='3'/>
  <enum name='NSDrawerOpenState' value='2'/>
  <enum name='NSDrawerOpeningState' value='1'/>
  <enum name='NSEndFunctionKey' value='63275'/>
  <enum name='NSEnterCharacter' value='3'/>
  <enum name='NSEraDatePickerElementFlag' value='256'/>
  <enum name='NSEraserPointingDevice' value='3'/>
  <enum name='NSEvenOddWindingRule' value='1'/>
  <enum name='NSExclude10_4ElementsIconCreationOption' value='4'/>
  <enum name='NSExcludeQuickDrawElementsIconCreationOption' value='2'/>
  <enum name='NSExecuteFunctionKey' value='63298'/>
  <enum name='NSExpandedFontMask' value='32'/>
  <enum name='NSF10FunctionKey' value='63245'/>
  <enum name='NSF11FunctionKey' value='63246'/>
  <enum name='NSF12FunctionKey' value='63247'/>
  <enum name='NSF13FunctionKey' value='63248'/>
  <enum name='NSF14FunctionKey' value='63249'/>
  <enum name='NSF15FunctionKey' value='63250'/>
  <enum name='NSF16FunctionKey' value='63251'/>
  <enum name='NSF17FunctionKey' value='63252'/>
  <enum name='NSF18FunctionKey' value='63253'/>
  <enum name='NSF19FunctionKey' value='63254'/>
  <enum name='NSF1FunctionKey' value='63236'/>
  <enum name='NSF20FunctionKey' value='63255'/>
  <enum name='NSF21FunctionKey' value='63256'/>
  <enum name='NSF22FunctionKey' value='63257'/>
  <enum name='NSF23FunctionKey' value='63258'/>
  <enum name='NSF24FunctionKey' value='63259'/>
  <enum name='NSF25FunctionKey' value='63260'/>
  <enum name='NSF26FunctionKey' value='63261'/>
  <enum name='NSF27FunctionKey' value='63262'/>
  <enum name='NSF28FunctionKey' value='63263'/>
  <enum name='NSF29FunctionKey' value='63264'/>
  <enum name='NSF2FunctionKey' value='63237'/>
  <enum name='NSF30FunctionKey' value='63265'/>
  <enum name='NSF31FunctionKey' value='63266'/>
  <enum name='NSF32FunctionKey' value='63267'/>
  <enum name='NSF33FunctionKey' value='63268'/>
  <enum name='NSF34FunctionKey' value='63269'/>
  <enum name='NSF35FunctionKey' value='63270'/>
  <enum name='NSF3FunctionKey' value='63238'/>
  <enum name='NSF4FunctionKey' value='63239'/>
  <enum name='NSF5FunctionKey' value='63240'/>
  <enum name='NSF6FunctionKey' value='63241'/>
  <enum name='NSF7FunctionKey' value='63242'/>
  <enum name='NSF8FunctionKey' value='63243'/>
  <enum name='NSF9FunctionKey' value='63244'/>
  <enum name='NSFPCurrentField' value='134'/>
  <enum name='NSFPPreviewButton' value='131'/>
  <enum name='NSFPPreviewField' value='128'/>
  <enum name='NSFPRevertButton' value='130'/>
  <enum name='NSFPSetButton' value='132'/>
  <enum name='NSFPSizeField' value='129'/>
  <enum name='NSFPSizeTitle' value='133'/>
  <enum name='NSFaxButton' value='5'/>
  <enum name='NSFileHandlingPanelCancelButton' value='0'/>
  <enum name='NSFileHandlingPanelOKButton' value='1'/>
  <enum name='NSFindFunctionKey' value='63301'/>
  <enum name='NSFindPanelActionNext' value='2'/>
  <enum name='NSFindPanelActionPrevious' value='3'/>
  <enum name='NSFindPanelActionReplace' value='5'/>
  <enum name='NSFindPanelActionReplaceAll' value='4'/>
  <enum name='NSFindPanelActionReplaceAllInSelection' value='8'/>
  <enum name='NSFindPanelActionReplaceAndFind' value='6'/>
  <enum name='NSFindPanelActionSelectAll' value='9'/>
  <enum name='NSFindPanelActionSelectAllInSelection' value='10'/>
  <enum name='NSFindPanelActionSetFindString' value='7'/>
  <enum name='NSFindPanelActionShowFindPanel' value='1'/>
  <enum name='NSFitPagination' value='1'/>
  <enum name='NSFixedPitchFontMask' value='1024'/>
  <enum name='NSFlagsChanged' value='12'/>
  <enum name='NSFlagsChangedMask' value='4096'/>
  <enum name='NSFloatType' value='3'/>
  <enum name='NSFloatingPointSamplesBitmapFormat' value='4'/>
  <enum name='NSFloatingWindowLevel' value='3'/>
  <enum name='NSFocusRingAbove' value='2'/>
  <enum name='NSFocusRingBelow' value='1'/>
  <enum name='NSFocusRingOnly' value='0'/>
  <enum name='NSFocusRingTypeDefault' value='0'/>
  <enum name='NSFocusRingTypeExterior' value='2'/>
  <enum name='NSFocusRingTypeNone' value='1'/>
  <enum name='NSFontAntialiasedIntegerAdvancementsRenderingMode' value='3'/>
  <enum name='NSFontAntialiasedRenderingMode' value='1'/>
  <enum name='NSFontBoldTrait' value='2'/>
  <enum name='NSFontClarendonSerifsClass' value='1073741824'/>
  <enum name='NSFontCollectionApplicationOnlyMask' value='1'/>
  <enum name='NSFontCondensedTrait' value='64'/>
  <enum name='NSFontDefaultRenderingMode' value='0'/>
  <enum name='NSFontExpandedTrait' value='32'/>
  <enum name='NSFontFamilyClassMask' value='4026531840'/>
  <enum name='NSFontFreeformSerifsClass' value='1879048192'/>
  <enum name='NSFontIntegerAdvancementsRenderingMode' value='2'/>
  <enum name='NSFontItalicTrait' value='1'/>
  <enum name='NSFontModernSerifsClass' value='805306368'/>
  <enum name='NSFontMonoSpaceTrait' value='1024'/>
  <enum name='NSFontOldStyleSerifsClass' value='268435456'/>
  <enum name='NSFontOrnamentalsClass' value='-1879048192'/>
  <enum name='NSFontPanelAllEffectsModeMask' value='1048320'/>
  <enum name='NSFontPanelAllModesMask' value='4294967295'/>
  <enum name='NSFontPanelCollectionModeMask' value='4'/>
  <enum name='NSFontPanelDocumentColorEffectModeMask' value='2048'/>
  <enum name='NSFontPanelFaceModeMask' value='1'/>
  <enum name='NSFontPanelShadowEffectModeMask' value='4096'/>
  <enum name='NSFontPanelSizeModeMask' value='2'/>
  <enum name='NSFontPanelStandardModesMask' value='65535'/>
  <enum name='NSFontPanelStrikethroughEffectModeMask' value='512'/>
  <enum name='NSFontPanelTextColorEffectModeMask' value='1024'/>
  <enum name='NSFontPanelUnderlineEffectModeMask' value='256'/>
  <enum name='NSFontSansSerifClass' value='-2147483648'/>
  <enum name='NSFontScriptsClass' value='-1610612736'/>
  <enum name='NSFontSlabSerifsClass' value='1342177280'/>
  <enum name='NSFontSymbolicClass' value='-1073741824'/>
  <enum name='NSFontTransitionalSerifsClass' value='536870912'/>
  <enum name='NSFontUIOptimizedTrait' value='4096'/>
  <enum name='NSFontUnknownClass' value='0'/>
  <enum name='NSFontVerticalTrait' value='2048'/>
  <enum name='NSFormFeedCharacter' value='12'/>
  <enum name='NSFunctionKeyMask' value='8388608'/>
  <enum name='NSGIFFileType' value='2'/>
  <enum name='NSGlyphAttributeBidiLevel' value='2'/>
  <enum name='NSGlyphAttributeElastic' value='1'/>
  <enum name='NSGlyphAttributeInscribe' value='5'/>
  <enum name='NSGlyphAttributeSoft' value='0'/>
  <enum name='NSGlyphInscribeAbove' value='2'/>
  <enum name='NSGlyphInscribeBase' value='0'/>
  <enum name='NSGlyphInscribeBelow' value='1'/>
  <enum name='NSGlyphInscribeOverBelow' value='4'/>
  <enum name='NSGlyphInscribeOverstrike' value='3'/>
  <enum name='NSGradientConcaveStrong' value='2'/>
  <enum name='NSGradientConcaveWeak' value='1'/>
  <enum name='NSGradientConvexStrong' value='4'/>
  <enum name='NSGradientConvexWeak' value='3'/>
  <enum name='NSGradientNone' value='0'/>
  <enum name='NSGraphiteControlTint' value='6'/>
  <enum name='NSGrayColorSpaceModel' value='0'/>
  <enum name='NSGrayModeColorPanel' value='0'/>
  <enum name='NSGrooveBorder' value='3'/>
  <enum name='NSHSBModeColorPanel' value='3'/>
  <enum name='NSHeavierFontAction' value='5'/>
  <enum name='NSHelpButtonBezelStyle' value='9'/>
  <enum name='NSHelpFunctionKey' value='63302'/>
  <enum name='NSHelpKeyMask' value='4194304'/>
  <enum name='NSHighlightModeMatrix' value='1'/>
  <enum name='NSHomeFunctionKey' value='63273'/>
  <enum name='NSHorizontalRuler' value='0'/>
  <enum name='NSHourMinuteDatePickerElementFlag' value='12'/>
  <enum name='NSHourMinuteSecondDatePickerElementFlag' value='14'/>
  <enum name='NSIdentityMappingCharacterCollection' value='0'/>
  <enum name='NSIllegalTextMovement' value='0'/>
  <enum name='NSImageAbove' value='5'/>
  <enum name='NSImageAlignBottom' value='5'/>
  <enum name='NSImageAlignBottomLeft' value='6'/>
  <enum name='NSImageAlignBottomRight' value='7'/>
  <enum name='NSImageAlignCenter' value='0'/>
  <enum name='NSImageAlignLeft' value='4'/>
  <enum name='NSImageAlignRight' value='8'/>
  <enum name='NSImageAlignTop' value='1'/>
  <enum name='NSImageAlignTopLeft' value='2'/>
  <enum name='NSImageAlignTopRight' value='3'/>
  <enum name='NSImageBelow' value='4'/>
  <enum name='NSImageCacheAlways' value='1'/>
  <enum name='NSImageCacheBySize' value='2'/>
  <enum name='NSImageCacheDefault' value='0'/>
  <enum name='NSImageCacheNever' value='3'/>
  <enum name='NSImageCellType' value='2'/>
  <enum name='NSImageFrameButton' value='4'/>
  <enum name='NSImageFrameGrayBezel' value='2'/>
  <enum name='NSImageFrameGroove' value='3'/>
  <enum name='NSImageFrameNone' value='0'/>
  <enum name='NSImageFramePhoto' value='1'/>
  <enum name='NSImageInterpolationDefault' value='0'/>
  <enum name='NSImageInterpolationHigh' value='3'/>
  <enum name='NSImageInterpolationLow' value='2'/>
  <enum name='NSImageInterpolationNone' value='1'/>
  <enum name='NSImageLeft' value='2'/>
  <enum name='NSImageLoadStatusCancelled' value='1'/>
  <enum name='NSImageLoadStatusCompleted' value='0'/>
  <enum name='NSImageLoadStatusInvalidData' value='2'/>
  <enum name='NSImageLoadStatusReadError' value='4'/>
  <enum name='NSImageLoadStatusUnexpectedEOF' value='3'/>
  <enum name='NSImageOnly' value='1'/>
  <enum name='NSImageOverlaps' value='6'/>
  <enum name='NSImageRepLoadStatusCompleted' value='-6'/>
  <enum name='NSImageRepLoadStatusInvalidData' value='-4'/>
  <enum name='NSImageRepLoadStatusReadingHeader' value='-2'/>
  <enum name='NSImageRepLoadStatusUnexpectedEOF' value='-5'/>
  <enum name='NSImageRepLoadStatusUnknownType' value='-1'/>
  <enum name='NSImageRepLoadStatusWillNeedAllData' value='-3'/>
  <enum name='NSImageRepMatchesDevice' value='0'/>
  <enum name='NSImageRight' value='3'/>
  <enum name='NSInformationalAlertStyle' value='1'/>
  <enum name='NSInformationalRequest' value='10'/>
  <enum name='NSInsertCharFunctionKey' value='63293'/>
  <enum name='NSInsertFunctionKey' value='63271'/>
  <enum name='NSInsertLineFunctionKey' value='63291'/>
  <enum name='NSIntType' value='1'/>
  <enum name='NSItalicFontMask' value='1'/>
  <enum name='NSJPEG2000FileType' value='5'/>
  <enum name='NSJPEGFileType' value='3'/>
  <enum name='NSJustifiedTextAlignment' value='3'/>
  <enum name='NSKeyDown' value='10'/>
  <enum name='NSKeyDownMask' value='1024'/>
  <enum name='NSKeyUp' value='11'/>
  <enum name='NSKeyUpMask' value='2048'/>
  <enum name='NSLABColorSpaceModel' value='3'/>
  <enum name='NSLandscapeOrientation' value='1'/>
  <enum name='NSLeftArrowFunctionKey' value='63234'/>
  <enum name='NSLeftMouseDown' value='1'/>
  <enum name='NSLeftMouseDownMask' value='2'/>
  <enum name='NSLeftMouseDragged' value='6'/>
  <enum name='NSLeftMouseDraggedMask' value='64'/>
  <enum name='NSLeftMouseUp' value='2'/>
  <enum name='NSLeftMouseUpMask' value='4'/>
  <enum name='NSLeftTabStopType' value='0'/>
  <enum name='NSLeftTabsBezelBorder' value='1'/>
  <enum name='NSLeftTextAlignment' value='0'/>
  <enum name='NSLeftTextMovement' value='19'/>
  <enum name='NSLighterFontAction' value='6'/>
  <enum name='NSLineBorder' value='1'/>
  <enum name='NSLineBreakByCharWrapping' value='1'/>
  <enum name='NSLineBreakByClipping' value='2'/>
  <enum name='NSLineBreakByTruncatingHead' value='3'/>
  <enum name='NSLineBreakByTruncatingMiddle' value='5'/>
  <enum name='NSLineBreakByTruncatingTail' value='4'/>
  <enum name='NSLineBreakByWordWrapping' value='0'/>
  <enum name='NSLineDoesntMove' value='0'/>
  <enum name='NSLineMovesDown' value='3'/>
  <enum name='NSLineMovesLeft' value='1'/>
  <enum name='NSLineMovesRight' value='2'/>
  <enum name='NSLineMovesUp' value='4'/>
  <enum name='NSLineSeparatorCharacter' value='8232'/>
  <enum name='NSLineSweepDown' value='2'/>
  <enum name='NSLineSweepLeft' value='0'/>
  <enum name='NSLineSweepRight' value='1'/>
  <enum name='NSLineSweepUp' value='3'/>
  <enum name='NSLineToBezierPathElement' value='1'/>
  <enum name='NSLinearSlider' value='0'/>
  <enum name='NSListModeMatrix' value='2'/>
  <enum name='NSMacintoshInterfaceStyle' value='3'/>
  <enum name='NSMainMenuWindowLevel' value='24'/>
  <enum name='NSMenuFunctionKey' value='63285'/>
  <enum name='NSMiniControlSize' value='2'/>
  <enum name='NSMiniaturizableWindowMask' value='4'/>
  <enum name='NSMiterLineJoinStyle' value='0'/>
  <enum name='NSMixedState' value='-1'/>
  <enum name='NSModalPanelWindowLevel' value='8'/>
  <enum name='NSModeSwitchFunctionKey' value='63303'/>
  <enum name='NSMomentaryChangeButton' value='5'/>
  <enum name='NSMomentaryLight' value='7'/>
  <enum name='NSMomentaryLightButton' value='0'/>
  <enum name='NSMomentaryPushButton' value='0'/>
  <enum name='NSMomentaryPushInButton' value='7'/>
  <enum name='NSMouseEntered' value='8'/>
  <enum name='NSMouseEnteredMask' value='256'/>
  <enum name='NSMouseEventSubtype' value='0'/>
  <enum name='NSMouseExited' value='9'/>
  <enum name='NSMouseExitedMask' value='512'/>
  <enum name='NSMouseMoved' value='5'/>
  <enum name='NSMouseMovedMask' value='32'/>
  <enum name='NSMoveToBezierPathElement' value='0'/>
  <enum name='NSNarrowFontMask' value='16'/>
  <enum name='NSNativeShortGlyphPacking' value='5'/>
  <enum name='NSNaturalTextAlignment' value='4'/>
  <enum name='NSNewlineCharacter' value='10'/>
  <enum name='NSNextFunctionKey' value='63296'/>
  <enum name='NSNextStepInterfaceStyle' value='1'/>
  <enum name='NSNoBorder' value='0'/>
  <enum name='NSNoCellMask' value='0'/>
  <enum name='NSNoFontChangeAction' value='0'/>
  <enum name='NSNoImage' value='0'/>
  <enum name='NSNoInterfaceStyle' value='0'/>
  <enum name='NSNoScrollerParts' value='0'/>
  <enum name='NSNoTabsBezelBorder' value='4'/>
  <enum name='NSNoTabsLineBorder' value='5'/>
  <enum name='NSNoTabsNoBorder' value='6'/>
  <enum name='NSNoTitle' value='0'/>
  <enum name='NSNoUnderlineStyle' value='0'/>
  <enum name='NSNonStandardCharacterSetFontMask' value='8'/>
  <enum name='NSNonZeroWindingRule' value='0'/>
  <enum name='NSNonactivatingPanelMask' value='128'/>
  <enum name='NSNormalWindowLevel' value='0'/>
  <enum name='NSNullCellType' value='0'/>
  <enum name='NSNullGlyph' value='0'/>
  <enum name='NSNumericPadKeyMask' value='2097152'/>
  <enum name='NSOKButton' value='1'/>
  <enum name='NSOPENGL_CURRENT_VERSION' value='1'/>
  <enum name='NSOffState' value='0'/>
  <enum name='NSOnOffButton' value='6'/>
  <enum name='NSOnState' value='1'/>
  <enum name='NSOnlyScrollerArrows' value='1'/>
  <enum name='NSOpenGLCPRasterizationEnable' value='221'/>
  <enum name='NSOpenGLCPStateValidation' value='301'/>
  <enum name='NSOpenGLCPSurfaceOpacity' value='236'/>
  <enum name='NSOpenGLCPSurfaceOrder' value='235'/>
  <enum name='NSOpenGLCPSwapInterval' value='222'/>
  <enum name='NSOpenGLCPSwapRectangle' value='200'/>
  <enum name='NSOpenGLCPSwapRectangleEnable' value='201'/>
  <enum name='NSOpenGLGOClearFormatCache' value='502'/>
  <enum name='NSOpenGLGOFormatCacheSize' value='501'/>
  <enum name='NSOpenGLGOResetLibrary' value='504'/>
  <enum name='NSOpenGLGORetainRenderers' value='503'/>
  <enum name='NSOpenGLPFAAccelerated' value='73'/>
  <enum name='NSOpenGLPFAAccumSize' value='14'/>
  <enum name='NSOpenGLPFAAllRenderers' value='1'/>
  <enum name='NSOpenGLPFAAlphaSize' value='11'/>
  <enum name='NSOpenGLPFAAuxBuffers' value='7'/>
  <enum name='NSOpenGLPFAAuxDepthStencil' value='57'/>
  <enum name='NSOpenGLPFABackingStore' value='76'/>
  <enum name='NSOpenGLPFAClosestPolicy' value='74'/>
  <enum name='NSOpenGLPFAColorFloat' value='58'/>
  <enum name='NSOpenGLPFAColorSize' value='8'/>
  <enum name='NSOpenGLPFACompliant' value='83'/>
  <enum name='NSOpenGLPFADepthSize' value='12'/>
  <enum name='NSOpenGLPFADoubleBuffer' value='5'/>
  <enum name='NSOpenGLPFAFullScreen' value='54'/>
  <enum name='NSOpenGLPFAMPSafe' value='78'/>
  <enum name='NSOpenGLPFAMaximumPolicy' value='52'/>
  <enum name='NSOpenGLPFAMinimumPolicy' value='51'/>
  <enum name='NSOpenGLPFAMultiScreen' value='81'/>
  <enum name='NSOpenGLPFAMultisample' value='59'/>
  <enum name='NSOpenGLPFANoRecovery' value='72'/>
  <enum name='NSOpenGLPFAOffScreen' value='53'/>
  <enum name='NSOpenGLPFAPixelBuffer' value='90'/>
  <enum name='NSOpenGLPFARendererID' value='70'/>
  <enum name='NSOpenGLPFARobust' value='75'/>
  <enum name='NSOpenGLPFASampleAlpha' value='61'/>
  <enum name='NSOpenGLPFASampleBuffers' value='55'/>
  <enum name='NSOpenGLPFASamples' value='56'/>
  <enum name='NSOpenGLPFAScreenMask' value='84'/>
  <enum name='NSOpenGLPFASingleRenderer' value='71'/>
  <enum name='NSOpenGLPFAStencilSize' value='13'/>
  <enum name='NSOpenGLPFAStereo' value='6'/>
  <enum name='NSOpenGLPFASupersample' value='60'/>
  <enum name='NSOpenGLPFAVirtualScreenCount' value='128'/>
  <enum name='NSOpenGLPFAWindow' value='80'/>
  <enum name='NSOtherMouseDown' value='25'/>
  <enum name='NSOtherMouseDownMask' value='33554432'/>
  <enum name='NSOtherMouseDragged' value='27'/>
  <enum name='NSOtherMouseDraggedMask' value='134217728'/>
  <enum name='NSOtherMouseUp' value='26'/>
  <enum name='NSOtherMouseUpMask' value='67108864'/>
  <enum name='NSOtherTextMovement' value='0'/>
  <enum name='NSOutlineViewDropOnItemIndex' value='-1'/>
  <enum name='NSPLCancelButton' value='0'/>
  <enum name='NSPLHeightForm' value='56'/>
  <enum name='NSPLImageButton' value='50'/>
  <enum name='NSPLOKButton' value='1'/>
  <enum name='NSPLOrientationMatrix' value='57'/>
  <enum name='NSPLPaperNameButton' value='52'/>
  <enum name='NSPLTitleField' value='51'/>
  <enum name='NSPLUnitsButton' value='54'/>
  <enum name='NSPLWidthForm' value='55'/>
  <enum name='NSPNGFileType' value='4'/>
  <enum name='NSPPCopiesField' value='49'/>
  <enum name='NSPPImageButton' value='41'/>
  <enum name='NSPPLayoutButton' value='56'/>
  <enum name='NSPPNameField' value='43'/>
  <enum name='NSPPNameTitle' value='42'/>
  <enum name='NSPPNoteField' value='45'/>
  <enum name='NSPPNoteTitle' value='44'/>
  <enum name='NSPPOptionsButton' value='54'/>
  <enum name='NSPPPageChoiceMatrix' value='50'/>
  <enum name='NSPPPageRangeFrom' value='51'/>
  <enum name='NSPPPageRangeTo' value='52'/>
  <enum name='NSPPPaperFeedButton' value='55'/>
  <enum name='NSPPPreviewButton' value='4'/>
  <enum name='NSPPSaveButton' value='3'/>
  <enum name='NSPPScaleField' value='53'/>
  <enum name='NSPPStatusField' value='47'/>
  <enum name='NSPPStatusTitle' value='46'/>
  <enum name='NSPPTitleField' value='40'/>
  <enum name='NSPageDownFunctionKey' value='63277'/>
  <enum name='NSPageUpFunctionKey' value='63276'/>
  <enum name='NSParagraphSeparatorCharacter' value='8233'/>
  <enum name='NSPauseFunctionKey' value='63280'/>
  <enum name='NSPenLowerSideMask' value='2'/>
  <enum name='NSPenPointingDevice' value='1'/>
  <enum name='NSPenTipMask' value='1'/>
  <enum name='NSPenUpperSideMask' value='4'/>
  <enum name='NSPeriodic' value='16'/>
  <enum name='NSPeriodicMask' value='65536'/>
  <enum name='NSPlainTextTokenStyle' value='1'/>
  <enum name='NSPopUpArrowAtBottom' value='2'/>
  <enum name='NSPopUpArrowAtCenter' value='1'/>
  <enum name='NSPopUpMenuWindowLevel' value='101'/>
  <enum name='NSPopUpNoArrow' value='0'/>
  <enum name='NSPortraitOrientation' value='0'/>
  <enum name='NSPositiveDoubleType' value='7'/>
  <enum name='NSPositiveFloatType' value='4'/>
  <enum name='NSPositiveIntType' value='2'/>
  <enum name='NSPosterFontMask' value='256'/>
  <enum name='NSPowerOffEventType' value='1'/>
  <enum name='NSPressedTab' value='2'/>
  <enum name='NSPrevFunctionKey' value='63295'/>
  <enum name='NSPrintFunctionKey' value='63288'/>
  <enum name='NSPrintScreenFunctionKey' value='63278'/>
  <enum name='NSPrinterTableError' value='2'/>
  <enum name='NSPrinterTableNotFound' value='1'/>
  <enum name='NSPrinterTableOK' value='0'/>
  <enum name='NSPrintingCancelled' value='0'/>
  <enum name='NSPrintingFailure' value='3'/>
  <enum name='NSPrintingReplyLater' value='2'/>
  <enum name='NSPrintingSuccess' value='1'/>
  <enum name='NSProgressIndicatorBarStyle' value='0'/>
  <enum name='NSProgressIndicatorPreferredAquaThickness' value='12'/>
  <enum name='NSProgressIndicatorPreferredLargeThickness' value='18'/>
  <enum name='NSProgressIndicatorPreferredSmallThickness' value='10'/>
  <enum name='NSProgressIndicatorPreferredThickness' value='14'/>
  <enum name='NSProgressIndicatorSpinningStyle' value='1'/>
  <enum name='NSPushInCell' value='2'/>
  <enum name='NSPushInCellMask' value='2'/>
  <enum name='NSPushOnPushOffButton' value='1'/>
  <enum name='NSQTMovieLoopingBackAndForthPlayback' value='2'/>
  <enum name='NSQTMovieLoopingPlayback' value='1'/>
  <enum name='NSQTMovieNormalPlayback' value='0'/>
  <enum name='NSRGBColorSpaceModel' value='1'/>
  <enum name='NSRGBModeColorPanel' value='1'/>
  <enum name='NSRadioButton' value='4'/>
  <enum name='NSRadioModeMatrix' value='0'/>
  <enum name='NSRangeDateMode' value='1'/>
  <enum name='NSRatingLevelIndicatorStyle' value='3'/>
  <enum name='NSRecessedBezelStyle' value='13'/>
  <enum name='NSRedoFunctionKey' value='63300'/>
  <enum name='NSRegularControlSize' value='0'/>
  <enum name='NSRegularSquareBezelStyle' value='2'/>
  <enum name='NSRelevancyLevelIndicatorStyle' value='0'/>
  <enum name='NSRemoveTraitFontAction' value='7'/>
  <enum name='NSResetCursorRectsRunLoopOrdering' value='700000'/>
  <enum name='NSResetFunctionKey' value='63283'/>
  <enum name='NSResizableWindowMask' value='8'/>
  <enum name='NSReturnTextMovement' value='16'/>
  <enum name='NSRightArrowFunctionKey' value='63235'/>
  <enum name='NSRightMouseDown' value='3'/>
  <enum name='NSRightMouseDownMask' value='8'/>
  <enum name='NSRightMouseDragged' value='7'/>
  <enum name='NSRightMouseDraggedMask' value='128'/>
  <enum name='NSRightMouseUp' value='4'/>
  <enum name='NSRightMouseUpMask' value='16'/>
  <enum name='NSRightTabStopType' value='1'/>
  <enum name='NSRightTabsBezelBorder' value='3'/>
  <enum name='NSRightTextAlignment' value='1'/>
  <enum name='NSRightTextMovement' value='20'/>
  <enum name='NSRoundLineCapStyle' value='1'/>
  <enum name='NSRoundLineJoinStyle' value='1'/>
  <enum name='NSRoundRectBezelStyle' value='12'/>
  <enum name='NSRoundedBezelStyle' value='1'/>
  <enum name='NSRoundedDisclosureBezelStyle' value='14'/>
  <enum name='NSRoundedTokenStyle' value='2'/>
  <enum name='NSRunAbortedResponse' value='-1001'/>
  <enum name='NSRunContinuesResponse' value='-1002'/>
  <enum name='NSRunStoppedResponse' value='-1000'/>
  <enum name='NSSaveAsOperation' value='1'/>
  <enum name='NSSaveOperation' value='0'/>
  <enum name='NSSaveToOperation' value='2'/>
  <enum name='NSScaleNone' value='2'/>
  <enum name='NSScaleProportionally' value='0'/>
  <enum name='NSScaleToFit' value='1'/>
  <enum name='NSScreenChangedEventType' value='8'/>
  <enum name='NSScreenSaverWindowLevel' value='1000'/>
  <enum name='NSScrollLockFunctionKey' value='63279'/>
  <enum name='NSScrollWheel' value='22'/>
  <enum name='NSScrollWheelMask' value='4194304'/>
  <enum name='NSScrollerArrowsDefaultSetting' value='0'/>
  <enum name='NSScrollerArrowsMaxEnd' value='0'/>
  <enum name='NSScrollerArrowsMinEnd' value='1'/>
  <enum name='NSScrollerArrowsNone' value='2'/>
  <enum name='NSScrollerDecrementArrow' value='1'/>
  <enum name='NSScrollerDecrementLine' value='4'/>
  <enum name='NSScrollerDecrementPage' value='1'/>
  <enum name='NSScrollerIncrementArrow' value='0'/>
  <enum name='NSScrollerIncrementLine' value='5'/>
  <enum name='NSScrollerIncrementPage' value='3'/>
  <enum name='NSScrollerKnob' value='2'/>
  <enum name='NSScrollerKnobSlot' value='6'/>
  <enum name='NSScrollerNoPart' value='0'/>
  <enum name='NSSearchFieldClearRecentsMenuItemTag' value='1002'/>
  <enum name='NSSearchFieldNoRecentsMenuItemTag' value='1003'/>
  <enum name='NSSearchFieldRecentsMenuItemTag' value='1001'/>
  <enum name='NSSearchFieldRecentsTitleMenuItemTag' value='1000'/>
  <enum name='NSSegmentSwitchTrackingMomentary' value='2'/>
  <enum name='NSSegmentSwitchTrackingSelectAny' value='1'/>
  <enum name='NSSegmentSwitchTrackingSelectOne' value='0'/>
  <enum name='NSSelectByCharacter' value='0'/>
  <enum name='NSSelectByParagraph' value='2'/>
  <enum name='NSSelectByWord' value='1'/>
  <enum name='NSSelectFunctionKey' value='63297'/>
  <enum name='NSSelectedTab' value='0'/>
  <enum name='NSSelectingNext' value='1'/>
  <enum name='NSSelectingPrevious' value='2'/>
  <enum name='NSSelectionAffinityDownstream' value='1'/>
  <enum name='NSSelectionAffinityUpstream' value='0'/>
  <enum name='NSShadowlessSquareBezelStyle' value='6'/>
  <enum name='NSShiftKeyMask' value='131072'/>
  <enum name='NSShowControlGlyphs' value='1'/>
  <enum name='NSShowInvisibleGlyphs' value='2'/>
  <enum name='NSSingleDateMode' value='0'/>
  <enum name='NSSingleUnderlineStyle' value='1'/>
  <enum name='NSSizeDownFontAction' value='4'/>
  <enum name='NSSizeUpFontAction' value='3'/>
  <enum name='NSSmallCapsFontMask' value='128'/>
  <enum name='NSSmallControlSize' value='1'/>
  <enum name='NSSmallIconButtonBezelStyle' value='2'/>
  <enum name='NSSmallSquareBezelStyle' value='10'/>
  <enum name='NSSpecialPageOrder' value='0'/>
  <enum name='NSSquareLineCapStyle' value='2'/>
  <enum name='NSSquareStatusItemLength' value='-2'/>
  <enum name='NSStatusWindowLevel' value='25'/>
  <enum name='NSStopFunctionKey' value='63284'/>
  <enum name='NSStringDrawingDisableScreenFontSubstitution' value='4'/>
  <enum name='NSStringDrawingOneShot' value='16'/>
  <enum name='NSStringDrawingUsesDeviceMetrics' value='8'/>
  <enum name='NSStringDrawingUsesFontLeading' value='2'/>
  <enum name='NSStringDrawingUsesLineFragmentOrigin' value='1'/>
  <enum name='NSSubmenuWindowLevel' value='3'/>
  <enum name='NSSwitchButton' value='3'/>
  <enum name='NSSysReqFunctionKey' value='63281'/>
  <enum name='NSSystemDefined' value='14'/>
  <enum name='NSSystemDefinedMask' value='16384'/>
  <enum name='NSSystemFunctionKey' value='63287'/>
  <enum name='NSTIFFCompressionCCITTFAX3' value='3'/>
  <enum name='NSTIFFCompressionCCITTFAX4' value='4'/>
  <enum name='NSTIFFCompressionJPEG' value='6'/>
  <enum name='NSTIFFCompressionLZW' value='5'/>
  <enum name='NSTIFFCompressionNEXT' value='32766'/>
  <enum name='NSTIFFCompressionNone' value='1'/>
  <enum name='NSTIFFCompressionOldJPEG' value='32865'/>
  <enum name='NSTIFFCompressionPackBits' value='32773'/>
  <enum name='NSTIFFFileType' value='0'/>
  <enum name='NSTabCharacter' value='9'/>
  <enum name='NSTabTextMovement' value='17'/>
  <enum name='NSTableColumnAutoresizingMask' value='1'/>
  <enum name='NSTableColumnNoResizing' value='0'/>
  <enum name='NSTableColumnUserResizingMask' value='2'/>
  <enum name='NSTableViewDropAbove' value='1'/>
  <enum name='NSTableViewDropOn' value='0'/>
  <enum name='NSTableViewFirstColumnOnlyAutoresizingStyle' value='5'/>
  <enum name='NSTableViewGridNone' value='0'/>
  <enum name='NSTableViewLastColumnOnlyAutoresizingStyle' value='4'/>
  <enum name='NSTableViewNoColumnAutoresizing' value='0'/>
  <enum name='NSTableViewReverseSequentialColumnAutoresizingStyle' value='3'/>
  <enum name='NSTableViewSequentialColumnAutoresizingStyle' value='2'/>
  <enum name='NSTableViewSolidHorizontalGridLineMask' value='2'/>
  <enum name='NSTableViewSolidVerticalGridLineMask' value='1'/>
  <enum name='NSTableViewUniformColumnAutoresizingStyle' value='1'/>
  <enum name='NSTabletPoint' value='23'/>
  <enum name='NSTabletPointEventSubtype' value='1'/>
  <enum name='NSTabletPointMask' value='8388608'/>
  <enum name='NSTabletProximity' value='24'/>
  <enum name='NSTabletProximityEventSubtype' value='2'/>
  <enum name='NSTabletProximityMask' value='16777216'/>
  <enum name='NSTerminateCancel' value='0'/>
  <enum name='NSTerminateLater' value='2'/>
  <enum name='NSTerminateNow' value='1'/>
  <enum name='NSTextBlockAbsoluteValueType' value='0'/>
  <enum name='NSTextBlockBaselineAlignment' value='3'/>
  <enum name='NSTextBlockBorder' value='0'/>
  <enum name='NSTextBlockBottomAlignment' value='2'/>
  <enum name='NSTextBlockHeight' value='4'/>
  <enum name='NSTextBlockMargin' value='1'/>
  <enum name='NSTextBlockMaximumHeight' value='6'/>
  <enum name='NSTextBlockMaximumWidth' value='2'/>
  <enum name='NSTextBlockMiddleAlignment' value='1'/>
  <enum name='NSTextBlockMinimumHeight' value='5'/>
  <enum name='NSTextBlockMinimumWidth' value='1'/>
  <enum name='NSTextBlockPadding' value='-1'/>
  <enum name='NSTextBlockPercentageValueType' value='1'/>
  <enum name='NSTextBlockTopAlignment' value='0'/>
  <enum name='NSTextBlockWidth' value='0'/>
  <enum name='NSTextCellType' value='1'/>
  <enum name='NSTextFieldAndStepperDatePickerStyle' value='0'/>
  <enum name='NSTextFieldRoundedBezel' value='1'/>
  <enum name='NSTextFieldSquareBezel' value='0'/>
  <enum name='NSTextListPrependEnclosingMarker' value='1'/>
  <enum name='NSTextReadInapplicableDocumentTypeError' value='65806'/>
  <enum name='NSTextReadWriteErrorMaximum' value='66303'/>
  <enum name='NSTextReadWriteErrorMinimum' value='65792'/>
  <enum name='NSTextStorageEditedAttributes' value='1'/>
  <enum name='NSTextStorageEditedCharacters' value='2'/>
  <enum name='NSTextTableAutomaticLayoutAlgorithm' value='0'/>
  <enum name='NSTextTableFixedLayoutAlgorithm' value='1'/>
  <enum name='NSTextWriteInapplicableDocumentTypeError' value='66062'/>
  <enum name='NSTexturedBackgroundWindowMask' value='256'/>
  <enum name='NSTexturedRoundedBezelStyle' value='11'/>
  <enum name='NSTexturedSquareBezelStyle' value='8'/>
  <enum name='NSThickSquareBezelStyle' value='3'/>
  <enum name='NSThickerSquareBezelStyle' value='4'/>
  <enum name='NSTickMarkAbove' value='1'/>
  <enum name='NSTickMarkBelow' value='0'/>
  <enum name='NSTickMarkLeft' value='1'/>
  <enum name='NSTickMarkRight' value='0'/>
  <enum name='NSTimeZoneDatePickerElementFlag' value='16'/>
  <enum name='NSTitledWindowMask' value='1'/>
  <enum name='NSToggleButton' value='2'/>
  <enum name='NSToolbarDisplayModeDefault' value='0'/>
  <enum name='NSToolbarDisplayModeIconAndLabel' value='1'/>
  <enum name='NSToolbarDisplayModeIconOnly' value='2'/>
  <enum name='NSToolbarDisplayModeLabelOnly' value='3'/>
  <enum name='NSToolbarItemVisibilityPriorityHigh' value='1000'/>
  <enum name='NSToolbarItemVisibilityPriorityLow' value='-1000'/>
  <enum name='NSToolbarItemVisibilityPriorityStandard' value='0'/>
  <enum name='NSToolbarItemVisibilityPriorityUser' value='2000'/>
  <enum name='NSToolbarSizeModeDefault' value='0'/>
  <enum name='NSToolbarSizeModeRegular' value='1'/>
  <enum name='NSToolbarSizeModeSmall' value='2'/>
  <enum name='NSTopTabsBezelBorder' value='0'/>
  <enum name='NSTornOffMenuWindowLevel' value='3'/>
  <enum name='NSTrackModeMatrix' value='3'/>
  <enum name='NSTypesetterBehavior_10_2' value='2'/>
  <enum name='NSTypesetterBehavior_10_2_WithCompatibility' value='1'/>
  <enum name='NSTypesetterBehavior_10_3' value='3'/>
  <enum name='NSTypesetterBehavior_10_4' value='4'/>
  <enum name='NSTypesetterContainerBreakAction' value='32'/>
  <enum name='NSTypesetterHorizontalTabAction' value='4'/>
  <enum name='NSTypesetterLatestBehavior' value='-1'/>
  <enum name='NSTypesetterLineBreakAction' value='8'/>
  <enum name='NSTypesetterOriginalBehavior' value='0'/>
  <enum name='NSTypesetterParagraphBreakAction' value='16'/>
  <enum name='NSTypesetterWhitespaceAction' value='2'/>
  <enum name='NSTypesetterZeroAdvancementAction' value='1'/>
  <enum name='NSUnboldFontMask' value='4'/>
  <enum name='NSUnderlinePatternDash' value='512'/>
  <enum name='NSUnderlinePatternDashDot' value='768'/>
  <enum name='NSUnderlinePatternDashDotDot' value='1024'/>
  <enum name='NSUnderlinePatternDot' value='256'/>
  <enum name='NSUnderlinePatternSolid' value='0'/>
  <enum name='NSUnderlineStyleDouble' value='9'/>
  <enum name='NSUnderlineStyleNone' value='0'/>
  <enum name='NSUnderlineStyleSingle' value='1'/>
  <enum name='NSUnderlineStyleThick' value='2'/>
  <enum name='NSUndoFunctionKey' value='63299'/>
  <enum name='NSUnifiedTitleAndToolbarWindowMask' value='4096'/>
  <enum name='NSUnitalicFontMask' value='16777216'/>
  <enum name='NSUnknownColorSpaceModel' value='-1'/>
  <enum name='NSUnknownPageOrder' value='2'/>
  <enum name='NSUnknownPointingDevice' value='0'/>
  <enum name='NSUnscaledWindowMask' value='2048'/>
  <enum name='NSUpArrowFunctionKey' value='63232'/>
  <enum name='NSUpTextMovement' value='21'/>
  <enum name='NSUpdateWindowsRunLoopOrdering' value='500000'/>
  <enum name='NSUserFunctionKey' value='63286'/>
  <enum name='NSUtilityWindowMask' value='16'/>
  <enum name='NSVariableStatusItemLength' value='-1'/>
  <enum name='NSVerticalRuler' value='1'/>
  <enum name='NSViaPanelFontAction' value='1'/>
  <enum name='NSViewHeightSizable' value='16'/>
  <enum name='NSViewMaxXMargin' value='4'/>
  <enum name='NSViewMaxYMargin' value='32'/>
  <enum name='NSViewMinXMargin' value='1'/>
  <enum name='NSViewMinYMargin' value='8'/>
  <enum name='NSViewNotSizable' value='0'/>
  <enum name='NSViewWidthSizable' value='2'/>
  <enum name='NSWantsBidiLevels' value='4'/>
  <enum name='NSWarningAlertStyle' value='0'/>
  <enum name='NSWheelModeColorPanel' value='6'/>
  <enum name='NSWindowAbove' value='1'/>
  <enum name='NSWindowBelow' value='-1'/>
  <enum name='NSWindowCloseButton' value='0'/>
  <enum name='NSWindowDocumentIconButton' value='4'/>
  <enum name='NSWindowExposedEventType' value='0'/>
  <enum name='NSWindowMiniaturizeButton' value='1'/>
  <enum name='NSWindowMovedEventType' value='4'/>
  <enum name='NSWindowOut' value='0'/>
  <enum name='NSWindowToolbarButton' value='3'/>
  <enum name='NSWindowZoomButton' value='2'/>
  <enum name='NSWindows95InterfaceStyle' value='2'/>
  <enum name='NSWorkspaceLaunchAllowingClassicStartup' value='131072'/>
  <enum name='NSWorkspaceLaunchAndHide' value='1048576'/>
  <enum name='NSWorkspaceLaunchAndHideOthers' value='2097152'/>
  <enum name='NSWorkspaceLaunchAndPrint' value='2'/>
  <enum name='NSWorkspaceLaunchAsync' value='65536'/>
  <enum name='NSWorkspaceLaunchDefault' value='196608'/>
  <enum name='NSWorkspaceLaunchInhibitingBackgroundOnly' value='128'/>
  <enum name='NSWorkspaceLaunchNewInstance' value='524288'/>
  <enum name='NSWorkspaceLaunchPreferringClassic' value='262144'/>
  <enum name='NSWorkspaceLaunchWithoutActivation' value='512'/>
  <enum name='NSWorkspaceLaunchWithoutAddingToRecents' value='256'/>
  <enum name='NSWritingDirectionLeftToRight' value='0'/>
  <enum name='NSWritingDirectionNatural' value='-1'/>
  <enum name='NSWritingDirectionRightToLeft' value='1'/>
  <enum name='NSYearMonthDatePickerElementFlag' value='192'/>
  <enum name='NSYearMonthDayDatePickerElementFlag' value='224'/>
  <function name='NSAccessibilityActionDescription'>
    <arg name='action' declared_type='NSString*' type='@'/>
    <retval declared_type='NSString*' type='@'/>
  </function>
  <function name='NSAccessibilityPostNotification'>
    <arg name='element' declared_type='id' type='@'/>
    <arg name='notification' declared_type='NSString*' type='@'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSAccessibilityRaiseBadArgumentException'>
    <arg name='element' declared_type='id' type='@'/>
    <arg name='attribute' declared_type='NSString*' type='@'/>
    <arg name='value' declared_type='id' type='@'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSAccessibilityRoleDescription'>
    <arg name='role' declared_type='NSString*' type='@'/>
    <arg name='subrole' declared_type='NSString*' type='@'/>
    <retval declared_type='NSString*' type='@'/>
  </function>
  <function name='NSAccessibilityRoleDescriptionForUIElement'>
    <arg name='element' declared_type='id' type='@'/>
    <retval declared_type='NSString*' type='@'/>
  </function>
  <function name='NSAccessibilityUnignoredAncestor'>
    <arg name='element' declared_type='id' type='@'/>
    <retval declared_type='id' type='@'/>
  </function>
  <function name='NSAccessibilityUnignoredChildren'>
    <arg name='originalChildren' declared_type='NSArray*' type='@'/>
    <retval declared_type='NSArray*' type='@'/>
  </function>
  <function name='NSAccessibilityUnignoredChildrenForOnlyChild'>
    <arg name='originalChild' declared_type='id' type='@'/>
    <retval declared_type='NSArray*' type='@'/>
  </function>
  <function name='NSAccessibilityUnignoredDescendant'>
    <arg name='element' declared_type='id' type='@'/>
    <retval declared_type='id' type='@'/>
  </function>
  <function name='NSApplicationLoad'>
    <retval declared_type='BOOL' type='B'/>
  </function>
  <function name='NSApplicationMain'>
    <arg name='argc' declared_type='int' type='i'/>
    <arg name='argv' c_array_length_in_arg='0' declared_type='char**' type='^*' const='true' type_modifier='n'/>
    <retval declared_type='int' type='i'/>
  </function>
  <function name='NSAvailableWindowDepths'>
    <retval declared_type='NSWindowDepth*' type='^i' const='true' c_array_delimited_by_null='true'/>
  </function>
  <function name='NSBeep'>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSBeginAlertSheet' variadic='true'>
    <arg name='title' declared_type='NSString*' type='@'/>
    <arg name='defaultButton' declared_type='NSString*' type='@'/>
    <arg name='alternateButton' declared_type='NSString*' type='@'/>
    <arg name='otherButton' declared_type='NSString*' type='@'/>
    <arg name='docWindow' declared_type='NSWindow*' type='@'/>
    <arg name='modalDelegate' declared_type='id' type='@'/>
    <arg name='didEndSelector' sel_of_type='v20@0:4@8i12^v16' declared_type='SEL' type=':' sel_of_type64='v36@0:8@16i24^v28'/>
    <arg name='didDismissSelector' sel_of_type='v20@0:4@8i12^v16' declared_type='SEL' type=':' sel_of_type64='v36@0:8@16i24^v28'/>
    <arg name='contextInfo' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='msg' printf_format='true' declared_type='NSString*' type='@' type_modifier='n'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSBeginCriticalAlertSheet' variadic='true'>
    <arg name='title' declared_type='NSString*' type='@'/>
    <arg name='defaultButton' declared_type='NSString*' type='@'/>
    <arg name='alternateButton' declared_type='NSString*' type='@'/>
    <arg name='otherButton' declared_type='NSString*' type='@'/>
    <arg name='docWindow' declared_type='NSWindow*' type='@'/>
    <arg name='modalDelegate' declared_type='id' type='@'/>
    <arg name='didEndSelector' sel_of_type='v20@0:4@8i12^v16' declared_type='SEL' type=':' sel_of_type64='v36@0:8@16i24^v28'/>
    <arg name='didDismissSelector' sel_of_type='v20@0:4@8i12^v16' declared_type='SEL' type=':' sel_of_type64='v36@0:8@16i24^v28'/>
    <arg name='contextInfo' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='msg' printf_format='true' declared_type='NSString*' type='@' type_modifier='n'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSBeginInformationalAlertSheet' variadic='true'>
    <arg name='title' declared_type='NSString*' type='@'/>
    <arg name='defaultButton' declared_type='NSString*' type='@'/>
    <arg name='alternateButton' declared_type='NSString*' type='@'/>
    <arg name='otherButton' declared_type='NSString*' type='@'/>
    <arg name='docWindow' declared_type='NSWindow*' type='@'/>
    <arg name='modalDelegate' declared_type='id' type='@'/>
    <arg name='didEndSelector' sel_of_type='v20@0:4@8i12^v16' declared_type='SEL' type=':' sel_of_type64='v36@0:8@16i24^v28'/>
    <arg name='didDismissSelector' sel_of_type='v20@0:4@8i12^v16' declared_type='SEL' type=':' sel_of_type64='v36@0:8@16i24^v28'/>
    <arg name='contextInfo' declared_type='void*' type='^v' type_modifier='n'/>
    <arg name='msg' printf_format='true' declared_type='NSString*' type='@' type_modifier='n'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSBestDepth'>
    <arg name='colorSpace' declared_type='NSString*' type='@'/>
    <arg name='bps' declared_type='int' type='i'/>
    <arg name='bpp' declared_type='int' type='i'/>
    <arg name='planar' declared_type='BOOL' type='B'/>
    <arg name='exactMatch' declared_type='BOOL*' type='^B' type_modifier='o'/>
    <retval declared_type='NSWindowDepth' type='i'/>
  </function>
  <function name='NSBitsPerPixelFromDepth'>
    <arg name='depth' declared_type='NSWindowDepth' type='i'/>
    <retval declared_type='int' type='i'/>
  </function>
  <function name='NSBitsPerSampleFromDepth'>
    <arg name='depth' declared_type='NSWindowDepth' type='i'/>
    <retval declared_type='int' type='i'/>
  </function>
  <function name='NSColorSpaceFromDepth'>
    <arg name='depth' declared_type='NSWindowDepth' type='i'/>
    <retval declared_type='NSString*' type='@'/>
  </function>
  <function name='NSConvertGlyphsToPackedGlyphs'>
    <arg name='glBuf' c_array_length_in_arg='1' declared_type='NSGlyph*' type='^I' type_modifier='n'/>
    <arg name='count' declared_type='int' type='i'/>
    <arg name='packing' declared_type='NSMultibyteGlyphPacking' type='i'/>
    <arg name='packedGlyphs' c_array_length_in_arg='1' declared_type='char*' type='*' c_array_of_variable_length='true' type_modifier='o'/>
    <retval declared_type='int' type='i'/>
  </function>
  <function name='NSCopyBits'>
    <arg name='srcGState' declared_type='int' type='i'/>
    <arg name='srcRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <arg name='destPoint' declared_type='NSPoint' type='{_NSPoint=ff}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSCountWindows'>
    <arg name='count' null_accepted='false' declared_type='int*' type='^i' type_modifier='o'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSCountWindowsForContext'>
    <arg name='context' declared_type='int' type='i'/>
    <arg name='count' null_accepted='false' declared_type='int*' type='^i' type_modifier='o'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSCreateFileContentsPboardType'>
    <arg name='fileType' declared_type='NSString*' type='@'/>
    <retval declared_type='NSString*' type='@'/>
  </function>
  <function name='NSCreateFilenamePboardType'>
    <arg name='fileType' declared_type='NSString*' type='@'/>
    <retval declared_type='NSString*' type='@'/>
  </function>
  <function name='NSDisableScreenUpdates'>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSDottedFrameRect'>
    <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSDrawBitmap'>
    <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <arg name='width' declared_type='int' type='i'/>
    <arg name='height' declared_type='int' type='i'/>
    <arg name='bps' declared_type='int' type='i'/>
    <arg name='spp' declared_type='int' type='i'/>
    <arg name='bpp' declared_type='int' type='i'/>
    <arg name='bpr' declared_type='int' type='i'/>
    <arg name='isPlanar' declared_type='BOOL' type='B'/>
    <arg name='hasAlpha' declared_type='BOOL' type='B'/>
    <arg name='colorSpaceName' declared_type='NSString*' type='@'/>
    <arg name='data' declared_type='unsigned char **' type='^*' const='true'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSDrawButton'>
    <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <arg name='clipRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSDrawColorTiledRects'>
    <arg name='boundsRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <arg name='clipRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <arg name='sides' c_array_length_in_arg='4' declared_type='NSRectEdge*' type='^i' const='true' type_modifier='n'/>
    <arg name='colors' c_array_length_in_arg='4' declared_type='NSColor**' type='^@' type_modifier='n'/>
    <arg name='count' declared_type='int' type='i'/>
    <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
  </function>
  <function name='NSDrawDarkBezel'>
    <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <arg name='clipRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSDrawGrayBezel'>
    <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <arg name='clipRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSDrawGroove'>
    <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <arg name='clipRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSDrawLightBezel'>
    <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <arg name='clipRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSDrawTiledRects'>
    <arg name='boundsRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <arg name='clipRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <arg name='sides' c_array_length_in_arg='4' declared_type='NSRectEdge*' type='^i' const='true' type_modifier='n'/>
    <arg name='grays' c_array_length_in_arg='4' declared_type='float*' type='^f' const='true' type_modifier='n'/>
    <arg name='count' declared_type='int' type='i'/>
    <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
  </function>
  <function name='NSDrawWhiteBezel'>
    <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <arg name='clipRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSDrawWindowBackground'>
    <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSEnableScreenUpdates'>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSEraseRect'>
    <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSEventMaskFromType' inline='true'>
    <arg name='type' declared_type='NSEventType' type='i'/>
    <retval declared_type='unsigned int' type='I'/>
  </function>
  <function name='NSFrameRect'>
    <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSFrameRectWithWidth'>
    <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <arg name='frameWidth' declared_type='float' type='f'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSFrameRectWithWidthUsingOperation'>
    <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <arg name='frameWidth' declared_type='float' type='f'/>
    <arg name='op' declared_type='NSCompositingOperation' type='i'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSGetAlertPanel' variadic='true'>
    <arg name='title' declared_type='NSString*' type='@'/>
    <arg name='msg' printf_format='true' declared_type='NSString*' type='@'/>
    <arg name='defaultButton' declared_type='NSString*' type='@'/>
    <arg name='alternateButton' declared_type='NSString*' type='@'/>
    <arg name='otherButton' declared_type='NSString*' type='@'/>
    <retval declared_type='id' type='@'/>
  </function>
  <function name='NSGetCriticalAlertPanel' variadic='true'>
    <arg name='title' declared_type='NSString*' type='@'/>
    <arg name='msg' printf_format='true' declared_type='NSString*' type='@'/>
    <arg name='defaultButton' declared_type='NSString*' type='@'/>
    <arg name='alternateButton' declared_type='NSString*' type='@'/>
    <arg name='otherButton' declared_type='NSString*' type='@'/>
    <retval declared_type='id' type='@'/>
  </function>
  <function name='NSGetFileType'>
    <arg name='pboardType' declared_type='NSString*' type='@'/>
    <retval declared_type='NSString*' type='@'/>
  </function>
  <function name='NSGetFileTypes'>
    <arg name='pboardTypes' declared_type='NSArray*' type='@'/>
    <retval declared_type='NSArray*' type='@'/>
  </function>
  <function name='NSGetInformationalAlertPanel' variadic='true'>
    <arg name='title' declared_type='NSString*' type='@'/>
    <arg name='msg' printf_format='true' declared_type='NSString*' type='@'/>
    <arg name='defaultButton' declared_type='NSString*' type='@'/>
    <arg name='alternateButton' declared_type='NSString*' type='@'/>
    <arg name='otherButton' declared_type='NSString*' type='@'/>
    <retval declared_type='id' type='@'/>
  </function>
  <function name='NSGetWindowServerMemory'>
    <arg name='context' declared_type='int' type='i'/>
    <arg name='virtualMemory' declared_type='int*' type='^i' type_modifier='o'/>
    <arg name='windowBackingMemory' declared_type='int*' type='^i' type_modifier='o'/>
    <arg name='windowDumpString' declared_type='NSString**' type='^@' type_modifier='o'/>
    <retval declared_type='int' type='i'/>
  </function>
  <function name='NSHighlightRect'>
    <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSInterfaceStyleForKey'>
    <arg name='key' declared_type='NSString*' type='@'/>
    <arg name='responder' declared_type='NSResponder*' type='@'/>
    <retval declared_type='NSInterfaceStyle' type='i'/>
  </function>
  <function name='NSIsControllerMarker'>
    <arg name='object' declared_type='id' type='@'/>
    <retval declared_type='BOOL' type='B'/>
  </function>
  <function name='NSNumberOfColorComponents'>
    <arg name='colorSpaceName' declared_type='NSString*' type='@'/>
    <retval declared_type='int' type='i'/>
  </function>
  <function name='NSOpenGLGetOption'>
    <arg name='pname' declared_type='NSOpenGLGlobalOption' type='i'/>
    <arg name='param' declared_type='long*' type='^l' type64='^q' type_modifier='o'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSOpenGLGetVersion'>
    <arg name='major' declared_type='long*' type='^l' type64='^q' type_modifier='o'/>
    <arg name='minor' declared_type='long*' type='^l' type64='^q' type_modifier='o'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSOpenGLSetOption'>
    <arg name='pname' declared_type='NSOpenGLGlobalOption' type='i'/>
    <arg name='param' declared_type='long' type='l' type64='q'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSPerformService'>
    <arg name='itemName' declared_type='NSString*' type='@'/>
    <arg name='pboard' declared_type='NSPasteboard*' type='@'/>
    <retval declared_type='BOOL' type='B'/>
  </function>
  <function name='NSPlanarFromDepth'>
    <arg name='depth' declared_type='NSWindowDepth' type='i'/>
    <retval declared_type='BOOL' type='B'/>
  </function>
  <function name='NSReadPixel'>
    <arg name='passedPoint' declared_type='NSPoint' type='{_NSPoint=ff}'/>
    <retval declared_type='NSColor*' type='@'/>
  </function>
  <function name='NSRectClip'>
    <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSRectClipList'>
    <arg name='rects' c_array_length_in_arg='1' declared_type='NSRect*' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' const='true' type_modifier='n'/>
    <arg name='count' declared_type='int' type='i'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSRectFill'>
    <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSRectFillList'>
    <arg name='rects' c_array_length_in_arg='1' declared_type='NSRect*' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' const='true' type_modifier='n'/>
    <arg name='count' declared_type='int' type='i'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSRectFillListUsingOperation'>
    <arg name='rects' c_array_length_in_arg='1' declared_type='NSRect*' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' const='true' type_modifier='n'/>
    <arg name='count' declared_type='int' type='i'/>
    <arg name='op' declared_type='NSCompositingOperation' type='i'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSRectFillListWithColors'>
    <arg name='rects' c_array_length_in_arg='2' declared_type='NSRect*' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' const='true' type_modifier='n'/>
    <arg name='colors' c_array_length_in_arg='2' declared_type='NSColor**' type='^@' type_modifier='n'/>
    <arg name='num' declared_type='int' type='i'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSRectFillListWithColorsUsingOperation'>
    <arg name='rects' c_array_length_in_arg='2' declared_type='NSRect*' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' const='true' type_modifier='n'/>
    <arg name='colors' c_array_length_in_arg='2' declared_type='NSColor**' type='^@' type_modifier='n'/>
    <arg name='num' declared_type='int' type='i'/>
    <arg name='op' declared_type='NSCompositingOperation' type='i'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSRectFillListWithGrays'>
    <arg name='rects' c_array_length_in_arg='2' declared_type='NSRect*' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' const='true' type_modifier='n'/>
    <arg name='grays' c_array_length_in_arg='2' declared_type='float*' type='^f' const='true' type_modifier='n'/>
    <arg name='num' declared_type='int' type='i'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSRectFillUsingOperation'>
    <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    <arg name='op' declared_type='NSCompositingOperation' type='i'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSRegisterServicesProvider'>
    <arg name='provider' declared_type='id' type='@'/>
    <arg name='name' declared_type='NSString*' type='@'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSReleaseAlertPanel'>
    <arg name='panel' declared_type='id' type='@'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSRunAlertPanel' variadic='true'>
    <arg name='title' declared_type='NSString*' type='@'/>
    <arg name='msg' printf_format='true' declared_type='NSString*' type='@'/>
    <arg name='defaultButton' declared_type='NSString*' type='@'/>
    <arg name='alternateButton' declared_type='NSString*' type='@'/>
    <arg name='otherButton' declared_type='NSString*' type='@'/>
    <retval declared_type='int' type='i'/>
  </function>
  <function name='NSRunAlertPanelRelativeToWindow' variadic='true'>
    <arg name='title' declared_type='NSString*' type='@'/>
    <arg name='msg' printf_format='true' declared_type='NSString*' type='@'/>
    <arg name='defaultButton' declared_type='NSString*' type='@'/>
    <arg name='alternateButton' declared_type='NSString*' type='@'/>
    <arg name='otherButton' declared_type='NSString*' type='@'/>
    <arg name='docWindow' declared_type='NSWindow*' type='@'/>
    <retval declared_type='int' type='i'/>
  </function>
  <function name='NSRunCriticalAlertPanel' variadic='true'>
    <arg name='title' declared_type='NSString*' type='@'/>
    <arg name='msg' printf_format='true' declared_type='NSString*' type='@'/>
    <arg name='defaultButton' declared_type='NSString*' type='@'/>
    <arg name='alternateButton' declared_type='NSString*' type='@'/>
    <arg name='otherButton' declared_type='NSString*' type='@'/>
    <retval declared_type='int' type='i'/>
  </function>
  <function name='NSRunCriticalAlertPanelRelativeToWindow' variadic='true'>
    <arg name='title' declared_type='NSString*' type='@'/>
    <arg name='msg' printf_format='true' declared_type='NSString*' type='@'/>
    <arg name='defaultButton' declared_type='NSString*' type='@'/>
    <arg name='alternateButton' declared_type='NSString*' type='@'/>
    <arg name='otherButton' declared_type='NSString*' type='@'/>
    <arg name='docWindow' declared_type='NSWindow*' type='@'/>
    <retval declared_type='int' type='i'/>
  </function>
  <function name='NSRunInformationalAlertPanel' variadic='true'>
    <arg name='title' declared_type='NSString*' type='@'/>
    <arg name='msg' printf_format='true' declared_type='NSString*' type='@'/>
    <arg name='defaultButton' declared_type='NSString*' type='@'/>
    <arg name='alternateButton' declared_type='NSString*' type='@'/>
    <arg name='otherButton' declared_type='NSString*' type='@'/>
    <retval declared_type='int' type='i'/>
  </function>
  <function name='NSRunInformationalAlertPanelRelativeToWindow' variadic='true'>
    <arg name='title' declared_type='NSString*' type='@'/>
    <arg name='msg' printf_format='true' declared_type='NSString*' type='@'/>
    <arg name='defaultButton' declared_type='NSString*' type='@'/>
    <arg name='alternateButton' declared_type='NSString*' type='@'/>
    <arg name='otherButton' declared_type='NSString*' type='@'/>
    <arg name='docWindow' declared_type='NSWindow*' type='@'/>
    <retval declared_type='int' type='i'/>
  </function>
  <function name='NSSetFocusRingStyle'>
    <arg name='placement' declared_type='NSFocusRingPlacement' type='i'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSSetShowsServicesMenuItem'>
    <arg name='itemName' declared_type='NSString*' type='@'/>
    <arg name='enabled' declared_type='BOOL' type='B'/>
    <retval declared_type='int' type='i'/>
  </function>
  <function name='NSShowAnimationEffect'>
    <arg name='animationEffect' declared_type='NSAnimationEffect' type='i'/>
    <arg name='centerLocation' declared_type='NSPoint' type='{_NSPoint=ff}'/>
    <arg name='size' declared_type='NSSize' type='{_NSSize=ff}'/>
    <arg name='animationDelegate' declared_type='id' type='@'/>
    <arg name='didEndSelector' sel_of_type='v12@0:4^v8' declared_type='SEL' type=':' sel_of_type64='v24@0:8^v16'/>
    <arg name='contextInfo' declared_type='void*' type='^v' type_modifier='n'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSShowsServicesMenuItem'>
    <arg name='itemName' declared_type='NSString*' type='@'/>
    <retval declared_type='BOOL' type='B'/>
  </function>
  <function name='NSUnregisterServicesProvider'>
    <arg name='name' declared_type='NSString*' type='@'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSUpdateDynamicServices'>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSWindowList'>
    <arg name='size' declared_type='int' type='i'/>
    <arg name='list' c_array_length_in_arg='0' declared_type='int*' type='^i' type_modifier='o'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NSWindowListForContext'>
    <arg name='context' declared_type='int' type='i'/>
    <arg name='size' declared_type='int' type='i'/>
    <arg name='list' c_array_length_in_arg='1' declared_type='int*' type='^i' type_modifier='o'/>
    <retval declared_type='void' type='v'/>
  </function>
  <class name='CIColor'>
    <method selector='initWithColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
  </class>
  <class name='CIImage'>
    <method selector='drawAtPoint:fromRect:operation:fraction:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='fromRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='op' declared_type='NSCompositingOperation' type='i' index='2'/>
      <arg name='delta' declared_type='float' type='f' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawInRect:fromRect:operation:fraction:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='fromRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='op' declared_type='NSCompositingOperation' type='i' index='2'/>
      <arg name='delta' declared_type='float' type='f' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='initWithBitmapImageRep:'>
      <arg name='bitmapImageRep' declared_type='NSBitmapImageRep*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
  </class>
  <class name='NSATSTypesetter'>
    <method class_method='true' selector='sharedTypesetter'>
      <retval declared_type='id' type='@'/>
    </method>
  </class>
  <class name='NSActionCell'>
    <method selector='action'>
      <retval declared_type='SEL' type=':'/>
    </method>
    <method selector='controlView'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='doubleValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='floatValue'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='intValue'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='setAction:'>
      <arg name='aSelector' sel_of_type='v12@0:4@8' declared_type='SEL' type=':' index='0' sel_of_type64='v24@0:8@16'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAlignment:'>
      <arg name='mode' declared_type='NSTextAlignment' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBezeled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBordered:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setControlView:'>
      <arg name='view' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEnabled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFloatingPointFormat:left:right:'>
      <arg name='autoRange' declared_type='BOOL' type='B' index='0'/>
      <arg name='leftDigits' declared_type='unsigned int' type='I' index='1'/>
      <arg name='rightDigits' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFont:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setObjectValue:'>
      <arg name='obj' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTag:'>
      <arg name='anInt' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTarget:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='stringValue'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='tag'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='target'>
      <retval declared_type='id' type='@'/>
    </method>
  </class>
  <class name='NSAffineTransform'>
    <method selector='concat'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='set'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='transformBezierPath:'>
      <arg name='aPath' declared_type='NSBezierPath*' type='@' index='0'/>
      <retval declared_type='NSBezierPath*' type='@'/>
    </method>
  </class>
  <class name='NSAlert'>
    <method selector='addButtonWithTitle:'>
      <arg name='title' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSButton*' type='@'/>
    </method>
    <method selector='alertStyle'>
      <retval declared_type='NSAlertStyle' type='i'/>
    </method>
    <method class_method='true' selector='alertWithError:'>
      <arg name='error' declared_type='NSError*' type='@' index='0'/>
      <retval declared_type='NSAlert*' type='@'/>
    </method>
    <method class_method='true' variadic='true' selector='alertWithMessageText:defaultButton:alternateButton:otherButton:informativeTextWithFormat:'>
      <arg name='message' declared_type='NSString*' type='@' index='0'/>
      <arg name='defaultButton' declared_type='NSString*' type='@' index='1'/>
      <arg name='alternateButton' declared_type='NSString*' type='@' index='2'/>
      <arg name='otherButton' declared_type='NSString*' type='@' index='3'/>
      <arg name='format' printf_format='true' declared_type='NSString*' type='@' index='4'/>
      <retval declared_type='NSAlert*' type='@'/>
    </method>
    <method selector='beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:'>
      <arg name='window' declared_type='NSWindow*' type='@' index='0'/>
      <arg name='delegate' declared_type='id' type='@' index='1'/>
      <arg name='didEndSelector' sel_of_type='v20@0:4@8@12^v16' declared_type='SEL' type=':' index='2' sel_of_type64='v40@0:8@16@24^v32'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='3' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='buttons'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='helpAnchor'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='icon'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='informativeText'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='messageText'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='runModal'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='setAlertStyle:'>
      <arg name='style' declared_type='NSAlertStyle' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='delegate' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHelpAnchor:'>
      <arg name='anchor' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIcon:'>
      <arg name='icon' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setInformativeText:'>
      <arg name='informativeText' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMessageText:'>
      <arg name='messageText' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShowsHelp:'>
      <arg name='showsHelp' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='showsHelp'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='window'>
      <retval declared_type='id' type='@'/>
    </method>
  </class>
  <class name='NSAnimation'>
    <method selector='addProgressMark:'>
      <arg name='progressMark' declared_type='NSAnimationProgress' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='animationBlockingMode'>
      <retval declared_type='NSAnimationBlockingMode' type='i'/>
    </method>
    <method selector='animationCurve'>
      <retval declared_type='NSAnimationCurve' type='i'/>
    </method>
    <method selector='clearStartAnimation'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='clearStopAnimation'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='currentProgress'>
      <retval declared_type='NSAnimationProgress' type='f'/>
    </method>
    <method selector='currentValue'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='duration'>
      <retval declared_type='NSTimeInterval' type='d'/>
    </method>
    <method selector='frameRate'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='initWithDuration:animationCurve:'>
      <arg name='duration' declared_type='NSTimeInterval' type='d' index='0'/>
      <arg name='animationCurve' declared_type='NSAnimationCurve' type='i' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isAnimating'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='progressMarks'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='removeProgressMark:'>
      <arg name='progressMark' declared_type='NSAnimationProgress' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='runLoopModesForAnimating'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='setAnimationBlockingMode:'>
      <arg name='animationBlockingMode' declared_type='NSAnimationBlockingMode' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAnimationCurve:'>
      <arg name='curve' declared_type='NSAnimationCurve' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCurrentProgress:'>
      <arg name='progress' declared_type='NSAnimationProgress' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='delegate' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDuration:'>
      <arg name='duration' declared_type='NSTimeInterval' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFrameRate:'>
      <arg name='framesPerSecond' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setProgressMarks:'>
      <arg name='progressMarks' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='startAnimation'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='startWhenAnimation:reachesProgress:'>
      <arg name='animation' declared_type='NSAnimation*' type='@' index='0'/>
      <arg name='startProgress' declared_type='NSAnimationProgress' type='f' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='stopAnimation'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='stopWhenAnimation:reachesProgress:'>
      <arg name='animation' declared_type='NSAnimation*' type='@' index='0'/>
      <arg name='stopProgress' declared_type='NSAnimationProgress' type='f' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSAppleScript'>
    <method selector='richTextSource'>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
  </class>
  <class name='NSApplication'>
    <method selector='abortModal'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='activateContextHelpMode:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='activateIgnoringOtherApps:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addWindowsItem:title:filename:'>
      <arg name='win' declared_type='NSWindow*' type='@' index='0'/>
      <arg name='aString' declared_type='NSString*' type='@' index='1'/>
      <arg name='isFilename' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='applicationIconImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='arrangeInFront:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='beginModalSessionForWindow:'>
      <arg name='theWindow' declared_type='NSWindow*' type='@' index='0'/>
      <retval declared_type='NSModalSession' type='^{_NSModalSession=}'/>
    </method>
    <method selector='beginModalSessionForWindow:relativeToWindow:'>
      <arg name='theWindow' declared_type='NSWindow*' type='@' index='0'/>
      <arg name='docWindow' declared_type='NSWindow*' type='@' index='1'/>
      <retval declared_type='NSModalSession' type='^{_NSModalSession=}'/>
    </method>
    <method selector='beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
      <arg name='sheet' declared_type='NSWindow*' type='@' index='0'/>
      <arg name='docWindow' declared_type='NSWindow*' type='@' index='1'/>
      <arg name='modalDelegate' declared_type='id' type='@' index='2'/>
      <arg name='didEndSelector' sel_of_type='v20@0:4@8@12^v16' declared_type='SEL' type=':' index='3' sel_of_type64='v40@0:8@16@24^v32'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='4' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='cancelUserAttentionRequest:'>
      <arg name='request' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='changeWindowsItem:title:filename:'>
      <arg name='win' declared_type='NSWindow*' type='@' index='0'/>
      <arg name='aString' declared_type='NSString*' type='@' index='1'/>
      <arg name='isFilename' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='context'>
      <retval declared_type='NSGraphicsContext*' type='@'/>
    </method>
    <method selector='currentEvent'>
      <retval declared_type='NSEvent*' type='@'/>
    </method>
    <method selector='deactivate'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method class_method='true' selector='detachDrawingThread:toTarget:withObject:'>
      <arg name='selector' declared_type='SEL' type=':' index='0'/>
      <arg name='target' declared_type='id' type='@' index='1'/>
      <arg name='argument' declared_type='id' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='discardEventsMatchingMask:beforeEvent:'>
      <arg name='mask' declared_type='unsigned int' type='I' index='0'/>
      <arg name='lastEvent' declared_type='NSEvent*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='endModalSession:'>
      <arg name='session' declared_type='NSModalSession' type='^{_NSModalSession=}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='endSheet:'>
      <arg name='sheet' declared_type='NSWindow*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='endSheet:returnCode:'>
      <arg name='sheet' declared_type='NSWindow*' type='@' index='0'/>
      <arg name='returnCode' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='finishLaunching'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='hide:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='hideOtherApplications:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='isActive'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isHidden'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isRunning'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='keyWindow'>
      <retval declared_type='NSWindow*' type='@'/>
    </method>
    <method selector='mainMenu'>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='mainWindow'>
      <retval declared_type='NSWindow*' type='@'/>
    </method>
    <method selector='makeWindowsPerform:inOrder:'>
      <arg name='aSelector' declared_type='SEL' type=':' index='0'/>
      <arg name='flag' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='NSWindow*' type='@'/>
    </method>
    <method selector='miniaturizeAll:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='modalWindow'>
      <retval declared_type='NSWindow*' type='@'/>
    </method>
    <method selector='nextEventMatchingMask:untilDate:inMode:dequeue:'>
      <arg name='mask' declared_type='unsigned int' type='I' index='0'/>
      <arg name='expiration' declared_type='NSDate*' type='@' index='1'/>
      <arg name='mode' declared_type='NSString*' type='@' index='2'/>
      <arg name='deqFlag' declared_type='BOOL' type='B' index='3'/>
      <retval declared_type='NSEvent*' type='@'/>
    </method>
    <method selector='orderFrontCharacterPalette:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='orderFrontColorPanel:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='orderFrontStandardAboutPanel:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='orderFrontStandardAboutPanelWithOptions:'>
      <arg name='optionsDictionary' declared_type='NSDictionary*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='orderedDocuments'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='orderedWindows'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='postEvent:atStart:'>
      <arg name='event' declared_type='NSEvent*' type='@' index='0'/>
      <arg name='flag' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='preventWindowOrdering'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='registerServicesMenuSendTypes:returnTypes:'>
      <arg name='sendTypes' declared_type='NSArray*' type='@' index='0'/>
      <arg name='returnTypes' declared_type='NSArray*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeWindowsItem:'>
      <arg name='win' declared_type='NSWindow*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='replyToApplicationShouldTerminate:'>
      <arg name='shouldTerminate' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='replyToOpenOrPrint:'>
      <arg name='reply' declared_type='NSApplicationDelegateReply' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='reportException:'>
      <arg name='theException' declared_type='NSException*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='requestUserAttention:'>
      <arg name='requestType' declared_type='NSRequestUserAttentionType' type='i' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='run'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='runModalForWindow:'>
      <arg name='theWindow' declared_type='NSWindow*' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='runModalForWindow:relativeToWindow:'>
      <arg name='theWindow' declared_type='NSWindow*' type='@' index='0'/>
      <arg name='docWindow' declared_type='NSWindow*' type='@' index='1'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='runModalSession:'>
      <arg name='session' declared_type='NSModalSession' type='^{_NSModalSession=}' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='runPageLayout:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sendAction:to:from:'>
      <arg name='theAction' declared_type='SEL' type=':' index='0'/>
      <arg name='theTarget' declared_type='id' type='@' index='1'/>
      <arg name='sender' declared_type='id' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='sendEvent:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='servicesMenu'>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='servicesProvider'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='setApplicationIconImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMainMenu:'>
      <arg name='aMenu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setServicesMenu:'>
      <arg name='aMenu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setServicesProvider:'>
      <arg name='provider' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setWindowsMenu:'>
      <arg name='aMenu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setWindowsNeedUpdate:'>
      <arg name='needUpdate' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='sharedApplication'>
      <retval declared_type='NSApplication*' type='@'/>
    </method>
    <method selector='showHelp:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='stop:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='stopModal'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='stopModalWithCode:'>
      <arg name='returnCode' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='targetForAction:'>
      <arg name='theAction' declared_type='SEL' type=':' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='targetForAction:to:from:'>
      <arg name='theAction' declared_type='SEL' type=':' index='0'/>
      <arg name='theTarget' declared_type='id' type='@' index='1'/>
      <arg name='sender' declared_type='id' type='@' index='2'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='terminate:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tryToPerform:with:'>
      <arg name='anAction' declared_type='SEL' type=':' index='0'/>
      <arg name='anObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='unhide:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='unhideAllApplications:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='unhideWithoutActivation'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='updateWindows'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='updateWindowsItem:'>
      <arg name='win' declared_type='NSWindow*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='validRequestorForSendType:returnType:'>
      <arg name='sendType' declared_type='NSString*' type='@' index='0'/>
      <arg name='returnType' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='windowWithWindowNumber:'>
      <arg name='windowNum' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSWindow*' type='@'/>
    </method>
    <method selector='windows'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='windowsMenu'>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
  </class>
  <class name='NSArrayController'>
    <method selector='add:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addObject:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addObjects:'>
      <arg name='objects' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addSelectedObjects:'>
      <arg name='objects' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='addSelectionIndexes:'>
      <arg name='indexes' declared_type='NSIndexSet*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='alwaysUsesMultipleValuesMarker'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='arrangeObjects:'>
      <arg name='objects' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='arrangedObjects'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='avoidsEmptySelection'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='canInsert'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='canSelectNext'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='canSelectPrevious'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='clearsFilterPredicateOnInsertion'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='filterPredicate'>
      <retval declared_type='NSPredicate*' type='@'/>
    </method>
    <method selector='insert:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertObject:atArrangedObjectIndex:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <arg name='index' declared_type='unsigned int' type='I' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertObjects:atArrangedObjectIndexes:'>
      <arg name='objects' declared_type='NSArray*' type='@' index='0'/>
      <arg name='indexes' declared_type='NSIndexSet*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='preservesSelection'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='rearrangeObjects'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='remove:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeObject:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeObjectAtArrangedObjectIndex:'>
      <arg name='index' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeObjects:'>
      <arg name='objects' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeObjectsAtArrangedObjectIndexes:'>
      <arg name='indexes' declared_type='NSIndexSet*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeSelectedObjects:'>
      <arg name='objects' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='removeSelectionIndexes:'>
      <arg name='indexes' declared_type='NSIndexSet*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='selectNext:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectPrevious:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectedObjects'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='selectionIndex'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='selectionIndexes'>
      <retval declared_type='NSIndexSet*' type='@'/>
    </method>
    <method selector='selectsInsertedObjects'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setAlwaysUsesMultipleValuesMarker:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAvoidsEmptySelection:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setClearsFilterPredicateOnInsertion:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFilterPredicate:'>
      <arg name='filterPredicate' declared_type='NSPredicate*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPreservesSelection:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelectedObjects:'>
      <arg name='objects' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setSelectionIndex:'>
      <arg name='index' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setSelectionIndexes:'>
      <arg name='indexes' declared_type='NSIndexSet*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setSelectsInsertedObjects:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSortDescriptors:'>
      <arg name='sortDescriptors' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sortDescriptors'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
  </class>
  <class name='NSAttributedString'>
    <method selector='RTFDFileWrapperFromRange:documentAttributes:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='dict' declared_type='NSDictionary*' type='@' index='1'/>
      <retval declared_type='NSFileWrapper*' type='@'/>
    </method>
    <method selector='RTFDFromRange:documentAttributes:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='dict' declared_type='NSDictionary*' type='@' index='1'/>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='RTFFromRange:documentAttributes:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='dict' declared_type='NSDictionary*' type='@' index='1'/>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method class_method='true' selector='attributedStringWithAttachment:'>
      <arg name='attachment' declared_type='NSTextAttachment*' type='@' index='0'/>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method selector='boundingRectWithSize:options:'>
      <arg name='size' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <arg name='options' declared_type='NSStringDrawingOptions' type='i' index='1'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='containsAttachments'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='dataFromRange:documentAttributes:error:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='dict' declared_type='NSDictionary*' type='@' index='1'/>
      <arg name='error' declared_type='NSError**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='docFormatFromRange:documentAttributes:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='dict' declared_type='NSDictionary*' type='@' index='1'/>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='doubleClickAtIndex:'>
      <arg name='location' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='drawAtPoint:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawInRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawWithRect:options:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='options' declared_type='NSStringDrawingOptions' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='fileWrapperFromRange:documentAttributes:error:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='dict' declared_type='NSDictionary*' type='@' index='1'/>
      <arg name='error' declared_type='NSError**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='NSFileWrapper*' type='@'/>
    </method>
    <method selector='fontAttributesInRange:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='initWithData:options:documentAttributes:error:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <arg name='options' declared_type='NSDictionary*' type='@' index='1'/>
      <arg name='dict' declared_type='NSDictionary**' type='^@' index='2' type_modifier='o'/>
      <arg name='error' declared_type='NSError**' type='^@' index='3' type_modifier='o'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithDocFormat:documentAttributes:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <arg name='dict' declared_type='NSDictionary**' type='^@' index='1' type_modifier='o'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithHTML:baseURL:documentAttributes:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <arg name='base' declared_type='NSURL*' type='@' index='1'/>
      <arg name='dict' declared_type='NSDictionary**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithHTML:documentAttributes:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <arg name='dict' declared_type='NSDictionary**' type='^@' index='1' type_modifier='o'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithHTML:options:documentAttributes:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <arg name='options' declared_type='NSDictionary*' type='@' index='1'/>
      <arg name='dict' declared_type='NSDictionary**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithPath:documentAttributes:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <arg name='dict' declared_type='NSDictionary**' type='^@' index='1' type_modifier='o'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithRTF:documentAttributes:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <arg name='dict' declared_type='NSDictionary**' type='^@' index='1' type_modifier='o'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithRTFD:documentAttributes:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <arg name='dict' declared_type='NSDictionary**' type='^@' index='1' type_modifier='o'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithRTFDFileWrapper:documentAttributes:'>
      <arg name='wrapper' declared_type='NSFileWrapper*' type='@' index='0'/>
      <arg name='dict' declared_type='NSDictionary**' type='^@' index='1' type_modifier='o'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithURL:documentAttributes:'>
      <arg name='url' declared_type='NSURL*' type='@' index='0'/>
      <arg name='dict' declared_type='NSDictionary**' type='^@' index='1' type_modifier='o'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithURL:options:documentAttributes:error:'>
      <arg name='url' declared_type='NSURL*' type='@' index='0'/>
      <arg name='options' declared_type='NSDictionary*' type='@' index='1'/>
      <arg name='dict' declared_type='NSDictionary**' type='^@' index='2' type_modifier='o'/>
      <arg name='error' declared_type='NSError**' type='^@' index='3' type_modifier='o'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='itemNumberInTextList:atIndex:'>
      <arg name='list' declared_type='NSTextList*' type='@' index='0'/>
      <arg name='location' declared_type='unsigned int' type='I' index='1'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='lineBreakBeforeIndex:withinRange:'>
      <arg name='location' declared_type='unsigned int' type='I' index='0'/>
      <arg name='aRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='lineBreakByHyphenatingBeforeIndex:withinRange:'>
      <arg name='location' declared_type='unsigned int' type='I' index='0'/>
      <arg name='aRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='nextWordFromIndex:forward:'>
      <arg name='location' declared_type='unsigned int' type='I' index='0'/>
      <arg name='isForward' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='rangeOfTextBlock:atIndex:'>
      <arg name='block' declared_type='NSTextBlock*' type='@' index='0'/>
      <arg name='location' declared_type='unsigned int' type='I' index='1'/>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='rangeOfTextList:atIndex:'>
      <arg name='list' declared_type='NSTextList*' type='@' index='0'/>
      <arg name='location' declared_type='unsigned int' type='I' index='1'/>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='rangeOfTextTable:atIndex:'>
      <arg name='table' declared_type='NSTextTable*' type='@' index='0'/>
      <arg name='location' declared_type='unsigned int' type='I' index='1'/>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='rulerAttributesInRange:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='size'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method class_method='true' selector='textFileTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='textPasteboardTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='textUnfilteredFileTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='textUnfilteredPasteboardTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
  </class>
  <class name='NSBezierPath'>
    <method selector='addClip'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='appendBezierPath:'>
      <arg name='path' declared_type='NSBezierPath*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='appendBezierPathWithArcFromPoint:toPoint:radius:'>
      <arg name='point1' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='point2' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='radius' declared_type='float' type='f' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:'>
      <arg name='center' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='radius' declared_type='float' type='f' index='1'/>
      <arg name='startAngle' declared_type='float' type='f' index='2'/>
      <arg name='endAngle' declared_type='float' type='f' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:'>
      <arg name='center' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='radius' declared_type='float' type='f' index='1'/>
      <arg name='startAngle' declared_type='float' type='f' index='2'/>
      <arg name='endAngle' declared_type='float' type='f' index='3'/>
      <arg name='clockwise' declared_type='BOOL' type='B' index='4'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='appendBezierPathWithGlyph:inFont:'>
      <arg name='glyph' declared_type='NSGlyph' type='I' index='0'/>
      <arg name='font' declared_type='NSFont*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='appendBezierPathWithGlyphs:count:inFont:'>
      <arg name='glyphs' c_array_length_in_arg='1' declared_type='NSGlyph*' type='^I' index='0' type_modifier='n'/>
      <arg name='count' declared_type='int' type='i' index='1'/>
      <arg name='font' declared_type='NSFont*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='appendBezierPathWithOvalInRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='appendBezierPathWithPackedGlyphs:'>
      <arg name='packedGlyphs' declared_type='char*' type='*' const='true' index='0' c_array_delimited_by_null='true' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='appendBezierPathWithPoints:count:'>
      <arg name='points' c_array_length_in_arg='1' declared_type='NSPointArray' type='^{_NSPoint=ff}' index='0' type_modifier='n'/>
      <arg name='count' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='appendBezierPathWithRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='bezierPath'>
      <retval declared_type='NSBezierPath*' type='@'/>
    </method>
    <method selector='bezierPathByFlatteningPath'>
      <retval declared_type='NSBezierPath*' type='@'/>
    </method>
    <method selector='bezierPathByReversingPath'>
      <retval declared_type='NSBezierPath*' type='@'/>
    </method>
    <method class_method='true' selector='bezierPathWithOvalInRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSBezierPath*' type='@'/>
    </method>
    <method class_method='true' selector='bezierPathWithRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSBezierPath*' type='@'/>
    </method>
    <method selector='bounds'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='cachesBezierPath'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method class_method='true' selector='clipRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='closePath'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='containsPoint:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='controlPointBounds'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='currentPoint'>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method selector='curveToPoint:controlPoint1:controlPoint2:'>
      <arg name='endPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='controlPoint1' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='controlPoint2' declared_type='NSPoint' type='{_NSPoint=ff}' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='defaultFlatness'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='defaultLineCapStyle'>
      <retval declared_type='NSLineCapStyle' type='i'/>
    </method>
    <method class_method='true' selector='defaultLineJoinStyle'>
      <retval declared_type='NSLineJoinStyle' type='i'/>
    </method>
    <method class_method='true' selector='defaultLineWidth'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='defaultMiterLimit'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='defaultWindingRule'>
      <retval declared_type='NSWindingRule' type='i'/>
    </method>
    <method class_method='true' selector='drawPackedGlyphs:atPoint:'>
      <arg name='packedGlyphs' declared_type='char*' type='*' const='true' index='0' c_array_delimited_by_null='true' type_modifier='n'/>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='elementAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSBezierPathElement' type='i'/>
    </method>
    <method selector='elementAtIndex:associatedPoints:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <arg name='points' declared_type='NSPointArray' type='^{_NSPoint=ff}' index='1' c_array_of_variable_length='true' type_modifier='o'/>
      <retval declared_type='NSBezierPathElement' type='i'/>
    </method>
    <method selector='elementCount'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='fill'>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='fillRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='flatness'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='getLineDash:count:phase:'>
      <arg name='pattern' c_array_length_in_arg='1' declared_type='float*' type='^f' index='0' type_modifier='o'/>
      <arg name='count' declared_type='int*' type='^i' index='1' type_modifier='o'/>
      <arg name='phase' declared_type='float*' type='^f' index='2' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='isEmpty'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='lineCapStyle'>
      <retval declared_type='NSLineCapStyle' type='i'/>
    </method>
    <method selector='lineJoinStyle'>
      <retval declared_type='NSLineJoinStyle' type='i'/>
    </method>
    <method selector='lineToPoint:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='lineWidth'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='miterLimit'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='moveToPoint:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='relativeCurveToPoint:controlPoint1:controlPoint2:'>
      <arg name='endPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='controlPoint1' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='controlPoint2' declared_type='NSPoint' type='{_NSPoint=ff}' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='relativeLineToPoint:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='relativeMoveToPoint:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeAllPoints'>
      <retval declared_type='void' type='v'/>
    </method>
    <method ignore='true' selector='setAssociatedPoints:atIndex:'>
      <arg name='points' declared_type='NSPointArray' type='^{_NSPoint=ff}' index='0'/>
      <arg name='index' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCachesBezierPath:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setClip'>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setDefaultFlatness:'>
      <arg name='flatness' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setDefaultLineCapStyle:'>
      <arg name='lineCapStyle' declared_type='NSLineCapStyle' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setDefaultLineJoinStyle:'>
      <arg name='lineJoinStyle' declared_type='NSLineJoinStyle' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setDefaultLineWidth:'>
      <arg name='lineWidth' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setDefaultMiterLimit:'>
      <arg name='limit' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setDefaultWindingRule:'>
      <arg name='windingRule' declared_type='NSWindingRule' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFlatness:'>
      <arg name='flatness' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLineCapStyle:'>
      <arg name='lineCapStyle' declared_type='NSLineCapStyle' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLineDash:count:phase:'>
      <arg name='pattern' c_array_length_in_arg='1' declared_type='float*' type='^f' const='true' index='0' type_modifier='n'/>
      <arg name='count' declared_type='int' type='i' index='1'/>
      <arg name='phase' declared_type='float' type='f' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLineJoinStyle:'>
      <arg name='lineJoinStyle' declared_type='NSLineJoinStyle' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLineWidth:'>
      <arg name='lineWidth' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMiterLimit:'>
      <arg name='miterLimit' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setWindingRule:'>
      <arg name='windingRule' declared_type='NSWindingRule' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='stroke'>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='strokeLineFromPoint:toPoint:'>
      <arg name='point1' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='point2' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='strokeRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='transformUsingAffineTransform:'>
      <arg name='transform' declared_type='NSAffineTransform*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windingRule'>
      <retval declared_type='NSWindingRule' type='i'/>
    </method>
  </class>
  <class name='NSBitmapImageRep'>
    <method selector='TIFFRepresentation'>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method class_method='true' selector='TIFFRepresentationOfImageRepsInArray:'>
      <arg name='array' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method class_method='true' selector='TIFFRepresentationOfImageRepsInArray:usingCompression:factor:'>
      <arg name='array' declared_type='NSArray*' type='@' index='0'/>
      <arg name='comp' declared_type='NSTIFFCompression' type='i' index='1'/>
      <arg name='factor' declared_type='float' type='f' index='2'/>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='TIFFRepresentationUsingCompression:factor:'>
      <arg name='comp' declared_type='NSTIFFCompression' type='i' index='0'/>
      <arg name='factor' declared_type='float' type='f' index='1'/>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='bitmapData'>
      <retval declared_type='unsigned char*' type='*'/>
    </method>
    <method selector='bitmapFormat'>
      <retval declared_type='NSBitmapFormat' type='i'/>
    </method>
    <method selector='bitsPerPixel'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='bytesPerPlane'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='bytesPerRow'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='canBeCompressedUsing:'>
      <arg name='compression' declared_type='NSTIFFCompression' type='i' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='colorAtX:y:'>
      <arg name='x' declared_type='int' type='i' index='0'/>
      <arg name='y' declared_type='int' type='i' index='1'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='colorizeByMappingGray:toColor:blackMapping:whiteMapping:'>
      <arg name='midPoint' declared_type='float' type='f' index='0'/>
      <arg name='midPointColor' declared_type='NSColor*' type='@' index='1'/>
      <arg name='shadowColor' declared_type='NSColor*' type='@' index='2'/>
      <arg name='lightColor' declared_type='NSColor*' type='@' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='getBitmapDataPlanes:'>
      <arg name='data' declared_type='unsigned char**' type='^*' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='getCompression:factor:'>
      <arg name='compression' declared_type='NSTIFFCompression*' type='^i' index='0' type_modifier='o'/>
      <arg name='factor' declared_type='float*' type='^f' index='1' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='getPixel:atX:y:'>
      <arg name='p' declared_type='unsigned int*' type='^I' c_array_of_fixed_length='4' index='0' type_modifier='n'/>
      <arg name='x' declared_type='int' type='i' index='1'/>
      <arg name='y' declared_type='int' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='getTIFFCompressionTypes:count:'>
      <arg name='list' c_array_length_in_arg='1' declared_type='NSTIFFCompression**' type='^^i' const='true' index='0' type_modifier='o'/>
      <arg name='numTypes' declared_type='int*' type='^i' index='1' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='imageRepWithData:'>
      <arg name='tiffData' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method class_method='true' selector='imageRepsWithData:'>
      <arg name='tiffData' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='incrementalLoadFromData:complete:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <arg name='complete' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='initForIncrementalLoad'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bitmapFormat:bytesPerRow:bitsPerPixel:'>
      <arg name='planes' declared_type='unsigned char**' type='^*' index='0'/>
      <arg name='width' declared_type='int' type='i' index='1'/>
      <arg name='height' declared_type='int' type='i' index='2'/>
      <arg name='bps' declared_type='int' type='i' index='3'/>
      <arg name='spp' declared_type='int' type='i' index='4'/>
      <arg name='alpha' declared_type='BOOL' type='B' index='5'/>
      <arg name='isPlanar' declared_type='BOOL' type='B' index='6'/>
      <arg name='colorSpaceName' declared_type='NSString*' type='@' index='7'/>
      <arg name='bitmapFormat' declared_type='NSBitmapFormat' type='i' index='8'/>
      <arg name='rBytes' declared_type='int' type='i' index='9'/>
      <arg name='pBits' declared_type='int' type='i' index='10'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:'>
      <arg name='planes' declared_type='unsigned char**' type='^*' index='0'/>
      <arg name='width' declared_type='int' type='i' index='1'/>
      <arg name='height' declared_type='int' type='i' index='2'/>
      <arg name='bps' declared_type='int' type='i' index='3'/>
      <arg name='spp' declared_type='int' type='i' index='4'/>
      <arg name='alpha' declared_type='BOOL' type='B' index='5'/>
      <arg name='isPlanar' declared_type='BOOL' type='B' index='6'/>
      <arg name='colorSpaceName' declared_type='NSString*' type='@' index='7'/>
      <arg name='rBytes' declared_type='int' type='i' index='8'/>
      <arg name='pBits' declared_type='int' type='i' index='9'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithData:'>
      <arg name='tiffData' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithFocusedViewRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isPlanar'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method class_method='true' selector='localizedNameForTIFFCompressionType:'>
      <arg name='compression' declared_type='NSTIFFCompression' type='i' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='numberOfPlanes'>
      <retval declared_type='int' type='i'/>
    </method>
    <method class_method='true' selector='representationOfImageRepsInArray:usingType:properties:'>
      <arg name='imageReps' declared_type='NSArray*' type='@' index='0'/>
      <arg name='storageType' declared_type='NSBitmapImageFileType' type='i' index='1'/>
      <arg name='properties' declared_type='NSDictionary*' type='@' index='2'/>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='representationUsingType:properties:'>
      <arg name='storageType' declared_type='NSBitmapImageFileType' type='i' index='0'/>
      <arg name='properties' declared_type='NSDictionary*' type='@' index='1'/>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='samplesPerPixel'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='setColor:atX:y:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <arg name='x' declared_type='int' type='i' index='1'/>
      <arg name='y' declared_type='int' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCompression:factor:'>
      <arg name='compression' declared_type='NSTIFFCompression' type='i' index='0'/>
      <arg name='factor' declared_type='float' type='f' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPixel:atX:y:'>
      <arg name='p' declared_type='unsigned int*' type='^I' c_array_of_fixed_length='4' index='0' type_modifier='o'/>
      <arg name='x' declared_type='int' type='i' index='1'/>
      <arg name='y' declared_type='int' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setProperty:withValue:'>
      <arg name='property' declared_type='NSString*' type='@' index='0'/>
      <arg name='value' declared_type='id' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='valueForProperty:'>
      <arg name='property' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
  </class>
  <class name='NSBox'>
    <method selector='borderRect'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='borderType'>
      <retval declared_type='NSBorderType' type='i'/>
    </method>
    <method selector='boxType'>
      <retval declared_type='NSBoxType' type='i'/>
    </method>
    <method selector='contentView'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='contentViewMargins'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='setBorderType:'>
      <arg name='aType' declared_type='NSBorderType' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBoxType:'>
      <arg name='boxType' declared_type='NSBoxType' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setContentView:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setContentViewMargins:'>
      <arg name='offsetSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFrameFromContentFrame:'>
      <arg name='contentFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitle:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleFont:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitlePosition:'>
      <arg name='aPosition' declared_type='NSTitlePosition' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleWithMnemonic:'>
      <arg name='stringWithAmpersand' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sizeToFit'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='title'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='titleCell'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='titleFont'>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='titlePosition'>
      <retval declared_type='NSTitlePosition' type='i'/>
    </method>
    <method selector='titleRect'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
  </class>
  <class name='NSBrowser'>
    <method selector='acceptsArrowKeys'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='addColumn'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='allowsBranchSelection'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='allowsEmptySelection'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='allowsMultipleSelection'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method class_method='true' selector='cellClass'>
      <retval declared_type='Class' type='#'/>
    </method>
    <method selector='cellPrototype'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='columnContentWidthForColumnWidth:'>
      <arg name='columnWidth' declared_type='float' type='f' index='0'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='columnOfMatrix:'>
      <arg name='matrix' declared_type='NSMatrix*' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='columnResizingType'>
      <retval declared_type='NSBrowserColumnResizingType' type='i'/>
    </method>
    <method selector='columnWidthForColumnContentWidth:'>
      <arg name='columnContentWidth' declared_type='float' type='f' index='0'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='columnsAutosaveName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='displayAllColumns'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='displayColumn:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='doClick:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='doDoubleClick:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='doubleAction'>
      <retval declared_type='SEL' type=':'/>
    </method>
    <method selector='drawTitleOfColumn:inRect:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='firstVisibleColumn'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='frameOfColumn:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='frameOfInsideOfColumn:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='hasHorizontalScroller'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isLoaded'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isTitled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='lastColumn'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='lastVisibleColumn'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='loadColumnZero'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='loadedCellAtRow:column:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <arg name='col' declared_type='int' type='i' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='matrixClass'>
      <retval declared_type='Class' type='#'/>
    </method>
    <method selector='matrixInColumn:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSMatrix*' type='@'/>
    </method>
    <method selector='maxVisibleColumns'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='minColumnWidth'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='numberOfVisibleColumns'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='path'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='pathSeparator'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='pathToColumn:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='prefersAllColumnUserResizing'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='reloadColumn:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='removeSavedColumnsWithAutosaveName:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='reusesColumns'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='scrollColumnToVisible:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scrollColumnsLeftBy:'>
      <arg name='shiftAmount' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scrollColumnsRightBy:'>
      <arg name='shiftAmount' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scrollViaScroller:'>
      <arg name='sender' declared_type='NSScroller*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectAll:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectRow:inColumn:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <arg name='column' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectedCell'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='selectedCellInColumn:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='selectedCells'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='selectedColumn'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='selectedRowInColumn:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='sendAction'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='sendsActionOnArrowKeys'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='separatesColumns'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setAcceptsArrowKeys:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAllowsBranchSelection:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAllowsEmptySelection:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAllowsMultipleSelection:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCellClass:'>
      <arg name='factoryId' declared_type='Class' type='#' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCellPrototype:'>
      <arg name='aCell' declared_type='NSCell*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setColumnResizingType:'>
      <arg name='columnResizingType' declared_type='NSBrowserColumnResizingType' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setColumnsAutosaveName:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDoubleAction:'>
      <arg name='aSelector' sel_of_type='v12@0:4@8' declared_type='SEL' type=':' index='0' sel_of_type64='v24@0:8@16'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHasHorizontalScroller:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLastColumn:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMatrixClass:'>
      <arg name='factoryId' declared_type='Class' type='#' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMaxVisibleColumns:'>
      <arg name='columnCount' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMinColumnWidth:'>
      <arg name='columnWidth' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPath:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setPathSeparator:'>
      <arg name='newString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPrefersAllColumnUserResizing:'>
      <arg name='prefersAllColumnResizing' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setReusesColumns:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSendsActionOnArrowKeys:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSeparatesColumns:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTakesTitleFromPreviousColumn:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitle:ofColumn:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <arg name='column' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setWidth:ofColumn:'>
      <arg name='columnWidth' declared_type='float' type='f' index='0'/>
      <arg name='columnIndex' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='takesTitleFromPreviousColumn'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='tile'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='titleFrameOfColumn:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='titleHeight'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='titleOfColumn:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='updateScroller'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='validateVisibleColumns'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='widthOfColumn:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <retval declared_type='float' type='f'/>
    </method>
  </class>
  <class name='NSBrowserCell'>
    <method selector='alternateImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method class_method='true' selector='branchImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='highlightColorInView:'>
      <arg name='controlView' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='highlightedBranchImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='image'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='isLeaf'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isLoaded'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='reset'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='set'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAlternateImage:'>
      <arg name='newAltImage' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLeaf:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLoaded:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSBundle'>
    <method selector='contextHelpForKey:'>
      <arg name='key' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method class_method='true' selector='loadNibFile:externalNameTable:withZone:'>
      <arg name='fileName' declared_type='NSString*' type='@' index='0'/>
      <arg name='context' declared_type='NSDictionary*' type='@' index='1'/>
      <arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' index='2' type_modifier='n'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method class_method='true' selector='loadNibFile:externalNameTable:withZone:'>
      <arg name='fileName' declared_type='NSString*' type='@' index='0'/>
      <arg name='context' declared_type='NSDictionary*' type='@' index='1'/>
      <arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' index='2' type_modifier='n'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method class_method='true' selector='loadNibNamed:owner:'>
      <arg name='nibName' declared_type='NSString*' type='@' index='0'/>
      <arg name='owner' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='pathForImageResource:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='pathForSoundResource:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
  </class>
  <class name='NSButton'>
    <method selector='allowsMixedState'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='alternateImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='alternateTitle'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='attributedAlternateTitle'>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method selector='attributedTitle'>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method selector='bezelStyle'>
      <retval declared_type='NSBezelStyle' type='i'/>
    </method>
    <method selector='getPeriodicDelay:interval:'>
      <arg name='delay' null_accepted='false' declared_type='float*' type='^f' index='0' type_modifier='o'/>
      <arg name='interval' null_accepted='false' declared_type='float*' type='^f' index='1' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='highlight:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='image'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='imagePosition'>
      <retval declared_type='NSCellImagePosition' type='i'/>
    </method>
    <method selector='isBordered'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isTransparent'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='keyEquivalent'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='keyEquivalentModifierMask'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='performKeyEquivalent:'>
      <arg name='key' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setAllowsMixedState:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAlternateImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAlternateTitle:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAttributedAlternateTitle:'>
      <arg name='obj' declared_type='NSAttributedString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAttributedTitle:'>
      <arg name='aString' declared_type='NSAttributedString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBezelStyle:'>
      <arg name='bezelStyle' declared_type='NSBezelStyle' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBordered:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setButtonType:'>
      <arg name='aType' declared_type='NSButtonType' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImagePosition:'>
      <arg name='aPosition' declared_type='NSCellImagePosition' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setKeyEquivalent:'>
      <arg name='charCode' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setKeyEquivalentModifierMask:'>
      <arg name='mask' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNextState'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPeriodicDelay:interval:'>
      <arg name='delay' declared_type='float' type='f' index='0'/>
      <arg name='interval' declared_type='float' type='f' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShowsBorderOnlyWhileMouseInside:'>
      <arg name='show' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSound:'>
      <arg name='aSound' declared_type='NSSound*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setState:'>
      <arg name='value' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitle:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleWithMnemonic:'>
      <arg name='stringWithAmpersand' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTransparent:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='showsBorderOnlyWhileMouseInside'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='sound'>
      <retval declared_type='NSSound*' type='@'/>
    </method>
    <method selector='state'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='title'>
      <retval declared_type='NSString*' type='@'/>
    </method>
  </class>
  <class name='NSButtonCell'>
    <method selector='alternateImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='alternateMnemonic'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='alternateMnemonicLocation'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='alternateTitle'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='attributedAlternateTitle'>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method selector='attributedTitle'>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method selector='backgroundColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='bezelStyle'>
      <retval declared_type='NSBezelStyle' type='i'/>
    </method>
    <method selector='drawBezelWithFrame:inView:'>
      <arg name='frame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawImage:withFrame:inView:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='frame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawTitle:withFrame:inView:'>
      <arg name='title' declared_type='NSAttributedString*' type='@' index='0'/>
      <arg name='frame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='2'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='getPeriodicDelay:interval:'>
      <arg name='delay' declared_type='float*' type='^f' index='0' type_modifier='o'/>
      <arg name='interval' declared_type='float*' type='^f' index='1' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='gradientType'>
      <retval declared_type='NSGradientType' type='i'/>
    </method>
    <method selector='highlightsBy'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='imageDimsWhenDisabled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='imagePosition'>
      <retval declared_type='NSCellImagePosition' type='i'/>
    </method>
    <method selector='isOpaque'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isTransparent'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='keyEquivalent'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='keyEquivalentFont'>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='keyEquivalentModifierMask'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='mouseEntered:'>
      <arg name='event' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='mouseExited:'>
      <arg name='event' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='performClick:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAlternateImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAlternateMnemonicLocation:'>
      <arg name='location' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAlternateTitle:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAlternateTitleWithMnemonic:'>
      <arg name='stringWithAmpersand' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAttributedAlternateTitle:'>
      <arg name='obj' declared_type='NSAttributedString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAttributedTitle:'>
      <arg name='obj' declared_type='NSAttributedString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBackgroundColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBezelStyle:'>
      <arg name='bezelStyle' declared_type='NSBezelStyle' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setButtonType:'>
      <arg name='aType' declared_type='NSButtonType' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFont:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setGradientType:'>
      <arg name='type' declared_type='NSGradientType' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHighlightsBy:'>
      <arg name='aType' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImageDimsWhenDisabled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImagePosition:'>
      <arg name='aPosition' declared_type='NSCellImagePosition' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setKeyEquivalent:'>
      <arg name='aKeyEquivalent' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setKeyEquivalentFont:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setKeyEquivalentFont:size:'>
      <arg name='fontName' declared_type='NSString*' type='@' index='0'/>
      <arg name='fontSize' declared_type='float' type='f' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setKeyEquivalentModifierMask:'>
      <arg name='mask' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPeriodicDelay:interval:'>
      <arg name='delay' declared_type='float' type='f' index='0'/>
      <arg name='interval' declared_type='float' type='f' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShowsBorderOnlyWhileMouseInside:'>
      <arg name='show' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShowsStateBy:'>
      <arg name='aType' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSound:'>
      <arg name='aSound' declared_type='NSSound*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitle:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleWithMnemonic:'>
      <arg name='stringWithAmpersand' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTransparent:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='showsBorderOnlyWhileMouseInside'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='showsStateBy'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='sound'>
      <retval declared_type='NSSound*' type='@'/>
    </method>
    <method selector='title'>
      <retval declared_type='NSString*' type='@'/>
    </method>
  </class>
  <class name='NSCIImageRep'>
    <method selector='CIImage'>
      <retval declared_type='CIImage*' type='@'/>
    </method>
    <method class_method='true' selector='imageRepWithCIImage:'>
      <arg name='image' declared_type='CIImage*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithCIImage:'>
      <arg name='image' declared_type='CIImage*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
  </class>
  <class name='NSCachedImageRep'>
    <method selector='initWithSize:depth:separate:alpha:'>
      <arg name='size' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <arg name='depth' declared_type='NSWindowDepth' type='i' index='1'/>
      <arg name='flag' declared_type='BOOL' type='B' index='2'/>
      <arg name='alpha' declared_type='BOOL' type='B' index='3'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithWindow:rect:'>
      <arg name='win' declared_type='NSWindow*' type='@' index='0'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='rect'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='window'>
      <retval declared_type='NSWindow*' type='@'/>
    </method>
  </class>
  <class name='NSCell'>
    <method selector='acceptsFirstResponder'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='action'>
      <retval declared_type='SEL' type=':'/>
    </method>
    <method selector='alignment'>
      <retval declared_type='NSTextAlignment' type='i'/>
    </method>
    <method selector='allowsEditingTextAttributes'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='allowsMixedState'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='allowsUndo'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='attributedStringValue'>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method selector='baseWritingDirection'>
      <retval declared_type='NSWritingDirection' type='i'/>
    </method>
    <method selector='calcDrawInfo:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='cellAttribute:'>
      <arg name='aParameter' declared_type='NSCellAttribute' type='i' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='cellSize'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='cellSizeForBounds:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='compare:'>
      <arg name='otherCell' declared_type='id' type='@' index='0'/>
      <retval declared_type='NSComparisonResult' type='i'/>
    </method>
    <method selector='continueTracking:at:inView:'>
      <arg name='lastPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='currentPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='controlSize'>
      <retval declared_type='NSControlSize' type='i'/>
    </method>
    <method selector='controlTint'>
      <retval declared_type='NSControlTint' type='i'/>
    </method>
    <method selector='controlView'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method class_method='true' selector='defaultFocusRingType'>
      <retval declared_type='NSFocusRingType' type='i'/>
    </method>
    <method class_method='true' selector='defaultMenu'>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='doubleValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='drawInteriorWithFrame:inView:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawWithFrame:inView:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawingRectForBounds:'>
      <arg name='theRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='editWithFrame:inView:editor:delegate:event:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <arg name='textObj' declared_type='NSText*' type='@' index='2'/>
      <arg name='anObject' declared_type='id' type='@' index='3'/>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='4'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='endEditing:'>
      <arg name='textObj' declared_type='NSText*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='entryType'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='floatValue'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='focusRingType'>
      <retval declared_type='NSFocusRingType' type='i'/>
    </method>
    <method selector='font'>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='formatter'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='getPeriodicDelay:interval:'>
      <arg name='delay' null_accepted='false' declared_type='float*' type='^f' index='0' type_modifier='o'/>
      <arg name='interval' null_accepted='false' declared_type='float*' type='^f' index='1' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='hasValidObjectValue'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='highlight:withFrame:inView:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='highlightColorWithFrame:inView:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='image'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='imageRectForBounds:'>
      <arg name='theRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='importsGraphics'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='initImageCell:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initTextCell:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='intValue'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='isBezeled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isBordered'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isContinuous'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isEditable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isEnabled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isEntryAcceptable:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isHighlighted'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isOpaque'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isScrollable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isSelectable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='keyEquivalent'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='lineBreakMode'>
      <retval declared_type='NSLineBreakMode' type='i'/>
    </method>
    <method selector='menu'>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='menuForEvent:inRect:ofView:'>
      <arg name='event' declared_type='NSEvent*' type='@' index='0'/>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='view' declared_type='NSView*' type='@' index='2'/>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='mnemonic'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='mnemonicLocation'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='mouseDownFlags'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='nextState'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='objectValue'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='performClick:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='prefersTrackingUntilMouseUp'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='refusesFirstResponder'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='representedObject'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='resetCursorRect:inView:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectWithFrame:inView:editor:delegate:start:length:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <arg name='textObj' declared_type='NSText*' type='@' index='2'/>
      <arg name='anObject' declared_type='id' type='@' index='3'/>
      <arg name='selStart' declared_type='int' type='i' index='4'/>
      <arg name='selLength' declared_type='int' type='i' index='5'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sendActionOn:'>
      <arg name='mask' declared_type='int' type='i' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='sendsActionOnEndEditing'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setAction:'>
      <arg name='aSelector' declared_type='SEL' type=':' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAlignment:'>
      <arg name='mode' declared_type='NSTextAlignment' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAllowsEditingTextAttributes:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAllowsMixedState:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAllowsUndo:'>
      <arg name='allowsUndo' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAttributedStringValue:'>
      <arg name='obj' declared_type='NSAttributedString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBaseWritingDirection:'>
      <arg name='writingDirection' declared_type='NSWritingDirection' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBezeled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBordered:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCellAttribute:to:'>
      <arg name='aParameter' declared_type='NSCellAttribute' type='i' index='0'/>
      <arg name='value' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setContinuous:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setControlSize:'>
      <arg name='size' declared_type='NSControlSize' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setControlTint:'>
      <arg name='controlTint' declared_type='NSControlTint' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setControlView:'>
      <arg name='view' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDoubleValue:'>
      <arg name='aDouble' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEditable:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEnabled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEntryType:'>
      <arg name='aType' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFloatValue:'>
      <arg name='aFloat' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFloatingPointFormat:left:right:'>
      <arg name='autoRange' declared_type='BOOL' type='B' index='0'/>
      <arg name='leftDigits' declared_type='unsigned int' type='I' index='1'/>
      <arg name='rightDigits' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFocusRingType:'>
      <arg name='focusRingType' declared_type='NSFocusRingType' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFont:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFormatter:'>
      <arg name='newFormatter' declared_type='NSFormatter*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHighlighted:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImportsGraphics:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIntValue:'>
      <arg name='anInt' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLineBreakMode:'>
      <arg name='mode' declared_type='NSLineBreakMode' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMenu:'>
      <arg name='aMenu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMnemonicLocation:'>
      <arg name='location' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNextState'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setObjectValue:'>
      <arg name='obj' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setRefusesFirstResponder:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setRepresentedObject:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setScrollable:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelectable:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSendsActionOnEndEditing:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShowsFirstResponder:'>
      <arg name='showFR' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setState:'>
      <arg name='value' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setStringValue:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTag:'>
      <arg name='anInt' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTarget:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitle:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleWithMnemonic:'>
      <arg name='stringWithAmpersand' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setType:'>
      <arg name='aType' declared_type='NSCellType' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setUpFieldEditorAttributes:'>
      <arg name='textObj' declared_type='NSText*' type='@' index='0'/>
      <retval declared_type='NSText*' type='@'/>
    </method>
    <method selector='setWraps:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='showsFirstResponder'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='startTrackingAt:inView:'>
      <arg name='startPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='state'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='stopTracking:at:inView:mouseIsUp:'>
      <arg name='lastPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='stopPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='2'/>
      <arg name='flag' declared_type='BOOL' type='B' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='stringValue'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='tag'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='takeDoubleValueFrom:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='takeFloatValueFrom:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='takeIntValueFrom:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='takeObjectValueFrom:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='takeStringValueFrom:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='target'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='title'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='titleRectForBounds:'>
      <arg name='theRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='trackMouse:inRect:ofView:untilMouseUp:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='2'/>
      <arg name='flag' declared_type='BOOL' type='B' index='3'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='type'>
      <retval declared_type='NSCellType' type='i'/>
    </method>
    <method selector='wraps'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSClipView'>
    <method selector='autoscroll:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='backgroundColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='constrainScrollPoint:'>
      <arg name='newOrigin' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method selector='copiesOnScroll'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='documentCursor'>
      <retval declared_type='NSCursor*' type='@'/>
    </method>
    <method selector='documentRect'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='documentView'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='documentVisibleRect'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='drawsBackground'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='scrollToPoint:'>
      <arg name='newOrigin' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBackgroundColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCopiesOnScroll:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDocumentCursor:'>
      <arg name='anObj' declared_type='NSCursor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDocumentView:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDrawsBackground:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='viewBoundsChanged:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='viewFrameChanged:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSCoder'>
    <method selector='decodeNXColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
  </class>
  <class name='NSColor'>
    <method selector='alphaComponent'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='alternateSelectedControlColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='alternateSelectedControlTextColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='blackColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='blackComponent'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='blendedColorWithFraction:ofColor:'>
      <arg name='fraction' declared_type='float' type='f' index='0'/>
      <arg name='color' declared_type='NSColor*' type='@' index='1'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='blueColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='blueComponent'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='brightnessComponent'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='brownColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='catalogNameComponent'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method class_method='true' selector='clearColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='colorForControlTint:'>
      <arg name='controlTint' declared_type='NSControlTint' type='i' index='0'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='colorFromPasteboard:'>
      <arg name='pasteBoard' declared_type='NSPasteboard*' type='@' index='0'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='colorNameComponent'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='colorSpace'>
      <retval declared_type='NSColorSpace*' type='@'/>
    </method>
    <method selector='colorSpaceName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='colorUsingColorSpace:'>
      <arg name='space' declared_type='NSColorSpace*' type='@' index='0'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='colorUsingColorSpaceName:'>
      <arg name='colorSpace' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='colorUsingColorSpaceName:device:'>
      <arg name='colorSpace' declared_type='NSString*' type='@' index='0'/>
      <arg name='deviceDescription' declared_type='NSDictionary*' type='@' index='1'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='colorWithAlphaComponent:'>
      <arg name='alpha' declared_type='float' type='f' index='0'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='colorWithCIColor:'>
      <arg name='color' declared_type='CIColor*' type='@' index='0'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='colorWithCalibratedHue:saturation:brightness:alpha:'>
      <arg name='hue' declared_type='float' type='f' index='0'/>
      <arg name='saturation' declared_type='float' type='f' index='1'/>
      <arg name='brightness' declared_type='float' type='f' index='2'/>
      <arg name='alpha' declared_type='float' type='f' index='3'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='colorWithCalibratedRed:green:blue:alpha:'>
      <arg name='red' declared_type='float' type='f' index='0'/>
      <arg name='green' declared_type='float' type='f' index='1'/>
      <arg name='blue' declared_type='float' type='f' index='2'/>
      <arg name='alpha' declared_type='float' type='f' index='3'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='colorWithCalibratedWhite:alpha:'>
      <arg name='white' declared_type='float' type='f' index='0'/>
      <arg name='alpha' declared_type='float' type='f' index='1'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='colorWithCatalogName:colorName:'>
      <arg name='listName' declared_type='NSString*' type='@' index='0'/>
      <arg name='colorName' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='colorWithColorSpace:components:count:'>
      <arg name='space' declared_type='NSColorSpace*' type='@' index='0'/>
      <arg name='components' c_array_length_in_arg='2' declared_type='float*' type='^f' const='true' index='1' type_modifier='n'/>
      <arg name='numberOfComponents' declared_type='int' type='i' index='2'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='colorWithDeviceCyan:magenta:yellow:black:alpha:'>
      <arg name='cyan' declared_type='float' type='f' index='0'/>
      <arg name='magenta' declared_type='float' type='f' index='1'/>
      <arg name='yellow' declared_type='float' type='f' index='2'/>
      <arg name='black' declared_type='float' type='f' index='3'/>
      <arg name='alpha' declared_type='float' type='f' index='4'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='colorWithDeviceHue:saturation:brightness:alpha:'>
      <arg name='hue' declared_type='float' type='f' index='0'/>
      <arg name='saturation' declared_type='float' type='f' index='1'/>
      <arg name='brightness' declared_type='float' type='f' index='2'/>
      <arg name='alpha' declared_type='float' type='f' index='3'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='colorWithDeviceRed:green:blue:alpha:'>
      <arg name='red' declared_type='float' type='f' index='0'/>
      <arg name='green' declared_type='float' type='f' index='1'/>
      <arg name='blue' declared_type='float' type='f' index='2'/>
      <arg name='alpha' declared_type='float' type='f' index='3'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='colorWithDeviceWhite:alpha:'>
      <arg name='white' declared_type='float' type='f' index='0'/>
      <arg name='alpha' declared_type='float' type='f' index='1'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='colorWithPatternImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='controlAlternatingRowBackgroundColors'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='controlBackgroundColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='controlColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='controlDarkShadowColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='controlHighlightColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='controlLightHighlightColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='controlShadowColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='controlTextColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='currentControlTint'>
      <retval declared_type='NSControlTint' type='i'/>
    </method>
    <method class_method='true' selector='cyanColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='cyanComponent'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='darkGrayColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='disabledControlTextColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='drawSwatchInRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method ignore='true' suggestion='Use the specific accessors according to the color type.' selector='getComponents:'>
      <arg name='components' declared_type='float*' type='^f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='getCyan:magenta:yellow:black:alpha:'>
      <arg name='cyan' declared_type='float*' type='^f' index='0' type_modifier='o'/>
      <arg name='magenta' declared_type='float*' type='^f' index='1' type_modifier='o'/>
      <arg name='yellow' declared_type='float*' type='^f' index='2' type_modifier='o'/>
      <arg name='black' declared_type='float*' type='^f' index='3' type_modifier='o'/>
      <arg name='alpha' declared_type='float*' type='^f' index='4' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='getHue:saturation:brightness:alpha:'>
      <arg name='hue' declared_type='float*' type='^f' index='0' type_modifier='o'/>
      <arg name='saturation' declared_type='float*' type='^f' index='1' type_modifier='o'/>
      <arg name='brightness' declared_type='float*' type='^f' index='2' type_modifier='o'/>
      <arg name='alpha' declared_type='float*' type='^f' index='3' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='getRed:green:blue:alpha:'>
      <arg name='red' declared_type='float*' type='^f' index='0' type_modifier='o'/>
      <arg name='green' declared_type='float*' type='^f' index='1' type_modifier='o'/>
      <arg name='blue' declared_type='float*' type='^f' index='2' type_modifier='o'/>
      <arg name='alpha' declared_type='float*' type='^f' index='3' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='getWhite:alpha:'>
      <arg name='white' declared_type='float*' type='^f' index='0' type_modifier='o'/>
      <arg name='alpha' declared_type='float*' type='^f' index='1' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='grayColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='greenColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='greenComponent'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='gridColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='headerColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='headerTextColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='highlightColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='highlightWithLevel:'>
      <arg name='val' declared_type='float' type='f' index='0'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='hueComponent'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='ignoresAlpha'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method class_method='true' selector='keyboardFocusIndicatorColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='knobColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='lightGrayColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='localizedCatalogNameComponent'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='localizedColorNameComponent'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method class_method='true' selector='magentaColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='magentaComponent'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='numberOfComponents'>
      <retval declared_type='int' type='i'/>
    </method>
    <method class_method='true' selector='orangeColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='patternImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method class_method='true' selector='purpleColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='redColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='redComponent'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='saturationComponent'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='scrollBarColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='secondarySelectedControlColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='selectedControlColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='selectedControlTextColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='selectedKnobColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='selectedMenuItemColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='selectedMenuItemTextColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='selectedTextBackgroundColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='selectedTextColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='set'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFill'>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setIgnoresAlpha:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setStroke'>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='shadowColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='shadowWithLevel:'>
      <arg name='val' declared_type='float' type='f' index='0'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='textBackgroundColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='textColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='whiteColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='whiteComponent'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='windowBackgroundColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='windowFrameColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method class_method='true' selector='windowFrameTextColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='writeToPasteboard:'>
      <arg name='pasteBoard' declared_type='NSPasteboard*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='yellowColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='yellowComponent'>
      <retval declared_type='float' type='f'/>
    </method>
  </class>
  <class name='NSColorList'>
    <method selector='allKeys'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='availableColorLists'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='colorListNamed:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSColorList*' type='@'/>
    </method>
    <method selector='colorWithKey:'>
      <arg name='key' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='initWithName:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithName:fromFile:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <arg name='path' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='insertColor:key:atIndex:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <arg name='key' declared_type='NSString*' type='@' index='1'/>
      <arg name='loc' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='isEditable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='name'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='removeColorWithKey:'>
      <arg name='key' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeFile'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setColor:forKey:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <arg name='key' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='writeToFile:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSColorPanel'>
    <method selector='accessoryView'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='alpha'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='attachColorList:'>
      <arg name='colorList' declared_type='NSColorList*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='color'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='detachColorList:'>
      <arg name='colorList' declared_type='NSColorList*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='dragColor:withEvent:fromView:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='1'/>
      <arg name='sourceView' declared_type='NSView*' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isContinuous'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='mode'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='setAccessoryView:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAction:'>
      <arg name='aSelector' sel_of_type='v12@0:4@8' declared_type='SEL' type=':' index='0' sel_of_type64='v24@0:8@16'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setContinuous:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMode:'>
      <arg name='mode' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setPickerMask:'>
      <arg name='mask' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setPickerMode:'>
      <arg name='mode' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShowsAlpha:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTarget:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='sharedColorPanel'>
      <retval declared_type='NSColorPanel*' type='@'/>
    </method>
    <method class_method='true' selector='sharedColorPanelExists'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='showsAlpha'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSColorPicker'>
    <method selector='attachColorList:'>
      <arg name='colorList' declared_type='NSColorList*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='colorPanel'>
      <retval declared_type='NSColorPanel*' type='@'/>
    </method>
    <method selector='detachColorList:'>
      <arg name='colorList' declared_type='NSColorList*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='initWithPickerMask:colorPanel:'>
      <arg name='mask' declared_type='int' type='i' index='0'/>
      <arg name='owningColorPanel' declared_type='NSColorPanel*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='insertNewButtonImage:in:'>
      <arg name='newButtonImage' declared_type='NSImage*' type='@' index='0'/>
      <arg name='buttonCell' declared_type='NSButtonCell*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='provideNewButtonImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='setMode:'>
      <arg name='mode' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='viewSizeChanged:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSColorSpace'>
    <method selector='ICCProfileData'>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='colorSpaceModel'>
      <retval declared_type='NSColorSpaceModel' type='i'/>
    </method>
    <method selector='colorSyncProfile'>
      <retval declared_type='void*' type='^{OpaqueCMProfileRef=}'/>
    </method>
    <method class_method='true' selector='deviceCMYKColorSpace'>
      <retval declared_type='NSColorSpace*' type='@'/>
    </method>
    <method class_method='true' selector='deviceGrayColorSpace'>
      <retval declared_type='NSColorSpace*' type='@'/>
    </method>
    <method class_method='true' selector='deviceRGBColorSpace'>
      <retval declared_type='NSColorSpace*' type='@'/>
    </method>
    <method class_method='true' selector='genericCMYKColorSpace'>
      <retval declared_type='NSColorSpace*' type='@'/>
    </method>
    <method class_method='true' selector='genericGrayColorSpace'>
      <retval declared_type='NSColorSpace*' type='@'/>
    </method>
    <method class_method='true' selector='genericRGBColorSpace'>
      <retval declared_type='NSColorSpace*' type='@'/>
    </method>
    <method selector='initWithColorSyncProfile:'>
      <arg name='prof' declared_type='void*' type='^{OpaqueCMProfileRef=}' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithICCProfileData:'>
      <arg name='iccData' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='localizedName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='numberOfColorComponents'>
      <retval declared_type='int' type='i'/>
    </method>
  </class>
  <class name='NSColorWell'>
    <method selector='activate:'>
      <arg name='exclusive' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='color'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='deactivate'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawWellInside:'>
      <arg name='insideRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='isActive'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isBordered'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setBordered:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='takeColorFrom:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSComboBox'>
    <method selector='addItemWithObjectValue:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addItemsWithObjectValues:'>
      <arg name='objects' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='completes'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='dataSource'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='deselectItemAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='hasVerticalScroller'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='indexOfItemWithObjectValue:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='indexOfSelectedItem'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='insertItemWithObjectValue:atIndex:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <arg name='index' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='intercellSpacing'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='isButtonBordered'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='itemHeight'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='itemObjectValueAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='noteNumberOfItemsChanged'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='numberOfItems'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='numberOfVisibleItems'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='objectValueOfSelectedItem'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='objectValues'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='reloadData'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeAllItems'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeItemAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeItemWithObjectValue:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scrollItemAtIndexToTop:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scrollItemAtIndexToVisible:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectItemAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectItemWithObjectValue:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setButtonBordered:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCompletes:'>
      <arg name='completes' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDataSource:'>
      <arg name='aSource' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHasVerticalScroller:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIntercellSpacing:'>
      <arg name='aSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setItemHeight:'>
      <arg name='itemHeight' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNumberOfVisibleItems:'>
      <arg name='visibleItems' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setUsesDataSource:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='usesDataSource'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSComboBoxCell'>
    <method selector='addItemWithObjectValue:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addItemsWithObjectValues:'>
      <arg name='objects' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='completedString:'>
      <arg name='string' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='completes'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='dataSource'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='deselectItemAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='hasVerticalScroller'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='indexOfItemWithObjectValue:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='indexOfSelectedItem'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='insertItemWithObjectValue:atIndex:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <arg name='index' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='intercellSpacing'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='isButtonBordered'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='itemHeight'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='itemObjectValueAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='noteNumberOfItemsChanged'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='numberOfItems'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='numberOfVisibleItems'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='objectValueOfSelectedItem'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='objectValues'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='reloadData'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeAllItems'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeItemAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeItemWithObjectValue:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scrollItemAtIndexToTop:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scrollItemAtIndexToVisible:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectItemAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectItemWithObjectValue:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setButtonBordered:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCompletes:'>
      <arg name='completes' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDataSource:'>
      <arg name='aSource' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHasVerticalScroller:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIntercellSpacing:'>
      <arg name='aSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setItemHeight:'>
      <arg name='itemHeight' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNumberOfVisibleItems:'>
      <arg name='visibleItems' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setUsesDataSource:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='usesDataSource'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSControl'>
    <method selector='abortEditing'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='action'>
      <retval declared_type='SEL' type=':'/>
    </method>
    <method selector='alignment'>
      <retval declared_type='NSTextAlignment' type='i'/>
    </method>
    <method selector='attributedStringValue'>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method selector='baseWritingDirection'>
      <retval declared_type='NSWritingDirection' type='i'/>
    </method>
    <method selector='calcSize'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='cell'>
      <retval declared_type='id' type='@'/>
    </method>
    <method class_method='true' selector='cellClass'>
      <retval declared_type='Class' type='#'/>
    </method>
    <method selector='currentEditor'>
      <retval declared_type='NSText*' type='@'/>
    </method>
    <method selector='doubleValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='drawCell:'>
      <arg name='aCell' declared_type='NSCell*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawCellInside:'>
      <arg name='aCell' declared_type='NSCell*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='floatValue'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='font'>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='formatter'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='ignoresMultiClick'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='initWithFrame:'>
      <arg name='frameRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='intValue'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='isContinuous'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isEnabled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='mouseDown:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='objectValue'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='performClick:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='refusesFirstResponder'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='selectCell:'>
      <arg name='aCell' declared_type='NSCell*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectedCell'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='selectedTag'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='sendAction:to:'>
      <arg name='theAction' declared_type='SEL' type=':' index='0'/>
      <arg name='theTarget' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='sendActionOn:'>
      <arg name='mask' declared_type='int' type='i' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='setAction:'>
      <arg name='aSelector' declared_type='SEL' type=':' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAlignment:'>
      <arg name='mode' declared_type='NSTextAlignment' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAttributedStringValue:'>
      <arg name='obj' declared_type='NSAttributedString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBaseWritingDirection:'>
      <arg name='writingDirection' declared_type='NSWritingDirection' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCell:'>
      <arg name='aCell' declared_type='NSCell*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setCellClass:'>
      <arg name='factoryId' declared_type='Class' type='#' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setContinuous:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDoubleValue:'>
      <arg name='aDouble' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEnabled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFloatValue:'>
      <arg name='aFloat' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFloatingPointFormat:left:right:'>
      <arg name='autoRange' declared_type='BOOL' type='B' index='0'/>
      <arg name='leftDigits' declared_type='unsigned int' type='I' index='1'/>
      <arg name='rightDigits' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFont:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFormatter:'>
      <arg name='newFormatter' declared_type='NSFormatter*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIgnoresMultiClick:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIntValue:'>
      <arg name='anInt' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNeedsDisplay'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setObjectValue:'>
      <arg name='obj' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setRefusesFirstResponder:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setStringValue:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTag:'>
      <arg name='anInt' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTarget:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sizeToFit'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='stringValue'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='tag'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='takeDoubleValueFrom:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='takeFloatValueFrom:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='takeIntValueFrom:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='takeObjectValueFrom:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='takeStringValueFrom:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='target'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='updateCell:'>
      <arg name='aCell' declared_type='NSCell*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='updateCellInside:'>
      <arg name='aCell' declared_type='NSCell*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='validateEditing'>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSController'>
    <method selector='commitEditing'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
      <arg name='delegate' declared_type='id' type='@' index='0'/>
      <arg name='didCommitSelector' sel_of_type='v20@0:4@8B12^v16' declared_type='SEL' type=':' index='1' sel_of_type64='v36@0:8@16B24^v28'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='2' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='discardEditing'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='isEditing'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='objectDidBeginEditing:'>
      <arg name='editor' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='objectDidEndEditing:'>
      <arg name='editor' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSCursor'>
    <method class_method='true' selector='IBeamCursor'>
      <retval declared_type='NSCursor*' type='@'/>
    </method>
    <method class_method='true' selector='arrowCursor'>
      <retval declared_type='NSCursor*' type='@'/>
    </method>
    <method class_method='true' selector='closedHandCursor'>
      <retval declared_type='NSCursor*' type='@'/>
    </method>
    <method class_method='true' selector='crosshairCursor'>
      <retval declared_type='NSCursor*' type='@'/>
    </method>
    <method class_method='true' selector='currentCursor'>
      <retval declared_type='NSCursor*' type='@'/>
    </method>
    <method class_method='true' selector='disappearingItemCursor'>
      <retval declared_type='NSCursor*' type='@'/>
    </method>
    <method class_method='true' selector='hide'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='hotSpot'>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method selector='image'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='initWithImage:foregroundColorHint:backgroundColorHint:hotSpot:'>
      <arg name='newImage' declared_type='NSImage*' type='@' index='0'/>
      <arg name='fg' declared_type='NSColor*' type='@' index='1'/>
      <arg name='bg' declared_type='NSColor*' type='@' index='2'/>
      <arg name='hotSpot' declared_type='NSPoint' type='{_NSPoint=ff}' index='3'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithImage:hotSpot:'>
      <arg name='newImage' declared_type='NSImage*' type='@' index='0'/>
      <arg name='aPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isSetOnMouseEntered'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isSetOnMouseExited'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='mouseEntered:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='mouseExited:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='openHandCursor'>
      <retval declared_type='NSCursor*' type='@'/>
    </method>
    <method class_method='true' selector='pointingHandCursor'>
      <retval declared_type='NSCursor*' type='@'/>
    </method>
    <method class_method='true' selector='pop'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='pop'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='push'>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='resizeDownCursor'>
      <retval declared_type='NSCursor*' type='@'/>
    </method>
    <method class_method='true' selector='resizeLeftCursor'>
      <retval declared_type='NSCursor*' type='@'/>
    </method>
    <method class_method='true' selector='resizeLeftRightCursor'>
      <retval declared_type='NSCursor*' type='@'/>
    </method>
    <method class_method='true' selector='resizeRightCursor'>
      <retval declared_type='NSCursor*' type='@'/>
    </method>
    <method class_method='true' selector='resizeUpCursor'>
      <retval declared_type='NSCursor*' type='@'/>
    </method>
    <method class_method='true' selector='resizeUpDownCursor'>
      <retval declared_type='NSCursor*' type='@'/>
    </method>
    <method selector='set'>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setHiddenUntilMouseMoves:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setOnMouseEntered:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setOnMouseExited:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='unhide'>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSCustomImageRep'>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='drawSelector'>
      <retval declared_type='SEL' type=':'/>
    </method>
    <method selector='initWithDrawSelector:delegate:'>
      <arg name='aMethod' sel_of_type='v12@0:4@8' declared_type='SEL' type=':' index='0' sel_of_type64='v24@0:8@16'/>
      <arg name='anObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
  </class>
  <class name='NSDatePicker'>
    <method selector='backgroundColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='calendar'>
      <retval declared_type='NSCalendar*' type='@'/>
    </method>
    <method selector='datePickerElements'>
      <retval declared_type='NSDatePickerElementFlags' type='I'/>
    </method>
    <method selector='datePickerMode'>
      <retval declared_type='NSDatePickerMode' type='i'/>
    </method>
    <method selector='datePickerStyle'>
      <retval declared_type='NSDatePickerStyle' type='i'/>
    </method>
    <method selector='dateValue'>
      <retval declared_type='NSDate*' type='@'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='drawsBackground'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isBezeled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isBordered'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='locale'>
      <retval declared_type='NSLocale*' type='@'/>
    </method>
    <method selector='maxDate'>
      <retval declared_type='NSDate*' type='@'/>
    </method>
    <method selector='minDate'>
      <retval declared_type='NSDate*' type='@'/>
    </method>
    <method selector='setBackgroundColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBezeled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBordered:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCalendar:'>
      <arg name='newCalendar' declared_type='NSCalendar*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDatePickerElements:'>
      <arg name='elementFlags' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDatePickerMode:'>
      <arg name='newMode' declared_type='NSDatePickerMode' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDatePickerStyle:'>
      <arg name='newStyle' declared_type='NSDatePickerStyle' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDateValue:'>
      <arg name='newStartDate' declared_type='NSDate*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDrawsBackground:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLocale:'>
      <arg name='newLocale' declared_type='NSLocale*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMaxDate:'>
      <arg name='date' declared_type='NSDate*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMinDate:'>
      <arg name='date' declared_type='NSDate*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTextColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTimeInterval:'>
      <arg name='newTimeInterval' declared_type='NSTimeInterval' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTimeZone:'>
      <arg name='newTimeZone' declared_type='NSTimeZone*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='timeInterval'>
      <retval declared_type='NSTimeInterval' type='d'/>
    </method>
    <method selector='timeZone'>
      <retval declared_type='NSTimeZone*' type='@'/>
    </method>
  </class>
  <class name='NSDatePickerCell'>
    <method selector='backgroundColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='calendar'>
      <retval declared_type='NSCalendar*' type='@'/>
    </method>
    <method selector='datePickerElements'>
      <retval declared_type='NSDatePickerElementFlags' type='I'/>
    </method>
    <method selector='datePickerMode'>
      <retval declared_type='NSDatePickerMode' type='i'/>
    </method>
    <method selector='datePickerStyle'>
      <retval declared_type='NSDatePickerStyle' type='i'/>
    </method>
    <method selector='dateValue'>
      <retval declared_type='NSDate*' type='@'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='drawsBackground'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='locale'>
      <retval declared_type='NSLocale*' type='@'/>
    </method>
    <method selector='maxDate'>
      <retval declared_type='NSDate*' type='@'/>
    </method>
    <method selector='minDate'>
      <retval declared_type='NSDate*' type='@'/>
    </method>
    <method selector='setBackgroundColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCalendar:'>
      <arg name='newCalendar' declared_type='NSCalendar*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDatePickerElements:'>
      <arg name='elementFlags' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDatePickerMode:'>
      <arg name='newMode' declared_type='NSDatePickerMode' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDatePickerStyle:'>
      <arg name='newStyle' declared_type='NSDatePickerStyle' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDateValue:'>
      <arg name='newStartDate' declared_type='NSDate*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDrawsBackground:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLocale:'>
      <arg name='newLocale' declared_type='NSLocale*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMaxDate:'>
      <arg name='date' declared_type='NSDate*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMinDate:'>
      <arg name='date' declared_type='NSDate*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTextColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTimeInterval:'>
      <arg name='newTimeInterval' declared_type='NSTimeInterval' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTimeZone:'>
      <arg name='newTimeZone' declared_type='NSTimeZone*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='timeInterval'>
      <retval declared_type='NSTimeInterval' type='d'/>
    </method>
    <method selector='timeZone'>
      <retval declared_type='NSTimeZone*' type='@'/>
    </method>
  </class>
  <class name='NSDocument'>
    <method selector='addWindowController:'>
      <arg name='windowController' declared_type='NSWindowController*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:'>
      <arg name='delegate' declared_type='id' type='@' index='0'/>
      <arg name='didAutosaveSelector' sel_of_type='v20@0:4@8B12^v16' declared_type='SEL' type=':' index='1' sel_of_type64='v36@0:8@16B24^v28'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='2' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='autosavedContentsFileURL'>
      <retval declared_type='NSURL*' type='@'/>
    </method>
    <method selector='autosavingFileType'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='canCloseDocumentWithDelegate:shouldCloseSelector:contextInfo:'>
      <arg name='delegate' declared_type='id' type='@' index='0'/>
      <arg name='shouldCloseSelector' sel_of_type='v20@0:4@8B12^v16' declared_type='SEL' type=':' index='1' sel_of_type64='v36@0:8@16B24^v28'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='2' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='close'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='dataOfType:error:'>
      <arg name='typeName' declared_type='NSString*' type='@' index='0'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='1' type_modifier='o'/>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='dataRepresentationOfType:'>
      <arg name='type' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='displayName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='fileAttributesToWriteToFile:ofType:saveOperation:'>
      <arg name='fullDocumentPath' declared_type='NSString*' type='@' index='0'/>
      <arg name='documentTypeName' declared_type='NSString*' type='@' index='1'/>
      <arg name='saveOperationType' declared_type='NSSaveOperationType' type='i' index='2'/>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='fileAttributesToWriteToURL:ofType:forSaveOperation:originalContentsURL:error:'>
      <arg name='absoluteURL' declared_type='NSURL*' type='@' index='0'/>
      <arg name='typeName' declared_type='NSString*' type='@' index='1'/>
      <arg name='saveOperation' declared_type='NSSaveOperationType' type='i' index='2'/>
      <arg name='absoluteOriginalContentsURL' declared_type='NSURL*' type='@' index='3'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='4' type_modifier='o'/>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='fileModificationDate'>
      <retval declared_type='NSDate*' type='@'/>
    </method>
    <method selector='fileName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='fileNameExtensionWasHiddenInLastRunSavePanel'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='fileType'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='fileTypeFromLastRunSavePanel'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='fileURL'>
      <retval declared_type='NSURL*' type='@'/>
    </method>
    <method selector='fileWrapperOfType:error:'>
      <arg name='typeName' declared_type='NSString*' type='@' index='0'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='1' type_modifier='o'/>
      <retval declared_type='NSFileWrapper*' type='@'/>
    </method>
    <method selector='fileWrapperRepresentationOfType:'>
      <arg name='type' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSFileWrapper*' type='@'/>
    </method>
    <method selector='handleCloseScriptCommand:'>
      <arg name='command' declared_type='NSCloseCommand*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='handlePrintScriptCommand:'>
      <arg name='command' declared_type='NSScriptCommand*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='handleSaveScriptCommand:'>
      <arg name='command' declared_type='NSScriptCommand*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='hasUnautosavedChanges'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='hasUndoManager'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='init'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initForURL:withContentsOfURL:ofType:error:'>
      <arg name='absoluteDocumentURL' declared_type='NSURL*' type='@' index='0'/>
      <arg name='absoluteDocumentContentsURL' declared_type='NSURL*' type='@' index='1'/>
      <arg name='typeName' declared_type='NSString*' type='@' index='2'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='3' type_modifier='o'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithContentsOfFile:ofType:'>
      <arg name='absolutePath' declared_type='NSString*' type='@' index='0'/>
      <arg name='typeName' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithContentsOfURL:ofType:'>
      <arg name='absoluteURL' declared_type='NSURL*' type='@' index='0'/>
      <arg name='typeName' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithContentsOfURL:ofType:error:'>
      <arg name='absoluteURL' declared_type='NSURL*' type='@' index='0'/>
      <arg name='typeName' declared_type='NSString*' type='@' index='1'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithType:error:'>
      <arg name='typeName' declared_type='NSString*' type='@' index='0'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='1' type_modifier='o'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isDocumentEdited'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method class_method='true' selector='isNativeType:'>
      <arg name='type' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='keepBackupFile'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='lastComponentOfFileName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='loadDataRepresentation:ofType:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <arg name='type' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='loadFileWrapperRepresentation:ofType:'>
      <arg name='wrapper' declared_type='NSFileWrapper*' type='@' index='0'/>
      <arg name='type' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='makeWindowControllers'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='objectSpecifier'>
      <retval declared_type='NSScriptObjectSpecifier*' type='@'/>
    </method>
    <method selector='preparePageLayout:'>
      <arg name='pageLayout' declared_type='NSPageLayout*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='prepareSavePanel:'>
      <arg name='savePanel' declared_type='NSSavePanel*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='presentError:'>
      <arg name='error' declared_type='NSError*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
      <arg name='error' declared_type='NSError*' type='@' index='0'/>
      <arg name='window' declared_type='NSWindow*' type='@' index='1'/>
      <arg name='delegate' declared_type='id' type='@' index='2'/>
      <arg name='didPresentSelector' sel_of_type='v16@0:4B8^v12' declared_type='SEL' type=':' index='3' sel_of_type64='v28@0:8B16^v20'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='4' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='printDocument:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='printDocumentWithSettings:showPrintPanel:delegate:didPrintSelector:contextInfo:'>
      <arg name='printSettings' declared_type='NSDictionary*' type='@' index='0'/>
      <arg name='showPrintPanel' declared_type='BOOL' type='B' index='1'/>
      <arg name='delegate' declared_type='id' type='@' index='2'/>
      <arg name='didPrintSelector' sel_of_type='v20@0:4@8B12^v16' declared_type='SEL' type=':' index='3' sel_of_type64='v36@0:8@16B24^v28'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='4' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='printInfo'>
      <retval declared_type='NSPrintInfo*' type='@'/>
    </method>
    <method selector='printOperationWithSettings:error:'>
      <arg name='printSettings' declared_type='NSDictionary*' type='@' index='0'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='1' type_modifier='o'/>
      <retval declared_type='NSPrintOperation*' type='@'/>
    </method>
    <method selector='printShowingPrintPanel:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='readFromData:ofType:error:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <arg name='typeName' declared_type='NSString*' type='@' index='1'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='readFromFile:ofType:'>
      <arg name='fileName' declared_type='NSString*' type='@' index='0'/>
      <arg name='type' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='readFromFileWrapper:ofType:error:'>
      <arg name='fileWrapper' declared_type='NSFileWrapper*' type='@' index='0'/>
      <arg name='typeName' declared_type='NSString*' type='@' index='1'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='readFromURL:ofType:'>
      <arg name='url' declared_type='NSURL*' type='@' index='0'/>
      <arg name='type' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='readFromURL:ofType:error:'>
      <arg name='absoluteURL' declared_type='NSURL*' type='@' index='0'/>
      <arg name='typeName' declared_type='NSString*' type='@' index='1'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method class_method='true' selector='readableTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='removeWindowController:'>
      <arg name='windowController' declared_type='NSWindowController*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='revertDocumentToSaved:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='revertToContentsOfURL:ofType:error:'>
      <arg name='absoluteURL' declared_type='NSURL*' type='@' index='0'/>
      <arg name='typeName' declared_type='NSString*' type='@' index='1'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='revertToSavedFromFile:ofType:'>
      <arg name='fileName' declared_type='NSString*' type='@' index='0'/>
      <arg name='type' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='revertToSavedFromURL:ofType:'>
      <arg name='url' declared_type='NSURL*' type='@' index='0'/>
      <arg name='type' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='runModalPageLayoutWithPrintInfo:'>
      <arg name='printInfo' declared_type='NSPrintInfo*' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextInfo:'>
      <arg name='printInfo' declared_type='NSPrintInfo*' type='@' index='0'/>
      <arg name='delegate' declared_type='id' type='@' index='1'/>
      <arg name='didRunSelector' sel_of_type='v20@0:4@8B12^v16' declared_type='SEL' type=':' index='2' sel_of_type64='v36@0:8@16B24^v28'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='3' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='runModalPrintOperation:delegate:didRunSelector:contextInfo:'>
      <arg name='printOperation' declared_type='NSPrintOperation*' type='@' index='0'/>
      <arg name='delegate' declared_type='id' type='@' index='1'/>
      <arg name='didRunSelector' sel_of_type='v20@0:4@8B12^v16' declared_type='SEL' type=':' index='2' sel_of_type64='v36@0:8@16B24^v28'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='3' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:'>
      <arg name='saveOperation' declared_type='NSSaveOperationType' type='i' index='0'/>
      <arg name='delegate' declared_type='id' type='@' index='1'/>
      <arg name='didSaveSelector' sel_of_type='v20@0:4@8B12^v16' declared_type='SEL' type=':' index='2' sel_of_type64='v36@0:8@16B24^v28'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='3' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='runPageLayout:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='saveDocument:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='saveDocumentAs:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='saveDocumentTo:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='saveDocumentWithDelegate:didSaveSelector:contextInfo:'>
      <arg name='delegate' declared_type='id' type='@' index='0'/>
      <arg name='didSaveSelector' sel_of_type='v20@0:4@8B12^v16' declared_type='SEL' type=':' index='1' sel_of_type64='v36@0:8@16B24^v28'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='2' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='saveToFile:saveOperation:delegate:didSaveSelector:contextInfo:'>
      <arg name='fileName' declared_type='NSString*' type='@' index='0'/>
      <arg name='saveOperation' declared_type='NSSaveOperationType' type='i' index='1'/>
      <arg name='delegate' declared_type='id' type='@' index='2'/>
      <arg name='didSaveSelector' sel_of_type='v20@0:4@8B12^v16' declared_type='SEL' type=':' index='3' sel_of_type64='v36@0:8@16B24^v28'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='4' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:'>
      <arg name='absoluteURL' declared_type='NSURL*' type='@' index='0'/>
      <arg name='typeName' declared_type='NSString*' type='@' index='1'/>
      <arg name='saveOperation' declared_type='NSSaveOperationType' type='i' index='2'/>
      <arg name='delegate' declared_type='id' type='@' index='3'/>
      <arg name='didSaveSelector' sel_of_type='v20@0:4@8B12^v16' declared_type='SEL' type=':' index='4' sel_of_type64='v36@0:8@16B24^v28'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='5' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='saveToURL:ofType:forSaveOperation:error:'>
      <arg name='absoluteURL' declared_type='NSURL*' type='@' index='0'/>
      <arg name='typeName' declared_type='NSString*' type='@' index='1'/>
      <arg name='saveOperation' declared_type='NSSaveOperationType' type='i' index='2'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='3' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setAutosavedContentsFileURL:'>
      <arg name='absoluteURL' declared_type='NSURL*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFileModificationDate:'>
      <arg name='modificationDate' declared_type='NSDate*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFileName:'>
      <arg name='fileName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFileType:'>
      <arg name='typeName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFileURL:'>
      <arg name='absoluteURL' declared_type='NSURL*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHasUndoManager:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLastComponentOfFileName:'>
      <arg name='str' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPrintInfo:'>
      <arg name='printInfo' declared_type='NSPrintInfo*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setUndoManager:'>
      <arg name='undoManager' declared_type='NSUndoManager*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setWindow:'>
      <arg name='window' declared_type='NSWindow*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='shouldChangePrintInfo:'>
      <arg name='newPrintInfo' declared_type='NSPrintInfo*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='shouldCloseWindowController:delegate:shouldCloseSelector:contextInfo:'>
      <arg name='windowController' declared_type='NSWindowController*' type='@' index='0'/>
      <arg name='delegate' declared_type='id' type='@' index='1'/>
      <arg name='callback' sel_of_type='v20@0:4@8B12^v16' declared_type='SEL' type=':' index='2' sel_of_type64='v36@0:8@16B24^v28'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='3' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='shouldRunSavePanelWithAccessoryView'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='showWindows'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='undoManager'>
      <retval declared_type='NSUndoManager*' type='@'/>
    </method>
    <method selector='updateChangeCount:'>
      <arg name='change' declared_type='NSDocumentChangeType' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='validateUserInterfaceItem:'>
      <arg name='anItem' declared_type='id' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='willPresentError:'>
      <arg name='error' declared_type='NSError*' type='@' index='0'/>
      <retval declared_type='NSError*' type='@'/>
    </method>
    <method selector='windowControllerDidLoadNib:'>
      <arg name='windowController' declared_type='NSWindowController*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windowControllerWillLoadNib:'>
      <arg name='windowController' declared_type='NSWindowController*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windowControllers'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='windowForSheet'>
      <retval declared_type='NSWindow*' type='@'/>
    </method>
    <method selector='windowNibName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method class_method='true' selector='writableTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='writableTypesForSaveOperation:'>
      <arg name='saveOperation' declared_type='NSSaveOperationType' type='i' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='writeSafelyToURL:ofType:forSaveOperation:error:'>
      <arg name='absoluteURL' declared_type='NSURL*' type='@' index='0'/>
      <arg name='typeName' declared_type='NSString*' type='@' index='1'/>
      <arg name='saveOperation' declared_type='NSSaveOperationType' type='i' index='2'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='3' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='writeToFile:ofType:'>
      <arg name='fileName' declared_type='NSString*' type='@' index='0'/>
      <arg name='type' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='writeToFile:ofType:originalFile:saveOperation:'>
      <arg name='fullDocumentPath' declared_type='NSString*' type='@' index='0'/>
      <arg name='documentTypeName' declared_type='NSString*' type='@' index='1'/>
      <arg name='fullOriginalDocumentPath' declared_type='NSString*' type='@' index='2'/>
      <arg name='saveOperationType' declared_type='NSSaveOperationType' type='i' index='3'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='writeToURL:ofType:'>
      <arg name='url' declared_type='NSURL*' type='@' index='0'/>
      <arg name='type' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='writeToURL:ofType:error:'>
      <arg name='absoluteURL' declared_type='NSURL*' type='@' index='0'/>
      <arg name='typeName' declared_type='NSString*' type='@' index='1'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='writeToURL:ofType:forSaveOperation:originalContentsURL:error:'>
      <arg name='absoluteURL' declared_type='NSURL*' type='@' index='0'/>
      <arg name='typeName' declared_type='NSString*' type='@' index='1'/>
      <arg name='saveOperation' declared_type='NSSaveOperationType' type='i' index='2'/>
      <arg name='absoluteOriginalContentsURL' declared_type='NSURL*' type='@' index='3'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='4' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='writeWithBackupToFile:ofType:saveOperation:'>
      <arg name='fullDocumentPath' declared_type='NSString*' type='@' index='0'/>
      <arg name='documentTypeName' declared_type='NSString*' type='@' index='1'/>
      <arg name='saveOperationType' declared_type='NSSaveOperationType' type='i' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSDocumentController'>
    <method selector='URLsFromRunningOpenPanel'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='addDocument:'>
      <arg name='document' declared_type='NSDocument*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='autosavingDelay'>
      <retval declared_type='NSTimeInterval' type='d'/>
    </method>
    <method selector='clearRecentDocuments:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='closeAllDocumentsWithDelegate:didCloseAllSelector:contextInfo:'>
      <arg name='delegate' declared_type='id' type='@' index='0'/>
      <arg name='didCloseAllSelector' sel_of_type='v20@0:4@8B12^v16' declared_type='SEL' type=':' index='1' sel_of_type64='v36@0:8@16B24^v28'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='2' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='currentDirectory'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='currentDocument'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='defaultType'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='displayNameForType:'>
      <arg name='typeName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='documentClassForType:'>
      <arg name='typeName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='Class' type='#'/>
    </method>
    <method selector='documentClassNames'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='documentForFileName:'>
      <arg name='fileName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='documentForURL:'>
      <arg name='absoluteURL' declared_type='NSURL*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='documentForWindow:'>
      <arg name='window' declared_type='NSWindow*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='documents'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='fileExtensionsFromType:'>
      <arg name='typeName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='fileNamesFromRunningOpenPanel'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='hasEditedDocuments'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='init'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='makeDocumentForURL:withContentsOfURL:ofType:error:'>
      <arg name='absoluteDocumentURL' declared_type='NSURL*' type='@' index='0'/>
      <arg name='absoluteDocumentContentsURL' declared_type='NSURL*' type='@' index='1'/>
      <arg name='typeName' declared_type='NSString*' type='@' index='2'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='3' type_modifier='o'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='makeDocumentWithContentsOfFile:ofType:'>
      <arg name='fileName' declared_type='NSString*' type='@' index='0'/>
      <arg name='type' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='makeDocumentWithContentsOfURL:ofType:'>
      <arg name='url' declared_type='NSURL*' type='@' index='0'/>
      <arg name='type' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='makeDocumentWithContentsOfURL:ofType:error:'>
      <arg name='absoluteURL' declared_type='NSURL*' type='@' index='0'/>
      <arg name='typeName' declared_type='NSString*' type='@' index='1'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='makeUntitledDocumentOfType:'>
      <arg name='type' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='makeUntitledDocumentOfType:error:'>
      <arg name='typeName' declared_type='NSString*' type='@' index='0'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='1' type_modifier='o'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='maximumRecentDocumentCount'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='newDocument:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='noteNewRecentDocument:'>
      <arg name='document' declared_type='NSDocument*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='noteNewRecentDocumentURL:'>
      <arg name='absoluteURL' declared_type='NSURL*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='openDocument:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='openDocumentWithContentsOfFile:display:'>
      <arg name='fileName' declared_type='NSString*' type='@' index='0'/>
      <arg name='display' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='openDocumentWithContentsOfURL:display:'>
      <arg name='url' declared_type='NSURL*' type='@' index='0'/>
      <arg name='display' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='openDocumentWithContentsOfURL:display:error:'>
      <arg name='absoluteURL' declared_type='NSURL*' type='@' index='0'/>
      <arg name='displayDocument' declared_type='BOOL' type='B' index='1'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='openUntitledDocumentAndDisplay:error:'>
      <arg name='displayDocument' declared_type='BOOL' type='B' index='0'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='1' type_modifier='o'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='openUntitledDocumentOfType:display:'>
      <arg name='type' declared_type='NSString*' type='@' index='0'/>
      <arg name='display' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='presentError:'>
      <arg name='error' declared_type='NSError*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
      <arg name='error' declared_type='NSError*' type='@' index='0'/>
      <arg name='window' declared_type='NSWindow*' type='@' index='1'/>
      <arg name='delegate' declared_type='id' type='@' index='2'/>
      <arg name='didPresentSelector' sel_of_type='v16@0:4B8^v12' declared_type='SEL' type=':' index='3' sel_of_type64='v28@0:8B16^v20'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='4' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='recentDocumentURLs'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='removeDocument:'>
      <arg name='document' declared_type='NSDocument*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='reopenDocumentForURL:withContentsOfURL:error:'>
      <arg name='absoluteDocumentURL' declared_type='NSURL*' type='@' index='0'/>
      <arg name='absoluteDocumentContentsURL' declared_type='NSURL*' type='@' index='1'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextInfo:'>
      <arg name='title' declared_type='NSString*' type='@' index='0'/>
      <arg name='cancellable' declared_type='BOOL' type='B' index='1'/>
      <arg name='delegate' declared_type='id' type='@' index='2'/>
      <arg name='didReviewAllSelector' sel_of_type='v20@0:4@8B12^v16' declared_type='SEL' type=':' index='3' sel_of_type64='v36@0:8@16B24^v28'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='4' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='runModalOpenPanel:forTypes:'>
      <arg name='openPanel' declared_type='NSOpenPanel*' type='@' index='0'/>
      <arg name='fileNameExtensionsAndHFSFileTypes' declared_type='NSArray*' type='@' index='1'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='saveAllDocuments:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAutosavingDelay:'>
      <arg name='autosavingDelay' declared_type='NSTimeInterval' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShouldCreateUI:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='sharedDocumentController'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='shouldCreateUI'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='typeForContentsOfURL:error:'>
      <arg name='inAbsoluteURL' declared_type='NSURL*' type='@' index='0'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='1' type_modifier='o'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='typeFromFileExtension:'>
      <arg name='fileNameExtensionOrHFSFileType' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='validateUserInterfaceItem:'>
      <arg name='anItem' declared_type='id' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='willPresentError:'>
      <arg name='error' declared_type='NSError*' type='@' index='0'/>
      <retval declared_type='NSError*' type='@'/>
    </method>
  </class>
  <class name='NSDrawer'>
    <method selector='close'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='close:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='contentSize'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='contentView'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='edge'>
      <retval declared_type='NSRectEdge' type='i'/>
    </method>
    <method selector='initWithContentSize:preferredEdge:'>
      <arg name='contentSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <arg name='edge' declared_type='NSRectEdge' type='i' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='leadingOffset'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='maxContentSize'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='minContentSize'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='open'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='open:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='openOnEdge:'>
      <arg name='edge' declared_type='NSRectEdge' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='parentWindow'>
      <retval declared_type='NSWindow*' type='@'/>
    </method>
    <method selector='preferredEdge'>
      <retval declared_type='NSRectEdge' type='i'/>
    </method>
    <method selector='setContentSize:'>
      <arg name='size' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setContentView:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLeadingOffset:'>
      <arg name='offset' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMaxContentSize:'>
      <arg name='size' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMinContentSize:'>
      <arg name='size' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setParentWindow:'>
      <arg name='parent' declared_type='NSWindow*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPreferredEdge:'>
      <arg name='edge' declared_type='NSRectEdge' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTrailingOffset:'>
      <arg name='offset' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='state'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='toggle:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='trailingOffset'>
      <retval declared_type='float' type='f'/>
    </method>
  </class>
  <class name='NSEPSImageRep'>
    <method selector='EPSRepresentation'>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='boundingBox'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method class_method='true' selector='imageRepWithData:'>
      <arg name='epsData' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithData:'>
      <arg name='epsData' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='prepareGState'>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSEvent'>
    <method selector='absoluteX'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='absoluteY'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='absoluteZ'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='buttonMask'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='buttonNumber'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='capabilityMask'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='characters'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='charactersIgnoringModifiers'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='clickCount'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='context'>
      <retval declared_type='NSGraphicsContext*' type='@'/>
    </method>
    <method selector='data1'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='data2'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='deltaX'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='deltaY'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='deltaZ'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='deviceID'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method class_method='true' selector='enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData:'>
      <arg name='type' declared_type='NSEventType' type='i' index='0'/>
      <arg name='location' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='flags' declared_type='unsigned int' type='I' index='2'/>
      <arg name='time' declared_type='NSTimeInterval' type='d' index='3'/>
      <arg name='wNum' declared_type='int' type='i' index='4'/>
      <arg name='context' declared_type='NSGraphicsContext*' type='@' index='5'/>
      <arg name='eNum' declared_type='int' type='i' index='6'/>
      <arg name='tNum' declared_type='int' type='i' index='7'/>
      <arg name='data' declared_type='void*' type='^v' index='8' type_modifier='n'/>
      <retval declared_type='NSEvent*' type='@'/>
    </method>
    <method selector='eventNumber'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='isARepeat'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isEnteringProximity'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='keyCode'>
      <retval declared_type='unsigned short' type='S'/>
    </method>
    <method class_method='true' selector='keyEventWithType:location:modifierFlags:timestamp:windowNumber:context:characters:charactersIgnoringModifiers:isARepeat:keyCode:'>
      <arg name='type' declared_type='NSEventType' type='i' index='0'/>
      <arg name='location' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='flags' declared_type='unsigned int' type='I' index='2'/>
      <arg name='time' declared_type='NSTimeInterval' type='d' index='3'/>
      <arg name='wNum' declared_type='int' type='i' index='4'/>
      <arg name='context' declared_type='NSGraphicsContext*' type='@' index='5'/>
      <arg name='keys' declared_type='NSString*' type='@' index='6'/>
      <arg name='ukeys' declared_type='NSString*' type='@' index='7'/>
      <arg name='flag' declared_type='BOOL' type='B' index='8'/>
      <arg name='code' declared_type='unsigned short' type='S' index='9'/>
      <retval declared_type='NSEvent*' type='@'/>
    </method>
    <method selector='locationInWindow'>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method selector='modifierFlags'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method class_method='true' selector='mouseEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:clickCount:pressure:'>
      <arg name='type' declared_type='NSEventType' type='i' index='0'/>
      <arg name='location' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='flags' declared_type='unsigned int' type='I' index='2'/>
      <arg name='time' declared_type='NSTimeInterval' type='d' index='3'/>
      <arg name='wNum' declared_type='int' type='i' index='4'/>
      <arg name='context' declared_type='NSGraphicsContext*' type='@' index='5'/>
      <arg name='eNum' declared_type='int' type='i' index='6'/>
      <arg name='cNum' declared_type='int' type='i' index='7'/>
      <arg name='pressure' declared_type='float' type='f' index='8'/>
      <retval declared_type='NSEvent*' type='@'/>
    </method>
    <method class_method='true' selector='mouseLocation'>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method class_method='true' selector='otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:'>
      <arg name='type' declared_type='NSEventType' type='i' index='0'/>
      <arg name='location' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='flags' declared_type='unsigned int' type='I' index='2'/>
      <arg name='time' declared_type='NSTimeInterval' type='d' index='3'/>
      <arg name='wNum' declared_type='int' type='i' index='4'/>
      <arg name='context' declared_type='NSGraphicsContext*' type='@' index='5'/>
      <arg name='subtype' declared_type='short' type='s' index='6'/>
      <arg name='d1' declared_type='int' type='i' index='7'/>
      <arg name='d2' declared_type='int' type='i' index='8'/>
      <retval declared_type='NSEvent*' type='@'/>
    </method>
    <method selector='pointingDeviceID'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='pointingDeviceSerialNumber'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='pointingDeviceType'>
      <retval declared_type='NSPointingDeviceType' type='i'/>
    </method>
    <method selector='pressure'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='rotation'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='startPeriodicEventsAfterDelay:withPeriod:'>
      <arg name='delay' declared_type='NSTimeInterval' type='d' index='0'/>
      <arg name='period' declared_type='NSTimeInterval' type='d' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='stopPeriodicEvents'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='subtype'>
      <retval declared_type='short' type='s'/>
    </method>
    <method selector='systemTabletID'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='tabletID'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='tangentialPressure'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='tilt'>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method selector='timestamp'>
      <retval declared_type='NSTimeInterval' type='d'/>
    </method>
    <method selector='trackingNumber'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='type'>
      <retval declared_type='NSEventType' type='i'/>
    </method>
    <method selector='uniqueID'>
      <retval declared_type='unsigned long long' type='Q'/>
    </method>
    <method selector='userData'>
      <retval declared_type='void*' type='^v'/>
    </method>
    <method selector='vendorDefined'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='vendorID'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='vendorPointingDeviceType'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='window'>
      <retval declared_type='NSWindow*' type='@'/>
    </method>
    <method selector='windowNumber'>
      <retval declared_type='int' type='i'/>
    </method>
  </class>
  <class name='NSFileWrapper'>
    <method selector='addFileWithPath:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='addFileWrapper:'>
      <arg name='doc' declared_type='NSFileWrapper*' type='@' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='addRegularFileWithContents:preferredFilename:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <arg name='filename' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='addSymbolicLinkWithDestination:preferredFilename:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <arg name='filename' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='fileAttributes'>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='fileWrappers'>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='filename'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='icon'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='initDirectoryWithFileWrappers:'>
      <arg name='docs' declared_type='NSDictionary*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initRegularFileWithContents:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initSymbolicLinkWithDestination:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithPath:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithSerializedRepresentation:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isDirectory'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isRegularFile'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isSymbolicLink'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='keyForFileWrapper:'>
      <arg name='doc' declared_type='NSFileWrapper*' type='@' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='needsToBeUpdatedFromPath:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='preferredFilename'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='regularFileContents'>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='removeFileWrapper:'>
      <arg name='doc' declared_type='NSFileWrapper*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='serializedRepresentation'>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='setFileAttributes:'>
      <arg name='attributes' declared_type='NSDictionary*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFilename:'>
      <arg name='filename' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIcon:'>
      <arg name='icon' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPreferredFilename:'>
      <arg name='filename' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='symbolicLinkDestination'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='updateFromPath:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='writeToFile:atomically:updateFilenames:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <arg name='atomicFlag' declared_type='BOOL' type='B' index='1'/>
      <arg name='updateFilenamesFlag' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSFont'>
    <method selector='advancementForGlyph:'>
      <arg name='ag' declared_type='NSGlyph' type='I' index='0'/>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='ascender'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='boldSystemFontOfSize:'>
      <arg name='fontSize' declared_type='float' type='f' index='0'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='boundingRectForFont'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='boundingRectForGlyph:'>
      <arg name='aGlyph' declared_type='NSGlyph' type='I' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='capHeight'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='controlContentFontOfSize:'>
      <arg name='fontSize' declared_type='float' type='f' index='0'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='coveredCharacterSet'>
      <retval declared_type='NSCharacterSet*' type='@'/>
    </method>
    <method selector='descender'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='displayName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='familyName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='fontDescriptor'>
      <retval declared_type='NSFontDescriptor*' type='@'/>
    </method>
    <method selector='fontName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method class_method='true' selector='fontWithDescriptor:size:'>
      <arg name='fontDescriptor' declared_type='NSFontDescriptor*' type='@' index='0'/>
      <arg name='fontSize' declared_type='float' type='f' index='1'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method class_method='true' selector='fontWithDescriptor:textTransform:'>
      <arg name='fontDescriptor' declared_type='NSFontDescriptor*' type='@' index='0'/>
      <arg name='textTransform' declared_type='NSAffineTransform*' type='@' index='1'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method class_method='true' selector='fontWithName:matrix:'>
      <arg name='fontName' declared_type='NSString*' type='@' index='0'/>
      <arg name='fontMatrix' declared_type='float*' type='^f' c_array_of_fixed_length='6' const='true' index='1' type_modifier='n'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method class_method='true' selector='fontWithName:size:'>
      <arg name='fontName' declared_type='NSString*' type='@' index='0'/>
      <arg name='fontSize' declared_type='float' type='f' index='1'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='getAdvancements:forGlyphs:count:'>
      <arg name='advancements' c_array_length_in_arg='2' declared_type='NSSizeArray' type='^{_NSSize=ff}' index='0' type_modifier='o'/>
      <arg name='glyphs' c_array_length_in_arg='2' declared_type='NSGlyph*' type='^I' const='true' index='1' type_modifier='n'/>
      <arg name='glyphCount' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method ignore='true' suggestion='Call getAdvancements:forGlyphs:count:.' selector='getAdvancements:forPackedGlyphs:length:'>
      <arg name='advancements' declared_type='NSSizeArray' type='^{_NSSize=ff}' index='0'/>
      <arg name='packedGlyphs' declared_type='void*' type='^v' const='true' index='1'/>
      <arg name='length' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='getBoundingRects:forGlyphs:count:'>
      <arg name='bounds' c_array_length_in_arg='2' declared_type='NSRectArray' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0' type_modifier='o'/>
      <arg name='glyphs' c_array_length_in_arg='2' declared_type='NSGlyph*' type='^I' const='true' index='1' type_modifier='o'/>
      <arg name='glyphCount' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='glyphWithName:'>
      <arg name='aName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSGlyph' type='I'/>
    </method>
    <method selector='isFixedPitch'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='italicAngle'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='labelFontOfSize:'>
      <arg name='fontSize' declared_type='float' type='f' index='0'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method class_method='true' selector='labelFontSize'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='leading'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='matrix'>
      <retval declared_type='float*' type='^f' const='true'/>
    </method>
    <method selector='maximumAdvancement'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method class_method='true' selector='menuBarFontOfSize:'>
      <arg name='fontSize' declared_type='float' type='f' index='0'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method class_method='true' selector='menuFontOfSize:'>
      <arg name='fontSize' declared_type='float' type='f' index='0'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method class_method='true' selector='messageFontOfSize:'>
      <arg name='fontSize' declared_type='float' type='f' index='0'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='mostCompatibleStringEncoding'>
      <retval declared_type='NSStringEncoding' type='I'/>
    </method>
    <method selector='numberOfGlyphs'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method class_method='true' selector='paletteFontOfSize:'>
      <arg name='fontSize' declared_type='float' type='f' index='0'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='pointSize'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='printerFont'>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='renderingMode'>
      <retval declared_type='NSFontRenderingMode' type='i'/>
    </method>
    <method selector='screenFont'>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='screenFontWithRenderingMode:'>
      <arg name='renderingMode' declared_type='NSFontRenderingMode' type='i' index='0'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='set'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setInContext:'>
      <arg name='graphicsContext' declared_type='NSGraphicsContext*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setUserFixedPitchFont:'>
      <arg name='aFont' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setUserFont:'>
      <arg name='aFont' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='smallSystemFontSize'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='systemFontOfSize:'>
      <arg name='fontSize' declared_type='float' type='f' index='0'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method class_method='true' selector='systemFontSize'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='systemFontSizeForControlSize:'>
      <arg name='controlSize' declared_type='NSControlSize' type='i' index='0'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='textTransform'>
      <retval declared_type='NSAffineTransform*' type='@'/>
    </method>
    <method class_method='true' selector='titleBarFontOfSize:'>
      <arg name='fontSize' declared_type='float' type='f' index='0'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method class_method='true' selector='toolTipsFontOfSize:'>
      <arg name='fontSize' declared_type='float' type='f' index='0'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='underlinePosition'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='underlineThickness'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='userFixedPitchFontOfSize:'>
      <arg name='fontSize' declared_type='float' type='f' index='0'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method class_method='true' selector='userFontOfSize:'>
      <arg name='fontSize' declared_type='float' type='f' index='0'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='xHeight'>
      <retval declared_type='float' type='f'/>
    </method>
  </class>
  <class name='NSFontDescriptor'>
    <method selector='fontAttributes'>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='fontDescriptorByAddingAttributes:'>
      <arg name='attributes' declared_type='NSDictionary*' type='@' index='0'/>
      <retval declared_type='NSFontDescriptor*' type='@'/>
    </method>
    <method selector='fontDescriptorWithFace:'>
      <arg name='newFace' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSFontDescriptor*' type='@'/>
    </method>
    <method selector='fontDescriptorWithFamily:'>
      <arg name='newFamily' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSFontDescriptor*' type='@'/>
    </method>
    <method class_method='true' selector='fontDescriptorWithFontAttributes:'>
      <arg name='attributes' declared_type='NSDictionary*' type='@' index='0'/>
      <retval declared_type='NSFontDescriptor*' type='@'/>
    </method>
    <method selector='fontDescriptorWithMatrix:'>
      <arg name='matrix' declared_type='NSAffineTransform*' type='@' index='0'/>
      <retval declared_type='NSFontDescriptor*' type='@'/>
    </method>
    <method class_method='true' selector='fontDescriptorWithName:matrix:'>
      <arg name='fontName' declared_type='NSString*' type='@' index='0'/>
      <arg name='matrix' declared_type='NSAffineTransform*' type='@' index='1'/>
      <retval declared_type='NSFontDescriptor*' type='@'/>
    </method>
    <method class_method='true' selector='fontDescriptorWithName:size:'>
      <arg name='fontName' declared_type='NSString*' type='@' index='0'/>
      <arg name='size' declared_type='float' type='f' index='1'/>
      <retval declared_type='NSFontDescriptor*' type='@'/>
    </method>
    <method selector='fontDescriptorWithSize:'>
      <arg name='newPointSize' declared_type='float' type='f' index='0'/>
      <retval declared_type='NSFontDescriptor*' type='@'/>
    </method>
    <method selector='fontDescriptorWithSymbolicTraits:'>
      <arg name='symbolicTraits' declared_type='NSFontSymbolicTraits' type='I' index='0'/>
      <retval declared_type='NSFontDescriptor*' type='@'/>
    </method>
    <method selector='initWithFontAttributes:'>
      <arg name='attributes' declared_type='NSDictionary*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='matchingFontDescriptorsWithMandatoryKeys:'>
      <arg name='mandatoryKeys' declared_type='NSSet*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='matrix'>
      <retval declared_type='NSAffineTransform*' type='@'/>
    </method>
    <method selector='objectForKey:'>
      <arg name='anAttribute' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='pointSize'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='postscriptName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='symbolicTraits'>
      <retval declared_type='NSFontSymbolicTraits' type='I'/>
    </method>
  </class>
  <class name='NSFontManager'>
    <method selector='action'>
      <retval declared_type='SEL' type=':'/>
    </method>
    <method selector='addCollection:options:'>
      <arg name='collectionName' declared_type='NSString*' type='@' index='0'/>
      <arg name='collectionOptions' declared_type='int' type='i' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='addFontDescriptors:toCollection:'>
      <arg name='descriptors' declared_type='NSArray*' type='@' index='0'/>
      <arg name='collectionName' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addFontTrait:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='availableFontFamilies'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='availableFontNamesMatchingFontDescriptor:'>
      <arg name='descriptor' declared_type='NSFontDescriptor*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='availableFontNamesWithTraits:'>
      <arg name='someTraits' declared_type='NSFontTraitMask' type='I' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='availableFonts'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='availableMembersOfFontFamily:'>
      <arg name='fam' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='collectionNames'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='convertAttributes:'>
      <arg name='attributes' declared_type='NSDictionary*' type='@' index='0'/>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='convertFont:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='convertFont:toFace:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <arg name='typeface' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='convertFont:toFamily:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <arg name='family' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='convertFont:toHaveTrait:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <arg name='trait' declared_type='NSFontTraitMask' type='I' index='1'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='convertFont:toNotHaveTrait:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <arg name='trait' declared_type='NSFontTraitMask' type='I' index='1'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='convertFont:toSize:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <arg name='size' declared_type='float' type='f' index='1'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='convertWeight:ofFont:'>
      <arg name='upFlag' declared_type='BOOL' type='B' index='0'/>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='1'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='fontDescriptorsInCollection:'>
      <arg name='collectionNames' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='fontMenu:'>
      <arg name='create' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='fontNamed:hasTraits:'>
      <arg name='fName' declared_type='NSString*' type='@' index='0'/>
      <arg name='someTraits' declared_type='NSFontTraitMask' type='I' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='fontPanel:'>
      <arg name='create' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='NSFontPanel*' type='@'/>
    </method>
    <method selector='fontWithFamily:traits:weight:size:'>
      <arg name='family' declared_type='NSString*' type='@' index='0'/>
      <arg name='traits' declared_type='NSFontTraitMask' type='I' index='1'/>
      <arg name='weight' declared_type='int' type='i' index='2'/>
      <arg name='size' declared_type='float' type='f' index='3'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='isEnabled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isMultiple'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='localizedNameForFamily:face:'>
      <arg name='family' declared_type='NSString*' type='@' index='0'/>
      <arg name='faceKey' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='modifyFont:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='modifyFontViaPanel:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='orderFrontFontPanel:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='orderFrontStylesPanel:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeCollection:'>
      <arg name='collectionName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='removeFontDescriptor:fromCollection:'>
      <arg name='descriptor' declared_type='NSFontDescriptor*' type='@' index='0'/>
      <arg name='collection' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeFontTrait:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectedFont'>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='sendAction'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setAction:'>
      <arg name='aSelector' sel_of_type='v12@0:4@8' declared_type='SEL' type=':' index='0' sel_of_type64='v24@0:8@16'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEnabled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setFontManagerFactory:'>
      <arg name='factoryId' declared_type='Class' type='#' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFontMenu:'>
      <arg name='newMenu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setFontPanelFactory:'>
      <arg name='factoryId' declared_type='Class' type='#' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelectedAttributes:isMultiple:'>
      <arg name='attributes' declared_type='NSDictionary*' type='@' index='0'/>
      <arg name='flag' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelectedFont:isMultiple:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <arg name='flag' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='sharedFontManager'>
      <retval declared_type='NSFontManager*' type='@'/>
    </method>
    <method selector='traitsOfFont:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='NSFontTraitMask' type='I'/>
    </method>
    <method selector='weightOfFont:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
  </class>
  <class name='NSFontPanel'>
    <method selector='accessoryView'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='isEnabled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='panelConvertFont:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='reloadDefaultFontFamilies'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAccessoryView:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEnabled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPanelFont:isMultiple:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <arg name='flag' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='sharedFontPanel'>
      <retval declared_type='NSFontPanel*' type='@'/>
    </method>
    <method class_method='true' selector='sharedFontPanelExists'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='worksWhenModal'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSForm'>
    <method selector='addEntry:'>
      <arg name='title' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSFormCell*' type='@'/>
    </method>
    <method selector='cellAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='drawCellAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='indexOfCellWithTag:'>
      <arg name='aTag' declared_type='int' type='i' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='indexOfSelectedItem'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='insertEntry:atIndex:'>
      <arg name='title' declared_type='NSString*' type='@' index='0'/>
      <arg name='index' declared_type='int' type='i' index='1'/>
      <retval declared_type='NSFormCell*' type='@'/>
    </method>
    <method selector='removeEntryAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectTextAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBezeled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBordered:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEntryWidth:'>
      <arg name='width' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFrameSize:'>
      <arg name='newSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setInterlineSpacing:'>
      <arg name='spacing' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTextAlignment:'>
      <arg name='mode' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTextBaseWritingDirection:'>
      <arg name='writingDirection' declared_type='NSWritingDirection' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTextFont:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleAlignment:'>
      <arg name='mode' declared_type='NSTextAlignment' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleBaseWritingDirection:'>
      <arg name='writingDirection' declared_type='NSWritingDirection' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleFont:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSFormCell'>
    <method selector='attributedTitle'>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method selector='initTextCell:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isOpaque'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='placeholderAttributedString'>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method selector='placeholderString'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='setAttributedTitle:'>
      <arg name='obj' declared_type='NSAttributedString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPlaceholderAttributedString:'>
      <arg name='string' declared_type='NSAttributedString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPlaceholderString:'>
      <arg name='string' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitle:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleAlignment:'>
      <arg name='mode' declared_type='NSTextAlignment' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleBaseWritingDirection:'>
      <arg name='writingDirection' declared_type='NSWritingDirection' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleFont:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleWidth:'>
      <arg name='width' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleWithMnemonic:'>
      <arg name='stringWithAmpersand' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='title'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='titleAlignment'>
      <retval declared_type='NSTextAlignment' type='i'/>
    </method>
    <method selector='titleBaseWritingDirection'>
      <retval declared_type='NSWritingDirection' type='i'/>
    </method>
    <method selector='titleFont'>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='titleWidth'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='titleWidth:'>
      <arg name='aSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='float' type='f'/>
    </method>
  </class>
  <class name='NSGlyphGenerator'>
    <method selector='generateGlyphsForGlyphStorage:desiredNumberOfCharacters:glyphIndex:characterIndex:'>
      <arg name='glyphStorage' declared_type='id' type='@' index='0'/>
      <arg name='nChars' declared_type='unsigned int' type='I' index='1'/>
      <arg name='glyphIndex' declared_type='unsigned int*' type='^I' index='2' type_modifier='o'/>
      <arg name='charIndex' declared_type='unsigned int*' type='^I' index='3' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='sharedGlyphGenerator'>
      <retval declared_type='id' type='@'/>
    </method>
  </class>
  <class name='NSGlyphInfo'>
    <method selector='characterCollection'>
      <retval declared_type='NSCharacterCollection' type='i'/>
    </method>
    <method selector='characterIdentifier'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method class_method='true' selector='glyphInfoWithCharacterIdentifier:collection:baseString:'>
      <arg name='cid' declared_type='unsigned int' type='I' index='0'/>
      <arg name='characterCollection' declared_type='NSCharacterCollection' type='i' index='1'/>
      <arg name='theString' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='NSGlyphInfo*' type='@'/>
    </method>
    <method class_method='true' selector='glyphInfoWithGlyph:forFont:baseString:'>
      <arg name='glyph' declared_type='NSGlyph' type='I' index='0'/>
      <arg name='font' declared_type='NSFont*' type='@' index='1'/>
      <arg name='theString' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='NSGlyphInfo*' type='@'/>
    </method>
    <method class_method='true' selector='glyphInfoWithGlyphName:forFont:baseString:'>
      <arg name='glyphName' declared_type='NSString*' type='@' index='0'/>
      <arg name='font' declared_type='NSFont*' type='@' index='1'/>
      <arg name='theString' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='NSGlyphInfo*' type='@'/>
    </method>
    <method selector='glyphName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
  </class>
  <class name='NSGraphicsContext'>
    <method selector='CIContext'>
      <retval declared_type='CIContext*' type='@'/>
    </method>
    <method selector='attributes'>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='compositingOperation'>
      <retval declared_type='NSCompositingOperation' type='i'/>
    </method>
    <method class_method='true' selector='currentContext'>
      <retval declared_type='NSGraphicsContext*' type='@'/>
    </method>
    <method class_method='true' selector='currentContextDrawingToScreen'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='flushGraphics'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='focusStack'>
      <retval declared_type='void*' type='^v'/>
    </method>
    <method class_method='true' selector='graphicsContextWithAttributes:'>
      <arg name='attributes' declared_type='NSDictionary*' type='@' index='0'/>
      <retval declared_type='NSGraphicsContext*' type='@'/>
    </method>
    <method class_method='true' selector='graphicsContextWithBitmapImageRep:'>
      <arg name='bitmapRep' declared_type='NSBitmapImageRep*' type='@' index='0'/>
      <retval declared_type='NSGraphicsContext*' type='@'/>
    </method>
    <method class_method='true' selector='graphicsContextWithGraphicsPort:flipped:'>
      <arg name='graphicsPort' declared_type='void*' type='^{CGContext=}' index='0'/>
      <arg name='initialFlippedState' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='NSGraphicsContext*' type='@'/>
    </method>
    <method class_method='true' selector='graphicsContextWithWindow:'>
      <arg name='window' declared_type='NSWindow*' type='@' index='0'/>
      <retval declared_type='NSGraphicsContext*' type='@'/>
    </method>
    <method selector='graphicsPort'>
      <retval declared_type='void*' type='^{CGContext=}'/>
    </method>
    <method selector='imageInterpolation'>
      <retval declared_type='NSImageInterpolation' type='i'/>
    </method>
    <method selector='isDrawingToScreen'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isFlipped'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='patternPhase'>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method class_method='true' selector='restoreGraphicsState'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='restoreGraphicsState'>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='saveGraphicsState'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='saveGraphicsState'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCompositingOperation:'>
      <arg name='operation' declared_type='NSCompositingOperation' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setCurrentContext:'>
      <arg name='context' declared_type='NSGraphicsContext*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method ignore='true' selector='setFocusStack:'>
      <arg name='stack' declared_type='void*' type='^v' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setGraphicsState:'>
      <arg name='gState' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImageInterpolation:'>
      <arg name='interpolation' declared_type='NSImageInterpolation' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPatternPhase:'>
      <arg name='phase' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShouldAntialias:'>
      <arg name='antialias' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='shouldAntialias'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSHelpManager'>
    <method selector='contextHelpForObject:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method selector='findString:inBook:'>
      <arg name='query' declared_type='NSString*' type='@' index='0'/>
      <arg name='book' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='isContextHelpModeActive'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='openHelpAnchor:inBook:'>
      <arg name='anchor' declared_type='NSString*' type='@' index='0'/>
      <arg name='book' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeContextHelpForObject:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setContextHelp:forObject:'>
      <arg name='attrString' declared_type='NSAttributedString*' type='@' index='0'/>
      <arg name='object' declared_type='id' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setContextHelpModeActive:'>
      <arg name='active' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='sharedHelpManager'>
      <retval declared_type='NSHelpManager*' type='@'/>
    </method>
    <method selector='showContextHelpForObject:locationHint:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <arg name='pt' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSImage'>
    <method selector='TIFFRepresentation'>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='TIFFRepresentationUsingCompression:factor:'>
      <arg name='comp' declared_type='NSTIFFCompression' type='i' index='0'/>
      <arg name='aFloat' declared_type='float' type='f' index='1'/>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='addRepresentation:'>
      <arg name='imageRep' declared_type='NSImageRep*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addRepresentations:'>
      <arg name='imageReps' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='backgroundColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='bestRepresentationForDevice:'>
      <arg name='deviceDescription' declared_type='NSDictionary*' type='@' index='0'/>
      <retval declared_type='NSImageRep*' type='@'/>
    </method>
    <method selector='cacheDepthMatchesImageDepth'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='cacheMode'>
      <retval declared_type='NSImageCacheMode' type='i'/>
    </method>
    <method class_method='true' selector='canInitWithPasteboard:'>
      <arg name='pasteboard' declared_type='NSPasteboard*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='cancelIncrementalLoad'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='compositeToPoint:fromRect:operation:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='op' declared_type='NSCompositingOperation' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='compositeToPoint:fromRect:operation:fraction:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='op' declared_type='NSCompositingOperation' type='i' index='2'/>
      <arg name='delta' declared_type='float' type='f' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='compositeToPoint:operation:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='op' declared_type='NSCompositingOperation' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='compositeToPoint:operation:fraction:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='op' declared_type='NSCompositingOperation' type='i' index='1'/>
      <arg name='delta' declared_type='float' type='f' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='dissolveToPoint:fraction:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='aFloat' declared_type='float' type='f' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='dissolveToPoint:fromRect:fraction:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='aFloat' declared_type='float' type='f' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawAtPoint:fromRect:operation:fraction:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='fromRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='op' declared_type='NSCompositingOperation' type='i' index='2'/>
      <arg name='delta' declared_type='float' type='f' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawInRect:fromRect:operation:fraction:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='fromRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='op' declared_type='NSCompositingOperation' type='i' index='2'/>
      <arg name='delta' declared_type='float' type='f' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawRepresentation:inRect:'>
      <arg name='imageRep' declared_type='NSImageRep*' type='@' index='0'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method class_method='true' selector='imageFileTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='imageNamed:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method class_method='true' selector='imagePasteboardTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='imageUnfilteredFileTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='imageUnfilteredPasteboardTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='initByReferencingFile:'>
      <arg name='fileName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initByReferencingURL:'>
      <arg name='url' declared_type='NSURL*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithContentsOfFile:'>
      <arg name='fileName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithContentsOfURL:'>
      <arg name='url' declared_type='NSURL*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithData:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithPasteboard:'>
      <arg name='pasteboard' declared_type='NSPasteboard*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithSize:'>
      <arg name='aSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isCachedSeparately'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isDataRetained'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isFlipped'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isValid'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='lockFocus'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='lockFocusOnRepresentation:'>
      <arg name='imageRepresentation' declared_type='NSImageRep*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='matchesOnMultipleResolution'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='name'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='prefersColorMatch'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='recache'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeRepresentation:'>
      <arg name='imageRep' declared_type='NSImageRep*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='representations'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='scalesWhenResized'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setBackgroundColor:'>
      <arg name='aColor' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCacheDepthMatchesImageDepth:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCacheMode:'>
      <arg name='mode' declared_type='NSImageCacheMode' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCachedSeparately:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDataRetained:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFlipped:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMatchesOnMultipleResolution:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setName:'>
      <arg name='string' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setPrefersColorMatch:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setScalesWhenResized:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSize:'>
      <arg name='aSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setUsesEPSOnResolutionMismatch:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='size'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='unlockFocus'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='usesEPSOnResolutionMismatch'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSImageCell'>
    <method selector='imageAlignment'>
      <retval declared_type='NSImageAlignment' type='i'/>
    </method>
    <method selector='imageFrameStyle'>
      <retval declared_type='NSImageFrameStyle' type='i'/>
    </method>
    <method selector='imageScaling'>
      <retval declared_type='NSImageScaling' type='i'/>
    </method>
    <method selector='setImageAlignment:'>
      <arg name='newAlign' declared_type='NSImageAlignment' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImageFrameStyle:'>
      <arg name='newStyle' declared_type='NSImageFrameStyle' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImageScaling:'>
      <arg name='newScaling' declared_type='NSImageScaling' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSImageRep'>
    <method selector='bitsPerSample'>
      <retval declared_type='int' type='i'/>
    </method>
    <method class_method='true' selector='canInitWithData:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method class_method='true' selector='canInitWithPasteboard:'>
      <arg name='pasteboard' declared_type='NSPasteboard*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='colorSpaceName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='draw'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='drawAtPoint:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='drawInRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='hasAlpha'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method class_method='true' selector='imageFileTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='imagePasteboardTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='imageRepClassForData:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='Class' type='#'/>
    </method>
    <method class_method='true' selector='imageRepClassForFileType:'>
      <arg name='type' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='Class' type='#'/>
    </method>
    <method class_method='true' selector='imageRepClassForPasteboardType:'>
      <arg name='type' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='Class' type='#'/>
    </method>
    <method class_method='true' selector='imageRepWithContentsOfFile:'>
      <arg name='filename' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method class_method='true' selector='imageRepWithContentsOfURL:'>
      <arg name='url' declared_type='NSURL*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method class_method='true' selector='imageRepWithPasteboard:'>
      <arg name='pasteboard' declared_type='NSPasteboard*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method class_method='true' selector='imageRepsWithContentsOfFile:'>
      <arg name='filename' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='imageRepsWithContentsOfURL:'>
      <arg name='url' declared_type='NSURL*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='imageRepsWithPasteboard:'>
      <arg name='pasteboard' declared_type='NSPasteboard*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='imageUnfilteredFileTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='imageUnfilteredPasteboardTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='isOpaque'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='pixelsHigh'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='pixelsWide'>
      <retval declared_type='int' type='i'/>
    </method>
    <method class_method='true' selector='registerImageRepClass:'>
      <arg name='imageRepClass' declared_type='Class' type='#' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='registeredImageRepClasses'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='setAlpha:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBitsPerSample:'>
      <arg name='anInt' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setColorSpaceName:'>
      <arg name='string' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setOpaque:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPixelsHigh:'>
      <arg name='anInt' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPixelsWide:'>
      <arg name='anInt' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSize:'>
      <arg name='aSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='size'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method class_method='true' selector='unregisterImageRepClass:'>
      <arg name='imageRepClass' declared_type='Class' type='#' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSImageView'>
    <method selector='allowsCutCopyPaste'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='animates'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='image'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='imageAlignment'>
      <retval declared_type='NSImageAlignment' type='i'/>
    </method>
    <method selector='imageFrameStyle'>
      <retval declared_type='NSImageFrameStyle' type='i'/>
    </method>
    <method selector='imageScaling'>
      <retval declared_type='NSImageScaling' type='i'/>
    </method>
    <method selector='isEditable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setAllowsCutCopyPaste:'>
      <arg name='allow' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAnimates:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEditable:'>
      <arg name='yn' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImage:'>
      <arg name='newImage' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImageAlignment:'>
      <arg name='newAlign' declared_type='NSImageAlignment' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImageFrameStyle:'>
      <arg name='newStyle' declared_type='NSImageFrameStyle' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImageScaling:'>
      <arg name='newScaling' declared_type='NSImageScaling' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSInputManager'>
    <method class_method='true' selector='currentInputManager'>
      <retval declared_type='NSInputManager*' type='@'/>
    </method>
    <method class_method='true' selector='cycleToNextInputLanguage:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='cycleToNextInputServerInLanguage:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='handleMouseEvent:'>
      <arg name='theMouseEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='image'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='initWithName:host:'>
      <arg name='inputServerName' declared_type='NSString*' type='@' index='0'/>
      <arg name='hostName' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='NSInputManager*' type='@'/>
    </method>
    <method selector='language'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='localizedInputManagerName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='markedTextAbandoned:'>
      <arg name='cli' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='markedTextSelectionChanged:client:'>
      <arg name='newSel' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='cli' declared_type='id' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='server'>
      <retval declared_type='NSInputServer*' type='@'/>
    </method>
    <method selector='wantsToDelayTextChangeNotifications'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='wantsToHandleMouseEvents'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='wantsToInterpretAllKeystrokes'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSInputServer'>
    <method selector='initWithDelegate:name:'>
      <arg name='aDelegate' declared_type='id' type='@' index='0'/>
      <arg name='name' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
  </class>
  <class name='NSLayoutManager'>
    <method selector='addTemporaryAttributes:forCharacterRange:'>
      <arg name='attrs' declared_type='NSDictionary*' type='@' index='0'/>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addTextContainer:'>
      <arg name='container' declared_type='NSTextContainer*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='attachmentSizeForGlyphAtIndex:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='backgroundLayoutEnabled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='boundingRectForGlyphRange:inTextContainer:'>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='container' declared_type='NSTextContainer*' type='@' index='1'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='boundsRectForTextBlock:atIndex:effectiveRange:'>
      <arg name='block' declared_type='NSTextBlock*' type='@' index='0'/>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='1'/>
      <arg name='effectiveGlyphRange' declared_type='NSRangePointer' type='^{_NSRange=II}' index='2'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='boundsRectForTextBlock:glyphRange:'>
      <arg name='block' declared_type='NSTextBlock*' type='@' index='0'/>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='characterIndexForGlyphAtIndex:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='characterRangeForGlyphRange:actualGlyphRange:'>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='actualGlyphRange' declared_type='NSRangePointer' type='^{_NSRange=II}' index='1'/>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='defaultAttachmentScaling'>
      <retval declared_type='NSImageScaling' type='i'/>
    </method>
    <method selector='defaultLineHeightForFont:'>
      <arg name='theFont' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='deleteGlyphsInRange:'>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawBackgroundForGlyphRange:atPoint:'>
      <arg name='glyphsToShow' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='origin' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawGlyphsForGlyphRange:atPoint:'>
      <arg name='glyphsToShow' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='origin' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='strikethroughVal' declared_type='int' type='i' index='1'/>
      <arg name='baselineOffset' declared_type='float' type='f' index='2'/>
      <arg name='lineRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='3'/>
      <arg name='lineGlyphRange' declared_type='NSRange' type='{_NSRange=II}' index='4'/>
      <arg name='containerOrigin' declared_type='NSPoint' type='{_NSPoint=ff}' index='5'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='underlineVal' declared_type='int' type='i' index='1'/>
      <arg name='baselineOffset' declared_type='float' type='f' index='2'/>
      <arg name='lineRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='3'/>
      <arg name='lineGlyphRange' declared_type='NSRange' type='{_NSRange=II}' index='4'/>
      <arg name='containerOrigin' declared_type='NSPoint' type='{_NSPoint=ff}' index='5'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawsOutsideLineFragmentForGlyphAtIndex:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='extraLineFragmentRect'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='extraLineFragmentTextContainer'>
      <retval declared_type='NSTextContainer*' type='@'/>
    </method>
    <method selector='extraLineFragmentUsedRect'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='firstTextView'>
      <retval declared_type='NSTextView*' type='@'/>
    </method>
    <method selector='firstUnlaidCharacterIndex'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='firstUnlaidGlyphIndex'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='fractionOfDistanceThroughGlyphForPoint:inTextContainer:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='container' declared_type='NSTextContainer*' type='@' index='1'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='getFirstUnlaidCharacterIndex:glyphIndex:'>
      <arg name='charIndex' declared_type='unsigned int*' type='^I' index='0' type_modifier='o'/>
      <arg name='glyphIndex' declared_type='unsigned int*' type='^I' index='1' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method ignore='true' suggestion='Call glyphAtIndex: multiple times.' selector='getGlyphs:range:'>
      <arg name='glyphArray' declared_type='NSGlyph*' type='^I' index='0'/>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method ignore='true' suggestion='Call glyphAtIndex: multiple times.' selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:'>
      <arg name='glyphsRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='glyphBuffer' declared_type='NSGlyph*' type='^I' index='1'/>
      <arg name='charIndexBuffer' declared_type='unsigned int*' type='^I' index='2'/>
      <arg name='inscribeBuffer' declared_type='NSGlyphInscription*' type='^i' index='3'/>
      <arg name='elasticBuffer' declared_type='BOOL*' type='^B' index='4'/>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method ignore='true' suggestion='Call glyphAtIndex: multiple times.' selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:'>
      <arg name='glyphsRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='glyphBuffer' declared_type='NSGlyph*' type='^I' index='1'/>
      <arg name='charIndexBuffer' declared_type='unsigned int*' type='^I' index='2'/>
      <arg name='inscribeBuffer' declared_type='NSGlyphInscription*' type='^i' index='3'/>
      <arg name='elasticBuffer' declared_type='BOOL*' type='^B' index='4'/>
      <arg name='bidiLevelBuffer' declared_type='unsigned char*' type='*' index='5'/>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='glyphAtIndex:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='NSGlyph' type='I'/>
    </method>
    <method selector='glyphAtIndex:isValidIndex:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <arg name='isValidIndex' declared_type='BOOL*' type='^B' index='1' type_modifier='o'/>
      <retval declared_type='NSGlyph' type='I'/>
    </method>
    <method selector='glyphGenerator'>
      <retval declared_type='NSGlyphGenerator*' type='@'/>
    </method>
    <method selector='glyphIndexForPoint:inTextContainer:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='container' declared_type='NSTextContainer*' type='@' index='1'/>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='container' declared_type='NSTextContainer*' type='@' index='1'/>
      <arg name='partialFraction' declared_type='float*' type='^f' index='2' type_modifier='o'/>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='glyphRangeForBoundingRect:inTextContainer:'>
      <arg name='bounds' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='container' declared_type='NSTextContainer*' type='@' index='1'/>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:'>
      <arg name='bounds' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='container' declared_type='NSTextContainer*' type='@' index='1'/>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='glyphRangeForCharacterRange:actualCharacterRange:'>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='actualCharRange' declared_type='NSRangePointer' type='^{_NSRange=II}' index='1'/>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='glyphRangeForTextContainer:'>
      <arg name='container' declared_type='NSTextContainer*' type='@' index='0'/>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='hyphenationFactor'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='init'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='insertGlyph:atGlyphIndex:characterIndex:'>
      <arg name='glyph' declared_type='NSGlyph' type='I' index='0'/>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='1'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertTextContainer:atIndex:'>
      <arg name='container' declared_type='NSTextContainer*' type='@' index='0'/>
      <arg name='index' declared_type='unsigned int' type='I' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='intAttribute:forGlyphAtIndex:'>
      <arg name='attributeTag' declared_type='int' type='i' index='0'/>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='1'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='invalidateDisplayForCharacterRange:'>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='invalidateDisplayForGlyphRange:'>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:'>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='delta' declared_type='int' type='i' index='1'/>
      <arg name='actualCharRange' declared_type='NSRangePointer' type='^{_NSRange=II}' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:'>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='flag' declared_type='BOOL' type='B' index='1'/>
      <arg name='actualCharRange' declared_type='NSRangePointer' type='^{_NSRange=II}' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='isValidGlyphIndex:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='layoutManagerOwnsFirstResponderInWindow:'>
      <arg name='window' declared_type='NSWindow*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='layoutRectForTextBlock:atIndex:effectiveRange:'>
      <arg name='block' declared_type='NSTextBlock*' type='@' index='0'/>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='1'/>
      <arg name='effectiveGlyphRange' declared_type='NSRangePointer' type='^{_NSRange=II}' index='2'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='layoutRectForTextBlock:glyphRange:'>
      <arg name='block' declared_type='NSTextBlock*' type='@' index='0'/>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='lineFragmentRectForGlyphAtIndex:effectiveRange:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <arg name='effectiveGlyphRange' declared_type='NSRangePointer' type='^{_NSRange=II}' index='1'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <arg name='effectiveGlyphRange' declared_type='NSRangePointer' type='^{_NSRange=II}' index='1'/>
      <arg name='flag' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='lineFragmentUsedRectForGlyphAtIndex:effectiveRange:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <arg name='effectiveGlyphRange' declared_type='NSRangePointer' type='^{_NSRange=II}' index='1'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <arg name='effectiveGlyphRange' declared_type='NSRangePointer' type='^{_NSRange=II}' index='1'/>
      <arg name='flag' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='locationForGlyphAtIndex:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method selector='notShownAttributeForGlyphAtIndex:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='numberOfGlyphs'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='rangeOfNominallySpacedGlyphsContainingIndex:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:'>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='selCharRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <arg name='container' declared_type='NSTextContainer*' type='@' index='2'/>
      <arg name='rectCount' declared_type='unsigned int*' type='^I' index='3' type_modifier='o'/>
      <retval c_array_length_in_arg='3' declared_type='NSRectArray' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='rectArrayForGlyphRange:withinSelectedGlyphRange:inTextContainer:rectCount:'>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='selGlyphRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <arg name='container' declared_type='NSTextContainer*' type='@' index='2'/>
      <arg name='rectCount' declared_type='unsigned int*' type='^I' index='3' type_modifier='o'/>
      <retval c_array_length_in_arg='3' declared_type='NSRectArray' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='removeTemporaryAttribute:forCharacterRange:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeTextContainerAtIndex:'>
      <arg name='index' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='replaceGlyphAtIndex:withGlyph:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <arg name='newGlyph' declared_type='NSGlyph' type='I' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='replaceTextStorage:'>
      <arg name='newTextStorage' declared_type='NSTextStorage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rulerAccessoryViewForTextView:paragraphStyle:ruler:enabled:'>
      <arg name='view' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='style' declared_type='NSParagraphStyle*' type='@' index='1'/>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='2'/>
      <arg name='isEnabled' declared_type='BOOL' type='B' index='3'/>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='rulerMarkersForTextView:paragraphStyle:ruler:'>
      <arg name='view' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='style' declared_type='NSParagraphStyle*' type='@' index='1'/>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='2'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='setAttachmentSize:forGlyphRange:'>
      <arg name='attachmentSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBackgroundLayoutEnabled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBoundsRect:forTextBlock:glyphRange:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='block' declared_type='NSTextBlock*' type='@' index='1'/>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCharacterIndex:forGlyphAtIndex:'>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='0'/>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDefaultAttachmentScaling:'>
      <arg name='scaling' declared_type='NSImageScaling' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='delegate' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDrawsOutsideLineFragment:forGlyphAtIndex:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setExtraLineFragmentRect:usedRect:textContainer:'>
      <arg name='fragmentRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='usedRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='container' declared_type='NSTextContainer*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setGlyphGenerator:'>
      <arg name='glyphGenerator' declared_type='NSGlyphGenerator*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHyphenationFactor:'>
      <arg name='factor' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIntAttribute:value:forGlyphAtIndex:'>
      <arg name='attributeTag' declared_type='int' type='i' index='0'/>
      <arg name='val' declared_type='int' type='i' index='1'/>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLayoutRect:forTextBlock:glyphRange:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='block' declared_type='NSTextBlock*' type='@' index='1'/>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLineFragmentRect:forGlyphRange:usedRect:'>
      <arg name='fragmentRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <arg name='usedRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLocation:forStartOfGlyphRange:'>
      <arg name='location' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNotShownAttribute:forGlyphAtIndex:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShowsControlCharacters:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShowsInvisibleCharacters:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTemporaryAttributes:forCharacterRange:'>
      <arg name='attrs' declared_type='NSDictionary*' type='@' index='0'/>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTextContainer:forGlyphRange:'>
      <arg name='container' declared_type='NSTextContainer*' type='@' index='0'/>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTextStorage:'>
      <arg name='textStorage' declared_type='NSTextStorage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTypesetter:'>
      <arg name='typesetter' declared_type='NSTypesetter*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTypesetterBehavior:'>
      <arg name='theBehavior' declared_type='NSTypesetterBehavior' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setUsesScreenFonts:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='showAttachmentCell:inRect:characterIndex:'>
      <arg name='cell' declared_type='NSCell*' type='@' index='0'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='attachmentIndex' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='showPackedGlyphs:length:glyphRange:atPoint:font:color:printingAdjustment:'>
      <arg name='glyphs' c_array_length_in_arg='1' declared_type='char*' type='*' index='0' type_modifier='n'/>
      <arg name='glyphLen' declared_type='unsigned int' type='I' index='1'/>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='2'/>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='3'/>
      <arg name='font' declared_type='NSFont*' type='@' index='4'/>
      <arg name='color' declared_type='NSColor*' type='@' index='5'/>
      <arg name='printingAdjustment' declared_type='NSSize' type='{_NSSize=ff}' index='6'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='showsControlCharacters'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='showsInvisibleCharacters'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='strikethroughVal' declared_type='int' type='i' index='1'/>
      <arg name='lineRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <arg name='lineGlyphRange' declared_type='NSRange' type='{_NSRange=II}' index='3'/>
      <arg name='containerOrigin' declared_type='NSPoint' type='{_NSPoint=ff}' index='4'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='substituteFontForFont:'>
      <arg name='originalFont' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='temporaryAttributesAtCharacterIndex:effectiveRange:'>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='0'/>
      <arg name='effectiveCharRange' declared_type='NSRangePointer' type='^{_NSRange=II}' index='1'/>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='textContainerChangedGeometry:'>
      <arg name='container' declared_type='NSTextContainer*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textContainerChangedTextView:'>
      <arg name='container' declared_type='NSTextContainer*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textContainerForGlyphAtIndex:effectiveRange:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <arg name='effectiveGlyphRange' declared_type='NSRangePointer' type='^{_NSRange=II}' index='1'/>
      <retval declared_type='NSTextContainer*' type='@'/>
    </method>
    <method selector='textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <arg name='effectiveGlyphRange' declared_type='NSRangePointer' type='^{_NSRange=II}' index='1'/>
      <arg name='flag' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='NSTextContainer*' type='@'/>
    </method>
    <method selector='textContainers'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='textStorage'>
      <retval declared_type='NSTextStorage*' type='@'/>
    </method>
    <method selector='textStorage:edited:range:changeInLength:invalidatedRange:'>
      <arg name='str' declared_type='NSTextStorage*' type='@' index='0'/>
      <arg name='editedMask' declared_type='unsigned int' type='I' index='1'/>
      <arg name='newCharRange' declared_type='NSRange' type='{_NSRange=II}' index='2'/>
      <arg name='delta' declared_type='int' type='i' index='3'/>
      <arg name='invalidatedCharRange' declared_type='NSRange' type='{_NSRange=II}' index='4'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textViewForBeginningOfSelection'>
      <retval declared_type='NSTextView*' type='@'/>
    </method>
    <method selector='typesetter'>
      <retval declared_type='NSTypesetter*' type='@'/>
    </method>
    <method selector='typesetterBehavior'>
      <retval declared_type='NSTypesetterBehavior' type='i'/>
    </method>
    <method selector='underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='underlineVal' declared_type='int' type='i' index='1'/>
      <arg name='lineRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <arg name='lineGlyphRange' declared_type='NSRange' type='{_NSRange=II}' index='3'/>
      <arg name='containerOrigin' declared_type='NSPoint' type='{_NSPoint=ff}' index='4'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='usedRectForTextContainer:'>
      <arg name='container' declared_type='NSTextContainer*' type='@' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='usesScreenFonts'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSLevelIndicator'>
    <method selector='criticalValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='maxValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='minValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='numberOfMajorTickMarks'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='numberOfTickMarks'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='rectOfTickMarkAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='setCriticalValue:'>
      <arg name='criticalValue' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMaxValue:'>
      <arg name='maxValue' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMinValue:'>
      <arg name='minValue' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNumberOfMajorTickMarks:'>
      <arg name='count' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNumberOfTickMarks:'>
      <arg name='count' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTickMarkPosition:'>
      <arg name='position' declared_type='NSTickMarkPosition' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setWarningValue:'>
      <arg name='warningValue' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tickMarkPosition'>
      <retval declared_type='NSTickMarkPosition' type='i'/>
    </method>
    <method selector='tickMarkValueAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='warningValue'>
      <retval declared_type='double' type='d'/>
    </method>
  </class>
  <class name='NSLevelIndicatorCell'>
    <method selector='criticalValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='initWithLevelIndicatorStyle:'>
      <arg name='levelIndicatorStyle' declared_type='NSLevelIndicatorStyle' type='i' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='levelIndicatorStyle'>
      <retval declared_type='NSLevelIndicatorStyle' type='i'/>
    </method>
    <method selector='maxValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='minValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='numberOfMajorTickMarks'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='numberOfTickMarks'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='rectOfTickMarkAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='setCriticalValue:'>
      <arg name='criticalValue' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLevelIndicatorStyle:'>
      <arg name='levelIndicatorStyle' declared_type='NSLevelIndicatorStyle' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMaxValue:'>
      <arg name='maxValue' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMinValue:'>
      <arg name='minValue' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNumberOfMajorTickMarks:'>
      <arg name='count' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNumberOfTickMarks:'>
      <arg name='count' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTickMarkPosition:'>
      <arg name='position' declared_type='NSTickMarkPosition' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setWarningValue:'>
      <arg name='warningValue' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tickMarkPosition'>
      <retval declared_type='NSTickMarkPosition' type='i'/>
    </method>
    <method selector='tickMarkValueAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='warningValue'>
      <retval declared_type='double' type='d'/>
    </method>
  </class>
  <class name='NSMatrix'>
    <method selector='acceptsFirstMouse:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='addColumn'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addColumnWithCells:'>
      <arg name='newCells' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addRow'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addRowWithCells:'>
      <arg name='newCells' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='allowsEmptySelection'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='autosizesCells'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='backgroundColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='cellAtRow:column:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <arg name='col' declared_type='int' type='i' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='cellBackgroundColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='cellClass'>
      <retval declared_type='Class' type='#'/>
    </method>
    <method selector='cellFrameAtRow:column:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <arg name='col' declared_type='int' type='i' index='1'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='cellSize'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='cellWithTag:'>
      <arg name='anInt' declared_type='int' type='i' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='cells'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='deselectAllCells'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='deselectSelectedCell'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='doubleAction'>
      <retval declared_type='SEL' type=':'/>
    </method>
    <method selector='drawCellAtRow:column:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <arg name='col' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawsBackground'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='drawsCellBackground'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='getNumberOfRows:columns:'>
      <arg name='rowCount' declared_type='int*' type='^i' index='0' type_modifier='o'/>
      <arg name='colCount' declared_type='int*' type='^i' index='1' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='getRow:column:forPoint:'>
      <arg name='row' declared_type='int*' type='^i' index='0' type_modifier='o'/>
      <arg name='col' declared_type='int*' type='^i' index='1' type_modifier='o'/>
      <arg name='aPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='getRow:column:ofCell:'>
      <arg name='row' declared_type='int*' type='^i' index='0' type_modifier='o'/>
      <arg name='col' declared_type='int*' type='^i' index='1' type_modifier='o'/>
      <arg name='aCell' declared_type='NSCell*' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='highlightCell:atRow:column:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <arg name='row' declared_type='int' type='i' index='1'/>
      <arg name='col' declared_type='int' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='initWithFrame:'>
      <arg name='frameRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithFrame:mode:cellClass:numberOfRows:numberOfColumns:'>
      <arg name='frameRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='aMode' declared_type='int' type='i' index='1'/>
      <arg name='factoryId' declared_type='Class' type='#' index='2'/>
      <arg name='rowsHigh' declared_type='int' type='i' index='3'/>
      <arg name='colsWide' declared_type='int' type='i' index='4'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithFrame:mode:prototype:numberOfRows:numberOfColumns:'>
      <arg name='frameRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='aMode' declared_type='int' type='i' index='1'/>
      <arg name='aCell' declared_type='NSCell*' type='@' index='2'/>
      <arg name='rowsHigh' declared_type='int' type='i' index='3'/>
      <arg name='colsWide' declared_type='int' type='i' index='4'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='insertColumn:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertColumn:withCells:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <arg name='newCells' declared_type='NSArray*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertRow:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertRow:withCells:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <arg name='newCells' declared_type='NSArray*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='intercellSpacing'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='isAutoscroll'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isSelectionByRect'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='keyCell'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='makeCellAtRow:column:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <arg name='col' declared_type='int' type='i' index='1'/>
      <retval declared_type='NSCell*' type='@'/>
    </method>
    <method selector='mode'>
      <retval declared_type='NSMatrixMode' type='i'/>
    </method>
    <method selector='mouseDown:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='mouseDownFlags'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='numberOfColumns'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='numberOfRows'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='performKeyEquivalent:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='prototype'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='putCell:atRow:column:'>
      <arg name='newCell' declared_type='NSCell*' type='@' index='0'/>
      <arg name='row' declared_type='int' type='i' index='1'/>
      <arg name='col' declared_type='int' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeColumn:'>
      <arg name='col' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeRow:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='renewRows:columns:'>
      <arg name='newRows' declared_type='int' type='i' index='0'/>
      <arg name='newCols' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='resetCursorRects'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scrollCellToVisibleAtRow:column:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <arg name='col' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectAll:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectCellAtRow:column:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <arg name='col' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectCellWithTag:'>
      <arg name='anInt' declared_type='int' type='i' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='selectText:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectTextAtRow:column:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <arg name='col' declared_type='int' type='i' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='selectedCell'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='selectedCells'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='selectedColumn'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='selectedRow'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='sendAction'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='sendAction:to:forAllCells:'>
      <arg name='aSelector' declared_type='SEL' type=':' index='0'/>
      <arg name='anObject' declared_type='id' type='@' index='1'/>
      <arg name='flag' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sendDoubleAction'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAllowsEmptySelection:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAutoscroll:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAutosizesCells:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBackgroundColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCellBackgroundColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCellClass:'>
      <arg name='factoryId' declared_type='Class' type='#' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCellSize:'>
      <arg name='aSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDoubleAction:'>
      <arg name='aSelector' sel_of_type='v12@0:4@8' declared_type='SEL' type=':' index='0' sel_of_type64='v24@0:8@16'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDrawsBackground:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDrawsCellBackground:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIntercellSpacing:'>
      <arg name='aSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setKeyCell:'>
      <arg name='keyCell' declared_type='NSCell*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMode:'>
      <arg name='aMode' declared_type='NSMatrixMode' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPrototype:'>
      <arg name='aCell' declared_type='NSCell*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setScrollable:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelectionByRect:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelectionFrom:to:anchor:highlight:'>
      <arg name='startPos' declared_type='int' type='i' index='0'/>
      <arg name='endPos' declared_type='int' type='i' index='1'/>
      <arg name='anchorPos' declared_type='int' type='i' index='2'/>
      <arg name='lit' declared_type='BOOL' type='B' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setState:atRow:column:'>
      <arg name='value' declared_type='int' type='i' index='0'/>
      <arg name='row' declared_type='int' type='i' index='1'/>
      <arg name='col' declared_type='int' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTabKeyTraversesCells:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setToolTip:forCell:'>
      <arg name='toolTipString' declared_type='NSString*' type='@' index='0'/>
      <arg name='cell' declared_type='NSCell*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setValidateSize:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sizeToCells'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sortUsingFunction:context:'>
      <arg name='compare' function_pointer='true' declared_type='int (*)(id, id, void *)' type='^?' index='0' type_modifier='n'>
        <arg declared_type='id' type='@'/>
        <arg declared_type='id' type='@'/>
        <arg declared_type='void*' type='^v'/>
        <retval declared_type='int' type='i'/>
      </arg>
      <arg name='context' declared_type='void*' type='^v' index='1' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sortUsingSelector:'>
      <arg name='comparator' sel_of_type='i12@0:4@8' declared_type='SEL' type=':' index='0' sel_of_type64='i24@0:8@16'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tabKeyTraversesCells'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='textDidBeginEditing:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textDidChange:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textDidEndEditing:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textShouldBeginEditing:'>
      <arg name='textObject' declared_type='NSText*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='textShouldEndEditing:'>
      <arg name='textObject' declared_type='NSText*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='toolTipForCell:'>
      <arg name='cell' declared_type='NSCell*' type='@' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
  </class>
  <class name='NSMenu'>
    <method selector='addItem:'>
      <arg name='newItem' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addItemWithTitle:action:keyEquivalent:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <arg name='aSelector' sel_of_type='v12@0:4@8' declared_type='SEL' type=':' index='1' sel_of_type64='v24@0:8@16'/>
      <arg name='charCode' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='attachedMenu'>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='autoenablesItems'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='contextMenuRepresentation'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='helpRequested:'>
      <arg name='eventPtr' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='indexOfItem:'>
      <arg name='index' declared_type='id' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='indexOfItemWithRepresentedObject:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='indexOfItemWithSubmenu:'>
      <arg name='submenu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='indexOfItemWithTag:'>
      <arg name='aTag' declared_type='int' type='i' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='indexOfItemWithTarget:andAction:'>
      <arg name='target' declared_type='id' type='@' index='0'/>
      <arg name='actionSelector' sel_of_type='v12@0:4@8' declared_type='SEL' type=':' index='1' sel_of_type64='v24@0:8@16'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='indexOfItemWithTitle:'>
      <arg name='aTitle' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='initWithTitle:'>
      <arg name='aTitle' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='insertItem:atIndex:'>
      <arg name='newItem' declared_type='id' type='@' index='0'/>
      <arg name='index' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertItemWithTitle:action:keyEquivalent:atIndex:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <arg name='aSelector' sel_of_type='v12@0:4@8' declared_type='SEL' type=':' index='1' sel_of_type64='v24@0:8@16'/>
      <arg name='charCode' declared_type='NSString*' type='@' index='2'/>
      <arg name='index' declared_type='int' type='i' index='3'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isAttached'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isTornOff'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='itemArray'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='itemAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='itemChanged:'>
      <arg name='item' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='itemWithTag:'>
      <arg name='tag' declared_type='int' type='i' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='itemWithTitle:'>
      <arg name='aTitle' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='locationForSubmenu:'>
      <arg name='aSubmenu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method selector='menuBarHeight'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='menuBarVisible'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='menuChangedMessagesEnabled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='menuRepresentation'>
      <retval declared_type='id' type='@'/>
    </method>
    <method class_method='true' selector='menuZone'>
      <retval declared_type='NSZone*' type='^{_NSZone=}'/>
    </method>
    <method selector='numberOfItems'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='performActionForItemAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='performKeyEquivalent:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method class_method='true' selector='popUpContextMenu:withEvent:forView:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <arg name='event' declared_type='NSEvent*' type='@' index='1'/>
      <arg name='view' declared_type='NSView*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='popUpContextMenu:withEvent:forView:withFont:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <arg name='event' declared_type='NSEvent*' type='@' index='1'/>
      <arg name='view' declared_type='NSView*' type='@' index='2'/>
      <arg name='font' declared_type='NSFont*' type='@' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeItem:'>
      <arg name='item' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeItemAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAutoenablesItems:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setContextMenuRepresentation:'>
      <arg name='menuRep' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setMenuBarVisible:'>
      <arg name='visible' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMenuChangedMessagesEnabled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMenuRepresentation:'>
      <arg name='menuRep' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setMenuZone:'>
      <arg name='aZone' declared_type='NSZone*' type='^{_NSZone=}' index='0' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSubmenu:forItem:'>
      <arg name='aMenu' declared_type='NSMenu*' type='@' index='0'/>
      <arg name='anItem' declared_type='id' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSupermenu:'>
      <arg name='supermenu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTearOffMenuRepresentation:'>
      <arg name='menuRep' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitle:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sizeToFit'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='submenuAction:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='supermenu'>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='tearOffMenuRepresentation'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='title'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='update'>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSMenuItem'>
    <method selector='action'>
      <retval declared_type='SEL' type=':'/>
    </method>
    <method selector='attributedTitle'>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method selector='hasSubmenu'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='image'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='indentationLevel'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='initWithTitle:action:keyEquivalent:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <arg name='aSelector' sel_of_type='v12@0:4@8' declared_type='SEL' type=':' index='1' sel_of_type64='v24@0:8@16'/>
      <arg name='charCode' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isAlternate'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isEnabled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isSeparatorItem'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='keyEquivalent'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='keyEquivalentModifierMask'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='menu'>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='mixedStateImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='mnemonic'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='mnemonicLocation'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='offStateImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='onStateImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='representedObject'>
      <retval declared_type='id' type='@'/>
    </method>
    <method class_method='true' selector='separatorItem'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='setAction:'>
      <arg name='aSelector' sel_of_type='v12@0:4@8' declared_type='SEL' type=':' index='0' sel_of_type64='v24@0:8@16'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAlternate:'>
      <arg name='isAlternate' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAttributedTitle:'>
      <arg name='string' declared_type='NSAttributedString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEnabled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImage:'>
      <arg name='menuImage' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIndentationLevel:'>
      <arg name='indentationLevel' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setKeyEquivalent:'>
      <arg name='aKeyEquivalent' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setKeyEquivalentModifierMask:'>
      <arg name='mask' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMenu:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMixedStateImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMnemonicLocation:'>
      <arg name='location' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setOffStateImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setOnStateImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setRepresentedObject:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setState:'>
      <arg name='state' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSubmenu:'>
      <arg name='submenu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTag:'>
      <arg name='anInt' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTarget:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitle:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleWithMnemonic:'>
      <arg name='stringWithAmpersand' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setToolTip:'>
      <arg name='toolTip' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setUsesUserKeyEquivalents:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='state'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='submenu'>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='tag'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='target'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='title'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='toolTip'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='userKeyEquivalent'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method class_method='true' selector='usesUserKeyEquivalents'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSMenuItemCell'>
    <method selector='calcSize'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawBorderAndBackgroundWithFrame:inView:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawImageWithFrame:inView:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawKeyEquivalentWithFrame:inView:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawSeparatorItemWithFrame:inView:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawStateImageWithFrame:inView:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawTitleWithFrame:inView:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='imageRectForBounds:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='imageWidth'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='isHighlighted'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='keyEquivalentRectForBounds:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='keyEquivalentWidth'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='menuItem'>
      <retval declared_type='NSMenuItem*' type='@'/>
    </method>
    <method selector='menuView'>
      <retval declared_type='NSMenuView*' type='@'/>
    </method>
    <method selector='needsDisplay'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='needsSizing'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setHighlighted:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMenuItem:'>
      <arg name='item' declared_type='NSMenuItem*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMenuView:'>
      <arg name='menuView' declared_type='NSMenuView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNeedsDisplay:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNeedsSizing:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='stateImageRectForBounds:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='stateImageWidth'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='tag'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='titleRectForBounds:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='titleWidth'>
      <retval declared_type='float' type='f'/>
    </method>
  </class>
  <class name='NSMovieView'>
    <method selector='clear:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='copy:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='cut:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='delete:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='gotoBeginning:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='gotoEnd:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='gotoPosterFrame:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='isControllerVisible'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isEditable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isMuted'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isPlaying'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='loopMode'>
      <retval declared_type='NSQTMovieLoopMode' type='i'/>
    </method>
    <method selector='movie'>
      <retval declared_type='NSMovie*' type='@'/>
    </method>
    <method selector='movieController'>
      <retval declared_type='void*' type='^v'/>
    </method>
    <method selector='movieRect'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='paste:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='playsEveryFrame'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='playsSelectionOnly'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='rate'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='resizeWithMagnification:'>
      <arg name='magnification' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectAll:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEditable:'>
      <arg name='editable' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLoopMode:'>
      <arg name='mode' declared_type='NSQTMovieLoopMode' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMovie:'>
      <arg name='movie' declared_type='NSMovie*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMuted:'>
      <arg name='mute' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPlaysEveryFrame:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPlaysSelectionOnly:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setRate:'>
      <arg name='rate' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setVolume:'>
      <arg name='volume' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='showController:adjustingSize:'>
      <arg name='show' declared_type='BOOL' type='B' index='0'/>
      <arg name='adjustSize' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sizeForMagnification:'>
      <arg name='magnification' declared_type='float' type='f' index='0'/>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='start:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='stepBack:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='stepForward:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='stop:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='volume'>
      <retval declared_type='float' type='f'/>
    </method>
  </class>
  <class name='NSMutableAttributedString'>
    <method selector='applyFontTraits:range:'>
      <arg name='traitMask' declared_type='NSFontTraitMask' type='I' index='0'/>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='fixAttachmentAttributeInRange:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='fixAttributesInRange:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='fixFontAttributeInRange:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='fixParagraphStyleAttributeInRange:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='readFromData:options:documentAttributes:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <arg name='options' declared_type='NSDictionary*' type='@' index='1'/>
      <arg name='dict' declared_type='NSDictionary**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='readFromData:options:documentAttributes:error:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <arg name='opts' declared_type='NSDictionary*' type='@' index='1'/>
      <arg name='dict' declared_type='NSDictionary**' type='^@' index='2' type_modifier='o'/>
      <arg name='error' declared_type='NSError**' type='^@' index='3' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='readFromURL:options:documentAttributes:'>
      <arg name='url' declared_type='NSURL*' type='@' index='0'/>
      <arg name='options' declared_type='NSDictionary*' type='@' index='1'/>
      <arg name='dict' declared_type='NSDictionary**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='readFromURL:options:documentAttributes:error:'>
      <arg name='url' declared_type='NSURL*' type='@' index='0'/>
      <arg name='opts' declared_type='NSDictionary*' type='@' index='1'/>
      <arg name='dict' declared_type='NSDictionary**' type='^@' index='2' type_modifier='o'/>
      <arg name='error' declared_type='NSError**' type='^@' index='3' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setAlignment:range:'>
      <arg name='alignment' declared_type='NSTextAlignment' type='i' index='0'/>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBaseWritingDirection:range:'>
      <arg name='writingDirection' declared_type='NSWritingDirection' type='i' index='0'/>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='subscriptRange:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='superscriptRange:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='unscriptRange:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='updateAttachmentsFromPath:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSMutableParagraphStyle'>
    <method selector='addTabStop:'>
      <arg name='anObject' declared_type='NSTextTab*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeTabStop:'>
      <arg name='anObject' declared_type='NSTextTab*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAlignment:'>
      <arg name='alignment' declared_type='NSTextAlignment' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBaseWritingDirection:'>
      <arg name='writingDirection' declared_type='NSWritingDirection' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDefaultTabInterval:'>
      <arg name='aFloat' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFirstLineHeadIndent:'>
      <arg name='aFloat' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHeadIndent:'>
      <arg name='aFloat' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHeaderLevel:'>
      <arg name='level' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHyphenationFactor:'>
      <arg name='aFactor' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLineBreakMode:'>
      <arg name='mode' declared_type='NSLineBreakMode' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLineHeightMultiple:'>
      <arg name='aFloat' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLineSpacing:'>
      <arg name='aFloat' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMaximumLineHeight:'>
      <arg name='aFloat' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMinimumLineHeight:'>
      <arg name='aFloat' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setParagraphSpacing:'>
      <arg name='aFloat' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setParagraphSpacingBefore:'>
      <arg name='aFloat' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setParagraphStyle:'>
      <arg name='obj' declared_type='NSParagraphStyle*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTabStops:'>
      <arg name='array' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTailIndent:'>
      <arg name='aFloat' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTextBlocks:'>
      <arg name='array' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTextLists:'>
      <arg name='array' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTighteningFactorForTruncation:'>
      <arg name='aFactor' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSNib'>
    <method selector='initWithContentsOfURL:'>
      <arg name='nibFileURL' declared_type='NSURL*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithNibNamed:bundle:'>
      <arg name='nibName' declared_type='NSString*' type='@' index='0'/>
      <arg name='bundle' declared_type='NSBundle*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='instantiateNibWithExternalNameTable:'>
      <arg name='externalNameTable' declared_type='NSDictionary*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='instantiateNibWithOwner:topLevelObjects:'>
      <arg name='owner' declared_type='id' type='@' index='0'/>
      <arg name='topLevelObjects' declared_type='NSArray**' type='^@' index='1' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSNibConnector'>
    <method selector='destination'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='establishConnection'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='label'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='replaceObject:withObject:'>
      <arg name='oldObject' declared_type='id' type='@' index='0'/>
      <arg name='newObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDestination:'>
      <arg name='destination' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLabel:'>
      <arg name='label' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSource:'>
      <arg name='source' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='source'>
      <retval declared_type='id' type='@'/>
    </method>
  </class>
  <class name='NSNibControlConnector'>
    <method selector='establishConnection'>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSNibOutletConnector'>
    <method selector='establishConnection'>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSObject'>
    <method selector='accessibilityActionDescription:'>
      <arg name='action' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='accessibilityActionNames'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='accessibilityAttributeNames'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='accessibilityAttributeValue:'>
      <arg name='attribute' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='accessibilityAttributeValue:forParameter:'>
      <arg name='attribute' declared_type='NSString*' type='@' index='0'/>
      <arg name='parameter' declared_type='id' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='accessibilityFocusedUIElement'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='accessibilityHitTest:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='accessibilityIsAttributeSettable:'>
      <arg name='attribute' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='accessibilityIsIgnored'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='accessibilityParameterizedAttributeNames'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='accessibilityPerformAction:'>
      <arg name='action' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='accessibilitySetOverrideValue:forAttribute:'>
      <arg name='value' declared_type='id' type='@' index='0'/>
      <arg name='attribute' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='accessibilitySetValue:forAttribute:'>
      <arg name='value' declared_type='id' type='@' index='0'/>
      <arg name='attribute' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='action'>
      <retval declared_type='SEL' type=':'/>
    </method>
    <method selector='activeConversationChanged:toNewConversation:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='newConversation' declared_type='long' type='l' type64='q' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='activeConversationWillChange:fromOldConversation:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='oldConversation' declared_type='long' type='l' type64='q' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='alertShowHelp:'>
      <arg name='alert' declared_type='NSAlert*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='alphaControlAddedOrRemoved:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='animation:didReachProgressMark:'>
      <arg name='animation' declared_type='NSAnimation*' type='@' index='0'/>
      <arg name='progress' declared_type='NSAnimationProgress' type='f' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='animation:valueForProgress:'>
      <arg name='animation' declared_type='NSAnimation*' type='@' index='0'/>
      <arg name='progress' declared_type='NSAnimationProgress' type='f' index='1'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='animationDidEnd:'>
      <arg name='animation' declared_type='NSAnimation*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='animationDidStop:'>
      <arg name='animation' declared_type='NSAnimation*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='animationShouldStart:'>
      <arg name='animation' declared_type='NSAnimation*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='application:delegateHandlesKey:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <arg name='key' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='application:openFile:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <arg name='filename' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='application:openFileWithoutUI:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='filename' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='application:openFiles:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <arg name='filenames' declared_type='NSArray*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='application:openTempFile:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <arg name='filename' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='application:printFile:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <arg name='filename' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='application:printFiles:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <arg name='filenames' declared_type='NSArray*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='application:printFiles:withSettings:showPrintPanels:'>
      <arg name='application' declared_type='NSApplication*' type='@' index='0'/>
      <arg name='fileNames' declared_type='NSArray*' type='@' index='1'/>
      <arg name='printSettings' declared_type='NSDictionary*' type='@' index='2'/>
      <arg name='showPrintPanels' declared_type='BOOL' type='B' index='3'/>
      <retval declared_type='NSApplicationPrintReply' type='i'/>
    </method>
    <method selector='application:willPresentError:'>
      <arg name='application' declared_type='NSApplication*' type='@' index='0'/>
      <arg name='error' declared_type='NSError*' type='@' index='1'/>
      <retval declared_type='NSError*' type='@'/>
    </method>
    <method selector='applicationDidBecomeActive:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='applicationDidChangeScreenParameters:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='applicationDidFinishLaunching:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='applicationDidHide:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='applicationDidResignActive:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='applicationDidUnhide:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='applicationDidUpdate:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='applicationDockMenu:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='applicationOpenUntitledFile:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='applicationShouldHandleReopen:hasVisibleWindows:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <arg name='flag' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='applicationShouldOpenUntitledFile:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='applicationShouldTerminate:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <retval declared_type='NSApplicationTerminateReply' type='i'/>
    </method>
    <method selector='applicationShouldTerminateAfterLastWindowClosed:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='applicationWillBecomeActive:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='applicationWillFinishLaunching:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='applicationWillHide:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='applicationWillResignActive:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='applicationWillTerminate:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='applicationWillUnhide:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='applicationWillUpdate:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='attachColorList:'>
      <arg name='colorList' declared_type='NSColorList*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='attachment'>
      <retval declared_type='NSTextAttachment*' type='@'/>
    </method>
    <method selector='attributedString'>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method selector='attributedSubstringFromRange:'>
      <arg name='theRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method selector='attributedTitle'>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method selector='awakeFromNib'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='bind:toObject:withKeyPath:options:'>
      <arg name='binding' declared_type='NSString*' type='@' index='0'/>
      <arg name='observable' declared_type='id' type='@' index='1'/>
      <arg name='keyPath' declared_type='NSString*' type='@' index='2'/>
      <arg name='options' declared_type='NSDictionary*' type='@' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='browser:createRowsForColumn:inMatrix:'>
      <arg name='sender' declared_type='NSBrowser*' type='@' index='0'/>
      <arg name='column' declared_type='int' type='i' index='1'/>
      <arg name='matrix' declared_type='NSMatrix*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='browser:isColumnValid:'>
      <arg name='sender' declared_type='NSBrowser*' type='@' index='0'/>
      <arg name='column' declared_type='int' type='i' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='browser:numberOfRowsInColumn:'>
      <arg name='sender' declared_type='NSBrowser*' type='@' index='0'/>
      <arg name='column' declared_type='int' type='i' index='1'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='browser:selectCellWithString:inColumn:'>
      <arg name='sender' declared_type='NSBrowser*' type='@' index='0'/>
      <arg name='title' declared_type='NSString*' type='@' index='1'/>
      <arg name='column' declared_type='int' type='i' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='browser:selectRow:inColumn:'>
      <arg name='sender' declared_type='NSBrowser*' type='@' index='0'/>
      <arg name='row' declared_type='int' type='i' index='1'/>
      <arg name='column' declared_type='int' type='i' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='browser:shouldSizeColumn:forUserResize:toWidth:'>
      <arg name='browser' declared_type='NSBrowser*' type='@' index='0'/>
      <arg name='columnIndex' declared_type='int' type='i' index='1'/>
      <arg name='forUserResize' declared_type='BOOL' type='B' index='2'/>
      <arg name='suggestedWidth' declared_type='float' type='f' index='3'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='browser:sizeToFitWidthOfColumn:'>
      <arg name='browser' declared_type='NSBrowser*' type='@' index='0'/>
      <arg name='columnIndex' declared_type='int' type='i' index='1'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='browser:titleOfColumn:'>
      <arg name='sender' declared_type='NSBrowser*' type='@' index='0'/>
      <arg name='column' declared_type='int' type='i' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='browser:willDisplayCell:atRow:column:'>
      <arg name='sender' declared_type='NSBrowser*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='row' declared_type='int' type='i' index='2'/>
      <arg name='column' declared_type='int' type='i' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='browserColumnConfigurationDidChange:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='browserDidScroll:'>
      <arg name='sender' declared_type='NSBrowser*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='browserWillScroll:'>
      <arg name='sender' declared_type='NSBrowser*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='canBeDisabled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='cellBaselineOffset'>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method selector='cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
      <arg name='textContainer' declared_type='NSTextContainer*' type='@' index='0'/>
      <arg name='lineFrag' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='position' declared_type='NSPoint' type='{_NSPoint=ff}' index='2'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='3'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='cellSize'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='changeColor:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='changeFont:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='changeSpelling:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='characterIndexForPoint:'>
      <arg name='thePoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='comboBox:completedString:'>
      <arg name='aComboBox' declared_type='NSComboBox*' type='@' index='0'/>
      <arg name='string' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='comboBox:indexOfItemWithStringValue:'>
      <arg name='aComboBox' declared_type='NSComboBox*' type='@' index='0'/>
      <arg name='string' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='comboBox:objectValueForItemAtIndex:'>
      <arg name='aComboBox' declared_type='NSComboBox*' type='@' index='0'/>
      <arg name='index' declared_type='int' type='i' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='comboBoxCell:completedString:'>
      <arg name='aComboBoxCell' declared_type='NSComboBoxCell*' type='@' index='0'/>
      <arg name='uncompletedString' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='comboBoxCell:indexOfItemWithStringValue:'>
      <arg name='aComboBoxCell' declared_type='NSComboBoxCell*' type='@' index='0'/>
      <arg name='string' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='comboBoxCell:objectValueForItemAtIndex:'>
      <arg name='aComboBoxCell' declared_type='NSComboBoxCell*' type='@' index='0'/>
      <arg name='index' declared_type='int' type='i' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='comboBoxSelectionDidChange:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='comboBoxSelectionIsChanging:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='comboBoxWillDismiss:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='comboBoxWillPopUp:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='commitEditing'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
      <arg name='delegate' declared_type='id' type='@' index='0'/>
      <arg name='didCommitSelector' sel_of_type='v20@0:4@8B12^v16' declared_type='SEL' type=':' index='1' sel_of_type64='v36@0:8@16B24^v28'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='2' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='concludeDragOperation:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='control:didFailToFormatString:errorDescription:'>
      <arg name='control' declared_type='NSControl*' type='@' index='0'/>
      <arg name='string' declared_type='NSString*' type='@' index='1'/>
      <arg name='error' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='control:didFailToValidatePartialString:errorDescription:'>
      <arg name='control' declared_type='NSControl*' type='@' index='0'/>
      <arg name='string' declared_type='NSString*' type='@' index='1'/>
      <arg name='error' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='control:isValidObject:'>
      <arg name='control' declared_type='NSControl*' type='@' index='0'/>
      <arg name='obj' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='control:textShouldBeginEditing:'>
      <arg name='control' declared_type='NSControl*' type='@' index='0'/>
      <arg name='fieldEditor' declared_type='NSText*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='control:textShouldEndEditing:'>
      <arg name='control' declared_type='NSControl*' type='@' index='0'/>
      <arg name='fieldEditor' declared_type='NSText*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='control:textView:completions:forPartialWordRange:indexOfSelectedItem:'>
      <arg name='control' declared_type='NSControl*' type='@' index='0'/>
      <arg name='textView' declared_type='NSTextView*' type='@' index='1'/>
      <arg name='words' declared_type='NSArray*' type='@' index='2'/>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='3'/>
      <arg name='index' declared_type='int*' type='^i' index='4' type_modifier='o'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='control:textView:doCommandBySelector:'>
      <arg name='control' declared_type='NSControl*' type='@' index='0'/>
      <arg name='textView' declared_type='NSTextView*' type='@' index='1'/>
      <arg name='commandSelector' declared_type='SEL' type=':' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='controlTextDidBeginEditing:'>
      <arg name='obj' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='controlTextDidChange:'>
      <arg name='obj' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='controlTextDidEndEditing:'>
      <arg name='obj' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='conversationIdentifier'>
      <retval declared_type='long' type='l' type64='q'/>
    </method>
    <method selector='currentMode'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='datePickerCell:validateProposedDateValue:timeInterval:'>
      <arg name='aDatePickerCell' declared_type='NSDatePickerCell*' type='@' index='0'/>
      <arg name='proposedDateValue' declared_type='NSDate**' type='^@' index='1' type_modifier='o'/>
      <arg name='proposedTimeInterval' declared_type='NSTimeInterval*' type='^d' index='2' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='defaultPlaceholderForMarker:withBinding:'>
      <arg name='marker' declared_type='id' type='@' index='0'/>
      <arg name='binding' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='detachColorList:'>
      <arg name='colorList' declared_type='NSColorList*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='discardEditing'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='doCommandBySelector:'>
      <arg name='aSelector' declared_type='SEL' type=':' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='doCommandBySelector:client:'>
      <arg name='aSelector' declared_type='SEL' type=':' index='0'/>
      <arg name='sender' declared_type='id' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='draggedImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='draggedImage:beganAt:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='screenPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='draggedImage:endedAt:deposited:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='screenPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='flag' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='draggedImage:endedAt:operation:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='screenPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='operation' declared_type='NSDragOperation' type='I' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='draggedImage:movedTo:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='screenPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='draggedImageLocation'>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method selector='draggingDestinationWindow'>
      <retval declared_type='NSWindow*' type='@'/>
    </method>
    <method selector='draggingEnded:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='draggingEntered:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='NSDragOperation' type='I'/>
    </method>
    <method selector='draggingExited:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='draggingLocation'>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method selector='draggingPasteboard'>
      <retval declared_type='NSPasteboard*' type='@'/>
    </method>
    <method selector='draggingSequenceNumber'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='draggingSource'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='draggingSourceOperationMask'>
      <retval declared_type='NSDragOperation' type='I'/>
    </method>
    <method selector='draggingSourceOperationMaskForLocal:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='NSDragOperation' type='I'/>
    </method>
    <method selector='draggingUpdated:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='NSDragOperation' type='I'/>
    </method>
    <method selector='drawWithFrame:inView:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawWithFrame:inView:characterIndex:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawWithFrame:inView:characterIndex:layoutManager:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='2'/>
      <arg name='layoutManager' declared_type='NSLayoutManager*' type='@' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawerDidClose:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawerDidOpen:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawerShouldClose:'>
      <arg name='sender' declared_type='NSDrawer*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='drawerShouldOpen:'>
      <arg name='sender' declared_type='NSDrawer*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='drawerWillClose:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawerWillOpen:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawerWillResizeContents:toSize:'>
      <arg name='sender' declared_type='NSDrawer*' type='@' index='0'/>
      <arg name='contentSize' declared_type='NSSize' type='{_NSSize=ff}' index='1'/>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method class_method='true' selector='exposeBinding:'>
      <arg name='binding' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='exposedBindings'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='firstRectForCharacterRange:'>
      <arg name='theRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='fontManager:willIncludeFont:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='fontName' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='hasMarkedText'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='hasSubmenu'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='highlight:withFrame:inView:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='ignoreModifierKeysWhileDragging'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='ignoreSpelling:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='image'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='image:didLoadPartOfRepresentation:withValidRows:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='rep' declared_type='NSImageRep*' type='@' index='1'/>
      <arg name='rows' declared_type='int' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='image:didLoadRepresentation:withStatus:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='rep' declared_type='NSImageRep*' type='@' index='1'/>
      <arg name='status' declared_type='NSImageLoadStatus' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='image:didLoadRepresentationHeader:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='rep' declared_type='NSImageRep*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='image:willLoadRepresentation:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='rep' declared_type='NSImageRep*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='imageDidNotDraw:inRect:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='indentationLevel'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='infoForBinding:'>
      <arg name='binding' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='initWithPickerMask:colorPanel:'>
      <arg name='mask' declared_type='int' type='i' index='0'/>
      <arg name='owningColorPanel' declared_type='NSColorPanel*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithTitle:action:keyEquivalent:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <arg name='aSelector' declared_type='SEL' type=':' index='1'/>
      <arg name='charCode' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='inputClientBecomeActive:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='inputClientDisabled:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='inputClientEnabled:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='inputClientResignActive:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:'>
      <arg name='glyphs' c_array_length_in_arg='1' declared_type='NSGlyph*' type='^I' const='true' index='0' type_modifier='n'/>
      <arg name='length' declared_type='unsigned int' type='I' index='1'/>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='2'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertNewButtonImage:in:'>
      <arg name='newButtonImage' declared_type='NSImage*' type='@' index='0'/>
      <arg name='buttonCell' declared_type='NSButtonCell*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertText:'>
      <arg name='aString' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertText:client:'>
      <arg name='aString' declared_type='id' type='@' index='0'/>
      <arg name='sender' declared_type='id' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='isAlternate'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isEnabled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isSeparatorItem'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='keyEquivalent'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='keyEquivalentModifierMask'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='layoutManager:didCompleteLayoutForTextContainer:atEnd:'>
      <arg name='layoutManager' declared_type='NSLayoutManager*' type='@' index='0'/>
      <arg name='textContainer' declared_type='NSTextContainer*' type='@' index='1'/>
      <arg name='layoutFinishedFlag' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='layoutManagerDidInvalidateLayout:'>
      <arg name='sender' declared_type='NSLayoutManager*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='layoutOptions'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='markedRange'>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='markedTextAbandoned:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='markedTextSelectionChanged:client:'>
      <arg name='newSel' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='sender' declared_type='id' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='menu'>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='menu:updateItem:atIndex:shouldCancel:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <arg name='item' declared_type='NSMenuItem*' type='@' index='1'/>
      <arg name='index' declared_type='int' type='i' index='2'/>
      <arg name='shouldCancel' declared_type='BOOL' type='B' index='3'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='menuHasKeyEquivalent:forEvent:target:action:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <arg name='event' declared_type='NSEvent*' type='@' index='1'/>
      <arg name='target' declared_type='id*' type='^@' index='2' type_modifier='o'/>
      <arg name='action' declared_type='SEL*' type='^:' index='3' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='menuNeedsUpdate:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='mixedStateImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='mnemonic'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='mnemonicLocation'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='mouseDownOnCharacterIndex:atCoordinate:withModifier:client:'>
      <arg name='theIndex' declared_type='unsigned int' type='I' index='0'/>
      <arg name='thePoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='theFlags' declared_type='unsigned int' type='I' index='2'/>
      <arg name='sender' declared_type='id' type='@' index='3'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:'>
      <arg name='theIndex' declared_type='unsigned int' type='I' index='0'/>
      <arg name='thePoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='theFlags' declared_type='unsigned int' type='I' index='2'/>
      <arg name='sender' declared_type='id' type='@' index='3'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='mouseUpOnCharacterIndex:atCoordinate:withModifier:client:'>
      <arg name='theIndex' declared_type='unsigned int' type='I' index='0'/>
      <arg name='thePoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='theFlags' declared_type='unsigned int' type='I' index='2'/>
      <arg name='sender' declared_type='id' type='@' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='namesOfPromisedFilesDroppedAtDestination:'>
      <arg name='dropDestination' declared_type='NSURL*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='numberOfItemsInComboBox:'>
      <arg name='aComboBox' declared_type='NSComboBox*' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='numberOfItemsInComboBoxCell:'>
      <arg name='comboBoxCell' declared_type='NSComboBoxCell*' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='numberOfItemsInMenu:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='numberOfRowsInTableView:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='objectDidBeginEditing:'>
      <arg name='editor' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='objectDidEndEditing:'>
      <arg name='editor' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='offStateImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='onStateImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='outlineView:acceptDrop:item:childIndex:'>
      <arg name='olv' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='info' declared_type='id' type='@' index='1'/>
      <arg name='item' declared_type='id' type='@' index='2'/>
      <arg name='index' declared_type='int' type='i' index='3'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='outlineView:child:ofItem:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='index' declared_type='int' type='i' index='1'/>
      <arg name='item' declared_type='id' type='@' index='2'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='outlineView:didClickTableColumn:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='outlineView:didDragTableColumn:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='outlineView:heightOfRowByItem:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='item' declared_type='id' type='@' index='1'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='outlineView:isItemExpandable:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='item' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='outlineView:itemForPersistentObject:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='object' declared_type='id' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='outlineView:mouseDownInHeaderOfTableColumn:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:'>
      <arg name='olv' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='dropDestination' declared_type='NSURL*' type='@' index='1'/>
      <arg name='items' declared_type='NSArray*' type='@' index='2'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='outlineView:numberOfChildrenOfItem:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='item' declared_type='id' type='@' index='1'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='outlineView:objectValueForTableColumn:byItem:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <arg name='item' declared_type='id' type='@' index='2'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='outlineView:persistentObjectForItem:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='item' declared_type='id' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='outlineView:setObjectValue:forTableColumn:byItem:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='object' declared_type='id' type='@' index='1'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='2'/>
      <arg name='item' declared_type='id' type='@' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='outlineView:shouldCollapseItem:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='item' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='outlineView:shouldEditTableColumn:item:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <arg name='item' declared_type='id' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='outlineView:shouldExpandItem:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='item' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='outlineView:shouldSelectItem:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='item' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='outlineView:shouldSelectTableColumn:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='outlineView:sortDescriptorsDidChange:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='oldDescriptors' declared_type='NSArray*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:'>
      <arg name='ov' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='cell' declared_type='NSCell*' type='@' index='1'/>
      <arg name='rect' declared_type='NSRectPointer' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <arg name='tc' declared_type='NSTableColumn*' type='@' index='3'/>
      <arg name='item' declared_type='id' type='@' index='4'/>
      <arg name='mouseLocation' declared_type='NSPoint' type='{_NSPoint=ff}' index='5'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='outlineView:validateDrop:proposedItem:proposedChildIndex:'>
      <arg name='olv' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='info' declared_type='id' type='@' index='1'/>
      <arg name='item' declared_type='id' type='@' index='2'/>
      <arg name='index' declared_type='int' type='i' index='3'/>
      <retval declared_type='NSDragOperation' type='I'/>
    </method>
    <method selector='outlineView:willDisplayCell:forTableColumn:item:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='2'/>
      <arg name='item' declared_type='id' type='@' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='outlineView:willDisplayOutlineCell:forTableColumn:item:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='2'/>
      <arg name='item' declared_type='id' type='@' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='outlineView:writeItems:toPasteboard:'>
      <arg name='olv' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='items' declared_type='NSArray*' type='@' index='1'/>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='outlineViewColumnDidMove:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='outlineViewColumnDidResize:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='outlineViewItemDidCollapse:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='outlineViewItemDidExpand:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='outlineViewItemWillCollapse:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='outlineViewItemWillExpand:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='outlineViewSelectionDidChange:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='outlineViewSelectionIsChanging:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='panel:compareFilename:with:caseSensitive:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='name1' declared_type='NSString*' type='@' index='1'/>
      <arg name='name2' declared_type='NSString*' type='@' index='2'/>
      <arg name='caseSensitive' declared_type='BOOL' type='B' index='3'/>
      <retval declared_type='NSComparisonResult' type='i'/>
    </method>
    <method selector='panel:directoryDidChange:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='path' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='panel:isValidFilename:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='filename' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='panel:shouldShowFilename:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='filename' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='panel:userEnteredFilename:confirmed:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='filename' declared_type='NSString*' type='@' index='1'/>
      <arg name='okFlag' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='panel:willExpand:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='expanding' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='panelSelectionDidChange:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='pasteboard:provideDataForType:'>
      <arg name='sender' declared_type='NSPasteboard*' type='@' index='0'/>
      <arg name='type' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='pasteboardChangedOwner:'>
      <arg name='sender' declared_type='NSPasteboard*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='performDragOperation:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='prepareForDragOperation:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='provideNewButtonImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='provideNewView:'>
      <arg name='initialRequest' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='readSelectionFromPasteboard:'>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='representedObject'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='selectedRange'>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='selectionShouldChangeInOutlineView:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='selectionShouldChangeInTableView:'>
      <arg name='aTableView' declared_type='NSTableView*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method class_method='true' selector='separatorItem'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='setAction:'>
      <arg name='aSelector' declared_type='SEL' type=':' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAlternate:'>
      <arg name='isAlternate' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAttachment:'>
      <arg name='anObject' declared_type='NSTextAttachment*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAttributedTitle:'>
      <arg name='string' declared_type='NSAttributedString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setColor:'>
      <arg name='newColor' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setDefaultPlaceholder:forMarker:withBinding:'>
      <arg name='placeholder' declared_type='id' type='@' index='0'/>
      <arg name='marker' declared_type='id' type='@' index='1'/>
      <arg name='binding' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEnabled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImage:'>
      <arg name='menuImage' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIndentationLevel:'>
      <arg name='indentationLevel' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIntAttribute:value:forGlyphAtIndex:'>
      <arg name='attributeTag' declared_type='int' type='i' index='0'/>
      <arg name='val' declared_type='int' type='i' index='1'/>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setKeyEquivalent:'>
      <arg name='aKeyEquivalent' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setKeyEquivalentModifierMask:'>
      <arg name='mask' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMarkedText:selectedRange:'>
      <arg name='aString' declared_type='id' type='@' index='0'/>
      <arg name='selRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMenu:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMixedStateImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMnemonicLocation:'>
      <arg name='location' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMode:'>
      <arg name='mode' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setOffStateImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setOnStateImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setRepresentedObject:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setState:'>
      <arg name='state' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSubmenu:'>
      <arg name='submenu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTag:'>
      <arg name='anInt' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTarget:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitle:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleWithMnemonic:'>
      <arg name='stringWithAmpersand' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setToolTip:'>
      <arg name='toolTip' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setUsesUserKeyEquivalents:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='slideDraggedImageTo:'>
      <arg name='screenPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sound:didFinishPlaying:'>
      <arg name='sound' declared_type='NSSound*' type='@' index='0'/>
      <arg name='aBool' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='speechRecognizer:didRecognizeCommand:'>
      <arg name='sender' declared_type='NSSpeechRecognizer*' type='@' index='0'/>
      <arg name='command' declared_type='id' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='speechSynthesizer:didFinishSpeaking:'>
      <arg name='sender' declared_type='NSSpeechSynthesizer*' type='@' index='0'/>
      <arg name='finishedSpeaking' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='speechSynthesizer:willSpeakPhoneme:'>
      <arg name='sender' declared_type='NSSpeechSynthesizer*' type='@' index='0'/>
      <arg name='phonemeOpcode' declared_type='short' type='s' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='speechSynthesizer:willSpeakWord:ofString:'>
      <arg name='sender' declared_type='NSSpeechSynthesizer*' type='@' index='0'/>
      <arg name='characterRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <arg name='string' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='splitView:canCollapseSubview:'>
      <arg name='sender' declared_type='NSSplitView*' type='@' index='0'/>
      <arg name='subview' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='splitView:constrainMaxCoordinate:ofSubviewAt:'>
      <arg name='sender' declared_type='NSSplitView*' type='@' index='0'/>
      <arg name='proposedCoord' declared_type='float' type='f' index='1'/>
      <arg name='offset' declared_type='int' type='i' index='2'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='splitView:constrainMinCoordinate:ofSubviewAt:'>
      <arg name='sender' declared_type='NSSplitView*' type='@' index='0'/>
      <arg name='proposedCoord' declared_type='float' type='f' index='1'/>
      <arg name='offset' declared_type='int' type='i' index='2'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='splitView:constrainSplitPosition:ofSubviewAt:'>
      <arg name='splitView' declared_type='NSSplitView*' type='@' index='0'/>
      <arg name='proposedPosition' declared_type='float' type='f' index='1'/>
      <arg name='index' declared_type='int' type='i' index='2'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='splitView:resizeSubviewsWithOldSize:'>
      <arg name='sender' declared_type='NSSplitView*' type='@' index='0'/>
      <arg name='oldSize' declared_type='NSSize' type='{_NSSize=ff}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='splitViewDidResizeSubviews:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='splitViewWillResizeSubviews:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='state'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='submenu'>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='supportsMode:'>
      <arg name='mode' declared_type='int' type='i' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='tabView:didSelectTabViewItem:'>
      <arg name='tabView' declared_type='NSTabView*' type='@' index='0'/>
      <arg name='tabViewItem' declared_type='NSTabViewItem*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tabView:shouldSelectTabViewItem:'>
      <arg name='tabView' declared_type='NSTabView*' type='@' index='0'/>
      <arg name='tabViewItem' declared_type='NSTabViewItem*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='tabView:willSelectTabViewItem:'>
      <arg name='tabView' declared_type='NSTabView*' type='@' index='0'/>
      <arg name='tabViewItem' declared_type='NSTabViewItem*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tabViewDidChangeNumberOfTabViewItems:'>
      <arg name='TabView' declared_type='NSTabView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tableView:acceptDrop:row:dropOperation:'>
      <arg name='tv' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='info' declared_type='id' type='@' index='1'/>
      <arg name='row' declared_type='int' type='i' index='2'/>
      <arg name='op' declared_type='NSTableViewDropOperation' type='i' index='3'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='tableView:didClickTableColumn:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tableView:didDragTableColumn:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tableView:heightOfRow:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='row' declared_type='int' type='i' index='1'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='tableView:mouseDownInHeaderOfTableColumn:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:'>
      <arg name='tv' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='dropDestination' declared_type='NSURL*' type='@' index='1'/>
      <arg name='indexSet' declared_type='NSIndexSet*' type='@' index='2'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='tableView:objectValueForTableColumn:row:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <arg name='row' declared_type='int' type='i' index='2'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='tableView:setObjectValue:forTableColumn:row:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='object' declared_type='id' type='@' index='1'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='2'/>
      <arg name='row' declared_type='int' type='i' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tableView:shouldEditTableColumn:row:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <arg name='row' declared_type='int' type='i' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='tableView:shouldSelectRow:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='row' declared_type='int' type='i' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='tableView:shouldSelectTableColumn:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='tableView:sortDescriptorsDidChange:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='oldDescriptors' declared_type='NSArray*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:'>
      <arg name='tv' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='cell' declared_type='NSCell*' type='@' index='1'/>
      <arg name='rect' declared_type='NSRectPointer' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <arg name='tc' declared_type='NSTableColumn*' type='@' index='3'/>
      <arg name='row' declared_type='int' type='i' index='4'/>
      <arg name='mouseLocation' declared_type='NSPoint' type='{_NSPoint=ff}' index='5'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='tableView:validateDrop:proposedRow:proposedDropOperation:'>
      <arg name='tv' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='info' declared_type='id' type='@' index='1'/>
      <arg name='row' declared_type='int' type='i' index='2'/>
      <arg name='op' declared_type='NSTableViewDropOperation' type='i' index='3'/>
      <retval declared_type='NSDragOperation' type='I'/>
    </method>
    <method selector='tableView:willDisplayCell:forTableColumn:row:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='2'/>
      <arg name='row' declared_type='int' type='i' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tableView:writeRows:toPasteboard:'>
      <arg name='tv' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='rows' declared_type='NSArray*' type='@' index='1'/>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='tableView:writeRowsWithIndexes:toPasteboard:'>
      <arg name='tv' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='rowIndexes' declared_type='NSIndexSet*' type='@' index='1'/>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='tableViewColumnDidMove:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tableViewColumnDidResize:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tableViewSelectionDidChange:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tableViewSelectionIsChanging:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tag'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='target'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='terminate:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textDidBeginEditing:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textDidChange:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textDidEndEditing:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textShouldBeginEditing:'>
      <arg name='textObject' declared_type='NSText*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='textShouldEndEditing:'>
      <arg name='textObject' declared_type='NSText*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='textStorageDidProcessEditing:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textStorageWillProcessEditing:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textView:clickedOnCell:inRect:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textView:clickedOnCell:inRect:atIndex:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textView:clickedOnLink:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='link' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='textView:clickedOnLink:atIndex:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='link' declared_type='id' type='@' index='1'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='textView:completions:forPartialWordRange:indexOfSelectedItem:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='words' declared_type='NSArray*' type='@' index='1'/>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='2'/>
      <arg name='index' declared_type='int*' type='^i' index='3' type_modifier='o'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='textView:doCommandBySelector:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='commandSelector' declared_type='SEL' type=':' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='textView:doubleClickedOnCell:inRect:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textView:doubleClickedOnCell:inRect:atIndex:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textView:draggedCell:inRect:event:'>
      <arg name='view' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <arg name='event' declared_type='NSEvent*' type='@' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textView:draggedCell:inRect:event:atIndex:'>
      <arg name='view' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <arg name='event' declared_type='NSEvent*' type='@' index='3'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='4'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textView:shouldChangeTextInRange:replacementString:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='affectedCharRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <arg name='replacementString' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='textView:shouldChangeTextInRanges:replacementStrings:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='affectedRanges' declared_type='NSArray*' type='@' index='1'/>
      <arg name='replacementStrings' declared_type='NSArray*' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='textView:shouldChangeTypingAttributes:toAttributes:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='oldTypingAttributes' declared_type='NSDictionary*' type='@' index='1'/>
      <arg name='newTypingAttributes' declared_type='NSDictionary*' type='@' index='2'/>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='textView:willChangeSelectionFromCharacterRange:toCharacterRange:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='oldSelectedCharRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <arg name='newSelectedCharRange' declared_type='NSRange' type='{_NSRange=II}' index='2'/>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='oldSelectedCharRanges' declared_type='NSArray*' type='@' index='1'/>
      <arg name='newSelectedCharRanges' declared_type='NSArray*' type='@' index='2'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='textView:willDisplayToolTip:forCharacterAtIndex:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='tooltip' declared_type='NSString*' type='@' index='1'/>
      <arg name='characterIndex' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='textView:writablePasteboardTypesForCell:atIndex:'>
      <arg name='view' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='textView:writeCell:atIndex:toPasteboard:type:'>
      <arg name='view' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='2'/>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='3'/>
      <arg name='type' declared_type='NSString*' type='@' index='4'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='textViewDidChangeSelection:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textViewDidChangeTypingAttributes:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='title'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:'>
      <arg name='tokenField' declared_type='NSTokenField*' type='@' index='0'/>
      <arg name='substring' declared_type='NSString*' type='@' index='1'/>
      <arg name='tokenIndex' declared_type='int' type='i' index='2'/>
      <arg name='selectedIndex' declared_type='int*' type='^i' index='3' type_modifier='o'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='tokenField:displayStringForRepresentedObject:'>
      <arg name='tokenField' declared_type='NSTokenField*' type='@' index='0'/>
      <arg name='representedObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='tokenField:editingStringForRepresentedObject:'>
      <arg name='tokenField' declared_type='NSTokenField*' type='@' index='0'/>
      <arg name='representedObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='tokenField:hasMenuForRepresentedObject:'>
      <arg name='tokenField' declared_type='NSTokenField*' type='@' index='0'/>
      <arg name='representedObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='tokenField:menuForRepresentedObject:'>
      <arg name='tokenField' declared_type='NSTokenField*' type='@' index='0'/>
      <arg name='representedObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='tokenField:readFromPasteboard:'>
      <arg name='tokenField' declared_type='NSTokenField*' type='@' index='0'/>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='1'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='tokenField:representedObjectForEditingString:'>
      <arg name='tokenField' declared_type='NSTokenField*' type='@' index='0'/>
      <arg name='editingString' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='tokenField:shouldAddObjects:atIndex:'>
      <arg name='tokenField' declared_type='NSTokenField*' type='@' index='0'/>
      <arg name='tokens' declared_type='NSArray*' type='@' index='1'/>
      <arg name='index' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='tokenField:styleForRepresentedObject:'>
      <arg name='tokenField' declared_type='NSTokenField*' type='@' index='0'/>
      <arg name='representedObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='NSTokenStyle' type='i'/>
    </method>
    <method selector='tokenField:writeRepresentedObjects:toPasteboard:'>
      <arg name='tokenField' declared_type='NSTokenField*' type='@' index='0'/>
      <arg name='objects' declared_type='NSArray*' type='@' index='1'/>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:'>
      <arg name='tokenFieldCell' declared_type='NSTokenFieldCell*' type='@' index='0'/>
      <arg name='substring' declared_type='NSString*' type='@' index='1'/>
      <arg name='tokenIndex' declared_type='int' type='i' index='2'/>
      <arg name='selectedIndex' declared_type='int*' type='^i' index='3' type_modifier='o'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='tokenFieldCell:displayStringForRepresentedObject:'>
      <arg name='tokenFieldCell' declared_type='NSTokenFieldCell*' type='@' index='0'/>
      <arg name='representedObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='tokenFieldCell:editingStringForRepresentedObject:'>
      <arg name='tokenFieldCell' declared_type='NSTokenFieldCell*' type='@' index='0'/>
      <arg name='representedObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='tokenFieldCell:hasMenuForRepresentedObject:'>
      <arg name='tokenFieldCell' declared_type='NSTokenFieldCell*' type='@' index='0'/>
      <arg name='representedObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='tokenFieldCell:menuForRepresentedObject:'>
      <arg name='tokenFieldCell' declared_type='NSTokenFieldCell*' type='@' index='0'/>
      <arg name='representedObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='tokenFieldCell:readFromPasteboard:'>
      <arg name='tokenFieldCell' declared_type='NSTokenFieldCell*' type='@' index='0'/>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='1'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='tokenFieldCell:representedObjectForEditingString:'>
      <arg name='tokenFieldCell' declared_type='NSTokenFieldCell*' type='@' index='0'/>
      <arg name='editingString' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='tokenFieldCell:shouldAddObjects:atIndex:'>
      <arg name='tokenFieldCell' declared_type='NSTokenFieldCell*' type='@' index='0'/>
      <arg name='tokens' declared_type='NSArray*' type='@' index='1'/>
      <arg name='index' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='tokenFieldCell:styleForRepresentedObject:'>
      <arg name='tokenFieldCell' declared_type='NSTokenFieldCell*' type='@' index='0'/>
      <arg name='representedObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='NSTokenStyle' type='i'/>
    </method>
    <method selector='tokenFieldCell:writeRepresentedObjects:toPasteboard:'>
      <arg name='tokenFieldCell' declared_type='NSTokenFieldCell*' type='@' index='0'/>
      <arg name='objects' declared_type='NSArray*' type='@' index='1'/>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='toolTip'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:'>
      <arg name='toolbar' declared_type='NSToolbar*' type='@' index='0'/>
      <arg name='itemIdentifier' declared_type='NSString*' type='@' index='1'/>
      <arg name='flag' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='NSToolbarItem*' type='@'/>
    </method>
    <method selector='toolbarAllowedItemIdentifiers:'>
      <arg name='toolbar' declared_type='NSToolbar*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='toolbarDefaultItemIdentifiers:'>
      <arg name='toolbar' declared_type='NSToolbar*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='toolbarDidRemoveItem:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='toolbarSelectableItemIdentifiers:'>
      <arg name='toolbar' declared_type='NSToolbar*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='toolbarWillAddItem:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='2'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='3'/>
      <arg name='flag' declared_type='BOOL' type='B' index='4'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='trackMouse:inRect:ofView:untilMouseUp:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='2'/>
      <arg name='flag' declared_type='BOOL' type='B' index='3'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='unbind:'>
      <arg name='binding' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='undoManagerForTextView:'>
      <arg name='view' declared_type='NSTextView*' type='@' index='0'/>
      <retval declared_type='NSUndoManager*' type='@'/>
    </method>
    <method selector='unmarkText'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='userKeyEquivalent'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='userKeyEquivalentModifierMask'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method class_method='true' selector='usesUserKeyEquivalents'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='validAttributesForMarkedText'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='validModesForFontPanel:'>
      <arg name='fontPanel' declared_type='NSFontPanel*' type='@' index='0'/>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='validateMenuItem:'>
      <arg name='menuItem' declared_type='id' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='validateToolbarItem:'>
      <arg name='theItem' declared_type='NSToolbarItem*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='validateUserInterfaceItem:'>
      <arg name='anItem' declared_type='id' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='valueClassForBinding:'>
      <arg name='binding' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='Class' type='#'/>
    </method>
    <method selector='view:stringForToolTip:point:userData:'>
      <arg name='view' declared_type='NSView*' type='@' index='0'/>
      <arg name='tag' declared_type='NSToolTipTag' type='i' index='1'/>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='2'/>
      <arg name='data' declared_type='void*' type='^v' index='3' type_modifier='n'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='viewSizeChanged:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='wantsPeriodicDraggingUpdates'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='wantsToDelayTextChangeNotifications'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='wantsToHandleMouseEvents'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='wantsToInterpretAllKeystrokes'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='wantsToTrackMouse'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='2'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='3'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='window:willPositionSheet:usingRect:'>
      <arg name='window' declared_type='NSWindow*' type='@' index='0'/>
      <arg name='sheet' declared_type='NSWindow*' type='@' index='1'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='windowDidBecomeKey:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windowDidBecomeMain:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windowDidChangeScreen:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windowDidChangeScreenProfile:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windowDidDeminiaturize:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windowDidEndSheet:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windowDidExpose:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windowDidMiniaturize:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windowDidMove:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windowDidResignKey:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windowDidResignMain:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windowDidResize:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windowDidUpdate:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windowShouldClose:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='windowShouldZoom:toFrame:'>
      <arg name='window' declared_type='NSWindow*' type='@' index='0'/>
      <arg name='newFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='windowWillBeginSheet:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windowWillClose:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windowWillMiniaturize:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windowWillMove:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windowWillResize:toSize:'>
      <arg name='sender' declared_type='NSWindow*' type='@' index='0'/>
      <arg name='frameSize' declared_type='NSSize' type='{_NSSize=ff}' index='1'/>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='windowWillReturnFieldEditor:toObject:'>
      <arg name='sender' declared_type='NSWindow*' type='@' index='0'/>
      <arg name='client' declared_type='id' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='windowWillReturnUndoManager:'>
      <arg name='window' declared_type='NSWindow*' type='@' index='0'/>
      <retval declared_type='NSUndoManager*' type='@'/>
    </method>
    <method selector='windowWillUseStandardFrame:defaultFrame:'>
      <arg name='window' declared_type='NSWindow*' type='@' index='0'/>
      <arg name='newFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='writeSelectionToPasteboard:types:'>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='0'/>
      <arg name='types' declared_type='NSArray*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSObjectController'>
    <method selector='add:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addObject:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='automaticallyPreparesContent'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='canAdd'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='canRemove'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='content'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='entityName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='fetch:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='fetchPredicate'>
      <retval declared_type='NSPredicate*' type='@'/>
    </method>
    <method selector='fetchWithRequest:merge:error:'>
      <arg name='fetchRequest' declared_type='NSFetchRequest*' type='@' index='0'/>
      <arg name='merge' declared_type='BOOL' type='B' index='1'/>
      <arg name='error' declared_type='NSError**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='initWithContent:'>
      <arg name='content' declared_type='id' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isEditable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='managedObjectContext'>
      <retval declared_type='NSManagedObjectContext*' type='@'/>
    </method>
    <method selector='newObject'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='objectClass'>
      <retval declared_type='Class' type='#'/>
    </method>
    <method selector='prepareContent'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='remove:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeObject:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectedObjects'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='selection'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='setAutomaticallyPreparesContent:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setContent:'>
      <arg name='content' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEditable:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEntityName:'>
      <arg name='entityName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFetchPredicate:'>
      <arg name='predicate' declared_type='NSPredicate*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setManagedObjectContext:'>
      <arg name='managedObjectContext' declared_type='NSManagedObjectContext*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setObjectClass:'>
      <arg name='objectClass' declared_type='Class' type='#' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='validateMenuItem:'>
      <arg name='menuItem' declared_type='id' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSOpenGLContext'>
    <method selector='CGLContextObj'>
      <retval declared_type='void*' type='^v'/>
    </method>
    <method class_method='true' selector='clearCurrentContext'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='clearDrawable'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='copyAttributesFromContext:withMask:'>
      <arg name='context' declared_type='NSOpenGLContext*' type='@' index='0'/>
      <arg name='mask' declared_type='unsigned long' type='L' type64='Q' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='createTexture:fromView:internalFormat:'>
      <arg name='target' declared_type='unsigned long' type='L' type64='Q' index='0'/>
      <arg name='view' declared_type='NSView*' type='@' index='1'/>
      <arg name='format' declared_type='unsigned long' type='L' type64='Q' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='currentContext'>
      <retval declared_type='NSOpenGLContext*' type='@'/>
    </method>
    <method selector='currentVirtualScreen'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='flushBuffer'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='getValues:forParameter:'>
      <arg name='vals' declared_type='long*' type='^l' type64='^q' index='0' c_array_of_variable_length='true' type_modifier='o'/>
      <arg name='param' declared_type='NSOpenGLContextParameter' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='initWithFormat:shareContext:'>
      <arg name='format' declared_type='NSOpenGLPixelFormat*' type='@' index='0'/>
      <arg name='share' declared_type='NSOpenGLContext*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='makeCurrentContext'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='pixelBuffer'>
      <retval declared_type='NSOpenGLPixelBuffer*' type='@'/>
    </method>
    <method selector='pixelBufferCubeMapFace'>
      <retval declared_type='unsigned long' type='L' type64='Q'/>
    </method>
    <method selector='pixelBufferMipMapLevel'>
      <retval declared_type='long' type='l' type64='q'/>
    </method>
    <method selector='setCurrentVirtualScreen:'>
      <arg name='screen' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFullScreen'>
      <retval declared_type='void' type='v'/>
    </method>
    <method ignore='true' selector='setOffScreen:width:height:rowbytes:'>
      <arg name='baseaddr' declared_type='void*' type='^v' index='0'/>
      <arg name='width' declared_type='long' type='l' type64='q' index='1'/>
      <arg name='height' declared_type='long' type='l' type64='q' index='2'/>
      <arg name='rowbytes' declared_type='long' type='l' type64='q' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPixelBuffer:cubeMapFace:mipMapLevel:currentVirtualScreen:'>
      <arg name='pixelBuffer' declared_type='NSOpenGLPixelBuffer*' type='@' index='0'/>
      <arg name='face' declared_type='unsigned long' type='L' type64='Q' index='1'/>
      <arg name='level' declared_type='long' type='l' type64='q' index='2'/>
      <arg name='screen' declared_type='int' type='i' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTextureImageToPixelBuffer:colorBuffer:'>
      <arg name='pixelBuffer' declared_type='NSOpenGLPixelBuffer*' type='@' index='0'/>
      <arg name='source' declared_type='unsigned long' type='L' type64='Q' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setValues:forParameter:'>
      <arg name='vals' declared_type='long*' type='^l' type64='^q' const='true' index='0' c_array_of_variable_length='true' type_modifier='n'/>
      <arg name='param' declared_type='NSOpenGLContextParameter' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setView:'>
      <arg name='view' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='update'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='view'>
      <retval declared_type='NSView*' type='@'/>
    </method>
  </class>
  <class name='NSOpenGLPixelBuffer'>
    <method selector='initWithTextureTarget:textureInternalFormat:textureMaxMipMapLevel:pixelsWide:pixelsHigh:'>
      <arg name='target' declared_type='unsigned long' type='L' type64='Q' index='0'/>
      <arg name='format' declared_type='unsigned long' type='L' type64='Q' index='1'/>
      <arg name='maxLevel' declared_type='long' type='l' type64='q' index='2'/>
      <arg name='pixelsWide' declared_type='int' type='i' index='3'/>
      <arg name='pixelsHigh' declared_type='int' type='i' index='4'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='pixelsHigh'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='pixelsWide'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='textureInternalFormat'>
      <retval declared_type='unsigned long' type='L' type64='Q'/>
    </method>
    <method selector='textureMaxMipMapLevel'>
      <retval declared_type='long' type='l' type64='q'/>
    </method>
    <method selector='textureTarget'>
      <retval declared_type='unsigned long' type='L' type64='Q'/>
    </method>
  </class>
  <class name='NSOpenGLPixelFormat'>
    <method selector='CGLPixelFormatObj'>
      <retval declared_type='void*' type='^v'/>
    </method>
    <method selector='attributes'>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='getValues:forAttribute:forVirtualScreen:'>
      <arg name='vals' declared_type='long*' type='^l' type64='^q' index='0' c_array_of_variable_length='true' type_modifier='o'/>
      <arg name='attrib' declared_type='NSOpenGLPixelFormatAttribute' type='i' index='1'/>
      <arg name='screen' declared_type='int' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='initWithAttributes:'>
      <arg name='attribs' declared_type='NSOpenGLPixelFormatAttribute*' type='^i' index='0' c_array_delimited_by_null='true' type_modifier='n'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithData:'>
      <arg name='attribs' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='numberOfVirtualScreens'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='setAttributes:'>
      <arg name='attribs' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSOpenGLView'>
    <method selector='clearGLContext'>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='defaultPixelFormat'>
      <retval declared_type='NSOpenGLPixelFormat*' type='@'/>
    </method>
    <method selector='initWithFrame:pixelFormat:'>
      <arg name='frameRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='format' declared_type='NSOpenGLPixelFormat*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='openGLContext'>
      <retval declared_type='NSOpenGLContext*' type='@'/>
    </method>
    <method selector='pixelFormat'>
      <retval declared_type='NSOpenGLPixelFormat*' type='@'/>
    </method>
    <method selector='prepareOpenGL'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='reshape'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setOpenGLContext:'>
      <arg name='context' declared_type='NSOpenGLContext*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPixelFormat:'>
      <arg name='pixelFormat' declared_type='NSOpenGLPixelFormat*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='update'>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSOpenPanel'>
    <method selector='URLs'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='allowsMultipleSelection'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='beginForDirectory:file:types:modelessDelegate:didEndSelector:contextInfo:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <arg name='name' declared_type='NSString*' type='@' index='1'/>
      <arg name='fileTypes' declared_type='NSArray*' type='@' index='2'/>
      <arg name='delegate' declared_type='id' type='@' index='3'/>
      <arg name='didEndSelector' sel_of_type='v20@0:4@8@12^v16' declared_type='SEL' type=':' index='4' sel_of_type64='v40@0:8@16@24^v32'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='5' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <arg name='name' declared_type='NSString*' type='@' index='1'/>
      <arg name='fileTypes' declared_type='NSArray*' type='@' index='2'/>
      <arg name='docWindow' declared_type='NSWindow*' type='@' index='3'/>
      <arg name='delegate' declared_type='id' type='@' index='4'/>
      <arg name='didEndSelector' sel_of_type='v20@0:4@8@12^v16' declared_type='SEL' type=':' index='5' sel_of_type64='v40@0:8@16@24^v32'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='6' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='canChooseDirectories'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='canChooseFiles'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='filenames'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='openPanel'>
      <retval declared_type='NSOpenPanel*' type='@'/>
    </method>
    <method selector='resolvesAliases'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='runModalForDirectory:file:types:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <arg name='name' declared_type='NSString*' type='@' index='1'/>
      <arg name='fileTypes' declared_type='NSArray*' type='@' index='2'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='runModalForTypes:'>
      <arg name='fileTypes' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='setAllowsMultipleSelection:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCanChooseDirectories:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCanChooseFiles:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setResolvesAliases:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSOutlineView'>
    <method selector='autoresizesOutlineColumn'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='autosaveExpandedItems'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='collapseItem:'>
      <arg name='item' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='collapseItem:collapseChildren:'>
      <arg name='item' declared_type='id' type='@' index='0'/>
      <arg name='collapseChildren' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='expandItem:'>
      <arg name='item' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='expandItem:expandChildren:'>
      <arg name='item' declared_type='id' type='@' index='0'/>
      <arg name='expandChildren' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='indentationMarkerFollowsCell'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='indentationPerLevel'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='isExpandable:'>
      <arg name='item' declared_type='id' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isItemExpanded:'>
      <arg name='item' declared_type='id' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='itemAtRow:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='levelForItem:'>
      <arg name='item' declared_type='id' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='levelForRow:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='outlineTableColumn'>
      <retval declared_type='NSTableColumn*' type='@'/>
    </method>
    <method selector='reloadItem:'>
      <arg name='item' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='reloadItem:reloadChildren:'>
      <arg name='item' declared_type='id' type='@' index='0'/>
      <arg name='reloadChildren' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rowForItem:'>
      <arg name='item' declared_type='id' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='setAutoresizesOutlineColumn:'>
      <arg name='resize' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAutosaveExpandedItems:'>
      <arg name='save' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDropItem:dropChildIndex:'>
      <arg name='item' declared_type='id' type='@' index='0'/>
      <arg name='index' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIndentationMarkerFollowsCell:'>
      <arg name='drawInCell' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIndentationPerLevel:'>
      <arg name='indentationPerLevel' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setOutlineTableColumn:'>
      <arg name='outlineTableColumn' declared_type='NSTableColumn*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='shouldCollapseAutoExpandedItemsForDeposited:'>
      <arg name='deposited' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSPDFImageRep'>
    <method selector='PDFRepresentation'>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='bounds'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='currentPage'>
      <retval declared_type='int' type='i'/>
    </method>
    <method class_method='true' selector='imageRepWithData:'>
      <arg name='pdfData' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithData:'>
      <arg name='pdfData' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='pageCount'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='setCurrentPage:'>
      <arg name='page' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSPICTImageRep'>
    <method selector='PICTRepresentation'>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='boundingBox'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method class_method='true' selector='imageRepWithData:'>
      <arg name='pictData' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithData:'>
      <arg name='pictData' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
  </class>
  <class name='NSPageLayout'>
    <method selector='accessoryView'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:'>
      <arg name='printInfo' declared_type='NSPrintInfo*' type='@' index='0'/>
      <arg name='docWindow' declared_type='NSWindow*' type='@' index='1'/>
      <arg name='delegate' declared_type='id' type='@' index='2'/>
      <arg name='didEndSelector' sel_of_type='v20@0:4@8@12^v16' declared_type='SEL' type=':' index='3' sel_of_type64='v40@0:8@16@24^v32'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='4' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='convertOldFactor:newFactor:'>
      <arg name='oldFactor' declared_type='float*' type='^f' index='0'/>
      <arg name='newFactor' declared_type='float*' type='^f' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='pageLayout'>
      <retval declared_type='NSPageLayout*' type='@'/>
    </method>
    <method selector='pickedButton:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='pickedOrientation:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='pickedPaperSize:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='pickedUnits:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='printInfo'>
      <retval declared_type='NSPrintInfo*' type='@'/>
    </method>
    <method selector='readPrintInfo'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='runModal'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='runModalWithPrintInfo:'>
      <arg name='pInfo' declared_type='NSPrintInfo*' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='setAccessoryView:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='writePrintInfo'>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSPanel'>
    <method selector='becomesKeyOnlyIfNeeded'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isFloatingPanel'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setBecomesKeyOnlyIfNeeded:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFloatingPanel:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setWorksWhenModal:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='worksWhenModal'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSParagraphStyle'>
    <method selector='alignment'>
      <retval declared_type='NSTextAlignment' type='i'/>
    </method>
    <method selector='baseWritingDirection'>
      <retval declared_type='NSWritingDirection' type='i'/>
    </method>
    <method class_method='true' selector='defaultParagraphStyle'>
      <retval declared_type='NSParagraphStyle*' type='@'/>
    </method>
    <method selector='defaultTabInterval'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='defaultWritingDirectionForLanguage:'>
      <arg name='languageName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSWritingDirection' type='i'/>
    </method>
    <method selector='firstLineHeadIndent'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='headIndent'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='headerLevel'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='hyphenationFactor'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='lineBreakMode'>
      <retval declared_type='NSLineBreakMode' type='i'/>
    </method>
    <method selector='lineHeightMultiple'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='lineSpacing'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='maximumLineHeight'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='minimumLineHeight'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='paragraphSpacing'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='paragraphSpacingBefore'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='tabStops'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='tailIndent'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='textBlocks'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='textLists'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='tighteningFactorForTruncation'>
      <retval declared_type='float' type='f'/>
    </method>
  </class>
  <class name='NSPasteboard'>
    <method selector='addTypes:owner:'>
      <arg name='newTypes' declared_type='NSArray*' type='@' index='0'/>
      <arg name='newOwner' declared_type='id' type='@' index='1'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='availableTypeFromArray:'>
      <arg name='types' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='changeCount'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='dataForType:'>
      <arg name='dataType' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='declareTypes:owner:'>
      <arg name='newTypes' declared_type='NSArray*' type='@' index='0'/>
      <arg name='newOwner' declared_type='id' type='@' index='1'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method class_method='true' selector='generalPasteboard'>
      <retval declared_type='NSPasteboard*' type='@'/>
    </method>
    <method selector='name'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method class_method='true' selector='pasteboardByFilteringData:ofType:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <arg name='type' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='NSPasteboard*' type='@'/>
    </method>
    <method class_method='true' selector='pasteboardByFilteringFile:'>
      <arg name='filename' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSPasteboard*' type='@'/>
    </method>
    <method class_method='true' selector='pasteboardByFilteringTypesInPasteboard:'>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='0'/>
      <retval declared_type='NSPasteboard*' type='@'/>
    </method>
    <method class_method='true' selector='pasteboardWithName:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSPasteboard*' type='@'/>
    </method>
    <method class_method='true' selector='pasteboardWithUniqueName'>
      <retval declared_type='NSPasteboard*' type='@'/>
    </method>
    <method selector='propertyListForType:'>
      <arg name='dataType' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='readFileContentsType:toFile:'>
      <arg name='type' declared_type='NSString*' type='@' index='0'/>
      <arg name='filename' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='readFileWrapper'>
      <retval declared_type='NSFileWrapper*' type='@'/>
    </method>
    <method selector='releaseGlobally'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setData:forType:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <arg name='dataType' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setPropertyList:forType:'>
      <arg name='plist' declared_type='id' type='@' index='0'/>
      <arg name='dataType' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setString:forType:'>
      <arg name='string' declared_type='NSString*' type='@' index='0'/>
      <arg name='dataType' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='stringForType:'>
      <arg name='dataType' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='types'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='typesFilterableTo:'>
      <arg name='type' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='writeFileContents:'>
      <arg name='filename' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='writeFileWrapper:'>
      <arg name='wrapper' declared_type='NSFileWrapper*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSPersistentDocument'>
    <method selector='configurePersistentStoreCoordinatorForURL:ofType:error:'>
      <arg name='url' declared_type='NSURL*' type='@' index='0'/>
      <arg name='fileType' declared_type='NSString*' type='@' index='1'/>
      <arg name='error' declared_type='NSError**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='managedObjectContext'>
      <retval declared_type='NSManagedObjectContext*' type='@'/>
    </method>
    <method selector='managedObjectModel'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='persistentStoreTypeForFileType:'>
      <arg name='fileType' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='readFromURL:ofType:error:'>
      <arg name='absoluteURL' declared_type='NSURL*' type='@' index='0'/>
      <arg name='typeName' declared_type='NSString*' type='@' index='1'/>
      <arg name='error' declared_type='NSError**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='revertToContentsOfURL:ofType:error:'>
      <arg name='inAbsoluteURL' declared_type='NSURL*' type='@' index='0'/>
      <arg name='inTypeName' declared_type='NSString*' type='@' index='1'/>
      <arg name='outError' declared_type='NSError**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setManagedObjectContext:'>
      <arg name='managedObjectContext' declared_type='NSManagedObjectContext*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='writeToURL:ofType:forSaveOperation:originalContentsURL:error:'>
      <arg name='absoluteURL' declared_type='NSURL*' type='@' index='0'/>
      <arg name='typeName' declared_type='NSString*' type='@' index='1'/>
      <arg name='saveOperation' declared_type='NSSaveOperationType' type='i' index='2'/>
      <arg name='absoluteOriginalContentsURL' declared_type='NSURL*' type='@' index='3'/>
      <arg name='error' declared_type='NSError**' type='^@' index='4' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSPopUpButton'>
    <method selector='addItemWithTitle:'>
      <arg name='title' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addItemsWithTitles:'>
      <arg name='itemTitles' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='autoenablesItems'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='indexOfItem:'>
      <arg name='item' declared_type='id' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='indexOfItemWithRepresentedObject:'>
      <arg name='obj' declared_type='id' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='indexOfItemWithTag:'>
      <arg name='tag' declared_type='int' type='i' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='indexOfItemWithTarget:andAction:'>
      <arg name='target' declared_type='id' type='@' index='0'/>
      <arg name='actionSelector' sel_of_type='v12@0:4@8' declared_type='SEL' type=':' index='1' sel_of_type64='v24@0:8@16'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='indexOfItemWithTitle:'>
      <arg name='title' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='indexOfSelectedItem'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='initWithFrame:pullsDown:'>
      <arg name='buttonFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='flag' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='insertItemWithTitle:atIndex:'>
      <arg name='title' declared_type='NSString*' type='@' index='0'/>
      <arg name='index' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='itemArray'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='itemAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='itemTitleAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='itemTitles'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='itemWithTitle:'>
      <arg name='title' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='lastItem'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='menu'>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='numberOfItems'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='preferredEdge'>
      <retval declared_type='NSRectEdge' type='i'/>
    </method>
    <method selector='pullsDown'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='removeAllItems'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeItemAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeItemWithTitle:'>
      <arg name='title' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectItem:'>
      <arg name='item' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectItemAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectItemWithTag:'>
      <arg name='tag' declared_type='int' type='i' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='selectItemWithTitle:'>
      <arg name='title' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectedItem'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='setAutoenablesItems:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMenu:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPreferredEdge:'>
      <arg name='edge' declared_type='NSRectEdge' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPullsDown:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitle:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='synchronizeTitleAndSelectedItem'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='titleOfSelectedItem'>
      <retval declared_type='NSString*' type='@'/>
    </method>
  </class>
  <class name='NSPopUpButtonCell'>
    <method selector='addItemWithTitle:'>
      <arg name='title' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addItemsWithTitles:'>
      <arg name='itemTitles' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='altersStateOfSelectedItem'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='arrowPosition'>
      <retval declared_type='NSPopUpArrowPosition' type='i'/>
    </method>
    <method selector='attachPopUpWithFrame:inView:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='autoenablesItems'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='dismissPopUp'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='indexOfItem:'>
      <arg name='item' declared_type='id' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='indexOfItemWithRepresentedObject:'>
      <arg name='obj' declared_type='id' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='indexOfItemWithTag:'>
      <arg name='tag' declared_type='int' type='i' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='indexOfItemWithTarget:andAction:'>
      <arg name='target' declared_type='id' type='@' index='0'/>
      <arg name='actionSelector' sel_of_type='v12@0:4@8' declared_type='SEL' type=':' index='1' sel_of_type64='v24@0:8@16'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='indexOfItemWithTitle:'>
      <arg name='title' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='indexOfSelectedItem'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='initTextCell:pullsDown:'>
      <arg name='stringValue' declared_type='NSString*' type='@' index='0'/>
      <arg name='pullDown' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='insertItemWithTitle:atIndex:'>
      <arg name='title' declared_type='NSString*' type='@' index='0'/>
      <arg name='index' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='itemArray'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='itemAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='itemTitleAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='itemTitles'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='itemWithTitle:'>
      <arg name='title' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='lastItem'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='menu'>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='numberOfItems'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='objectValue'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='performClickWithFrame:inView:'>
      <arg name='frame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='preferredEdge'>
      <retval declared_type='NSRectEdge' type='i'/>
    </method>
    <method selector='pullsDown'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='removeAllItems'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeItemAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeItemWithTitle:'>
      <arg name='title' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectItem:'>
      <arg name='item' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectItemAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectItemWithTag:'>
      <arg name='tag' declared_type='int' type='i' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='selectItemWithTitle:'>
      <arg name='title' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectedItem'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='setAltersStateOfSelectedItem:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setArrowPosition:'>
      <arg name='position' declared_type='NSPopUpArrowPosition' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAutoenablesItems:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMenu:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setObjectValue:'>
      <arg name='obj' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPreferredEdge:'>
      <arg name='edge' declared_type='NSRectEdge' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPullsDown:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitle:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setUsesItemFromMenu:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='synchronizeTitleAndSelectedItem'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='titleOfSelectedItem'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='usesItemFromMenu'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSPrintInfo'>
    <method selector='bottomMargin'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='defaultPrinter'>
      <retval declared_type='NSPrinter*' type='@'/>
    </method>
    <method selector='dictionary'>
      <retval declared_type='NSMutableDictionary*' type='@'/>
    </method>
    <method selector='horizontalPagination'>
      <retval declared_type='NSPrintingPaginationMode' type='i'/>
    </method>
    <method selector='imageablePageBounds'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='initWithDictionary:'>
      <arg name='attributes' declared_type='NSDictionary*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isHorizontallyCentered'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isVerticallyCentered'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='jobDisposition'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='leftMargin'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='localizedPaperName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='orientation'>
      <retval declared_type='NSPrintingOrientation' type='i'/>
    </method>
    <method selector='paperName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='paperSize'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='printer'>
      <retval declared_type='NSPrinter*' type='@'/>
    </method>
    <method selector='rightMargin'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='setBottomMargin:'>
      <arg name='margin' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setDefaultPrinter:'>
      <arg name='printer' declared_type='NSPrinter*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHorizontalPagination:'>
      <arg name='mode' declared_type='NSPrintingPaginationMode' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHorizontallyCentered:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setJobDisposition:'>
      <arg name='disposition' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLeftMargin:'>
      <arg name='margin' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setOrientation:'>
      <arg name='orientation' declared_type='NSPrintingOrientation' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPaperName:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPaperSize:'>
      <arg name='size' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPrinter:'>
      <arg name='printer' declared_type='NSPrinter*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setRightMargin:'>
      <arg name='margin' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setSharedPrintInfo:'>
      <arg name='printInfo' declared_type='NSPrintInfo*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTopMargin:'>
      <arg name='margin' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setUpPrintOperationDefaultValues'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setVerticalPagination:'>
      <arg name='mode' declared_type='NSPrintingPaginationMode' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setVerticallyCentered:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='sharedPrintInfo'>
      <retval declared_type='NSPrintInfo*' type='@'/>
    </method>
    <method class_method='true' selector='sizeForPaperName:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='topMargin'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='verticalPagination'>
      <retval declared_type='NSPrintingPaginationMode' type='i'/>
    </method>
  </class>
  <class name='NSPrintOperation'>
    <method class_method='true' selector='EPSOperationWithView:insideRect:toData:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='data' declared_type='NSMutableData*' type='@' index='2'/>
      <retval declared_type='NSPrintOperation*' type='@'/>
    </method>
    <method class_method='true' selector='EPSOperationWithView:insideRect:toData:printInfo:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='data' declared_type='NSMutableData*' type='@' index='2'/>
      <arg name='aPrintInfo' declared_type='NSPrintInfo*' type='@' index='3'/>
      <retval declared_type='NSPrintOperation*' type='@'/>
    </method>
    <method class_method='true' selector='EPSOperationWithView:insideRect:toPath:printInfo:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='path' declared_type='NSString*' type='@' index='2'/>
      <arg name='aPrintInfo' declared_type='NSPrintInfo*' type='@' index='3'/>
      <retval declared_type='NSPrintOperation*' type='@'/>
    </method>
    <method class_method='true' selector='PDFOperationWithView:insideRect:toData:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='data' declared_type='NSMutableData*' type='@' index='2'/>
      <retval declared_type='NSPrintOperation*' type='@'/>
    </method>
    <method class_method='true' selector='PDFOperationWithView:insideRect:toData:printInfo:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='data' declared_type='NSMutableData*' type='@' index='2'/>
      <arg name='aPrintInfo' declared_type='NSPrintInfo*' type='@' index='3'/>
      <retval declared_type='NSPrintOperation*' type='@'/>
    </method>
    <method class_method='true' selector='PDFOperationWithView:insideRect:toPath:printInfo:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='path' declared_type='NSString*' type='@' index='2'/>
      <arg name='aPrintInfo' declared_type='NSPrintInfo*' type='@' index='3'/>
      <retval declared_type='NSPrintOperation*' type='@'/>
    </method>
    <method selector='accessoryView'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='canSpawnSeparateThread'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='cleanUpOperation'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='context'>
      <retval declared_type='NSGraphicsContext*' type='@'/>
    </method>
    <method selector='createContext'>
      <retval declared_type='NSGraphicsContext*' type='@'/>
    </method>
    <method class_method='true' selector='currentOperation'>
      <retval declared_type='NSPrintOperation*' type='@'/>
    </method>
    <method selector='currentPage'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='deliverResult'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='destroyContext'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='isCopyingOperation'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='jobStyleHint'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='pageOrder'>
      <retval declared_type='NSPrintingPageOrder' type='i'/>
    </method>
    <method selector='printInfo'>
      <retval declared_type='NSPrintInfo*' type='@'/>
    </method>
    <method class_method='true' selector='printOperationWithView:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='NSPrintOperation*' type='@'/>
    </method>
    <method class_method='true' selector='printOperationWithView:printInfo:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <arg name='aPrintInfo' declared_type='NSPrintInfo*' type='@' index='1'/>
      <retval declared_type='NSPrintOperation*' type='@'/>
    </method>
    <method selector='printPanel'>
      <retval declared_type='NSPrintPanel*' type='@'/>
    </method>
    <method selector='runOperation'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='runOperationModalForWindow:delegate:didRunSelector:contextInfo:'>
      <arg name='docWindow' declared_type='NSWindow*' type='@' index='0'/>
      <arg name='delegate' declared_type='id' type='@' index='1'/>
      <arg name='didRunSelector' sel_of_type='v20@0:4@8B12^v16' declared_type='SEL' type=':' index='2' sel_of_type64='v36@0:8@16B24^v28'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='3' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAccessoryView:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCanSpawnSeparateThread:'>
      <arg name='canSpawnSeparateThread' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setCurrentOperation:'>
      <arg name='operation' declared_type='NSPrintOperation*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setJobStyleHint:'>
      <arg name='hint' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPageOrder:'>
      <arg name='order' declared_type='NSPrintingPageOrder' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPrintInfo:'>
      <arg name='aPrintInfo' declared_type='NSPrintInfo*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPrintPanel:'>
      <arg name='panel' declared_type='NSPrintPanel*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShowPanels:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShowsPrintPanel:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShowsProgressPanel:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='showPanels'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='showsPrintPanel'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='showsProgressPanel'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='view'>
      <retval declared_type='NSView*' type='@'/>
    </method>
  </class>
  <class name='NSPrintPanel'>
    <method selector='accessoryView'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:'>
      <arg name='printInfo' declared_type='NSPrintInfo*' type='@' index='0'/>
      <arg name='docWindow' declared_type='NSWindow*' type='@' index='1'/>
      <arg name='delegate' declared_type='id' type='@' index='2'/>
      <arg name='didEndSelector' sel_of_type='v20@0:4@8@12^v16' declared_type='SEL' type=':' index='3' sel_of_type64='v40@0:8@16@24^v32'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='4' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='finalWritePrintInfo'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='jobStyleHint'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='pickedAllPages:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='pickedButton:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='pickedLayoutList:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='printPanel'>
      <retval declared_type='NSPrintPanel*' type='@'/>
    </method>
    <method selector='runModal'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='setAccessoryView:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setJobStyleHint:'>
      <arg name='hint' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='updateFromPrintInfo'>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSPrinter'>
    <method selector='acceptsBinary'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='booleanForKey:inTable:'>
      <arg name='key' declared_type='NSString*' type='@' index='0'/>
      <arg name='table' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='deviceDescription'>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='domain'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='floatForKey:inTable:'>
      <arg name='key' declared_type='NSString*' type='@' index='0'/>
      <arg name='table' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='host'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='imageRectForPaper:'>
      <arg name='paperName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='intForKey:inTable:'>
      <arg name='key' declared_type='NSString*' type='@' index='0'/>
      <arg name='table' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='isColor'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isFontAvailable:'>
      <arg name='faceName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isKey:inTable:'>
      <arg name='key' declared_type='NSString*' type='@' index='0'/>
      <arg name='table' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isOutputStackInReverseOrder'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='languageLevel'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='name'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='note'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='pageSizeForPaper:'>
      <arg name='paperName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method class_method='true' selector='printerNames'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='printerTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='printerWithName:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSPrinter*' type='@'/>
    </method>
    <method class_method='true' selector='printerWithName:domain:includeUnavailable:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <arg name='domain' declared_type='NSString*' type='@' index='1'/>
      <arg name='flag' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='NSPrinter*' type='@'/>
    </method>
    <method class_method='true' selector='printerWithType:'>
      <arg name='type' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSPrinter*' type='@'/>
    </method>
    <method selector='rectForKey:inTable:'>
      <arg name='key' declared_type='NSString*' type='@' index='0'/>
      <arg name='table' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='sizeForKey:inTable:'>
      <arg name='key' declared_type='NSString*' type='@' index='0'/>
      <arg name='table' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='statusForTable:'>
      <arg name='tableName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSPrinterTableStatus' type='i'/>
    </method>
    <method selector='stringForKey:inTable:'>
      <arg name='key' declared_type='NSString*' type='@' index='0'/>
      <arg name='table' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='stringListForKey:inTable:'>
      <arg name='key' declared_type='NSString*' type='@' index='0'/>
      <arg name='table' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='type'>
      <retval declared_type='NSString*' type='@'/>
    </method>
  </class>
  <class name='NSProgressIndicator'>
    <method selector='animate:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='animationDelay'>
      <retval declared_type='NSTimeInterval' type='d'/>
    </method>
    <method selector='controlSize'>
      <retval declared_type='NSControlSize' type='i'/>
    </method>
    <method selector='controlTint'>
      <retval declared_type='NSControlTint' type='i'/>
    </method>
    <method selector='doubleValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='incrementBy:'>
      <arg name='delta' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='isBezeled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isDisplayedWhenStopped'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isIndeterminate'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='maxValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='minValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='setAnimationDelay:'>
      <arg name='delay' declared_type='NSTimeInterval' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBezeled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setControlSize:'>
      <arg name='size' declared_type='NSControlSize' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setControlTint:'>
      <arg name='tint' declared_type='NSControlTint' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDisplayedWhenStopped:'>
      <arg name='isDisplayed' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDoubleValue:'>
      <arg name='doubleValue' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIndeterminate:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMaxValue:'>
      <arg name='newMaximum' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMinValue:'>
      <arg name='newMinimum' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setStyle:'>
      <arg name='style' declared_type='NSProgressIndicatorStyle' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setUsesThreadedAnimation:'>
      <arg name='threadedAnimation' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sizeToFit'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='startAnimation:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='stopAnimation:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='style'>
      <retval declared_type='NSProgressIndicatorStyle' type='i'/>
    </method>
    <method selector='usesThreadedAnimation'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSQuickDrawView'>
    <method selector='qdPort'>
      <retval declared_type='void*' type='^v'/>
    </method>
  </class>
  <class name='NSResponder'>
    <method selector='acceptsFirstResponder'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='becomeFirstResponder'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='cancelOperation:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='capitalizeWord:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='centerSelectionInVisibleArea:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='changeCaseOfLetter:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='complete:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='deleteBackward:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='deleteBackwardByDecomposingPreviousCharacter:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='deleteForward:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='deleteToBeginningOfLine:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='deleteToBeginningOfParagraph:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='deleteToEndOfLine:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='deleteToEndOfParagraph:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='deleteToMark:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='deleteWordBackward:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='deleteWordForward:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='doCommandBySelector:'>
      <arg name='aSelector' declared_type='SEL' type=':' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='flagsChanged:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='flushBufferedKeyEvents'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='helpRequested:'>
      <arg name='eventPtr' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='indent:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertBacktab:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertContainerBreak:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertLineBreak:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertNewline:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertNewlineIgnoringFieldEditor:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertParagraphSeparator:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertTab:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertTabIgnoringFieldEditor:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertText:'>
      <arg name='insertString' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='interfaceStyle'>
      <retval declared_type='NSInterfaceStyle' type='i'/>
    </method>
    <method selector='interpretKeyEvents:'>
      <arg name='eventArray' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='keyDown:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='keyUp:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='lowercaseWord:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='menu'>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='mouseDown:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='mouseDragged:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='mouseEntered:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='mouseExited:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='mouseMoved:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='mouseUp:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveBackward:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveBackwardAndModifySelection:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveDown:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveDownAndModifySelection:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveForward:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveForwardAndModifySelection:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveLeft:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveLeftAndModifySelection:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveRight:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveRightAndModifySelection:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveToBeginningOfDocument:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveToBeginningOfLine:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveToBeginningOfParagraph:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveToEndOfDocument:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveToEndOfLine:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveToEndOfParagraph:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveUp:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveUpAndModifySelection:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveWordBackward:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveWordBackwardAndModifySelection:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveWordForward:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveWordForwardAndModifySelection:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveWordLeft:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveWordLeftAndModifySelection:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveWordRight:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='moveWordRightAndModifySelection:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='nextResponder'>
      <retval declared_type='NSResponder*' type='@'/>
    </method>
    <method selector='noResponderFor:'>
      <arg name='eventSelector' declared_type='SEL' type=':' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='otherMouseDown:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='otherMouseDragged:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='otherMouseUp:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='pageDown:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='pageUp:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='performKeyEquivalent:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='performMnemonic:'>
      <arg name='theString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='presentError:'>
      <arg name='error' declared_type='NSError*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
      <arg name='error' declared_type='NSError*' type='@' index='0'/>
      <arg name='window' declared_type='NSWindow*' type='@' index='1'/>
      <arg name='delegate' declared_type='id' type='@' index='2'/>
      <arg name='didPresentSelector' sel_of_type='v16@0:4B8^v12' declared_type='SEL' type=':' index='3' sel_of_type64='v28@0:8B16^v20'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='4' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='resignFirstResponder'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='rightMouseDown:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rightMouseDragged:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rightMouseUp:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scrollLineDown:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scrollLineUp:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scrollPageDown:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scrollPageUp:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scrollWheel:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectAll:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectLine:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectParagraph:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectToMark:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectWord:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setInterfaceStyle:'>
      <arg name='interfaceStyle' declared_type='NSInterfaceStyle' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMark:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMenu:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNextResponder:'>
      <arg name='aResponder' declared_type='NSResponder*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='shouldBeTreatedAsInkEvent:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='showContextHelp:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='swapWithMark:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tabletPoint:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tabletProximity:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='transpose:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='transposeWords:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tryToPerform:with:'>
      <arg name='anAction' declared_type='SEL' type=':' index='0'/>
      <arg name='anObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='undoManager'>
      <retval declared_type='NSUndoManager*' type='@'/>
    </method>
    <method selector='uppercaseWord:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='validRequestorForSendType:returnType:'>
      <arg name='sendType' declared_type='NSString*' type='@' index='0'/>
      <arg name='returnType' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='willPresentError:'>
      <arg name='error' declared_type='NSError*' type='@' index='0'/>
      <retval declared_type='NSError*' type='@'/>
    </method>
    <method selector='yank:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSRulerMarker'>
    <method selector='drawRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='image'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='imageOrigin'>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method selector='imageRectInRuler'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='initWithRulerView:markerLocation:image:imageOrigin:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <arg name='location' declared_type='float' type='f' index='1'/>
      <arg name='image' declared_type='NSImage*' type='@' index='2'/>
      <arg name='imageOrigin' declared_type='NSPoint' type='{_NSPoint=ff}' index='3'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isDragging'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isMovable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isRemovable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='markerLocation'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='representedObject'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='ruler'>
      <retval declared_type='NSRulerView*' type='@'/>
    </method>
    <method selector='setImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImageOrigin:'>
      <arg name='imageOrigin' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMarkerLocation:'>
      <arg name='location' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMovable:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setRemovable:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setRepresentedObject:'>
      <arg name='representedObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='thicknessRequiredInRuler'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='trackMouse:adding:'>
      <arg name='mouseDownEvent' declared_type='NSEvent*' type='@' index='0'/>
      <arg name='isAdding' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSRulerView'>
    <method selector='accessoryView'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='addMarker:'>
      <arg name='marker' declared_type='NSRulerMarker*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='baselineLocation'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='clientView'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='drawHashMarksAndLabelsInRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawMarkersInRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='initWithScrollView:orientation:'>
      <arg name='scrollView' declared_type='NSScrollView*' type='@' index='0'/>
      <arg name='orientation' declared_type='NSRulerOrientation' type='i' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='invalidateHashMarks'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='isFlipped'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='markers'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='measurementUnits'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='moveRulerlineFromLocation:toLocation:'>
      <arg name='oldLocation' declared_type='float' type='f' index='0'/>
      <arg name='newLocation' declared_type='float' type='f' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='orientation'>
      <retval declared_type='NSRulerOrientation' type='i'/>
    </method>
    <method selector='originOffset'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='registerUnitWithName:abbreviation:unitToPointsConversionFactor:stepUpCycle:stepDownCycle:'>
      <arg name='unitName' declared_type='NSString*' type='@' index='0'/>
      <arg name='abbreviation' declared_type='NSString*' type='@' index='1'/>
      <arg name='conversionFactor' declared_type='float' type='f' index='2'/>
      <arg name='stepUpCycle' declared_type='NSArray*' type='@' index='3'/>
      <arg name='stepDownCycle' declared_type='NSArray*' type='@' index='4'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeMarker:'>
      <arg name='marker' declared_type='NSRulerMarker*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='requiredThickness'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='reservedThicknessForAccessoryView'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='reservedThicknessForMarkers'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='ruleThickness'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='scrollView'>
      <retval declared_type='NSScrollView*' type='@'/>
    </method>
    <method selector='setAccessoryView:'>
      <arg name='accessory' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setClientView:'>
      <arg name='client' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMarkers:'>
      <arg name='markers' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMeasurementUnits:'>
      <arg name='unitName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setOrientation:'>
      <arg name='orientation' declared_type='NSRulerOrientation' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setOriginOffset:'>
      <arg name='offset' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setReservedThicknessForAccessoryView:'>
      <arg name='thickness' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setReservedThicknessForMarkers:'>
      <arg name='thickness' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setRuleThickness:'>
      <arg name='thickness' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setScrollView:'>
      <arg name='scrollView' declared_type='NSScrollView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='trackMarker:withMouseEvent:'>
      <arg name='marker' declared_type='NSRulerMarker*' type='@' index='0'/>
      <arg name='event' declared_type='NSEvent*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSSavePanel'>
    <method selector='URL'>
      <retval declared_type='NSURL*' type='@'/>
    </method>
    <method selector='accessoryView'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='allowedFileTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='allowsOtherFileTypes'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <arg name='name' declared_type='NSString*' type='@' index='1'/>
      <arg name='docWindow' declared_type='NSWindow*' type='@' index='2'/>
      <arg name='delegate' declared_type='id' type='@' index='3'/>
      <arg name='didEndSelector' sel_of_type='v20@0:4@8@12^v16' declared_type='SEL' type=':' index='4' sel_of_type64='v40@0:8@16@24^v32'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='5' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='canCreateDirectories'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='canSelectHiddenExtension'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='cancel:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='directory'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='filename'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='isExpanded'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isExtensionHidden'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='message'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='nameFieldLabel'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='ok:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='prompt'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='requiredFileType'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='runModal'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='runModalForDirectory:file:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <arg name='name' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method class_method='true' selector='savePanel'>
      <retval declared_type='NSSavePanel*' type='@'/>
    </method>
    <method selector='selectText:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAccessoryView:'>
      <arg name='view' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAllowedFileTypes:'>
      <arg name='types' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAllowsOtherFileTypes:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCanCreateDirectories:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCanSelectHiddenExtension:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='delegate' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDirectory:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setExtensionHidden:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMessage:'>
      <arg name='message' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNameFieldLabel:'>
      <arg name='label' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPrompt:'>
      <arg name='prompt' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setRequiredFileType:'>
      <arg name='type' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitle:'>
      <arg name='title' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTreatsFilePackagesAsDirectories:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='title'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='treatsFilePackagesAsDirectories'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='validateVisibleColumns'>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSScreen'>
    <method class_method='true' selector='deepestScreen'>
      <retval declared_type='NSScreen*' type='@'/>
    </method>
    <method selector='depth'>
      <retval declared_type='NSWindowDepth' type='i'/>
    </method>
    <method selector='deviceDescription'>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='frame'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method class_method='true' selector='mainScreen'>
      <retval declared_type='NSScreen*' type='@'/>
    </method>
    <method class_method='true' selector='screens'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='supportedWindowDepths'>
      <retval declared_type='NSWindowDepth*' type='^i' const='true'/>
    </method>
    <method selector='userSpaceScaleFactor'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='visibleFrame'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
  </class>
  <class name='NSScrollView'>
    <method selector='autohidesScrollers'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='backgroundColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='borderType'>
      <retval declared_type='NSBorderType' type='i'/>
    </method>
    <method selector='contentSize'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method class_method='true' selector='contentSizeForFrameSize:hasHorizontalScroller:hasVerticalScroller:borderType:'>
      <arg name='fSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <arg name='hFlag' declared_type='BOOL' type='B' index='1'/>
      <arg name='vFlag' declared_type='BOOL' type='B' index='2'/>
      <arg name='aType' declared_type='NSBorderType' type='i' index='3'/>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='contentView'>
      <retval declared_type='NSClipView*' type='@'/>
    </method>
    <method selector='documentCursor'>
      <retval declared_type='NSCursor*' type='@'/>
    </method>
    <method selector='documentView'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='documentVisibleRect'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='drawsBackground'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method class_method='true' selector='frameSizeForContentSize:hasHorizontalScroller:hasVerticalScroller:borderType:'>
      <arg name='cSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <arg name='hFlag' declared_type='BOOL' type='B' index='1'/>
      <arg name='vFlag' declared_type='BOOL' type='B' index='2'/>
      <arg name='aType' declared_type='NSBorderType' type='i' index='3'/>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='hasHorizontalRuler'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='hasHorizontalScroller'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='hasVerticalRuler'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='hasVerticalScroller'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='horizontalLineScroll'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='horizontalPageScroll'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='horizontalRulerView'>
      <retval declared_type='NSRulerView*' type='@'/>
    </method>
    <method selector='horizontalScroller'>
      <retval declared_type='NSScroller*' type='@'/>
    </method>
    <method selector='lineScroll'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='pageScroll'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='reflectScrolledClipView:'>
      <arg name='cView' declared_type='NSClipView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='rulerViewClass'>
      <retval declared_type='Class' type='#'/>
    </method>
    <method selector='rulersVisible'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='scrollWheel:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scrollsDynamically'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setAutohidesScrollers:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBackgroundColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBorderType:'>
      <arg name='aType' declared_type='NSBorderType' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setContentView:'>
      <arg name='contentView' declared_type='NSClipView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDocumentCursor:'>
      <arg name='anObj' declared_type='NSCursor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDocumentView:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDrawsBackground:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHasHorizontalRuler:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHasHorizontalScroller:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHasVerticalRuler:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHasVerticalScroller:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHorizontalLineScroll:'>
      <arg name='value' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHorizontalPageScroll:'>
      <arg name='value' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHorizontalRulerView:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHorizontalScroller:'>
      <arg name='anObject' declared_type='NSScroller*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLineScroll:'>
      <arg name='value' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPageScroll:'>
      <arg name='value' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='setRulerViewClass:'>
      <arg name='rulerViewClass' declared_type='Class' type='#' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setRulersVisible:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setScrollsDynamically:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setVerticalLineScroll:'>
      <arg name='value' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setVerticalPageScroll:'>
      <arg name='value' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setVerticalRulerView:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setVerticalScroller:'>
      <arg name='anObject' declared_type='NSScroller*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tile'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='verticalLineScroll'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='verticalPageScroll'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='verticalRulerView'>
      <retval declared_type='NSRulerView*' type='@'/>
    </method>
    <method selector='verticalScroller'>
      <retval declared_type='NSScroller*' type='@'/>
    </method>
  </class>
  <class name='NSScroller'>
    <method selector='arrowsPosition'>
      <retval declared_type='NSScrollArrowPosition' type='i'/>
    </method>
    <method selector='checkSpaceForParts'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='controlSize'>
      <retval declared_type='NSControlSize' type='i'/>
    </method>
    <method selector='controlTint'>
      <retval declared_type='NSControlTint' type='i'/>
    </method>
    <method selector='drawArrow:highlight:'>
      <arg name='whichArrow' declared_type='NSScrollerArrow' type='i' index='0'/>
      <arg name='flag' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawKnob'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawParts'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='highlight:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='hitPart'>
      <retval declared_type='NSScrollerPart' type='i'/>
    </method>
    <method selector='knobProportion'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='rectForPart:'>
      <arg name='partCode' declared_type='NSScrollerPart' type='i' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method class_method='true' selector='scrollerWidth'>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='scrollerWidthForControlSize:'>
      <arg name='controlSize' declared_type='NSControlSize' type='i' index='0'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='setArrowsPosition:'>
      <arg name='where' declared_type='NSScrollArrowPosition' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setControlSize:'>
      <arg name='controlSize' declared_type='NSControlSize' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setControlTint:'>
      <arg name='controlTint' declared_type='NSControlTint' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFloatValue:knobProportion:'>
      <arg name='aFloat' declared_type='float' type='f' index='0'/>
      <arg name='percent' declared_type='float' type='f' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='testPart:'>
      <arg name='thePoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='NSScrollerPart' type='i'/>
    </method>
    <method selector='trackKnob:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='trackScrollButtons:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='usableParts'>
      <retval declared_type='NSUsableScrollerParts' type='i'/>
    </method>
  </class>
  <class name='NSSearchField'>
    <method selector='recentSearches'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='recentsAutosaveName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='setRecentSearches:'>
      <arg name='searches' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setRecentsAutosaveName:'>
      <arg name='string' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSSearchFieldCell'>
    <method selector='cancelButtonCell'>
      <retval declared_type='NSButtonCell*' type='@'/>
    </method>
    <method selector='cancelButtonRectForBounds:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='maximumRecents'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='recentSearches'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='recentsAutosaveName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='resetCancelButtonCell'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='resetSearchButtonCell'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='searchButtonCell'>
      <retval declared_type='NSButtonCell*' type='@'/>
    </method>
    <method selector='searchButtonRectForBounds:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='searchMenuTemplate'>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='searchTextRectForBounds:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='sendsSearchStringImmediately'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='sendsWholeSearchString'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setCancelButtonCell:'>
      <arg name='cell' declared_type='NSButtonCell*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMaximumRecents:'>
      <arg name='maxRecents' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setRecentSearches:'>
      <arg name='searches' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setRecentsAutosaveName:'>
      <arg name='string' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSearchButtonCell:'>
      <arg name='cell' declared_type='NSButtonCell*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSearchMenuTemplate:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSendsSearchStringImmediately:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSendsWholeSearchString:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSSecureTextFieldCell'>
    <method selector='echosBullets'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setEchosBullets:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSSegmentedCell'>
    <method selector='drawSegment:inFrame:withView:'>
      <arg name='segment' declared_type='int' type='i' index='0'/>
      <arg name='frame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='imageForSegment:'>
      <arg name='segment' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='isEnabledForSegment:'>
      <arg name='segment' declared_type='int' type='i' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isSelectedForSegment:'>
      <arg name='segment' declared_type='int' type='i' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='labelForSegment:'>
      <arg name='segment' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='makeNextSegmentKey'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='makePreviousSegmentKey'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='menuForSegment:'>
      <arg name='segment' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='segmentCount'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='selectSegmentWithTag:'>
      <arg name='tag' declared_type='int' type='i' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='selectedSegment'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='setEnabled:forSegment:'>
      <arg name='enabled' declared_type='BOOL' type='B' index='0'/>
      <arg name='segment' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImage:forSegment:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='segment' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLabel:forSegment:'>
      <arg name='label' declared_type='NSString*' type='@' index='0'/>
      <arg name='segment' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMenu:forSegment:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <arg name='segment' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSegmentCount:'>
      <arg name='count' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelected:forSegment:'>
      <arg name='selected' declared_type='BOOL' type='B' index='0'/>
      <arg name='segment' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelectedSegment:'>
      <arg name='selectedSegment' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTag:forSegment:'>
      <arg name='tag' declared_type='int' type='i' index='0'/>
      <arg name='segment' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setToolTip:forSegment:'>
      <arg name='toolTip' declared_type='NSString*' type='@' index='0'/>
      <arg name='segment' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTrackingMode:'>
      <arg name='trackingMode' declared_type='NSSegmentSwitchTracking' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setWidth:forSegment:'>
      <arg name='width' declared_type='float' type='f' index='0'/>
      <arg name='segment' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tagForSegment:'>
      <arg name='segment' declared_type='int' type='i' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='toolTipForSegment:'>
      <arg name='segment' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='trackingMode'>
      <retval declared_type='NSSegmentSwitchTracking' type='i'/>
    </method>
    <method selector='widthForSegment:'>
      <arg name='segment' declared_type='int' type='i' index='0'/>
      <retval declared_type='float' type='f'/>
    </method>
  </class>
  <class name='NSSegmentedControl'>
    <method selector='imageForSegment:'>
      <arg name='segment' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='isEnabledForSegment:'>
      <arg name='segment' declared_type='int' type='i' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isSelectedForSegment:'>
      <arg name='segment' declared_type='int' type='i' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='labelForSegment:'>
      <arg name='segment' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='menuForSegment:'>
      <arg name='segment' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='segmentCount'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='selectSegmentWithTag:'>
      <arg name='tag' declared_type='int' type='i' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='selectedSegment'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='setEnabled:forSegment:'>
      <arg name='enabled' declared_type='BOOL' type='B' index='0'/>
      <arg name='segment' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImage:forSegment:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='segment' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLabel:forSegment:'>
      <arg name='label' declared_type='NSString*' type='@' index='0'/>
      <arg name='segment' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMenu:forSegment:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <arg name='segment' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSegmentCount:'>
      <arg name='count' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelected:forSegment:'>
      <arg name='selected' declared_type='BOOL' type='B' index='0'/>
      <arg name='segment' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelectedSegment:'>
      <arg name='selectedSegment' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setWidth:forSegment:'>
      <arg name='width' declared_type='float' type='f' index='0'/>
      <arg name='segment' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='widthForSegment:'>
      <arg name='segment' declared_type='int' type='i' index='0'/>
      <retval declared_type='float' type='f'/>
    </method>
  </class>
  <class name='NSShadow'>
    <method selector='init'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='set'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShadowBlurRadius:'>
      <arg name='val' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShadowColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShadowOffset:'>
      <arg name='offset' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='shadowBlurRadius'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='shadowColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='shadowOffset'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
  </class>
  <class name='NSSlider'>
    <method selector='acceptsFirstMouse:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='allowsTickMarkValuesOnly'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='altIncrementValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='closestTickMarkValueToValue:'>
      <arg name='value' declared_type='double' type='d' index='0'/>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='image'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='indexOfTickMarkAtPoint:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='isVertical'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='knobThickness'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='maxValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='minValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='numberOfTickMarks'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='rectOfTickMarkAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='setAllowsTickMarkValuesOnly:'>
      <arg name='yorn' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAltIncrementValue:'>
      <arg name='incValue' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImage:'>
      <arg name='backgroundImage' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setKnobThickness:'>
      <arg name='aFloat' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMaxValue:'>
      <arg name='aDouble' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMinValue:'>
      <arg name='aDouble' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNumberOfTickMarks:'>
      <arg name='count' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTickMarkPosition:'>
      <arg name='position' declared_type='NSTickMarkPosition' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitle:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleCell:'>
      <arg name='aCell' declared_type='NSCell*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleColor:'>
      <arg name='newColor' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleFont:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tickMarkPosition'>
      <retval declared_type='NSTickMarkPosition' type='i'/>
    </method>
    <method selector='tickMarkValueAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='title'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='titleCell'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='titleColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='titleFont'>
      <retval declared_type='NSFont*' type='@'/>
    </method>
  </class>
  <class name='NSSliderCell'>
    <method selector='allowsTickMarkValuesOnly'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='altIncrementValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='closestTickMarkValueToValue:'>
      <arg name='value' declared_type='double' type='d' index='0'/>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='drawBarInside:flipped:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='flipped' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawKnob'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawKnob:'>
      <arg name='knobRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='indexOfTickMarkAtPoint:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='isVertical'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='knobRectFlipped:'>
      <arg name='flipped' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='knobThickness'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='maxValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='minValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='numberOfTickMarks'>
      <retval declared_type='int' type='i'/>
    </method>
    <method class_method='true' selector='prefersTrackingUntilMouseUp'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='rectOfTickMarkAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='setAllowsTickMarkValuesOnly:'>
      <arg name='yorn' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAltIncrementValue:'>
      <arg name='incValue' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setKnobThickness:'>
      <arg name='aFloat' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMaxValue:'>
      <arg name='aDouble' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMinValue:'>
      <arg name='aDouble' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNumberOfTickMarks:'>
      <arg name='count' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSliderType:'>
      <arg name='sliderType' declared_type='NSSliderType' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTickMarkPosition:'>
      <arg name='position' declared_type='NSTickMarkPosition' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitle:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleCell:'>
      <arg name='aCell' declared_type='NSCell*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleColor:'>
      <arg name='newColor' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleFont:'>
      <arg name='fontObj' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sliderType'>
      <retval declared_type='NSSliderType' type='i'/>
    </method>
    <method selector='tickMarkPosition'>
      <retval declared_type='NSTickMarkPosition' type='i'/>
    </method>
    <method selector='tickMarkValueAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='title'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='titleCell'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='titleColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='titleFont'>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='trackRect'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
  </class>
  <class name='NSSound'>
    <method class_method='true' selector='canInitWithPasteboard:'>
      <arg name='pasteboard' declared_type='NSPasteboard*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithContentsOfFile:byReference:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <arg name='byRef' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithContentsOfURL:byReference:'>
      <arg name='url' declared_type='NSURL*' type='@' index='0'/>
      <arg name='byRef' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithData:'>
      <arg name='data' declared_type='NSData*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithPasteboard:'>
      <arg name='pasteboard' declared_type='NSPasteboard*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isPlaying'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='name'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='pause'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='play'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='resume'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='aDelegate' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setName:'>
      <arg name='string' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method class_method='true' selector='soundNamed:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method class_method='true' selector='soundUnfilteredFileTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='soundUnfilteredPasteboardTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='stop'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='writeToPasteboard:'>
      <arg name='pasteboard' declared_type='NSPasteboard*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSSpeechRecognizer'>
    <method selector='blocksOtherRecognizers'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='commands'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='displayedCommandsTitle'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='init'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='listensInForegroundOnly'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setBlocksOtherRecognizers:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCommands:'>
      <arg name='commands' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDisplayedCommandsTitle:'>
      <arg name='title' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setListensInForegroundOnly:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='startListening'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='stopListening'>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSSpeechSynthesizer'>
    <method class_method='true' selector='attributesForVoice:'>
      <arg name='voice' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method class_method='true' selector='availableVoices'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='defaultVoice'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithVoice:'>
      <arg name='voice' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method class_method='true' selector='isAnyApplicationSpeaking'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isSpeaking'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setUsesFeedbackWindow:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setVoice:'>
      <arg name='voice' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='startSpeakingString:'>
      <arg name='string' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='startSpeakingString:toURL:'>
      <arg name='string' declared_type='NSString*' type='@' index='0'/>
      <arg name='url' declared_type='NSURL*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='stopSpeaking'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='usesFeedbackWindow'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='voice'>
      <retval declared_type='NSString*' type='@'/>
    </method>
  </class>
  <class name='NSSpellChecker'>
    <method selector='accessoryView'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='checkSpellingOfString:startingAt:'>
      <arg name='stringToCheck' declared_type='NSString*' type='@' index='0'/>
      <arg name='startingOffset' declared_type='int' type='i' index='1'/>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount:'>
      <arg name='stringToCheck' declared_type='NSString*' type='@' index='0'/>
      <arg name='startingOffset' declared_type='int' type='i' index='1'/>
      <arg name='language' declared_type='NSString*' type='@' index='2'/>
      <arg name='wrapFlag' declared_type='BOOL' type='B' index='3'/>
      <arg name='tag' declared_type='int' type='i' index='4'/>
      <arg name='wordCount' declared_type='int*' type='^i' index='5' type_modifier='o'/>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='closeSpellDocumentWithTag:'>
      <arg name='tag' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='completionsForPartialWordRange:inString:language:inSpellDocumentWithTag:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='string' declared_type='NSString*' type='@' index='1'/>
      <arg name='language' declared_type='NSString*' type='@' index='2'/>
      <arg name='tag' declared_type='int' type='i' index='3'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='countWordsInString:language:'>
      <arg name='stringToCount' declared_type='NSString*' type='@' index='0'/>
      <arg name='language' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='guessesForWord:'>
      <arg name='word' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='ignoreWord:inSpellDocumentWithTag:'>
      <arg name='wordToIgnore' declared_type='NSString*' type='@' index='0'/>
      <arg name='tag' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='ignoredWordsInSpellDocumentWithTag:'>
      <arg name='tag' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='language'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='setAccessoryView:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIgnoredWords:inSpellDocumentWithTag:'>
      <arg name='words' declared_type='NSArray*' type='@' index='0'/>
      <arg name='tag' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLanguage:'>
      <arg name='language' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setWordFieldStringValue:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='sharedSpellChecker'>
      <retval declared_type='NSSpellChecker*' type='@'/>
    </method>
    <method class_method='true' selector='sharedSpellCheckerExists'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='spellingPanel'>
      <retval declared_type='NSPanel*' type='@'/>
    </method>
    <method class_method='true' selector='uniqueSpellDocumentTag'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='updateSpellingPanelWithMisspelledWord:'>
      <arg name='word' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSSplitView'>
    <method selector='adjustSubviews'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='dividerThickness'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='drawDividerInRect:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='isPaneSplitter'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isSubviewCollapsed:'>
      <arg name='subview' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isVertical'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIsPaneSplitter:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setVertical:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSStatusBar'>
    <method selector='isVertical'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='removeStatusItem:'>
      <arg name='item' declared_type='NSStatusItem*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='statusItemWithLength:'>
      <arg name='length' declared_type='float' type='f' index='0'/>
      <retval declared_type='NSStatusItem*' type='@'/>
    </method>
    <method class_method='true' selector='systemStatusBar'>
      <retval declared_type='NSStatusBar*' type='@'/>
    </method>
    <method selector='thickness'>
      <retval declared_type='float' type='f'/>
    </method>
  </class>
  <class name='NSStatusItem'>
    <method selector='action'>
      <retval declared_type='SEL' type=':'/>
    </method>
    <method selector='alternateImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='attributedTitle'>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method selector='doubleAction'>
      <retval declared_type='SEL' type=':'/>
    </method>
    <method selector='drawStatusBarBackgroundInRect:withHighlight:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='highlight' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='highlightMode'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='image'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='isEnabled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='length'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='menu'>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='popUpStatusItemMenu:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sendActionOn:'>
      <arg name='mask' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAction:'>
      <arg name='action' sel_of_type='v12@0:4@8' declared_type='SEL' type=':' index='0' sel_of_type64='v24@0:8@16'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAlternateImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAttributedTitle:'>
      <arg name='title' declared_type='NSAttributedString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDoubleAction:'>
      <arg name='action' sel_of_type='v12@0:4@8' declared_type='SEL' type=':' index='0' sel_of_type64='v24@0:8@16'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEnabled:'>
      <arg name='enabled' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHighlightMode:'>
      <arg name='highlightMode' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLength:'>
      <arg name='length' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMenu:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTarget:'>
      <arg name='target' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitle:'>
      <arg name='title' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setToolTip:'>
      <arg name='toolTip' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setView:'>
      <arg name='view' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='statusBar'>
      <retval declared_type='NSStatusBar*' type='@'/>
    </method>
    <method selector='target'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='title'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='toolTip'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='view'>
      <retval declared_type='NSView*' type='@'/>
    </method>
  </class>
  <class name='NSStepper'>
    <method selector='autorepeat'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='increment'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='maxValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='minValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='setAutorepeat:'>
      <arg name='autorepeat' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIncrement:'>
      <arg name='increment' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMaxValue:'>
      <arg name='maxValue' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMinValue:'>
      <arg name='minValue' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setValueWraps:'>
      <arg name='valueWraps' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='valueWraps'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSStepperCell'>
    <method selector='autorepeat'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='increment'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='maxValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='minValue'>
      <retval declared_type='double' type='d'/>
    </method>
    <method selector='setAutorepeat:'>
      <arg name='autorepeat' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIncrement:'>
      <arg name='increment' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMaxValue:'>
      <arg name='maxValue' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMinValue:'>
      <arg name='minValue' declared_type='double' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setValueWraps:'>
      <arg name='valueWraps' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='valueWraps'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSString'>
    <method selector='boundingRectWithSize:options:attributes:'>
      <arg name='size' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <arg name='options' declared_type='NSStringDrawingOptions' type='i' index='1'/>
      <arg name='attributes' declared_type='NSDictionary*' type='@' index='2'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='drawAtPoint:withAttributes:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='attrs' declared_type='NSDictionary*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawInRect:withAttributes:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='attrs' declared_type='NSDictionary*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawWithRect:options:attributes:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='options' declared_type='NSStringDrawingOptions' type='i' index='1'/>
      <arg name='attributes' declared_type='NSDictionary*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sizeWithAttributes:'>
      <arg name='attrs' declared_type='NSDictionary*' type='@' index='0'/>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
  </class>
  <class name='NSTabView'>
    <method selector='addTabViewItem:'>
      <arg name='tabViewItem' declared_type='NSTabViewItem*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='allowsTruncatedLabels'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='contentRect'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='controlSize'>
      <retval declared_type='NSControlSize' type='i'/>
    </method>
    <method selector='controlTint'>
      <retval declared_type='NSControlTint' type='i'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='drawsBackground'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='font'>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='indexOfTabViewItem:'>
      <arg name='tabViewItem' declared_type='NSTabViewItem*' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='indexOfTabViewItemWithIdentifier:'>
      <arg name='identifier' declared_type='id' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='insertTabViewItem:atIndex:'>
      <arg name='tabViewItem' declared_type='NSTabViewItem*' type='@' index='0'/>
      <arg name='index' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='minimumSize'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='numberOfTabViewItems'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='removeTabViewItem:'>
      <arg name='tabViewItem' declared_type='NSTabViewItem*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectFirstTabViewItem:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectLastTabViewItem:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectNextTabViewItem:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectPreviousTabViewItem:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectTabViewItem:'>
      <arg name='tabViewItem' declared_type='NSTabViewItem*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectTabViewItemAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectTabViewItemWithIdentifier:'>
      <arg name='identifier' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectedTabViewItem'>
      <retval declared_type='NSTabViewItem*' type='@'/>
    </method>
    <method selector='setAllowsTruncatedLabels:'>
      <arg name='allowTruncatedLabels' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setControlSize:'>
      <arg name='controlSize' declared_type='NSControlSize' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setControlTint:'>
      <arg name='controlTint' declared_type='NSControlTint' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDrawsBackground:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFont:'>
      <arg name='font' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTabViewType:'>
      <arg name='tabViewType' declared_type='NSTabViewType' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tabViewItemAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSTabViewItem*' type='@'/>
    </method>
    <method selector='tabViewItemAtPoint:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='NSTabViewItem*' type='@'/>
    </method>
    <method selector='tabViewItems'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='tabViewType'>
      <retval declared_type='NSTabViewType' type='i'/>
    </method>
    <method selector='takeSelectedTabViewItemFromSender:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSTabViewItem'>
    <method selector='color'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='drawLabel:inRect:'>
      <arg name='shouldTruncateLabel' declared_type='BOOL' type='B' index='0'/>
      <arg name='labelRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='identifier'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithIdentifier:'>
      <arg name='identifier' declared_type='id' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initialFirstResponder'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='label'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='setColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIdentifier:'>
      <arg name='identifier' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setInitialFirstResponder:'>
      <arg name='view' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLabel:'>
      <arg name='label' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setView:'>
      <arg name='view' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sizeOfLabel:'>
      <arg name='computeMin' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='tabState'>
      <retval declared_type='NSTabState' type='i'/>
    </method>
    <method selector='tabView'>
      <retval declared_type='NSTabView*' type='@'/>
    </method>
    <method selector='view'>
      <retval declared_type='id' type='@'/>
    </method>
  </class>
  <class name='NSTableColumn'>
    <method selector='dataCell'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='dataCellForRow:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='headerCell'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='identifier'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithIdentifier:'>
      <arg name='identifier' declared_type='id' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isEditable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isResizable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='maxWidth'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='minWidth'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='resizingMask'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='setDataCell:'>
      <arg name='cell' declared_type='NSCell*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEditable:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHeaderCell:'>
      <arg name='cell' declared_type='NSCell*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIdentifier:'>
      <arg name='identifier' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMaxWidth:'>
      <arg name='maxWidth' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMinWidth:'>
      <arg name='minWidth' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setResizable:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setResizingMask:'>
      <arg name='resizingMask' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSortDescriptorPrototype:'>
      <arg name='sortDescriptor' declared_type='NSSortDescriptor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTableView:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setWidth:'>
      <arg name='width' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sizeToFit'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sortDescriptorPrototype'>
      <retval declared_type='NSSortDescriptor*' type='@'/>
    </method>
    <method selector='tableView'>
      <retval declared_type='NSTableView*' type='@'/>
    </method>
    <method selector='width'>
      <retval declared_type='float' type='f'/>
    </method>
  </class>
  <class name='NSTableHeaderCell'>
    <method selector='drawSortIndicatorWithFrame:inView:ascending:priority:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <arg name='ascending' declared_type='BOOL' type='B' index='2'/>
      <arg name='priority' declared_type='int' type='i' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sortIndicatorRectForBounds:'>
      <arg name='theRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
  </class>
  <class name='NSTableHeaderView'>
    <method selector='columnAtPoint:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='draggedColumn'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='draggedDistance'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='headerRectOfColumn:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='resizedColumn'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='setTableView:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tableView'>
      <retval declared_type='NSTableView*' type='@'/>
    </method>
  </class>
  <class name='NSTableView'>
    <method selector='addTableColumn:'>
      <arg name='column' declared_type='NSTableColumn*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='allowsColumnReordering'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='allowsColumnResizing'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='allowsColumnSelection'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='allowsEmptySelection'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='allowsMultipleSelection'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='autoresizesAllColumnsToFit'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='autosaveName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='autosaveTableColumns'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='backgroundColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='canDragRowsWithIndexes:atPoint:'>
      <arg name='rowIndexes' declared_type='NSIndexSet*' type='@' index='0'/>
      <arg name='mouseDownPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='clickedColumn'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='clickedRow'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='columnAtPoint:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='columnAutoresizingStyle'>
      <retval declared_type='NSTableViewColumnAutoresizingStyle' type='i'/>
    </method>
    <method selector='columnWithIdentifier:'>
      <arg name='identifier' declared_type='id' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='columnsInRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='cornerView'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='dataSource'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='deselectAll:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='deselectColumn:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='deselectRow:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='doubleAction'>
      <retval declared_type='SEL' type=':'/>
    </method>
    <method selector='dragImageForRows:event:dragImageOffset:'>
      <arg name='dragRows' declared_type='NSArray*' type='@' index='0'/>
      <arg name='dragEvent' declared_type='NSEvent*' type='@' index='1'/>
      <arg name='dragImageOffset' declared_type='NSPointPointer' type='^{_NSPoint=ff}' index='2' type_modifier='o'/>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='dragImageForRowsWithIndexes:tableColumns:event:offset:'>
      <arg name='dragRows' declared_type='NSIndexSet*' type='@' index='0'/>
      <arg name='tableColumns' declared_type='NSArray*' type='@' index='1'/>
      <arg name='dragEvent' declared_type='NSEvent*' type='@' index='2'/>
      <arg name='dragImageOffset' declared_type='NSPointPointer' type='^{_NSPoint=ff}' index='3' type_modifier='o'/>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='drawBackgroundInClipRect:'>
      <arg name='clipRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawGridInClipRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawRow:clipRect:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawsGrid'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='editColumn:row:withEvent:select:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <arg name='row' declared_type='int' type='i' index='1'/>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='2'/>
      <arg name='select' declared_type='BOOL' type='B' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='editedColumn'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='editedRow'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='frameOfCellAtColumn:row:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <arg name='row' declared_type='int' type='i' index='1'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='gridColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='gridStyleMask'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='headerView'>
      <retval declared_type='NSTableHeaderView*' type='@'/>
    </method>
    <method selector='highlightSelectionInClipRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='highlightedTableColumn'>
      <retval declared_type='NSTableColumn*' type='@'/>
    </method>
    <method selector='indicatorImageInTableColumn:'>
      <arg name='tc' declared_type='NSTableColumn*' type='@' index='0'/>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='intercellSpacing'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='isColumnSelected:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isRowSelected:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='moveColumn:toColumn:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <arg name='newIndex' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='noteHeightOfRowsWithIndexesChanged:'>
      <arg name='indexSet' declared_type='NSIndexSet*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='noteNumberOfRowsChanged'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='numberOfColumns'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='numberOfRows'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='numberOfSelectedColumns'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='numberOfSelectedRows'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='rectOfColumn:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='rectOfRow:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='reloadData'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeTableColumn:'>
      <arg name='column' declared_type='NSTableColumn*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rowAtPoint:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='rowHeight'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='rowsInRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='scrollColumnToVisible:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scrollRowToVisible:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectAll:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectColumn:byExtendingSelection:'>
      <arg name='column' declared_type='int' type='i' index='0'/>
      <arg name='extend' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectColumnIndexes:byExtendingSelection:'>
      <arg name='indexes' declared_type='NSIndexSet*' type='@' index='0'/>
      <arg name='extend' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectRow:byExtendingSelection:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <arg name='extend' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectRowIndexes:byExtendingSelection:'>
      <arg name='indexes' declared_type='NSIndexSet*' type='@' index='0'/>
      <arg name='extend' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectedColumn'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='selectedColumnEnumerator'>
      <retval declared_type='NSEnumerator*' type='@'/>
    </method>
    <method selector='selectedColumnIndexes'>
      <retval declared_type='NSIndexSet*' type='@'/>
    </method>
    <method selector='selectedRow'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='selectedRowEnumerator'>
      <retval declared_type='NSEnumerator*' type='@'/>
    </method>
    <method selector='selectedRowIndexes'>
      <retval declared_type='NSIndexSet*' type='@'/>
    </method>
    <method selector='setAllowsColumnReordering:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAllowsColumnResizing:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAllowsColumnSelection:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAllowsEmptySelection:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAllowsMultipleSelection:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAutoresizesAllColumnsToFit:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAutosaveName:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAutosaveTableColumns:'>
      <arg name='save' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBackgroundColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setColumnAutoresizingStyle:'>
      <arg name='style' declared_type='NSTableViewColumnAutoresizingStyle' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCornerView:'>
      <arg name='cornerView' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDataSource:'>
      <arg name='aSource' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='delegate' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDoubleAction:'>
      <arg name='aSelector' sel_of_type='v12@0:4@8' declared_type='SEL' type=':' index='0' sel_of_type64='v24@0:8@16'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDraggingSourceOperationMask:forLocal:'>
      <arg name='mask' declared_type='unsigned int' type='I' index='0'/>
      <arg name='isLocal' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDrawsGrid:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDropRow:dropOperation:'>
      <arg name='row' declared_type='int' type='i' index='0'/>
      <arg name='op' declared_type='NSTableViewDropOperation' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setGridColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setGridStyleMask:'>
      <arg name='gridType' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHeaderView:'>
      <arg name='headerView' declared_type='NSTableHeaderView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHighlightedTableColumn:'>
      <arg name='tc' declared_type='NSTableColumn*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIndicatorImage:inTableColumn:'>
      <arg name='anImage' declared_type='NSImage*' type='@' index='0'/>
      <arg name='tc' declared_type='NSTableColumn*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIntercellSpacing:'>
      <arg name='aSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setRowHeight:'>
      <arg name='rowHeight' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSortDescriptors:'>
      <arg name='array' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setUsesAlternatingRowBackgroundColors:'>
      <arg name='useAlternatingRowColors' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setVerticalMotionCanBeginDrag:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sizeLastColumnToFit'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sizeToFit'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sortDescriptors'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='tableColumnWithIdentifier:'>
      <arg name='identifier' declared_type='id' type='@' index='0'/>
      <retval declared_type='NSTableColumn*' type='@'/>
    </method>
    <method selector='tableColumns'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='textDidBeginEditing:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textDidChange:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textDidEndEditing:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textShouldBeginEditing:'>
      <arg name='textObject' declared_type='NSText*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='textShouldEndEditing:'>
      <arg name='textObject' declared_type='NSText*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='tile'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='usesAlternatingRowBackgroundColors'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='verticalMotionCanBeginDrag'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSText'>
    <method selector='RTFDFromRange:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='RTFFromRange:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='alignCenter:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='alignLeft:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='alignRight:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='alignment'>
      <retval declared_type='NSTextAlignment' type='i'/>
    </method>
    <method selector='backgroundColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='baseWritingDirection'>
      <retval declared_type='NSWritingDirection' type='i'/>
    </method>
    <method selector='changeFont:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='checkSpelling:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='copy:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='copyFont:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='copyRuler:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='cut:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='delete:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawsBackground'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='font'>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='importsGraphics'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isEditable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isFieldEditor'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isHorizontallyResizable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isRichText'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isRulerVisible'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isSelectable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isVerticallyResizable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='maxSize'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='minSize'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='paste:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='pasteFont:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='pasteRuler:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='readRTFDFromFile:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='replaceCharactersInRange:withRTF:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='rtfData' declared_type='NSData*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='replaceCharactersInRange:withRTFD:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='rtfdData' declared_type='NSData*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='replaceCharactersInRange:withString:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='aString' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scrollRangeToVisible:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectAll:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectedRange'>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='setAlignment:'>
      <arg name='mode' declared_type='NSTextAlignment' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBackgroundColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBaseWritingDirection:'>
      <arg name='writingDirection' declared_type='NSWritingDirection' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDrawsBackground:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEditable:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFieldEditor:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFont:'>
      <arg name='obj' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFont:range:'>
      <arg name='font' declared_type='NSFont*' type='@' index='0'/>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHorizontallyResizable:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImportsGraphics:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMaxSize:'>
      <arg name='newMaxSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMinSize:'>
      <arg name='newMinSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setRichText:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelectable:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelectedRange:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setString:'>
      <arg name='string' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTextColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTextColor:range:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setUsesFontPanel:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setVerticallyResizable:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='showGuessPanel:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sizeToFit'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='string'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='subscript:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='superscript:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='toggleRuler:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='underline:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='unscript:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='usesFontPanel'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='writeRTFDToFile:atomically:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <arg name='flag' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSTextAttachment'>
    <method selector='attachmentCell'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='fileWrapper'>
      <retval declared_type='NSFileWrapper*' type='@'/>
    </method>
    <method selector='initWithFileWrapper:'>
      <arg name='fileWrapper' declared_type='NSFileWrapper*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='setAttachmentCell:'>
      <arg name='cell' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFileWrapper:'>
      <arg name='fileWrapper' declared_type='NSFileWrapper*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSTextBlock'>
    <method selector='backgroundColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='borderColorForEdge:'>
      <arg name='edge' declared_type='NSRectEdge' type='i' index='0'/>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='boundsRectForContentRect:inRect:textContainer:characterRange:'>
      <arg name='contentRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='textContainer' declared_type='NSTextContainer*' type='@' index='2'/>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='3'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='contentWidth'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='contentWidthValueType'>
      <retval declared_type='NSTextBlockValueType' type='i'/>
    </method>
    <method selector='drawBackgroundWithFrame:inView:characterRange:layoutManager:'>
      <arg name='frameRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='2'/>
      <arg name='layoutManager' declared_type='NSLayoutManager*' type='@' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='init'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='rectForLayoutAtPoint:inRect:textContainer:characterRange:'>
      <arg name='startingPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='textContainer' declared_type='NSTextContainer*' type='@' index='2'/>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='3'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='setBackgroundColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBorderColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBorderColor:forEdge:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <arg name='edge' declared_type='NSRectEdge' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setContentWidth:type:'>
      <arg name='val' declared_type='float' type='f' index='0'/>
      <arg name='type' declared_type='NSTextBlockValueType' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setValue:type:forDimension:'>
      <arg name='val' declared_type='float' type='f' index='0'/>
      <arg name='type' declared_type='NSTextBlockValueType' type='i' index='1'/>
      <arg name='dimension' declared_type='NSTextBlockDimension' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setVerticalAlignment:'>
      <arg name='alignment' declared_type='NSTextBlockVerticalAlignment' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setWidth:type:forLayer:'>
      <arg name='val' declared_type='float' type='f' index='0'/>
      <arg name='type' declared_type='NSTextBlockValueType' type='i' index='1'/>
      <arg name='layer' declared_type='NSTextBlockLayer' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setWidth:type:forLayer:edge:'>
      <arg name='val' declared_type='float' type='f' index='0'/>
      <arg name='type' declared_type='NSTextBlockValueType' type='i' index='1'/>
      <arg name='layer' declared_type='NSTextBlockLayer' type='i' index='2'/>
      <arg name='edge' declared_type='NSRectEdge' type='i' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='valueForDimension:'>
      <arg name='dimension' declared_type='NSTextBlockDimension' type='i' index='0'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='valueTypeForDimension:'>
      <arg name='dimension' declared_type='NSTextBlockDimension' type='i' index='0'/>
      <retval declared_type='NSTextBlockValueType' type='i'/>
    </method>
    <method selector='verticalAlignment'>
      <retval declared_type='NSTextBlockVerticalAlignment' type='i'/>
    </method>
    <method selector='widthForLayer:edge:'>
      <arg name='layer' declared_type='NSTextBlockLayer' type='i' index='0'/>
      <arg name='edge' declared_type='NSRectEdge' type='i' index='1'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='widthValueTypeForLayer:edge:'>
      <arg name='layer' declared_type='NSTextBlockLayer' type='i' index='0'/>
      <arg name='edge' declared_type='NSRectEdge' type='i' index='1'/>
      <retval declared_type='NSTextBlockValueType' type='i'/>
    </method>
  </class>
  <class name='NSTextContainer'>
    <method selector='containerSize'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='containsPoint:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='heightTracksTextView'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='initWithContainerSize:'>
      <arg name='size' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isSimpleRectangularTextContainer'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='layoutManager'>
      <retval declared_type='NSLayoutManager*' type='@'/>
    </method>
    <method selector='lineFragmentPadding'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='lineFragmentRectForProposedRect:sweepDirection:movementDirection:remainingRect:'>
      <arg name='proposedRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='sweepDirection' declared_type='NSLineSweepDirection' type='i' index='1'/>
      <arg name='movementDirection' declared_type='NSLineMovementDirection' type='i' index='2'/>
      <arg name='remainingRect' declared_type='NSRectPointer' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='3' type_modifier='o'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='replaceLayoutManager:'>
      <arg name='newLayoutManager' declared_type='NSLayoutManager*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setContainerSize:'>
      <arg name='size' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHeightTracksTextView:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLayoutManager:'>
      <arg name='layoutManager' declared_type='NSLayoutManager*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLineFragmentPadding:'>
      <arg name='pad' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTextView:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setWidthTracksTextView:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textView'>
      <retval declared_type='NSTextView*' type='@'/>
    </method>
    <method selector='widthTracksTextView'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSTextField'>
    <method selector='acceptsFirstResponder'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='allowsEditingTextAttributes'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='backgroundColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='bezelStyle'>
      <retval declared_type='NSTextFieldBezelStyle' type='i'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='drawsBackground'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='importsGraphics'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isBezeled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isBordered'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isEditable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isSelectable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='selectText:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAllowsEditingTextAttributes:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBackgroundColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBezelStyle:'>
      <arg name='style' declared_type='NSTextFieldBezelStyle' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBezeled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBordered:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDrawsBackground:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEditable:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImportsGraphics:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelectable:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTextColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleWithMnemonic:'>
      <arg name='stringWithAmpersand' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='textDidBeginEditing:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textDidChange:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textDidEndEditing:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textShouldBeginEditing:'>
      <arg name='textObject' declared_type='NSText*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='textShouldEndEditing:'>
      <arg name='textObject' declared_type='NSText*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSTextFieldCell'>
    <method selector='backgroundColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='bezelStyle'>
      <retval declared_type='NSTextFieldBezelStyle' type='i'/>
    </method>
    <method selector='drawsBackground'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='placeholderAttributedString'>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method selector='placeholderString'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='setBackgroundColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBezelStyle:'>
      <arg name='style' declared_type='NSTextFieldBezelStyle' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDrawsBackground:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPlaceholderAttributedString:'>
      <arg name='string' declared_type='NSAttributedString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPlaceholderString:'>
      <arg name='string' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTextColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setUpFieldEditorAttributes:'>
      <arg name='textObj' declared_type='NSText*' type='@' index='0'/>
      <retval declared_type='NSText*' type='@'/>
    </method>
    <method selector='textColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
  </class>
  <class name='NSTextList'>
    <method selector='initWithMarkerFormat:options:'>
      <arg name='format' declared_type='NSString*' type='@' index='0'/>
      <arg name='mask' declared_type='unsigned int' type='I' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='listOptions'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='markerForItemNumber:'>
      <arg name='itemNum' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='markerFormat'>
      <retval declared_type='NSString*' type='@'/>
    </method>
  </class>
  <class name='NSTextStorage'>
    <method selector='addLayoutManager:'>
      <arg name='obj' declared_type='NSLayoutManager*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='attributeRuns'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='changeInLength'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='characters'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='edited:range:changeInLength:'>
      <arg name='editedMask' declared_type='unsigned int' type='I' index='0'/>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <arg name='delta' declared_type='int' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='editedMask'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='editedRange'>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='ensureAttributesAreFixedInRange:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='fixesAttributesLazily'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='font'>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method selector='foregroundColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='invalidateAttributesInRange:'>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='layoutManagers'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='paragraphs'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='processEditing'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeLayoutManager:'>
      <arg name='obj' declared_type='NSLayoutManager*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAttributeRuns:'>
      <arg name='attributeRuns' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCharacters:'>
      <arg name='characters' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='delegate' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFont:'>
      <arg name='font' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setForegroundColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setParagraphs:'>
      <arg name='paragraphs' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setWords:'>
      <arg name='words' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='words'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
  </class>
  <class name='NSTextTab'>
    <method selector='alignment'>
      <retval declared_type='NSTextAlignment' type='i'/>
    </method>
    <method selector='initWithTextAlignment:location:options:'>
      <arg name='alignment' declared_type='NSTextAlignment' type='i' index='0'/>
      <arg name='loc' declared_type='float' type='f' index='1'/>
      <arg name='options' declared_type='NSDictionary*' type='@' index='2'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithType:location:'>
      <arg name='type' declared_type='NSTextTabType' type='i' index='0'/>
      <arg name='loc' declared_type='float' type='f' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='location'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='options'>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='tabStopType'>
      <retval declared_type='NSTextTabType' type='i'/>
    </method>
  </class>
  <class name='NSTextTable'>
    <method selector='boundsRectForBlock:contentRect:inRect:textContainer:characterRange:'>
      <arg name='block' declared_type='NSTextTableBlock*' type='@' index='0'/>
      <arg name='contentRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <arg name='textContainer' declared_type='NSTextContainer*' type='@' index='3'/>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='4'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='collapsesBorders'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='drawBackgroundForBlock:withFrame:inView:characterRange:layoutManager:'>
      <arg name='block' declared_type='NSTextTableBlock*' type='@' index='0'/>
      <arg name='frameRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='2'/>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='3'/>
      <arg name='layoutManager' declared_type='NSLayoutManager*' type='@' index='4'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='hidesEmptyCells'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='layoutAlgorithm'>
      <retval declared_type='NSTextTableLayoutAlgorithm' type='i'/>
    </method>
    <method selector='numberOfColumns'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='rectForBlock:layoutAtPoint:inRect:textContainer:characterRange:'>
      <arg name='block' declared_type='NSTextTableBlock*' type='@' index='0'/>
      <arg name='startingPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <arg name='textContainer' declared_type='NSTextContainer*' type='@' index='3'/>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='4'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='setCollapsesBorders:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHidesEmptyCells:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLayoutAlgorithm:'>
      <arg name='algorithm' declared_type='NSTextTableLayoutAlgorithm' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNumberOfColumns:'>
      <arg name='numCols' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSTextTableBlock'>
    <method selector='columnSpan'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='initWithTable:startingRow:rowSpan:startingColumn:columnSpan:'>
      <arg name='table' declared_type='NSTextTable*' type='@' index='0'/>
      <arg name='row' declared_type='int' type='i' index='1'/>
      <arg name='rowSpan' declared_type='int' type='i' index='2'/>
      <arg name='col' declared_type='int' type='i' index='3'/>
      <arg name='colSpan' declared_type='int' type='i' index='4'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='rowSpan'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='startingColumn'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='startingRow'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='table'>
      <retval declared_type='NSTextTable*' type='@'/>
    </method>
  </class>
  <class name='NSTextView'>
    <method selector='acceptableDragTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='acceptsGlyphInfo'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='alignJustified:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='allowsDocumentBackgroundColorChange'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='allowsUndo'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='backgroundColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='becomeFirstResponder'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='breakUndoCoalescing'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='changeAttributes:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='changeColor:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='changeDocumentBackgroundColor:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='cleanUpAfterDragOperation'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='clickedOnLink:atIndex:'>
      <arg name='link' declared_type='id' type='@' index='0'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='complete:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='completionsForPartialWordRange:indexOfSelectedItem:'>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='index' declared_type='int*' type='^i' index='1' type_modifier='o'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='defaultParagraphStyle'>
      <retval declared_type='NSParagraphStyle*' type='@'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='didChangeText'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='dragImageForSelectionWithEvent:origin:'>
      <arg name='event' declared_type='NSEvent*' type='@' index='0'/>
      <arg name='origin' declared_type='NSPointPointer' type='^{_NSPoint=ff}' index='1'/>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='dragOperationForDraggingInfo:type:'>
      <arg name='dragInfo' declared_type='id' type='@' index='0'/>
      <arg name='type' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='dragSelectionWithEvent:offset:slideBack:'>
      <arg name='event' declared_type='NSEvent*' type='@' index='0'/>
      <arg name='mouseOffset' declared_type='NSSize' type='{_NSSize=ff}' index='1'/>
      <arg name='slideBack' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='drawInsertionPointInRect:color:turnedOn:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='color' declared_type='NSColor*' type='@' index='1'/>
      <arg name='flag' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawViewBackgroundInRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawsBackground'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='importsGraphics'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='initWithFrame:'>
      <arg name='frameRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithFrame:textContainer:'>
      <arg name='frameRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='container' declared_type='NSTextContainer*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='insertCompletion:forPartialWordRange:movement:isFinal:'>
      <arg name='word' declared_type='NSString*' type='@' index='0'/>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <arg name='movement' declared_type='int' type='i' index='2'/>
      <arg name='flag' declared_type='BOOL' type='B' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertText:'>
      <arg name='insertString' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertionPointColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='invalidateTextContainerOrigin'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='isContinuousSpellCheckingEnabled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isEditable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isFieldEditor'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isRichText'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isRulerVisible'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isSelectable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='layoutManager'>
      <retval declared_type='NSLayoutManager*' type='@'/>
    </method>
    <method selector='linkTextAttributes'>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='loosenKerning:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='lowerBaseline:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='markedTextAttributes'>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='orderFrontLinkPanel:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='orderFrontListPanel:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='orderFrontSpacingPanel:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='orderFrontTablePanel:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='outline:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='pasteAsPlainText:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='pasteAsRichText:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='performFindPanelAction:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='preferredPasteboardTypeFromArray:restrictedToTypesFromArray:'>
      <arg name='availableTypes' declared_type='NSArray*' type='@' index='0'/>
      <arg name='allowedTypes' declared_type='NSArray*' type='@' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='raiseBaseline:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rangeForUserCharacterAttributeChange'>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='rangeForUserCompletion'>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='rangeForUserParagraphAttributeChange'>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='rangeForUserTextChange'>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='rangesForUserCharacterAttributeChange'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='rangesForUserParagraphAttributeChange'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='rangesForUserTextChange'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='readSelectionFromPasteboard:'>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='readSelectionFromPasteboard:type:'>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='0'/>
      <arg name='type' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='readablePasteboardTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method class_method='true' selector='registerForServices'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='replaceTextContainer:'>
      <arg name='newContainer' declared_type='NSTextContainer*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='resignFirstResponder'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='rulerView:didAddMarker:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <arg name='marker' declared_type='NSRulerMarker*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rulerView:didMoveMarker:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <arg name='marker' declared_type='NSRulerMarker*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rulerView:didRemoveMarker:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <arg name='marker' declared_type='NSRulerMarker*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rulerView:handleMouseDown:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <arg name='event' declared_type='NSEvent*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rulerView:shouldAddMarker:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <arg name='marker' declared_type='NSRulerMarker*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='rulerView:shouldMoveMarker:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <arg name='marker' declared_type='NSRulerMarker*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='rulerView:shouldRemoveMarker:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <arg name='marker' declared_type='NSRulerMarker*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='rulerView:willAddMarker:atLocation:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <arg name='marker' declared_type='NSRulerMarker*' type='@' index='1'/>
      <arg name='location' declared_type='float' type='f' index='2'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='rulerView:willMoveMarker:toLocation:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <arg name='marker' declared_type='NSRulerMarker*' type='@' index='1'/>
      <arg name='location' declared_type='float' type='f' index='2'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='selectedRanges'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='selectedTextAttributes'>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='selectionAffinity'>
      <retval declared_type='NSSelectionAffinity' type='i'/>
    </method>
    <method selector='selectionGranularity'>
      <retval declared_type='NSSelectionGranularity' type='i'/>
    </method>
    <method selector='selectionRangeForProposedRange:granularity:'>
      <arg name='proposedCharRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='granularity' declared_type='NSSelectionGranularity' type='i' index='1'/>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='setAcceptsGlyphInfo:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAlignment:range:'>
      <arg name='alignment' declared_type='NSTextAlignment' type='i' index='0'/>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAllowsDocumentBackgroundColorChange:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAllowsUndo:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBackgroundColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBaseWritingDirection:range:'>
      <arg name='writingDirection' declared_type='NSWritingDirection' type='i' index='0'/>
      <arg name='range' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setConstrainedFrameSize:'>
      <arg name='desiredSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setContinuousSpellCheckingEnabled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDefaultParagraphStyle:'>
      <arg name='paragraphStyle' declared_type='NSParagraphStyle*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDrawsBackground:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEditable:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFieldEditor:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImportsGraphics:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setInsertionPointColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLinkTextAttributes:'>
      <arg name='attributeDictionary' declared_type='NSDictionary*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMarkedTextAttributes:'>
      <arg name='attributeDictionary' declared_type='NSDictionary*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNeedsDisplayInRect:avoidAdditionalLayout:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='flag' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setRichText:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setRulerVisible:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelectable:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelectedRange:'>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelectedRange:affinity:stillSelecting:'>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='affinity' declared_type='NSSelectionAffinity' type='i' index='1'/>
      <arg name='stillSelectingFlag' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelectedRanges:'>
      <arg name='ranges' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelectedRanges:affinity:stillSelecting:'>
      <arg name='ranges' declared_type='NSArray*' type='@' index='0'/>
      <arg name='affinity' declared_type='NSSelectionAffinity' type='i' index='1'/>
      <arg name='stillSelectingFlag' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelectedTextAttributes:'>
      <arg name='attributeDictionary' declared_type='NSDictionary*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelectionGranularity:'>
      <arg name='granularity' declared_type='NSSelectionGranularity' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSmartInsertDeleteEnabled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTextContainer:'>
      <arg name='container' declared_type='NSTextContainer*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTextContainerInset:'>
      <arg name='inset' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTypingAttributes:'>
      <arg name='attrs' declared_type='NSDictionary*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setUsesFindPanel:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setUsesFontPanel:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setUsesRuler:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='shouldChangeTextInRange:replacementString:'>
      <arg name='affectedCharRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='replacementString' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='shouldChangeTextInRanges:replacementStrings:'>
      <arg name='affectedRanges' declared_type='NSArray*' type='@' index='0'/>
      <arg name='replacementStrings' declared_type='NSArray*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='shouldDrawInsertionPoint'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='smartDeleteRangeForProposedRange:'>
      <arg name='proposedCharRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='smartInsertAfterStringForString:replacingRange:'>
      <arg name='pasteString' declared_type='NSString*' type='@' index='0'/>
      <arg name='charRangeToReplace' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='smartInsertBeforeStringForString:replacingRange:'>
      <arg name='pasteString' declared_type='NSString*' type='@' index='0'/>
      <arg name='charRangeToReplace' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='smartInsertDeleteEnabled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='smartInsertForString:replacingRange:beforeString:afterString:'>
      <arg name='pasteString' declared_type='NSString*' type='@' index='0'/>
      <arg name='charRangeToReplace' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <arg name='beforeString' declared_type='NSString**' type='^@' index='2' type_modifier='o'/>
      <arg name='afterString' declared_type='NSString**' type='^@' index='3' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='spellCheckerDocumentTag'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='startSpeaking:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='stopSpeaking:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textContainer'>
      <retval declared_type='NSTextContainer*' type='@'/>
    </method>
    <method selector='textContainerInset'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='textContainerOrigin'>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method selector='textStorage'>
      <retval declared_type='NSTextStorage*' type='@'/>
    </method>
    <method selector='tightenKerning:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='toggleBaseWritingDirection:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='toggleContinuousSpellChecking:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='toggleTraditionalCharacterShape:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='turnOffKerning:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='turnOffLigatures:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='typingAttributes'>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='updateDragTypeRegistration'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='updateFontPanel'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='updateInsertionPointStateAndRestartTimer:'>
      <arg name='restartFlag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='updateRuler'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='useAllLigatures:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='useStandardKerning:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='useStandardLigatures:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='usesFindPanel'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='usesFontPanel'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='usesRuler'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='validRequestorForSendType:returnType:'>
      <arg name='sendType' declared_type='NSString*' type='@' index='0'/>
      <arg name='returnType' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='writablePasteboardTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='writeSelectionToPasteboard:type:'>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='0'/>
      <arg name='type' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='writeSelectionToPasteboard:types:'>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='0'/>
      <arg name='types' declared_type='NSArray*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <class name='NSTokenField'>
    <method selector='completionDelay'>
      <retval declared_type='NSTimeInterval' type='d'/>
    </method>
    <method class_method='true' selector='defaultCompletionDelay'>
      <retval declared_type='NSTimeInterval' type='d'/>
    </method>
    <method class_method='true' selector='defaultTokenizingCharacterSet'>
      <retval declared_type='NSCharacterSet*' type='@'/>
    </method>
    <method selector='setCompletionDelay:'>
      <arg name='delay' declared_type='NSTimeInterval' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTokenStyle:'>
      <arg name='style' declared_type='NSTokenStyle' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTokenizingCharacterSet:'>
      <arg name='characterSet' declared_type='NSCharacterSet*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tokenStyle'>
      <retval declared_type='NSTokenStyle' type='i'/>
    </method>
    <method selector='tokenizingCharacterSet'>
      <retval declared_type='NSCharacterSet*' type='@'/>
    </method>
  </class>
  <class name='NSTokenFieldCell'>
    <method selector='completionDelay'>
      <retval declared_type='NSTimeInterval' type='d'/>
    </method>
    <method class_method='true' selector='defaultCompletionDelay'>
      <retval declared_type='NSTimeInterval' type='d'/>
    </method>
    <method class_method='true' selector='defaultTokenizingCharacterSet'>
      <retval declared_type='NSCharacterSet*' type='@'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='setCompletionDelay:'>
      <arg name='delay' declared_type='NSTimeInterval' type='d' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTokenStyle:'>
      <arg name='style' declared_type='NSTokenStyle' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTokenizingCharacterSet:'>
      <arg name='characterSet' declared_type='NSCharacterSet*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tokenStyle'>
      <retval declared_type='NSTokenStyle' type='i'/>
    </method>
    <method selector='tokenizingCharacterSet'>
      <retval declared_type='NSCharacterSet*' type='@'/>
    </method>
  </class>
  <class name='NSToolbar'>
    <method selector='allowsUserCustomization'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='autosavesConfiguration'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='configurationDictionary'>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='customizationPaletteIsRunning'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='displayMode'>
      <retval declared_type='NSToolbarDisplayMode' type='i'/>
    </method>
    <method selector='identifier'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='initWithIdentifier:'>
      <arg name='identifier' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='insertItemWithItemIdentifier:atIndex:'>
      <arg name='itemIdentifier' declared_type='NSString*' type='@' index='0'/>
      <arg name='index' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='isVisible'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='items'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='removeItemAtIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='runCustomizationPalette:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectedItemIdentifier'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='setAllowsUserCustomization:'>
      <arg name='allowCustomization' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAutosavesConfiguration:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setConfigurationFromDictionary:'>
      <arg name='configDict' declared_type='NSDictionary*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='delegate' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDisplayMode:'>
      <arg name='displayMode' declared_type='NSToolbarDisplayMode' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelectedItemIdentifier:'>
      <arg name='itemIdentifier' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShowsBaselineSeparator:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSizeMode:'>
      <arg name='sizeMode' declared_type='NSToolbarSizeMode' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setVisible:'>
      <arg name='shown' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='showsBaselineSeparator'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='sizeMode'>
      <retval declared_type='NSToolbarSizeMode' type='i'/>
    </method>
    <method selector='validateVisibleItems'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='visibleItems'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
  </class>
  <class name='NSToolbarItem'>
    <method selector='action'>
      <retval declared_type='SEL' type=':'/>
    </method>
    <method selector='allowsDuplicatesInToolbar'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='autovalidates'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='image'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='initWithItemIdentifier:'>
      <arg name='itemIdentifier' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isEnabled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='itemIdentifier'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='label'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='maxSize'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='menuFormRepresentation'>
      <retval declared_type='NSMenuItem*' type='@'/>
    </method>
    <method selector='minSize'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='paletteLabel'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='setAction:'>
      <arg name='action' sel_of_type='v12@0:4@8' declared_type='SEL' type=':' index='0' sel_of_type64='v24@0:8@16'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAutovalidates:'>
      <arg name='resistance' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setEnabled:'>
      <arg name='enabled' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLabel:'>
      <arg name='label' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMaxSize:'>
      <arg name='size' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMenuFormRepresentation:'>
      <arg name='menuItem' declared_type='NSMenuItem*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMinSize:'>
      <arg name='size' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPaletteLabel:'>
      <arg name='paletteLabel' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTag:'>
      <arg name='tag' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTarget:'>
      <arg name='target' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setToolTip:'>
      <arg name='toolTip' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setView:'>
      <arg name='view' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setVisibilityPriority:'>
      <arg name='visibilityPriority' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='tag'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='target'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='toolTip'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='toolbar'>
      <retval declared_type='NSToolbar*' type='@'/>
    </method>
    <method selector='validate'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='view'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='visibilityPriority'>
      <retval declared_type='int' type='i'/>
    </method>
  </class>
  <class name='NSTreeController'>
    <method selector='add:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addChild:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addSelectionIndexPaths:'>
      <arg name='indexPaths' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='alwaysUsesMultipleValuesMarker'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='arrangedObjects'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='avoidsEmptySelection'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='canAddChild'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='canInsert'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='canInsertChild'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='childrenKeyPath'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='content'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='countKeyPath'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='insert:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertChild:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertObject:atArrangedObjectIndexPath:'>
      <arg name='object' declared_type='id' type='@' index='0'/>
      <arg name='indexPath' declared_type='NSIndexPath*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='insertObjects:atArrangedObjectIndexPaths:'>
      <arg name='objects' declared_type='NSArray*' type='@' index='0'/>
      <arg name='indexPaths' declared_type='NSArray*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='leafKeyPath'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='preservesSelection'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='rearrangeObjects'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='remove:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeObjectAtArrangedObjectIndexPath:'>
      <arg name='indexPath' declared_type='NSIndexPath*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeObjectsAtArrangedObjectIndexPaths:'>
      <arg name='indexPaths' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeSelectionIndexPaths:'>
      <arg name='indexPaths' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='selectedObjects'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='selectionIndexPath'>
      <retval declared_type='NSIndexPath*' type='@'/>
    </method>
    <method selector='selectionIndexPaths'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='selectsInsertedObjects'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setAlwaysUsesMultipleValuesMarker:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAvoidsEmptySelection:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setChildrenKeyPath:'>
      <arg name='keyPath' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setContent:'>
      <arg name='content' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCountKeyPath:'>
      <arg name='keyPath' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLeafKeyPath:'>
      <arg name='keyPath' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPreservesSelection:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSelectionIndexPath:'>
      <arg name='indexPath' declared_type='NSIndexPath*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setSelectionIndexPaths:'>
      <arg name='indexPaths' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setSelectsInsertedObjects:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setSortDescriptors:'>
      <arg name='sortDescriptors' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sortDescriptors'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
  </class>
  <class name='NSTypesetter'>
    <method selector='actionForControlCharacterAtIndex:'>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='NSTypesetterControlCharacterAction' type='i'/>
    </method>
    <method selector='attributedString'>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method selector='attributesForExtraLineFragment'>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='baselineOffsetInLayoutManager:glyphIndex:'>
      <arg name='layoutMgr' declared_type='NSLayoutManager*' type='@' index='0'/>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='1'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='beginLineWithGlyphAtIndex:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='beginParagraph'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='bidiProcessingEnabled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <arg name='textContainer' declared_type='NSTextContainer*' type='@' index='1'/>
      <arg name='proposedRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <arg name='glyphPosition' declared_type='NSPoint' type='{_NSPoint=ff}' index='3'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='4'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='characterRangeForGlyphRange:actualGlyphRange:'>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='actualGlyphRange' declared_type='NSRangePointer' type='^{_NSRange=II}' index='1'/>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='currentParagraphStyle'>
      <retval declared_type='NSParagraphStyle*' type='@'/>
    </method>
    <method selector='currentTextContainer'>
      <retval declared_type='NSTextContainer*' type='@'/>
    </method>
    <method class_method='true' selector='defaultTypesetterBehavior'>
      <retval declared_type='NSTypesetterBehavior' type='i'/>
    </method>
    <method selector='deleteGlyphsInRange:'>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='endLineWithGlyphRange:'>
      <arg name='lineGlyphRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='endParagraph'>
      <retval declared_type='void' type='v'/>
    </method>
    <method ignore='true' selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:'>
      <arg name='glyphsRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='glyphBuffer' declared_type='NSGlyph*' type='^I' index='1'/>
      <arg name='charIndexBuffer' declared_type='unsigned int*' type='^I' index='2'/>
      <arg name='inscribeBuffer' declared_type='NSGlyphInscription*' type='^i' index='3'/>
      <arg name='elasticBuffer' declared_type='BOOL*' type='^B' index='4'/>
      <arg name='bidiLevelBuffer' declared_type='unsigned char*' type='*' index='5'/>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:'>
      <arg name='lineFragmentRect' declared_type='NSRectPointer' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='lineFragmentUsedRect' declared_type='NSRectPointer' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='paragraphSeparatorGlyphRange' declared_type='NSRange' type='{_NSRange=II}' index='2'/>
      <arg name='lineOrigin' declared_type='NSPoint' type='{_NSPoint=ff}' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:'>
      <arg name='lineFragmentRect' declared_type='NSRectPointer' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='lineFragmentUsedRect' declared_type='NSRectPointer' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='remainingRect' declared_type='NSRectPointer' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <arg name='startingGlyphIndex' declared_type='unsigned int' type='I' index='3'/>
      <arg name='proposedRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='4'/>
      <arg name='lineSpacing' declared_type='float' type='f' index='5'/>
      <arg name='paragraphSpacingBefore' declared_type='float' type='f' index='6'/>
      <arg name='paragraphSpacingAfter' declared_type='float' type='f' index='7'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='glyphRangeForCharacterRange:actualCharacterRange:'>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='actualCharRange' declared_type='NSRangePointer' type='^{_NSRange=II}' index='1'/>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='hyphenCharacterForGlyphAtIndex:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='UTF32Char' type='L' type64='I'/>
    </method>
    <method selector='hyphenationFactor'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='hyphenationFactorForGlyphAtIndex:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='insertGlyph:atGlyphIndex:characterIndex:'>
      <arg name='glyph' declared_type='NSGlyph' type='I' index='0'/>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='1'/>
      <arg name='characterIndex' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:'>
      <arg name='layoutManager' declared_type='NSLayoutManager*' type='@' index='0'/>
      <arg name='startGlyphIndex' declared_type='unsigned int' type='I' index='1'/>
      <arg name='maxNumLines' declared_type='unsigned int' type='I' index='2'/>
      <arg name='nextGlyph' declared_type='unsigned int*' type='^I' index='3' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='layoutManager'>
      <retval declared_type='NSLayoutManager*' type='@'/>
    </method>
    <method selector='layoutParagraphAtPoint:'>
      <arg name='lineFragmentOrigin' declared_type='NSPointPointer' type='^{_NSPoint=ff}' index='0'/>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='lineFragmentPadding'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='paragraphCharacterRange'>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='paragraphGlyphRange'>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='paragraphSeparatorCharacterRange'>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='paragraphSeparatorGlyphRange'>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method selector='paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:'>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='0'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method class_method='true' selector='printingAdjustmentInLayoutManager:forNominallySpacedGlyphRange:packedGlyphs:count:'>
      <arg name='layoutMgr' declared_type='NSLayoutManager*' type='@' index='0'/>
      <arg name='nominallySpacedGlyphsRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <arg name='packedGlyphs' c_array_length_in_arg='3' declared_type='unsigned char*' type='*' const='true' index='2' type_modifier='n'/>
      <arg name='packedGlyphsCount' declared_type='unsigned int' type='I' index='3'/>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='setAttachmentSize:forGlyphRange:'>
      <arg name='attachmentSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAttributedString:'>
      <arg name='attrString' declared_type='NSAttributedString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method ignore='true' selector='setBidiLevels:forGlyphRange:'>
      <arg name='levels' declared_type='uint8_t*' type='*' const='true' index='0'/>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBidiProcessingEnabled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDrawsOutsideLineFragment:forGlyphRange:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHardInvalidation:forGlyphRange:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHyphenationFactor:'>
      <arg name='factor' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLineFragmentPadding:'>
      <arg name='padding' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'>
      <arg name='fragmentRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <arg name='usedRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <arg name='baselineOffset' declared_type='float' type='f' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method ignore='true' selector='setLocation:withAdvancements:forStartOfGlyphRange:'>
      <arg name='location' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='advancements' declared_type='float*' type='^f' const='true' index='1'/>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNotShownAttribute:forGlyphRange:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setParagraphGlyphRange:separatorGlyphRange:'>
      <arg name='paragraphRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='paragraphSeparatorRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTypesetterBehavior:'>
      <arg name='behavior' declared_type='NSTypesetterBehavior' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setUsesFontLeading:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='sharedSystemTypesetter'>
      <retval declared_type='id' type='@'/>
    </method>
    <method class_method='true' selector='sharedSystemTypesetterForBehavior:'>
      <arg name='theBehavior' declared_type='NSTypesetterBehavior' type='i' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='shouldBreakLineByHyphenatingBeforeCharacterAtIndex:'>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='shouldBreakLineByWordBeforeCharacterAtIndex:'>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='substituteFontForFont:'>
      <arg name='originalFont' declared_type='NSFont*' type='@' index='0'/>
      <retval declared_type='NSFont*' type='@'/>
    </method>
    <method ignore='true' selector='substituteGlyphsInRange:withGlyphs:'>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='glyphs' declared_type='NSGlyph*' type='^I' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='textContainers'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='textTabForGlyphLocation:writingDirection:maxLocation:'>
      <arg name='glyphLocation' declared_type='float' type='f' index='0'/>
      <arg name='direction' declared_type='NSWritingDirection' type='i' index='1'/>
      <arg name='maxLocation' declared_type='float' type='f' index='2'/>
      <retval declared_type='NSTextTab*' type='@'/>
    </method>
    <method selector='typesetterBehavior'>
      <retval declared_type='NSTypesetterBehavior' type='i'/>
    </method>
    <method selector='usesFontLeading'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'>
      <arg name='lineRect' declared_type='NSRectPointer' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0' type_modifier='n'/>
      <arg name='glyphRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <arg name='usedRect' declared_type='NSRectPointer' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2' type_modifier='n'/>
      <arg name='baselineOffset' declared_type='float*' type='^f' index='3' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSURL'>
    <method class_method='true' selector='URLFromPasteboard:'>
      <arg name='pasteBoard' declared_type='NSPasteboard*' type='@' index='0'/>
      <retval declared_type='NSURL*' type='@'/>
    </method>
    <method selector='writeToPasteboard:'>
      <arg name='pasteBoard' declared_type='NSPasteboard*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSUserDefaultsController'>
    <method selector='appliesImmediately'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='defaults'>
      <retval declared_type='NSUserDefaults*' type='@'/>
    </method>
    <method selector='hasUnappliedChanges'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='initWithDefaults:initialValues:'>
      <arg name='defaults' declared_type='NSUserDefaults*' type='@' index='0'/>
      <arg name='initialValues' declared_type='NSDictionary*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initialValues'>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='revert:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='revertToInitialValues:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='save:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAppliesImmediately:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setInitialValues:'>
      <arg name='initialValues' declared_type='NSDictionary*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='sharedUserDefaultsController'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='values'>
      <retval declared_type='id' type='@'/>
    </method>
  </class>
  <class name='NSView'>
    <method selector='acceptsFirstMouse:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='addCursorRect:cursor:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='anObj' declared_type='NSCursor*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addSubview:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addSubview:positioned:relativeTo:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <arg name='place' declared_type='NSWindowOrderingMode' type='i' index='1'/>
      <arg name='otherView' declared_type='NSView*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='addToolTipRect:owner:userData:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='anObject' declared_type='id' type='@' index='1'/>
      <arg name='data' declared_type='void*' type='^v' index='2' type_modifier='n'/>
      <retval declared_type='NSToolTipTag' type='i'/>
    </method>
    <method selector='addTrackingRect:owner:userData:assumeInside:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='anObject' declared_type='id' type='@' index='1'/>
      <arg name='data' declared_type='void*' type='^v' index='2' type_modifier='n'/>
      <arg name='flag' declared_type='BOOL' type='B' index='3'/>
      <retval declared_type='NSTrackingRectTag' type='i'/>
    </method>
    <method selector='adjustPageHeightNew:top:bottom:limit:'>
      <arg name='newBottom' declared_type='float*' type='^f' index='0' type_modifier='o'/>
      <arg name='oldTop' declared_type='float' type='f' index='1'/>
      <arg name='oldBottom' declared_type='float' type='f' index='2'/>
      <arg name='bottomLimit' declared_type='float' type='f' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='adjustPageWidthNew:left:right:limit:'>
      <arg name='newRight' declared_type='float*' type='^f' index='0' type_modifier='o'/>
      <arg name='oldLeft' declared_type='float' type='f' index='1'/>
      <arg name='oldRight' declared_type='float' type='f' index='2'/>
      <arg name='rightLimit' declared_type='float' type='f' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='adjustScroll:'>
      <arg name='newVisible' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='allocateGState'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='ancestorSharedWithView:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='autoresizesSubviews'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='autoresizingMask'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='autoscroll:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='beginDocument'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='beginPageInRect:atPlacement:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='location' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='bitmapImageRepForCachingDisplayInRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSBitmapImageRep*' type='@'/>
    </method>
    <method selector='bounds'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='boundsRotation'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='cacheDisplayInRect:toBitmapImageRep:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='bitmapImageRep' declared_type='NSBitmapImageRep*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='canBecomeKeyView'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='canDraw'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='centerScanRect:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='convertPoint:fromView:'>
      <arg name='aPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='aView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method selector='convertPoint:toView:'>
      <arg name='aPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='aView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method selector='convertRect:fromView:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='aView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='convertRect:toView:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='aView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='convertSize:fromView:'>
      <arg name='aSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <arg name='aView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='convertSize:toView:'>
      <arg name='aSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <arg name='aView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='dataWithEPSInsideRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='dataWithPDFInsideRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method class_method='true' selector='defaultFocusRingType'>
      <retval declared_type='NSFocusRingType' type='i'/>
    </method>
    <method class_method='true' selector='defaultMenu'>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='didAddSubview:'>
      <arg name='subview' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='discardCursorRects'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='display'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='displayIfNeeded'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='displayIfNeededIgnoringOpacity'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='displayIfNeededInRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='displayIfNeededInRectIgnoringOpacity:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='displayRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='displayRectIgnoringOpacity:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='displayRectIgnoringOpacity:inContext:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='context' declared_type='NSGraphicsContext*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='dragFile:fromRect:slideBack:event:'>
      <arg name='filename' declared_type='NSString*' type='@' index='0'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='aFlag' declared_type='BOOL' type='B' index='2'/>
      <arg name='event' declared_type='NSEvent*' type='@' index='3'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='dragImage:at:offset:event:pasteboard:source:slideBack:'>
      <arg name='anImage' declared_type='NSImage*' type='@' index='0'/>
      <arg name='viewLocation' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='initialOffset' declared_type='NSSize' type='{_NSSize=ff}' index='2'/>
      <arg name='event' declared_type='NSEvent*' type='@' index='3'/>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='4'/>
      <arg name='sourceObj' declared_type='id' type='@' index='5'/>
      <arg name='slideFlag' declared_type='BOOL' type='B' index='6'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='dragPromisedFilesOfTypes:fromRect:source:slideBack:event:'>
      <arg name='typeArray' declared_type='NSArray*' type='@' index='0'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='sourceObject' declared_type='id' type='@' index='2'/>
      <arg name='aFlag' declared_type='BOOL' type='B' index='3'/>
      <arg name='event' declared_type='NSEvent*' type='@' index='4'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='drawPageBorderWithSize:'>
      <arg name='borderSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawSheetBorderWithSize:'>
      <arg name='borderSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='enclosingScrollView'>
      <retval declared_type='NSScrollView*' type='@'/>
    </method>
    <method selector='endDocument'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='endPage'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='focusRingType'>
      <retval declared_type='NSFocusRingType' type='i'/>
    </method>
    <method class_method='true' selector='focusView'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='frame'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='frameRotation'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='gState'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='getRectsBeingDrawn:count:'>
      <arg name='rects' c_array_length_in_arg='1' declared_type='NSRect**' type='^^{_NSRect}' const='true' index='0' type_modifier='o'/>
      <arg name='count' declared_type='int*' type='^i' index='1' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='getRectsExposedDuringLiveResize:count:'>
      <arg name='exposedRects' c_array_length_in_arg='1' declared_type='NSRect*' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0' type_modifier='o'/>
      <arg name='count' declared_type='int*' type='^i' index='1' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='heightAdjustLimit'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='hitTest:'>
      <arg name='aPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='inLiveResize'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='initWithFrame:'>
      <arg name='frameRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isDescendantOf:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isFlipped'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isHidden'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isHiddenOrHasHiddenAncestor'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isOpaque'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isRotatedFromBase'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isRotatedOrScaledFromBase'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='knowsPageRange:'>
      <arg name='range' declared_type='NSRangePointer' type='^{_NSRange=II}' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='locationOfPrintRect:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method selector='lockFocus'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='lockFocusIfCanDraw'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='lockFocusIfCanDrawInContext:'>
      <arg name='context' declared_type='NSGraphicsContext*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='menuForEvent:'>
      <arg name='event' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method selector='mouse:inRect:'>
      <arg name='aPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='mouseDownCanMoveWindow'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='needsDisplay'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='needsPanelToBecomeKey'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='needsToDrawRect:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='nextKeyView'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='nextValidKeyView'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='opaqueAncestor'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='pageFooter'>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method selector='pageHeader'>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method selector='performKeyEquivalent:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='performMnemonic:'>
      <arg name='theString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='postsBoundsChangedNotifications'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='postsFrameChangedNotifications'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='preservesContentDuringLiveResize'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='previousKeyView'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='previousValidKeyView'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='print:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='printJobTitle'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='rectForPage:'>
      <arg name='page' declared_type='int' type='i' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='rectPreservedDuringLiveResize'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='reflectScrolledClipView:'>
      <arg name='aClipView' declared_type='NSClipView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='registerForDraggedTypes:'>
      <arg name='newTypes' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='registeredDraggedTypes'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='releaseGState'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeAllToolTips'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeCursorRect:cursor:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='anObj' declared_type='NSCursor*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeFromSuperview'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeFromSuperviewWithoutNeedingDisplay'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeToolTip:'>
      <arg name='tag' declared_type='NSToolTipTag' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeTrackingRect:'>
      <arg name='tag' declared_type='NSTrackingRectTag' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='renewGState'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='replaceSubview:with:'>
      <arg name='oldView' declared_type='NSView*' type='@' index='0'/>
      <arg name='newView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='resetCursorRects'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='resizeSubviewsWithOldSize:'>
      <arg name='oldSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='resizeWithOldSuperviewSize:'>
      <arg name='oldSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rotateByAngle:'>
      <arg name='angle' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rulerView:didAddMarker:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <arg name='marker' declared_type='NSRulerMarker*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rulerView:didMoveMarker:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <arg name='marker' declared_type='NSRulerMarker*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rulerView:didRemoveMarker:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <arg name='marker' declared_type='NSRulerMarker*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rulerView:handleMouseDown:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <arg name='event' declared_type='NSEvent*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='rulerView:shouldAddMarker:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <arg name='marker' declared_type='NSRulerMarker*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='rulerView:shouldMoveMarker:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <arg name='marker' declared_type='NSRulerMarker*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='rulerView:shouldRemoveMarker:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <arg name='marker' declared_type='NSRulerMarker*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='rulerView:willAddMarker:atLocation:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <arg name='marker' declared_type='NSRulerMarker*' type='@' index='1'/>
      <arg name='location' declared_type='float' type='f' index='2'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='rulerView:willMoveMarker:toLocation:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <arg name='marker' declared_type='NSRulerMarker*' type='@' index='1'/>
      <arg name='location' declared_type='float' type='f' index='2'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='rulerView:willSetClientView:'>
      <arg name='ruler' declared_type='NSRulerView*' type='@' index='0'/>
      <arg name='newClient' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scaleUnitSquareToSize:'>
      <arg name='newUnitSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scrollClipView:toPoint:'>
      <arg name='aClipView' declared_type='NSClipView*' type='@' index='0'/>
      <arg name='aPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scrollPoint:'>
      <arg name='aPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scrollRect:by:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='delta' declared_type='NSSize' type='{_NSSize=ff}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='scrollRectToVisible:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setAutoresizesSubviews:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAutoresizingMask:'>
      <arg name='mask' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBounds:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBoundsOrigin:'>
      <arg name='newOrigin' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBoundsRotation:'>
      <arg name='angle' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBoundsSize:'>
      <arg name='newSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFocusRingType:'>
      <arg name='focusRingType' declared_type='NSFocusRingType' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFrame:'>
      <arg name='frameRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFrameOrigin:'>
      <arg name='newOrigin' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFrameRotation:'>
      <arg name='angle' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFrameSize:'>
      <arg name='newSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHidden:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setKeyboardFocusRingNeedsDisplayInRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNeedsDisplay:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNeedsDisplayInRect:'>
      <arg name='invalidRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setNextKeyView:'>
      <arg name='next' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPostsBoundsChangedNotifications:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPostsFrameChangedNotifications:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setToolTip:'>
      <arg name='string' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setUpGState'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='shouldDelayWindowOrderingForEvent:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='shouldDrawColor'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='sortSubviewsUsingFunction:context:'>
      <arg name='compare' function_pointer='true' declared_type='int (*)(id, id, void *)' type='^?' index='0' type_modifier='n'>
        <arg declared_type='id' type='@'/>
        <arg declared_type='id' type='@'/>
        <arg declared_type='void*' type='^v'/>
        <retval declared_type='int' type='i'/>
      </arg>
      <arg name='context' declared_type='void*' type='^v' index='1' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='subviews'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='superview'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='tag'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='toolTip'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='translateOriginToPoint:'>
      <arg name='translation' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='unlockFocus'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='unregisterDraggedTypes'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='viewDidEndLiveResize'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='viewDidMoveToSuperview'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='viewDidMoveToWindow'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='viewWillMoveToSuperview:'>
      <arg name='newSuperview' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='viewWillMoveToWindow:'>
      <arg name='newWindow' declared_type='NSWindow*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='viewWillStartLiveResize'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='viewWithTag:'>
      <arg name='aTag' declared_type='int' type='i' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='visibleRect'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='wantsDefaultClipping'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='widthAdjustLimit'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='willRemoveSubview:'>
      <arg name='subview' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='window'>
      <retval declared_type='NSWindow*' type='@'/>
    </method>
    <method selector='writeEPSInsideRect:toPasteboard:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='pasteboard' declared_type='NSPasteboard*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='writePDFInsideRect:toPasteboard:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='pasteboard' declared_type='NSPasteboard*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSViewAnimation'>
    <method selector='initWithViewAnimations:'>
      <arg name='viewAnimations' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='setViewAnimations:'>
      <arg name='viewAnimations' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='viewAnimations'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
  </class>
  <class name='NSWindow'>
    <method selector='acceptsMouseMovedEvents'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='addChildWindow:ordered:'>
      <arg name='childWin' declared_type='NSWindow*' type='@' index='0'/>
      <arg name='place' declared_type='NSWindowOrderingMode' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='allowsToolTipsWhenApplicationIsInactive'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='alphaValue'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='animationResizeTime:'>
      <arg name='newFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSTimeInterval' type='d'/>
    </method>
    <method selector='areCursorRectsEnabled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='aspectRatio'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='attachedSheet'>
      <retval declared_type='NSWindow*' type='@'/>
    </method>
    <method selector='autorecalculatesKeyViewLoop'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='backgroundColor'>
      <retval declared_type='NSColor*' type='@'/>
    </method>
    <method selector='backingType'>
      <retval declared_type='NSBackingStoreType' type='i'/>
    </method>
    <method selector='becomeKeyWindow'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='becomeMainWindow'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='cacheImageInRect:'>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='canBecomeKeyWindow'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='canBecomeMainWindow'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='canHide'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='canStoreColor'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='cascadeTopLeftFromPoint:'>
      <arg name='topLeftPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method selector='center'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='childWindows'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='close'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='constrainFrameRect:toScreen:'>
      <arg name='frameRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='screen' declared_type='NSScreen*' type='@' index='1'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='contentAspectRatio'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='contentMaxSize'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='contentMinSize'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='contentRectForFrameRect:'>
      <arg name='frameRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method class_method='true' selector='contentRectForFrameRect:styleMask:'>
      <arg name='fRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='aStyle' declared_type='unsigned int' type='I' index='1'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='contentResizeIncrements'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='contentView'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='convertBaseToScreen:'>
      <arg name='aPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method selector='convertScreenToBase:'>
      <arg name='aPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method selector='currentEvent'>
      <retval declared_type='NSEvent*' type='@'/>
    </method>
    <method selector='dataWithEPSInsideRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='dataWithPDFInsideRect:'>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSData*' type='@'/>
    </method>
    <method selector='deepestScreen'>
      <retval declared_type='NSScreen*' type='@'/>
    </method>
    <method selector='defaultButtonCell'>
      <retval declared_type='NSButtonCell*' type='@'/>
    </method>
    <method class_method='true' selector='defaultDepthLimit'>
      <retval declared_type='NSWindowDepth' type='i'/>
    </method>
    <method selector='delegate'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='deminiaturize:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='depthLimit'>
      <retval declared_type='NSWindowDepth' type='i'/>
    </method>
    <method selector='deviceDescription'>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='disableCursorRects'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='disableFlushWindow'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='disableKeyEquivalentForDefaultButtonCell'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='disableScreenUpdatesUntilFlush'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='discardCachedImage'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='discardCursorRects'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='discardEventsMatchingMask:beforeEvent:'>
      <arg name='mask' declared_type='unsigned int' type='I' index='0'/>
      <arg name='lastEvent' declared_type='NSEvent*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='display'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='displayIfNeeded'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='displaysWhenScreenProfileChanges'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='dragImage:at:offset:event:pasteboard:source:slideBack:'>
      <arg name='anImage' declared_type='NSImage*' type='@' index='0'/>
      <arg name='baseLocation' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='initialOffset' declared_type='NSSize' type='{_NSSize=ff}' index='2'/>
      <arg name='event' declared_type='NSEvent*' type='@' index='3'/>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='4'/>
      <arg name='sourceObj' declared_type='id' type='@' index='5'/>
      <arg name='slideFlag' declared_type='BOOL' type='B' index='6'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='drawers'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='enableCursorRects'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='enableFlushWindow'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='enableKeyEquivalentForDefaultButtonCell'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='endEditingFor:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='fieldEditor:forObject:'>
      <arg name='createFlag' declared_type='BOOL' type='B' index='0'/>
      <arg name='anObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='NSText*' type='@'/>
    </method>
    <method selector='firstResponder'>
      <retval declared_type='NSResponder*' type='@'/>
    </method>
    <method selector='flushWindow'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='flushWindowIfNeeded'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='frame'>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='frameAutosaveName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='frameRectForContentRect:'>
      <arg name='contentRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method class_method='true' selector='frameRectForContentRect:styleMask:'>
      <arg name='cRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='aStyle' declared_type='unsigned int' type='I' index='1'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method selector='gState'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='graphicsContext'>
      <retval declared_type='NSGraphicsContext*' type='@'/>
    </method>
    <method selector='handleCloseScriptCommand:'>
      <arg name='command' declared_type='NSCloseCommand*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='handlePrintScriptCommand:'>
      <arg name='command' declared_type='NSScriptCommand*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='handleSaveScriptCommand:'>
      <arg name='command' declared_type='NSScriptCommand*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='hasCloseBox'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='hasDynamicDepthLimit'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='hasShadow'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='hasTitleBar'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='hidesOnDeactivate'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='ignoresMouseEvents'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='initWithContentRect:styleMask:backing:defer:'>
      <arg name='contentRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='aStyle' declared_type='unsigned int' type='I' index='1'/>
      <arg name='bufferingType' declared_type='NSBackingStoreType' type='i' index='2'/>
      <arg name='flag' declared_type='BOOL' type='B' index='3'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithContentRect:styleMask:backing:defer:screen:'>
      <arg name='contentRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='aStyle' declared_type='unsigned int' type='I' index='1'/>
      <arg name='bufferingType' declared_type='NSBackingStoreType' type='i' index='2'/>
      <arg name='flag' declared_type='BOOL' type='B' index='3'/>
      <arg name='screen' declared_type='NSScreen*' type='@' index='4'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithWindowRef:'>
      <arg name='windowRef' declared_type='void*' type='^{OpaqueWindowPtr=}' index='0'/>
      <retval declared_type='NSWindow*' type='@'/>
    </method>
    <method selector='initialFirstResponder'>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method selector='invalidateCursorRectsForView:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='invalidateShadow'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='isAutodisplay'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isDocumentEdited'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isExcludedFromWindowsMenu'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isFloatingPanel'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isFlushWindowDisabled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isKeyWindow'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isMainWindow'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isMiniaturizable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isMiniaturized'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isModalPanel'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isMovableByWindowBackground'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isOneShot'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isOpaque'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isReleasedWhenClosed'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isResizable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isSheet'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isVisible'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isZoomable'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='isZoomed'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='keyDown:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='keyViewSelectionDirection'>
      <retval declared_type='NSSelectionDirection' type='i'/>
    </method>
    <method selector='level'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='makeFirstResponder:'>
      <arg name='aResponder' declared_type='NSResponder*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='makeKeyAndOrderFront:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='makeKeyWindow'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='makeMainWindow'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='maxSize'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method class_method='true' selector='menuChanged:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='minFrameWidthWithTitle:styleMask:'>
      <arg name='aTitle' declared_type='NSString*' type='@' index='0'/>
      <arg name='aStyle' declared_type='unsigned int' type='I' index='1'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='minSize'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='miniaturize:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='miniwindowImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='miniwindowTitle'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='mouseLocationOutsideOfEventStream'>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method selector='nextEventMatchingMask:'>
      <arg name='mask' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='NSEvent*' type='@'/>
    </method>
    <method selector='nextEventMatchingMask:untilDate:inMode:dequeue:'>
      <arg name='mask' declared_type='unsigned int' type='I' index='0'/>
      <arg name='expiration' declared_type='NSDate*' type='@' index='1'/>
      <arg name='mode' declared_type='NSString*' type='@' index='2'/>
      <arg name='deqFlag' declared_type='BOOL' type='B' index='3'/>
      <retval declared_type='NSEvent*' type='@'/>
    </method>
    <method selector='orderBack:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='orderFront:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='orderFrontRegardless'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='orderOut:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='orderWindow:relativeTo:'>
      <arg name='place' declared_type='NSWindowOrderingMode' type='i' index='0'/>
      <arg name='otherWin' declared_type='int' type='i' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='orderedIndex'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='parentWindow'>
      <retval declared_type='NSWindow*' type='@'/>
    </method>
    <method selector='performClose:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='performMiniaturize:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='performZoom:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='postEvent:atStart:'>
      <arg name='event' declared_type='NSEvent*' type='@' index='0'/>
      <arg name='flag' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='preservesContentDuringLiveResize'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='print:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='recalculateKeyViewLoop'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='registerForDraggedTypes:'>
      <arg name='newTypes' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='removeChildWindow:'>
      <arg name='childWin' declared_type='NSWindow*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' selector='removeFrameUsingName:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='representedFilename'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='resetCursorRects'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='resignKeyWindow'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='resignMainWindow'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='resizeFlags'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='resizeIncrements'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method selector='restoreCachedImage'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='runToolbarCustomizationPalette:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='saveFrameUsingName:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='screen'>
      <retval declared_type='NSScreen*' type='@'/>
    </method>
    <method selector='selectKeyViewFollowingView:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectKeyViewPrecedingView:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectNextKeyView:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='selectPreviousKeyView:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='sendEvent:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAcceptsMouseMovedEvents:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAllowsToolTipsWhenApplicationIsInactive:'>
      <arg name='allowWhenInactive' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAlphaValue:'>
      <arg name='windowAlpha' declared_type='float' type='f' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAspectRatio:'>
      <arg name='ratio' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAutodisplay:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setAutorecalculatesKeyViewLoop:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBackgroundColor:'>
      <arg name='color' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setBackingType:'>
      <arg name='bufferingType' declared_type='NSBackingStoreType' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setCanHide:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setContentAspectRatio:'>
      <arg name='ratio' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setContentMaxSize:'>
      <arg name='size' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setContentMinSize:'>
      <arg name='size' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setContentResizeIncrements:'>
      <arg name='increments' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setContentSize:'>
      <arg name='aSize' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setContentView:'>
      <arg name='aView' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDefaultButtonCell:'>
      <arg name='defButt' declared_type='NSButtonCell*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDelegate:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDepthLimit:'>
      <arg name='limit' declared_type='NSWindowDepth' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDisplaysWhenScreenProfileChanges:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDocumentEdited:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDynamicDepthLimit:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setExcludedFromWindowsMenu:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFrame:display:'>
      <arg name='frameRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='flag' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFrame:display:animate:'>
      <arg name='frameRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='displayFlag' declared_type='BOOL' type='B' index='1'/>
      <arg name='animateFlag' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFrameAutosaveName:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setFrameFromString:'>
      <arg name='string' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFrameOrigin:'>
      <arg name='aPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFrameTopLeftPoint:'>
      <arg name='aPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setFrameUsingName:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setFrameUsingName:force:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <arg name='force' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setHasShadow:'>
      <arg name='hasShadow' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setHidesOnDeactivate:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIgnoresMouseEvents:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setInitialFirstResponder:'>
      <arg name='view' declared_type='NSView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIsMiniaturized:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIsVisible:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setIsZoomed:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setLevel:'>
      <arg name='newLevel' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMaxSize:'>
      <arg name='size' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMinSize:'>
      <arg name='size' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMiniwindowImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMiniwindowTitle:'>
      <arg name='title' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setMovableByWindowBackground:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setOneShot:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setOpaque:'>
      <arg name='isOpaque' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setOrderedIndex:'>
      <arg name='index' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setParentWindow:'>
      <arg name='window' declared_type='NSWindow*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setPreservesContentDuringLiveResize:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setReleasedWhenClosed:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setRepresentedFilename:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setResizeIncrements:'>
      <arg name='increments' declared_type='NSSize' type='{_NSSize=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShowsResizeIndicator:'>
      <arg name='show' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShowsToolbarButton:'>
      <arg name='show' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitle:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setTitleWithRepresentedFilename:'>
      <arg name='filename' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setToolbar:'>
      <arg name='toolbar' declared_type='NSToolbar*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setViewsNeedDisplay:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setWindowController:'>
      <arg name='windowController' declared_type='NSWindowController*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='showsResizeIndicator'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='showsToolbarButton'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='standardWindowButton:'>
      <arg name='b' declared_type='NSWindowButton' type='i' index='0'/>
      <retval declared_type='NSButton*' type='@'/>
    </method>
    <method class_method='true' selector='standardWindowButton:forStyleMask:'>
      <arg name='b' declared_type='NSWindowButton' type='i' index='0'/>
      <arg name='styleMask' declared_type='unsigned int' type='I' index='1'/>
      <retval declared_type='NSButton*' type='@'/>
    </method>
    <method selector='stringWithSavedFrame'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='styleMask'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method selector='title'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='toggleToolbarShown:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='toolbar'>
      <retval declared_type='NSToolbar*' type='@'/>
    </method>
    <method selector='tryToPerform:with:'>
      <arg name='anAction' declared_type='SEL' type=':' index='0'/>
      <arg name='anObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='unregisterDraggedTypes'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='update'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='useOptimizedDrawing:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='userSpaceScaleFactor'>
      <retval declared_type='float' type='f'/>
    </method>
    <method selector='validRequestorForSendType:returnType:'>
      <arg name='sendType' declared_type='NSString*' type='@' index='0'/>
      <arg name='returnType' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='viewsNeedDisplay'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='windowController'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='windowNumber'>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='windowRef'>
      <retval declared_type='void*' type='^{OpaqueWindowPtr=}'/>
    </method>
    <method selector='worksWhenModal'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='zoom:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSWindowController'>
    <method selector='close'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='document'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithWindow:'>
      <arg name='window' declared_type='NSWindow*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithWindowNibName:'>
      <arg name='windowNibName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithWindowNibName:owner:'>
      <arg name='windowNibName' declared_type='NSString*' type='@' index='0'/>
      <arg name='owner' declared_type='id' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='initWithWindowNibPath:owner:'>
      <arg name='windowNibPath' declared_type='NSString*' type='@' index='0'/>
      <arg name='owner' declared_type='id' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='isWindowLoaded'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='loadWindow'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='owner'>
      <retval declared_type='id' type='@'/>
    </method>
    <method selector='setDocument:'>
      <arg name='document' declared_type='NSDocument*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setDocumentEdited:'>
      <arg name='dirtyFlag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShouldCascadeWindows:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setShouldCloseDocument:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setWindow:'>
      <arg name='window' declared_type='NSWindow*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='setWindowFrameAutosaveName:'>
      <arg name='name' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='shouldCascadeWindows'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='shouldCloseDocument'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='showWindow:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='synchronizeWindowTitleWithDocumentName'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='window'>
      <retval declared_type='NSWindow*' type='@'/>
    </method>
    <method selector='windowDidLoad'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='windowFrameAutosaveName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='windowNibName'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='windowNibPath'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='windowTitleForDocumentDisplayName:'>
      <arg name='displayName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='windowWillLoad'>
      <retval declared_type='void' type='v'/>
    </method>
  </class>
  <class name='NSWorkspace'>
    <method selector='absolutePathForAppBundleWithIdentifier:'>
      <arg name='bundleIdentifier' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='activeApplication'>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method selector='checkForRemovableMedia'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='extendPowerOffBy:'>
      <arg name='requested' declared_type='int' type='i' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method selector='fileSystemChanged'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='findApplications'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='fullPathForApplication:'>
      <arg name='appName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method selector='getFileSystemInfoForPath:isRemovable:isWritable:isUnmountable:description:type:'>
      <arg name='fullPath' declared_type='NSString*' type='@' index='0'/>
      <arg name='removableFlag' declared_type='BOOL*' type='^B' index='1' type_modifier='o'/>
      <arg name='writableFlag' declared_type='BOOL*' type='^B' index='2' type_modifier='o'/>
      <arg name='unmountableFlag' declared_type='BOOL*' type='^B' index='3' type_modifier='o'/>
      <arg name='description' declared_type='NSString**' type='^@' index='4' type_modifier='o'/>
      <arg name='fileSystemType' declared_type='NSString**' type='^@' index='5' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='getInfoForFile:application:type:'>
      <arg name='fullPath' declared_type='NSString*' type='@' index='0'/>
      <arg name='appName' declared_type='NSString**' type='^@' index='1' type_modifier='o'/>
      <arg name='type' declared_type='NSString**' type='^@' index='2' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='hideOtherApplications'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='iconForFile:'>
      <arg name='fullPath' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='iconForFileType:'>
      <arg name='fileType' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='iconForFiles:'>
      <arg name='fullPaths' declared_type='NSArray*' type='@' index='0'/>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method selector='isFilePackageAtPath:'>
      <arg name='fullPath' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='launchAppWithBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:'>
      <arg name='bundleIdentifier' declared_type='NSString*' type='@' index='0'/>
      <arg name='options' declared_type='NSWorkspaceLaunchOptions' type='I' index='1'/>
      <arg name='descriptor' declared_type='NSAppleEventDescriptor*' type='@' index='2'/>
      <arg name='identifier' declared_type='NSNumber**' type='^@' index='3' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='launchApplication:'>
      <arg name='appName' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='launchApplication:showIcon:autolaunch:'>
      <arg name='appName' declared_type='NSString*' type='@' index='0'/>
      <arg name='showIcon' declared_type='BOOL' type='B' index='1'/>
      <arg name='autolaunch' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='launchedApplications'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='mountNewRemovableMedia'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='mountedLocalVolumePaths'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='mountedRemovableMedia'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method selector='noteFileSystemChanged'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='noteFileSystemChanged:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='noteUserDefaultsChanged'>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='notificationCenter'>
      <retval declared_type='NSNotificationCenter*' type='@'/>
    </method>
    <method selector='openFile:'>
      <arg name='fullPath' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='openFile:fromImage:at:inView:'>
      <arg name='fullPath' declared_type='NSString*' type='@' index='0'/>
      <arg name='anImage' declared_type='NSImage*' type='@' index='1'/>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='2'/>
      <arg name='aView' declared_type='NSView*' type='@' index='3'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='openFile:withApplication:'>
      <arg name='fullPath' declared_type='NSString*' type='@' index='0'/>
      <arg name='appName' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='openFile:withApplication:andDeactivate:'>
      <arg name='fullPath' declared_type='NSString*' type='@' index='0'/>
      <arg name='appName' declared_type='NSString*' type='@' index='1'/>
      <arg name='flag' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='openTempFile:'>
      <arg name='fullPath' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='openURL:'>
      <arg name='url' declared_type='NSURL*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:'>
      <arg name='urls' declared_type='NSArray*' type='@' index='0'/>
      <arg name='bundleIdentifier' declared_type='NSString*' type='@' index='1'/>
      <arg name='options' declared_type='NSWorkspaceLaunchOptions' type='I' index='2'/>
      <arg name='descriptor' declared_type='NSAppleEventDescriptor*' type='@' index='3'/>
      <arg name='identifiers' declared_type='NSArray**' type='^@' index='4' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='performFileOperation:source:destination:files:tag:'>
      <arg name='operation' declared_type='NSString*' type='@' index='0'/>
      <arg name='source' declared_type='NSString*' type='@' index='1'/>
      <arg name='destination' declared_type='NSString*' type='@' index='2'/>
      <arg name='files' declared_type='NSArray*' type='@' index='3'/>
      <arg name='tag' declared_type='int*' type='^i' index='4' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='selectFile:inFileViewerRootedAtPath:'>
      <arg name='fullPath' declared_type='NSString*' type='@' index='0'/>
      <arg name='rootFullpath' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='setIcon:forFile:options:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='fullPath' declared_type='NSString*' type='@' index='1'/>
      <arg name='options' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method class_method='true' selector='sharedWorkspace'>
      <retval declared_type='NSWorkspace*' type='@'/>
    </method>
    <method selector='slideImage:from:to:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='fromPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='toPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method selector='unmountAndEjectDeviceAtPath:'>
      <arg name='path' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method selector='userDefaultsChanged'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </class>
  <informal_protocol name='NSAccessibility'>
    <method type='@12@0:4@8' type64='@24@0:8@16' selector='accessibilityActionDescription:'>
      <arg name='action' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='accessibilityActionNames'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='accessibilityAttributeNames'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method type='@12@0:4@8' type64='@24@0:8@16' selector='accessibilityAttributeValue:'>
      <arg name='attribute' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='accessibilityAttributeValue:forParameter:'>
      <arg name='attribute' declared_type='NSString*' type='@' index='0'/>
      <arg name='parameter' declared_type='id' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='accessibilityFocusedUIElement'>
      <retval declared_type='id' type='@'/>
    </method>
    <method type='@16@0:4{_NSPoint=ff}8' type64='@24@0:8{_NSPoint=ff}16' selector='accessibilityHitTest:'>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method type='B12@0:4@8' type64='B24@0:8@16' selector='accessibilityIsAttributeSettable:'>
      <arg name='attribute' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B8@0:4' type64='B16@0:8' selector='accessibilityIsIgnored'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='accessibilityParameterizedAttributeNames'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='accessibilityPerformAction:'>
      <arg name='action' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='accessibilitySetValue:forAttribute:'>
      <arg name='value' declared_type='id' type='@' index='0'/>
      <arg name='attribute' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSAccessibilityAdditions'>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='accessibilitySetOverrideValue:forAttribute:'>
      <arg name='value' declared_type='id' type='@' index='0'/>
      <arg name='attribute' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSAlertDelegate'>
    <method type='B12@0:4@8' type64='B24@0:8@16' selector='alertShowHelp:'>
      <arg name='alert' declared_type='NSAlert*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSAnimationDelegate'>
    <method type='v16@0:4@8f12' type64='v28@0:8@16f24' selector='animation:didReachProgressMark:'>
      <arg name='animation' declared_type='NSAnimation*' type='@' index='0'/>
      <arg name='progress' declared_type='NSAnimationProgress' type='f' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='f16@0:4@8f12' type64='f28@0:8@16f24' selector='animation:valueForProgress:'>
      <arg name='animation' declared_type='NSAnimation*' type='@' index='0'/>
      <arg name='progress' declared_type='NSAnimationProgress' type='f' index='1'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='animationDidEnd:'>
      <arg name='animation' declared_type='NSAnimation*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='animationDidStop:'>
      <arg name='animation' declared_type='NSAnimation*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='B12@0:4@8' type64='B24@0:8@16' selector='animationShouldStart:'>
      <arg name='animation' declared_type='NSAnimation*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSApplicationDelegate'>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='application:openFile:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <arg name='filename' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='application:openFileWithoutUI:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='filename' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='application:openFiles:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <arg name='filenames' declared_type='NSArray*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='application:openTempFile:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <arg name='filename' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='application:printFile:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <arg name='filename' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='application:printFiles:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <arg name='filenames' declared_type='NSArray*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='i24@0:4@8@12@16B20' type64='i44@0:8@16@24@32B40' selector='application:printFiles:withSettings:showPrintPanels:'>
      <arg name='application' declared_type='NSApplication*' type='@' index='0'/>
      <arg name='fileNames' declared_type='NSArray*' type='@' index='1'/>
      <arg name='printSettings' declared_type='NSDictionary*' type='@' index='2'/>
      <arg name='showPrintPanels' declared_type='BOOL' type='B' index='3'/>
      <retval declared_type='NSApplicationPrintReply' type='i'/>
    </method>
    <method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='application:willPresentError:'>
      <arg name='application' declared_type='NSApplication*' type='@' index='0'/>
      <arg name='error' declared_type='NSError*' type='@' index='1'/>
      <retval declared_type='NSError*' type='@'/>
    </method>
    <method type='@12@0:4@8' type64='@24@0:8@16' selector='applicationDockMenu:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method type='B12@0:4@8' type64='B24@0:8@16' selector='applicationOpenUntitledFile:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B16@0:4@8B12' type64='B28@0:8@16B24' selector='applicationShouldHandleReopen:hasVisibleWindows:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <arg name='flag' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B12@0:4@8' type64='B24@0:8@16' selector='applicationShouldOpenUntitledFile:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='i12@0:4@8' type64='i24@0:8@16' selector='applicationShouldTerminate:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <retval declared_type='NSApplicationTerminateReply' type='i'/>
    </method>
    <method type='B12@0:4@8' type64='B24@0:8@16' selector='applicationShouldTerminateAfterLastWindowClosed:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSApplicationNotifications'>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='applicationDidBecomeActive:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='applicationDidChangeScreenParameters:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='applicationDidFinishLaunching:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='applicationDidHide:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='applicationDidResignActive:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='applicationDidUnhide:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='applicationDidUpdate:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='applicationWillBecomeActive:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='applicationWillFinishLaunching:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='applicationWillHide:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='applicationWillResignActive:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='applicationWillTerminate:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='applicationWillUnhide:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='applicationWillUpdate:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSApplicationScriptingDelegation'>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='application:delegateHandlesKey:'>
      <arg name='sender' declared_type='NSApplication*' type='@' index='0'/>
      <arg name='key' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSBrowserDelegate'>
    <method type='v20@0:4@8i12@16' type64='v36@0:8@16i24@28' selector='browser:createRowsForColumn:inMatrix:'>
      <arg name='sender' declared_type='NSBrowser*' type='@' index='0'/>
      <arg name='column' declared_type='int' type='i' index='1'/>
      <arg name='matrix' declared_type='NSMatrix*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='B16@0:4@8i12' type64='B28@0:8@16i24' selector='browser:isColumnValid:'>
      <arg name='sender' declared_type='NSBrowser*' type='@' index='0'/>
      <arg name='column' declared_type='int' type='i' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='i16@0:4@8i12' type64='i28@0:8@16i24' selector='browser:numberOfRowsInColumn:'>
      <arg name='sender' declared_type='NSBrowser*' type='@' index='0'/>
      <arg name='column' declared_type='int' type='i' index='1'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method type='B20@0:4@8@12i16' type64='B36@0:8@16@24i32' selector='browser:selectCellWithString:inColumn:'>
      <arg name='sender' declared_type='NSBrowser*' type='@' index='0'/>
      <arg name='title' declared_type='NSString*' type='@' index='1'/>
      <arg name='column' declared_type='int' type='i' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B20@0:4@8i12i16' type64='B32@0:8@16i24i28' selector='browser:selectRow:inColumn:'>
      <arg name='sender' declared_type='NSBrowser*' type='@' index='0'/>
      <arg name='row' declared_type='int' type='i' index='1'/>
      <arg name='column' declared_type='int' type='i' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='f24@0:4@8i12B16f20' type64='f36@0:8@16i24B28f32' selector='browser:shouldSizeColumn:forUserResize:toWidth:'>
      <arg name='browser' declared_type='NSBrowser*' type='@' index='0'/>
      <arg name='columnIndex' declared_type='int' type='i' index='1'/>
      <arg name='forUserResize' declared_type='BOOL' type='B' index='2'/>
      <arg name='suggestedWidth' declared_type='float' type='f' index='3'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method type='f16@0:4@8i12' type64='f28@0:8@16i24' selector='browser:sizeToFitWidthOfColumn:'>
      <arg name='browser' declared_type='NSBrowser*' type='@' index='0'/>
      <arg name='columnIndex' declared_type='int' type='i' index='1'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method type='@16@0:4@8i12' type64='@28@0:8@16i24' selector='browser:titleOfColumn:'>
      <arg name='sender' declared_type='NSBrowser*' type='@' index='0'/>
      <arg name='column' declared_type='int' type='i' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method type='v24@0:4@8@12i16i20' type64='v40@0:8@16@24i32i36' selector='browser:willDisplayCell:atRow:column:'>
      <arg name='sender' declared_type='NSBrowser*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='row' declared_type='int' type='i' index='2'/>
      <arg name='column' declared_type='int' type='i' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='browserColumnConfigurationDidChange:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='browserDidScroll:'>
      <arg name='sender' declared_type='NSBrowser*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='browserWillScroll:'>
      <arg name='sender' declared_type='NSBrowser*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSChangeSpelling'>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='changeSpelling:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSColorPanelResponderMethod'>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='changeColor:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSColorPickingCustom'>
    <method type='i8@0:4' type64='i16@0:8' selector='currentMode'>
      <retval declared_type='int' type='i'/>
    </method>
    <method type='@12@0:4B8' type64='@20@0:8B16' selector='provideNewView:'>
      <arg name='initialRequest' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='NSView*' type='@'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='setColor:'>
      <arg name='newColor' declared_type='NSColor*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='B12@0:4i8' type64='B20@0:8i16' selector='supportsMode:'>
      <arg name='mode' declared_type='int' type='i' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSColorPickingDefault'>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='alphaControlAddedOrRemoved:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='attachColorList:'>
      <arg name='colorList' declared_type='NSColorList*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='detachColorList:'>
      <arg name='colorList' declared_type='NSColorList*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='@16@0:4i8@12' type64='@28@0:8i16@20' selector='initWithPickerMask:colorPanel:'>
      <arg name='mask' declared_type='int' type='i' index='0'/>
      <arg name='owningColorPanel' declared_type='NSColorPanel*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='insertNewButtonImage:in:'>
      <arg name='newButtonImage' declared_type='NSImage*' type='@' index='0'/>
      <arg name='buttonCell' declared_type='NSButtonCell*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='provideNewButtonImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method type='v12@0:4i8' type64='v20@0:8i16' selector='setMode:'>
      <arg name='mode' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='viewSizeChanged:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSComboBoxCellDataSource'>
    <method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='comboBoxCell:completedString:'>
      <arg name='aComboBoxCell' declared_type='NSComboBoxCell*' type='@' index='0'/>
      <arg name='uncompletedString' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method type='I16@0:4@8@12' type64='I32@0:8@16@24' selector='comboBoxCell:indexOfItemWithStringValue:'>
      <arg name='aComboBoxCell' declared_type='NSComboBoxCell*' type='@' index='0'/>
      <arg name='string' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method type='@16@0:4@8i12' type64='@28@0:8@16i24' selector='comboBoxCell:objectValueForItemAtIndex:'>
      <arg name='aComboBoxCell' declared_type='NSComboBoxCell*' type='@' index='0'/>
      <arg name='index' declared_type='int' type='i' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method type='i12@0:4@8' type64='i24@0:8@16' selector='numberOfItemsInComboBoxCell:'>
      <arg name='comboBoxCell' declared_type='NSComboBoxCell*' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSComboBoxDataSource'>
    <method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='comboBox:completedString:'>
      <arg name='aComboBox' declared_type='NSComboBox*' type='@' index='0'/>
      <arg name='string' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method type='I16@0:4@8@12' type64='I32@0:8@16@24' selector='comboBox:indexOfItemWithStringValue:'>
      <arg name='aComboBox' declared_type='NSComboBox*' type='@' index='0'/>
      <arg name='string' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method type='@16@0:4@8i12' type64='@28@0:8@16i24' selector='comboBox:objectValueForItemAtIndex:'>
      <arg name='aComboBox' declared_type='NSComboBox*' type='@' index='0'/>
      <arg name='index' declared_type='int' type='i' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method type='i12@0:4@8' type64='i24@0:8@16' selector='numberOfItemsInComboBox:'>
      <arg name='aComboBox' declared_type='NSComboBox*' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSComboBoxNotifications'>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='comboBoxSelectionDidChange:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='comboBoxSelectionIsChanging:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='comboBoxWillDismiss:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='comboBoxWillPopUp:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSControlSubclassDelegate'>
    <method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='control:didFailToFormatString:errorDescription:'>
      <arg name='control' declared_type='NSControl*' type='@' index='0'/>
      <arg name='string' declared_type='NSString*' type='@' index='1'/>
      <arg name='error' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='control:didFailToValidatePartialString:errorDescription:'>
      <arg name='control' declared_type='NSControl*' type='@' index='0'/>
      <arg name='string' declared_type='NSString*' type='@' index='1'/>
      <arg name='error' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='control:isValidObject:'>
      <arg name='control' declared_type='NSControl*' type='@' index='0'/>
      <arg name='obj' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='control:textShouldBeginEditing:'>
      <arg name='control' declared_type='NSControl*' type='@' index='0'/>
      <arg name='fieldEditor' declared_type='NSText*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='control:textShouldEndEditing:'>
      <arg name='control' declared_type='NSControl*' type='@' index='0'/>
      <arg name='fieldEditor' declared_type='NSText*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='@32@0:4@8@12@16{_NSRange=II}20^i28' type64='@56@0:8@16@24@32{_NSRange=II}40^i48' selector='control:textView:completions:forPartialWordRange:indexOfSelectedItem:'>
      <arg name='control' declared_type='NSControl*' type='@' index='0'/>
      <arg name='textView' declared_type='NSTextView*' type='@' index='1'/>
      <arg name='words' declared_type='NSArray*' type='@' index='2'/>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='3'/>
      <arg name='index' declared_type='int*' type='^i' index='4' type_modifier='o'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method type='B20@0:4@8@12:16' type64='B40@0:8@16@24:32' selector='control:textView:doCommandBySelector:'>
      <arg name='control' declared_type='NSControl*' type='@' index='0'/>
      <arg name='textView' declared_type='NSTextView*' type='@' index='1'/>
      <arg name='commandSelector' declared_type='SEL' type=':' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSControlSubclassNotifications'>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='controlTextDidBeginEditing:'>
      <arg name='obj' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='controlTextDidChange:'>
      <arg name='obj' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='controlTextDidEndEditing:'>
      <arg name='obj' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSDatePickerCellDelegate'>
    <method type='v20@0:4@8^@12^d16' type64='v40@0:8@16^@24^d32' selector='datePickerCell:validateProposedDateValue:timeInterval:'>
      <arg name='aDatePickerCell' declared_type='NSDatePickerCell*' type='@' index='0'/>
      <arg name='proposedDateValue' declared_type='NSDate**' type='^@' index='1' type_modifier='o'/>
      <arg name='proposedTimeInterval' declared_type='NSTimeInterval*' type='^d' index='2' type_modifier='o'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSDraggingDestination'>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='concludeDragOperation:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='draggingEnded:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='I12@0:4@8' type64='I24@0:8@16' selector='draggingEntered:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='NSDragOperation' type='I'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='draggingExited:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='I12@0:4@8' type64='I24@0:8@16' selector='draggingUpdated:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='NSDragOperation' type='I'/>
    </method>
    <method type='B12@0:4@8' type64='B24@0:8@16' selector='performDragOperation:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B12@0:4@8' type64='B24@0:8@16' selector='prepareForDragOperation:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B8@0:4' type64='B16@0:8' selector='wantsPeriodicDraggingUpdates'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSDraggingInfo'>
    <method type='@8@0:4' type64='@16@0:8' selector='draggedImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method type='{_NSPoint=ff}8@0:4' type64='{_NSPoint=ff}16@0:8' selector='draggedImageLocation'>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='draggingDestinationWindow'>
      <retval declared_type='NSWindow*' type='@'/>
    </method>
    <method type='{_NSPoint=ff}8@0:4' type64='{_NSPoint=ff}16@0:8' selector='draggingLocation'>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='draggingPasteboard'>
      <retval declared_type='NSPasteboard*' type='@'/>
    </method>
    <method type='i8@0:4' type64='i16@0:8' selector='draggingSequenceNumber'>
      <retval declared_type='int' type='i'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='draggingSource'>
      <retval declared_type='id' type='@'/>
    </method>
    <method type='I8@0:4' type64='I16@0:8' selector='draggingSourceOperationMask'>
      <retval declared_type='NSDragOperation' type='I'/>
    </method>
    <method type='@12@0:4@8' type64='@24@0:8@16' selector='namesOfPromisedFilesDroppedAtDestination:'>
      <arg name='dropDestination' declared_type='NSURL*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method type='v16@0:4{_NSPoint=ff}8' type64='v24@0:8{_NSPoint=ff}16' selector='slideDraggedImageTo:'>
      <arg name='screenPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSDraggingSource'>
    <method type='v20@0:4@8{_NSPoint=ff}12' type64='v32@0:8@16{_NSPoint=ff}24' selector='draggedImage:beganAt:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='screenPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v24@0:4@8{_NSPoint=ff}12B20' type64='v36@0:8@16{_NSPoint=ff}24B32' selector='draggedImage:endedAt:deposited:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='screenPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='flag' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v24@0:4@8{_NSPoint=ff}12I20' type64='v36@0:8@16{_NSPoint=ff}24I32' selector='draggedImage:endedAt:operation:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='screenPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='operation' declared_type='NSDragOperation' type='I' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v20@0:4@8{_NSPoint=ff}12' type64='v32@0:8@16{_NSPoint=ff}24' selector='draggedImage:movedTo:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='screenPoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='I12@0:4B8' type64='I20@0:8B16' selector='draggingSourceOperationMaskForLocal:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='NSDragOperation' type='I'/>
    </method>
    <method type='B8@0:4' type64='B16@0:8' selector='ignoreModifierKeysWhileDragging'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='@12@0:4@8' type64='@24@0:8@16' selector='namesOfPromisedFilesDroppedAtDestination:'>
      <arg name='dropDestination' declared_type='NSURL*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSDrawerDelegate'>
    <method type='B12@0:4@8' type64='B24@0:8@16' selector='drawerShouldClose:'>
      <arg name='sender' declared_type='NSDrawer*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B12@0:4@8' type64='B24@0:8@16' selector='drawerShouldOpen:'>
      <arg name='sender' declared_type='NSDrawer*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='{_NSSize=ff}20@0:4@8{_NSSize=ff}12' type64='{_NSSize=ff}32@0:8@16{_NSSize=ff}24' selector='drawerWillResizeContents:toSize:'>
      <arg name='sender' declared_type='NSDrawer*' type='@' index='0'/>
      <arg name='contentSize' declared_type='NSSize' type='{_NSSize=ff}' index='1'/>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSDrawerNotifications'>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='drawerDidClose:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='drawerDidOpen:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='drawerWillClose:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='drawerWillOpen:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSEditor'>
    <method type='B8@0:4' type64='B16@0:8' selector='commitEditing'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='v20@0:4@8:12^v16' type64='v40@0:8@16:24^v32' selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
      <arg name='delegate' declared_type='id' type='@' index='0'/>
      <arg name='didCommitSelector' sel_of_type='v20@0:4@8B12^v16' declared_type='SEL' type=':' index='1' sel_of_type64='v36@0:8@16B24^v28'/>
      <arg name='contextInfo' declared_type='void*' type='^v' index='2' type_modifier='n'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v8@0:4' type64='v16@0:8' selector='discardEditing'>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSEditorRegistration'>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='objectDidBeginEditing:'>
      <arg name='editor' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='objectDidEndEditing:'>
      <arg name='editor' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSFontManagerDelegate'>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='fontManager:willIncludeFont:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='fontName' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSFontManagerResponderMethod'>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='changeFont:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSFontPanelValidationAdditions'>
    <method type='I12@0:4@8' type64='I24@0:8@16' selector='validModesForFontPanel:'>
      <arg name='fontPanel' declared_type='NSFontPanel*' type='@' index='0'/>
      <retval declared_type='unsigned int' type='I'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSGlyphStorage'>
    <method type='@8@0:4' type64='@16@0:8' selector='attributedString'>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method type='v24@0:4r^I8I12I16I20' type64='v36@0:8r^I16I24I28I32' selector='insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:'>
      <arg name='glyphs' c_array_length_in_arg='1' declared_type='NSGlyph*' type='^I' const='true' index='0' type_modifier='n'/>
      <arg name='length' declared_type='unsigned int' type='I' index='1'/>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='2'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='I8@0:4' type64='I16@0:8' selector='layoutOptions'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method type='v20@0:4i8i12I16' type64='v28@0:8i16i20I24' selector='setIntAttribute:value:forGlyphAtIndex:'>
      <arg name='attributeTag' declared_type='int' type='i' index='0'/>
      <arg name='val' declared_type='int' type='i' index='1'/>
      <arg name='glyphIndex' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSIgnoreMisspelledWords'>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='ignoreSpelling:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSImageDelegate'>
    <method type='v20@0:4@8@12i16' type64='v36@0:8@16@24i32' selector='image:didLoadPartOfRepresentation:withValidRows:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='rep' declared_type='NSImageRep*' type='@' index='1'/>
      <arg name='rows' declared_type='int' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v20@0:4@8@12i16' type64='v36@0:8@16@24i32' selector='image:didLoadRepresentation:withStatus:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='rep' declared_type='NSImageRep*' type='@' index='1'/>
      <arg name='status' declared_type='NSImageLoadStatus' type='i' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='image:didLoadRepresentationHeader:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='rep' declared_type='NSImageRep*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='image:willLoadRepresentation:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <arg name='rep' declared_type='NSImageRep*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='@28@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12' type64='@40@0:8@16{_NSRect={_NSPoint=ff}{_NSSize=ff}}24' selector='imageDidNotDraw:inRect:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <retval declared_type='NSImage*' type='@'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSInputServerMouseTracker'>
    <method type='B28@0:4I8{_NSPoint=ff}12I20@24' type64='B40@0:8I16{_NSPoint=ff}20I28@32' selector='mouseDownOnCharacterIndex:atCoordinate:withModifier:client:'>
      <arg name='theIndex' declared_type='unsigned int' type='I' index='0'/>
      <arg name='thePoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='theFlags' declared_type='unsigned int' type='I' index='2'/>
      <arg name='sender' declared_type='id' type='@' index='3'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B28@0:4I8{_NSPoint=ff}12I20@24' type64='B40@0:8I16{_NSPoint=ff}20I28@32' selector='mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:'>
      <arg name='theIndex' declared_type='unsigned int' type='I' index='0'/>
      <arg name='thePoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='theFlags' declared_type='unsigned int' type='I' index='2'/>
      <arg name='sender' declared_type='id' type='@' index='3'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='v28@0:4I8{_NSPoint=ff}12I20@24' type64='v40@0:8I16{_NSPoint=ff}20I28@32' selector='mouseUpOnCharacterIndex:atCoordinate:withModifier:client:'>
      <arg name='theIndex' declared_type='unsigned int' type='I' index='0'/>
      <arg name='thePoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='1'/>
      <arg name='theFlags' declared_type='unsigned int' type='I' index='2'/>
      <arg name='sender' declared_type='id' type='@' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSInputServiceProvider'>
    <method type='v16@0:4@8l12' type64='v32@0:8@16q24' selector='activeConversationChanged:toNewConversation:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='newConversation' declared_type='long' type='l' type64='q' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8l12' type64='v32@0:8@16q24' selector='activeConversationWillChange:fromOldConversation:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='oldConversation' declared_type='long' type='l' type64='q' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='B8@0:4' type64='B16@0:8' selector='canBeDisabled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='v16@0:4:8@12' type64='v32@0:8:16@24' selector='doCommandBySelector:client:'>
      <arg name='aSelector' declared_type='SEL' type=':' index='0'/>
      <arg name='sender' declared_type='id' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='inputClientBecomeActive:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='inputClientDisabled:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='inputClientEnabled:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='inputClientResignActive:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='insertText:client:'>
      <arg name='aString' declared_type='id' type='@' index='0'/>
      <arg name='sender' declared_type='id' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='markedTextAbandoned:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v20@0:4{_NSRange=II}8@16' type64='v32@0:8{_NSRange=II}16@24' selector='markedTextSelectionChanged:client:'>
      <arg name='newSel' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <arg name='sender' declared_type='id' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='terminate:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='B8@0:4' type64='B16@0:8' selector='wantsToDelayTextChangeNotifications'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B8@0:4' type64='B16@0:8' selector='wantsToHandleMouseEvents'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B8@0:4' type64='B16@0:8' selector='wantsToInterpretAllKeystrokes'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSKeyValueBindingCreation'>
    <method type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40' selector='bind:toObject:withKeyPath:options:'>
      <arg name='binding' declared_type='NSString*' type='@' index='0'/>
      <arg name='observable' declared_type='id' type='@' index='1'/>
      <arg name='keyPath' declared_type='NSString*' type='@' index='2'/>
      <arg name='options' declared_type='NSDictionary*' type='@' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' type='v12@0:4@8' type64='v24@0:8@16' selector='exposeBinding:'>
      <arg name='binding' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='exposedBindings'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method type='@12@0:4@8' type64='@24@0:8@16' selector='infoForBinding:'>
      <arg name='binding' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='unbind:'>
      <arg name='binding' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='#12@0:4@8' type64='#24@0:8@16' selector='valueClassForBinding:'>
      <arg name='binding' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='Class' type='#'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSLayoutManagerDelegate'>
    <method type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32' selector='layoutManager:didCompleteLayoutForTextContainer:atEnd:'>
      <arg name='layoutManager' declared_type='NSLayoutManager*' type='@' index='0'/>
      <arg name='textContainer' declared_type='NSTextContainer*' type='@' index='1'/>
      <arg name='layoutFinishedFlag' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='layoutManagerDidInvalidateLayout:'>
      <arg name='sender' declared_type='NSLayoutManager*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSMenuDelegate'>
    <method type='B24@0:4@8@12i16B20' type64='B40@0:8@16@24i32B36' selector='menu:updateItem:atIndex:shouldCancel:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <arg name='item' declared_type='NSMenuItem*' type='@' index='1'/>
      <arg name='index' declared_type='int' type='i' index='2'/>
      <arg name='shouldCancel' declared_type='BOOL' type='B' index='3'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B24@0:4@8@12^@16^:20' type64='B48@0:8@16@24^@32^:40' selector='menuHasKeyEquivalent:forEvent:target:action:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <arg name='event' declared_type='NSEvent*' type='@' index='1'/>
      <arg name='target' declared_type='id*' type='^@' index='2' type_modifier='o'/>
      <arg name='action' declared_type='SEL*' type='^:' index='3' type_modifier='o'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='menuNeedsUpdate:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='i12@0:4@8' type64='i24@0:8@16' selector='numberOfItemsInMenu:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSMenuItem'>
    <method type=':8@0:4' type64=':16@0:8' selector='action'>
      <retval declared_type='SEL' type=':'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='attributedTitle'>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method type='B8@0:4' type64='B16@0:8' selector='hasSubmenu'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='image'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method type='i8@0:4' type64='i16@0:8' selector='indentationLevel'>
      <retval declared_type='int' type='i'/>
    </method>
    <method type='@20@0:4@8:12@16' type64='@40@0:8@16:24@32' selector='initWithTitle:action:keyEquivalent:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <arg name='aSelector' declared_type='SEL' type=':' index='1'/>
      <arg name='charCode' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method type='B8@0:4' type64='B16@0:8' selector='isAlternate'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B8@0:4' type64='B16@0:8' selector='isEnabled'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B8@0:4' type64='B16@0:8' selector='isSeparatorItem'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='keyEquivalent'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method type='I8@0:4' type64='I16@0:8' selector='keyEquivalentModifierMask'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='menu'>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='mixedStateImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='mnemonic'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method type='I8@0:4' type64='I16@0:8' selector='mnemonicLocation'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='offStateImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='onStateImage'>
      <retval declared_type='NSImage*' type='@'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='representedObject'>
      <retval declared_type='id' type='@'/>
    </method>
    <method class_method='true' type='@8@0:4' type64='@16@0:8' selector='separatorItem'>
      <retval declared_type='id' type='@'/>
    </method>
    <method type='v12@0:4:8' type64='v24@0:8:16' selector='setAction:'>
      <arg name='aSelector' declared_type='SEL' type=':' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4B8' type64='v20@0:8B16' selector='setAlternate:'>
      <arg name='isAlternate' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='setAttributedTitle:'>
      <arg name='string' declared_type='NSAttributedString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4B8' type64='v20@0:8B16' selector='setEnabled:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='setImage:'>
      <arg name='menuImage' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4i8' type64='v20@0:8i16' selector='setIndentationLevel:'>
      <arg name='indentationLevel' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='setKeyEquivalent:'>
      <arg name='aKeyEquivalent' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4I8' type64='v20@0:8I16' selector='setKeyEquivalentModifierMask:'>
      <arg name='mask' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='setMenu:'>
      <arg name='menu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='setMixedStateImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4I8' type64='v20@0:8I16' selector='setMnemonicLocation:'>
      <arg name='location' declared_type='unsigned int' type='I' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='setOffStateImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='setOnStateImage:'>
      <arg name='image' declared_type='NSImage*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='setRepresentedObject:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4i8' type64='v20@0:8i16' selector='setState:'>
      <arg name='state' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='setSubmenu:'>
      <arg name='submenu' declared_type='NSMenu*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4i8' type64='v20@0:8i16' selector='setTag:'>
      <arg name='anInt' declared_type='int' type='i' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='setTarget:'>
      <arg name='anObject' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='setTitle:'>
      <arg name='aString' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='setTitleWithMnemonic:'>
      <arg name='stringWithAmpersand' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='setToolTip:'>
      <arg name='toolTip' declared_type='NSString*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method class_method='true' type='v12@0:4B8' type64='v20@0:8B16' selector='setUsesUserKeyEquivalents:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='i8@0:4' type64='i16@0:8' selector='state'>
      <retval declared_type='int' type='i'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='submenu'>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method type='i8@0:4' type64='i16@0:8' selector='tag'>
      <retval declared_type='int' type='i'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='target'>
      <retval declared_type='id' type='@'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='title'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='toolTip'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='userKeyEquivalent'>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method type='I8@0:4' type64='I16@0:8' selector='userKeyEquivalentModifierMask'>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method class_method='true' type='B8@0:4' type64='B16@0:8' selector='usesUserKeyEquivalents'>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSMenuValidation'>
    <method type='B12@0:4@8' type64='B24@0:8@16' selector='validateMenuItem:'>
      <arg name='menuItem' declared_type='id' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSNibAwaking'>
    <method type='v8@0:4' type64='v16@0:8' selector='awakeFromNib'>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSOutlineViewDataSource'>
    <method type='B24@0:4@8@12@16i20' type64='B44@0:8@16@24@32i40' selector='outlineView:acceptDrop:item:childIndex:'>
      <arg name='olv' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='info' declared_type='id' type='@' index='1'/>
      <arg name='item' declared_type='id' type='@' index='2'/>
      <arg name='index' declared_type='int' type='i' index='3'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='@20@0:4@8i12@16' type64='@36@0:8@16i24@28' selector='outlineView:child:ofItem:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='index' declared_type='int' type='i' index='1'/>
      <arg name='item' declared_type='id' type='@' index='2'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='outlineView:isItemExpandable:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='item' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='outlineView:itemForPersistentObject:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='object' declared_type='id' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:'>
      <arg name='olv' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='dropDestination' declared_type='NSURL*' type='@' index='1'/>
      <arg name='items' declared_type='NSArray*' type='@' index='2'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method type='i16@0:4@8@12' type64='i32@0:8@16@24' selector='outlineView:numberOfChildrenOfItem:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='item' declared_type='id' type='@' index='1'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='outlineView:objectValueForTableColumn:byItem:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <arg name='item' declared_type='id' type='@' index='2'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='outlineView:persistentObjectForItem:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='item' declared_type='id' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40' selector='outlineView:setObjectValue:forTableColumn:byItem:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='object' declared_type='id' type='@' index='1'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='2'/>
      <arg name='item' declared_type='id' type='@' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='outlineView:sortDescriptorsDidChange:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='oldDescriptors' declared_type='NSArray*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='I24@0:4@8@12@16i20' type64='I44@0:8@16@24@32i40' selector='outlineView:validateDrop:proposedItem:proposedChildIndex:'>
      <arg name='olv' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='info' declared_type='id' type='@' index='1'/>
      <arg name='item' declared_type='id' type='@' index='2'/>
      <arg name='index' declared_type='int' type='i' index='3'/>
      <retval declared_type='NSDragOperation' type='I'/>
    </method>
    <method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='outlineView:writeItems:toPasteboard:'>
      <arg name='olv' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='items' declared_type='NSArray*' type='@' index='1'/>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSOutlineViewDelegate'>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='outlineView:didClickTableColumn:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='outlineView:didDragTableColumn:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='f16@0:4@8@12' type64='f32@0:8@16@24' selector='outlineView:heightOfRowByItem:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='item' declared_type='id' type='@' index='1'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='outlineView:mouseDownInHeaderOfTableColumn:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='outlineView:shouldCollapseItem:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='item' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='outlineView:shouldEditTableColumn:item:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <arg name='item' declared_type='id' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='outlineView:shouldExpandItem:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='item' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='outlineView:shouldSelectItem:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='item' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='outlineView:shouldSelectTableColumn:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='@36@0:4@8@12^{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@20@24{_NSPoint=ff}28' type64='@64@0:8@16@24^{_NSRect={_NSPoint=ff}{_NSSize=ff}}32@40@48{_NSPoint=ff}56' selector='outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:'>
      <arg name='ov' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='cell' declared_type='NSCell*' type='@' index='1'/>
      <arg name='rect' declared_type='NSRectPointer' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <arg name='tc' declared_type='NSTableColumn*' type='@' index='3'/>
      <arg name='item' declared_type='id' type='@' index='4'/>
      <arg name='mouseLocation' declared_type='NSPoint' type='{_NSPoint=ff}' index='5'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40' selector='outlineView:willDisplayCell:forTableColumn:item:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='2'/>
      <arg name='item' declared_type='id' type='@' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40' selector='outlineView:willDisplayOutlineCell:forTableColumn:item:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='2'/>
      <arg name='item' declared_type='id' type='@' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='B12@0:4@8' type64='B24@0:8@16' selector='selectionShouldChangeInOutlineView:'>
      <arg name='outlineView' declared_type='NSOutlineView*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSOutlineViewNotifications'>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='outlineViewColumnDidMove:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='outlineViewColumnDidResize:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='outlineViewItemDidCollapse:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='outlineViewItemDidExpand:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='outlineViewItemWillCollapse:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='outlineViewItemWillExpand:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='outlineViewSelectionDidChange:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='outlineViewSelectionIsChanging:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSPasteboardOwner'>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='pasteboard:provideDataForType:'>
      <arg name='sender' declared_type='NSPasteboard*' type='@' index='0'/>
      <arg name='type' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='pasteboardChangedOwner:'>
      <arg name='sender' declared_type='NSPasteboard*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSPlaceholders'>
    <method class_method='true' type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='defaultPlaceholderForMarker:withBinding:'>
      <arg name='marker' declared_type='id' type='@' index='0'/>
      <arg name='binding' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method class_method='true' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='setDefaultPlaceholder:forMarker:withBinding:'>
      <arg name='placeholder' declared_type='id' type='@' index='0'/>
      <arg name='marker' declared_type='id' type='@' index='1'/>
      <arg name='binding' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSSavePanelDelegate'>
    <method type='i24@0:4@8@12@16B20' type64='i44@0:8@16@24@32B40' selector='panel:compareFilename:with:caseSensitive:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='name1' declared_type='NSString*' type='@' index='1'/>
      <arg name='name2' declared_type='NSString*' type='@' index='2'/>
      <arg name='caseSensitive' declared_type='BOOL' type='B' index='3'/>
      <retval declared_type='NSComparisonResult' type='i'/>
    </method>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='panel:directoryDidChange:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='path' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='panel:isValidFilename:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='filename' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='panel:shouldShowFilename:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='filename' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='@20@0:4@8@12B16' type64='@36@0:8@16@24B32' selector='panel:userEnteredFilename:confirmed:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='filename' declared_type='NSString*' type='@' index='1'/>
      <arg name='okFlag' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method type='v16@0:4@8B12' type64='v28@0:8@16B24' selector='panel:willExpand:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <arg name='expanding' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='panelSelectionDidChange:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSServicesRequests'>
    <method type='B12@0:4@8' type64='B24@0:8@16' selector='readSelectionFromPasteboard:'>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='writeSelectionToPasteboard:types:'>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='0'/>
      <arg name='types' declared_type='NSArray*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSSoundDelegateMethods'>
    <method type='v16@0:4@8B12' type64='v28@0:8@16B24' selector='sound:didFinishPlaying:'>
      <arg name='sound' declared_type='NSSound*' type='@' index='0'/>
      <arg name='aBool' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSSpeechRecognizerDelegate'>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='speechRecognizer:didRecognizeCommand:'>
      <arg name='sender' declared_type='NSSpeechRecognizer*' type='@' index='0'/>
      <arg name='command' declared_type='id' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSSpeechSynthesizerDelegate'>
    <method type='v16@0:4@8B12' type64='v28@0:8@16B24' selector='speechSynthesizer:didFinishSpeaking:'>
      <arg name='sender' declared_type='NSSpeechSynthesizer*' type='@' index='0'/>
      <arg name='finishedSpeaking' declared_type='BOOL' type='B' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8s12' type64='v28@0:8@16s24' selector='speechSynthesizer:willSpeakPhoneme:'>
      <arg name='sender' declared_type='NSSpeechSynthesizer*' type='@' index='0'/>
      <arg name='phonemeOpcode' declared_type='short' type='s' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v24@0:4@8{_NSRange=II}12@20' type64='v40@0:8@16{_NSRange=II}24@32' selector='speechSynthesizer:willSpeakWord:ofString:'>
      <arg name='sender' declared_type='NSSpeechSynthesizer*' type='@' index='0'/>
      <arg name='characterRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <arg name='string' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSSplitViewDelegate'>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='splitView:canCollapseSubview:'>
      <arg name='sender' declared_type='NSSplitView*' type='@' index='0'/>
      <arg name='subview' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='f20@0:4@8f12i16' type64='f32@0:8@16f24i28' selector='splitView:constrainMaxCoordinate:ofSubviewAt:'>
      <arg name='sender' declared_type='NSSplitView*' type='@' index='0'/>
      <arg name='proposedCoord' declared_type='float' type='f' index='1'/>
      <arg name='offset' declared_type='int' type='i' index='2'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method type='f20@0:4@8f12i16' type64='f32@0:8@16f24i28' selector='splitView:constrainMinCoordinate:ofSubviewAt:'>
      <arg name='sender' declared_type='NSSplitView*' type='@' index='0'/>
      <arg name='proposedCoord' declared_type='float' type='f' index='1'/>
      <arg name='offset' declared_type='int' type='i' index='2'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method type='f20@0:4@8f12i16' type64='f32@0:8@16f24i28' selector='splitView:constrainSplitPosition:ofSubviewAt:'>
      <arg name='splitView' declared_type='NSSplitView*' type='@' index='0'/>
      <arg name='proposedPosition' declared_type='float' type='f' index='1'/>
      <arg name='index' declared_type='int' type='i' index='2'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method type='v20@0:4@8{_NSSize=ff}12' type64='v32@0:8@16{_NSSize=ff}24' selector='splitView:resizeSubviewsWithOldSize:'>
      <arg name='sender' declared_type='NSSplitView*' type='@' index='0'/>
      <arg name='oldSize' declared_type='NSSize' type='{_NSSize=ff}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='splitViewDidResizeSubviews:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='splitViewWillResizeSubviews:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSTabViewDelegate'>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='tabView:didSelectTabViewItem:'>
      <arg name='tabView' declared_type='NSTabView*' type='@' index='0'/>
      <arg name='tabViewItem' declared_type='NSTabViewItem*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='tabView:shouldSelectTabViewItem:'>
      <arg name='tabView' declared_type='NSTabView*' type='@' index='0'/>
      <arg name='tabViewItem' declared_type='NSTabViewItem*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='tabView:willSelectTabViewItem:'>
      <arg name='tabView' declared_type='NSTabView*' type='@' index='0'/>
      <arg name='tabViewItem' declared_type='NSTabViewItem*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='tabViewDidChangeNumberOfTabViewItems:'>
      <arg name='TabView' declared_type='NSTabView*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSTableDataSource'>
    <method type='i12@0:4@8' type64='i24@0:8@16' selector='numberOfRowsInTableView:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <retval declared_type='int' type='i'/>
    </method>
    <method type='B24@0:4@8@12i16i20' type64='B40@0:8@16@24i32i36' selector='tableView:acceptDrop:row:dropOperation:'>
      <arg name='tv' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='info' declared_type='id' type='@' index='1'/>
      <arg name='row' declared_type='int' type='i' index='2'/>
      <arg name='op' declared_type='NSTableViewDropOperation' type='i' index='3'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:'>
      <arg name='tv' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='dropDestination' declared_type='NSURL*' type='@' index='1'/>
      <arg name='indexSet' declared_type='NSIndexSet*' type='@' index='2'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method type='@20@0:4@8@12i16' type64='@36@0:8@16@24i32' selector='tableView:objectValueForTableColumn:row:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <arg name='row' declared_type='int' type='i' index='2'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method type='v24@0:4@8@12@16i20' type64='v44@0:8@16@24@32i40' selector='tableView:setObjectValue:forTableColumn:row:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='object' declared_type='id' type='@' index='1'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='2'/>
      <arg name='row' declared_type='int' type='i' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='tableView:sortDescriptorsDidChange:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='oldDescriptors' declared_type='NSArray*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='I24@0:4@8@12i16i20' type64='I40@0:8@16@24i32i36' selector='tableView:validateDrop:proposedRow:proposedDropOperation:'>
      <arg name='tv' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='info' declared_type='id' type='@' index='1'/>
      <arg name='row' declared_type='int' type='i' index='2'/>
      <arg name='op' declared_type='NSTableViewDropOperation' type='i' index='3'/>
      <retval declared_type='NSDragOperation' type='I'/>
    </method>
    <method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='tableView:writeRows:toPasteboard:'>
      <arg name='tv' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='rows' declared_type='NSArray*' type='@' index='1'/>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='tableView:writeRowsWithIndexes:toPasteboard:'>
      <arg name='tv' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='rowIndexes' declared_type='NSIndexSet*' type='@' index='1'/>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSTableViewDelegate'>
    <method type='B12@0:4@8' type64='B24@0:8@16' selector='selectionShouldChangeInTableView:'>
      <arg name='aTableView' declared_type='NSTableView*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='tableView:didClickTableColumn:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='tableView:didDragTableColumn:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='f16@0:4@8i12' type64='f28@0:8@16i24' selector='tableView:heightOfRow:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='row' declared_type='int' type='i' index='1'/>
      <retval declared_type='float' type='f'/>
    </method>
    <method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='tableView:mouseDownInHeaderOfTableColumn:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='B20@0:4@8@12i16' type64='B36@0:8@16@24i32' selector='tableView:shouldEditTableColumn:row:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <arg name='row' declared_type='int' type='i' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B16@0:4@8i12' type64='B28@0:8@16i24' selector='tableView:shouldSelectRow:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='row' declared_type='int' type='i' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='tableView:shouldSelectTableColumn:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='@36@0:4@8@12^{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@20i24{_NSPoint=ff}28' type64='@60@0:8@16@24^{_NSRect={_NSPoint=ff}{_NSSize=ff}}32@40i48{_NSPoint=ff}52' selector='tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:'>
      <arg name='tv' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='cell' declared_type='NSCell*' type='@' index='1'/>
      <arg name='rect' declared_type='NSRectPointer' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <arg name='tc' declared_type='NSTableColumn*' type='@' index='3'/>
      <arg name='row' declared_type='int' type='i' index='4'/>
      <arg name='mouseLocation' declared_type='NSPoint' type='{_NSPoint=ff}' index='5'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method type='v24@0:4@8@12@16i20' type64='v44@0:8@16@24@32i40' selector='tableView:willDisplayCell:forTableColumn:row:'>
      <arg name='tableView' declared_type='NSTableView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='tableColumn' declared_type='NSTableColumn*' type='@' index='2'/>
      <arg name='row' declared_type='int' type='i' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSTableViewNotifications'>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='tableViewColumnDidMove:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='tableViewColumnDidResize:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='tableViewSelectionDidChange:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='tableViewSelectionIsChanging:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSTextAttachmentCell'>
    <method type='@8@0:4' type64='@16@0:8' selector='attachment'>
      <retval declared_type='NSTextAttachment*' type='@'/>
    </method>
    <method type='{_NSPoint=ff}8@0:4' type64='{_NSPoint=ff}16@0:8' selector='cellBaselineOffset'>
      <retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
    </method>
    <method type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}40@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12{_NSPoint=ff}28I36' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}52@0:8@16{_NSRect={_NSPoint=ff}{_NSSize=ff}}24{_NSPoint=ff}40I48' selector='cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
      <arg name='textContainer' declared_type='NSTextContainer*' type='@' index='0'/>
      <arg name='lineFrag' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='position' declared_type='NSPoint' type='{_NSPoint=ff}' index='2'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='3'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method type='{_NSSize=ff}8@0:4' type64='{_NSSize=ff}16@0:8' selector='cellSize'>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method type='v28@0:4{_NSRect={_NSPoint=ff}{_NSSize=ff}}8@24' type64='v40@0:8{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@32' selector='drawWithFrame:inView:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v32@0:4{_NSRect={_NSPoint=ff}{_NSSize=ff}}8@24I28' type64='v44@0:8{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@32I40' selector='drawWithFrame:inView:characterIndex:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v36@0:4{_NSRect={_NSPoint=ff}{_NSSize=ff}}8@24I28@32' type64='v52@0:8{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@32I40@44' selector='drawWithFrame:inView:characterIndex:layoutManager:'>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='1'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='2'/>
      <arg name='layoutManager' declared_type='NSLayoutManager*' type='@' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v32@0:4B8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12@28' type64='v44@0:8B16{_NSRect={_NSPoint=ff}{_NSSize=ff}}20@36' selector='highlight:withFrame:inView:'>
      <arg name='flag' declared_type='BOOL' type='B' index='0'/>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='setAttachment:'>
      <arg name='anObject' declared_type='NSTextAttachment*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='B40@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12@28I32B36' type64='B56@0:8@16{_NSRect={_NSPoint=ff}{_NSSize=ff}}24@40I48B52' selector='trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='2'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='3'/>
      <arg name='flag' declared_type='BOOL' type='B' index='4'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B36@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12@28B32' type64='B52@0:8@16{_NSRect={_NSPoint=ff}{_NSSize=ff}}24@40B48' selector='trackMouse:inRect:ofView:untilMouseUp:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='2'/>
      <arg name='flag' declared_type='BOOL' type='B' index='3'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B8@0:4' type64='B16@0:8' selector='wantsToTrackMouse'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B36@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12@28I32' type64='B52@0:8@16{_NSRect={_NSPoint=ff}{_NSSize=ff}}24@40I48' selector='wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:'>
      <arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <arg name='controlView' declared_type='NSView*' type='@' index='2'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='3'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSTextDelegate'>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='textDidBeginEditing:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='textDidChange:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='textDidEndEditing:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='B12@0:4@8' type64='B24@0:8@16' selector='textShouldBeginEditing:'>
      <arg name='textObject' declared_type='NSText*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B12@0:4@8' type64='B24@0:8@16' selector='textShouldEndEditing:'>
      <arg name='textObject' declared_type='NSText*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSTextInput'>
    <method type='@16@0:4{_NSRange=II}8' type64='@24@0:8{_NSRange=II}16' selector='attributedSubstringFromRange:'>
      <arg name='theRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='NSAttributedString*' type='@'/>
    </method>
    <method type='I16@0:4{_NSPoint=ff}8' type64='I24@0:8{_NSPoint=ff}16' selector='characterIndexForPoint:'>
      <arg name='thePoint' declared_type='NSPoint' type='{_NSPoint=ff}' index='0'/>
      <retval declared_type='unsigned int' type='I'/>
    </method>
    <method type='l8@0:4' type64='q16@0:8' selector='conversationIdentifier'>
      <retval declared_type='long' type='l' type64='q'/>
    </method>
    <method type='v12@0:4:8' type64='v24@0:8:16' selector='doCommandBySelector:'>
      <arg name='aSelector' declared_type='SEL' type=':' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@0:4{_NSRange=II}8' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}24@0:8{_NSRange=II}16' selector='firstRectForCharacterRange:'>
      <arg name='theRange' declared_type='NSRange' type='{_NSRange=II}' index='0'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method type='B8@0:4' type64='B16@0:8' selector='hasMarkedText'>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='insertText:'>
      <arg name='aString' declared_type='id' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='{_NSRange=II}8@0:4' type64='{_NSRange=II}16@0:8' selector='markedRange'>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method type='{_NSRange=II}8@0:4' type64='{_NSRange=II}16@0:8' selector='selectedRange'>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method type='v20@0:4@8{_NSRange=II}12' type64='v32@0:8@16{_NSRange=II}24' selector='setMarkedText:selectedRange:'>
      <arg name='aString' declared_type='id' type='@' index='0'/>
      <arg name='selRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v8@0:4' type64='v16@0:8' selector='unmarkText'>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='@8@0:4' type64='@16@0:8' selector='validAttributesForMarkedText'>
      <retval declared_type='NSArray*' type='@'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSTextStorageDelegate'>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='textStorageDidProcessEditing:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='textStorageWillProcessEditing:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSTextViewDelegate'>
    <method type='v32@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16' type64='v48@0:8@16@24{_NSRect={_NSPoint=ff}{_NSSize=ff}}32' selector='textView:clickedOnCell:inRect:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v36@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16I32' type64='v52@0:8@16@24{_NSRect={_NSPoint=ff}{_NSSize=ff}}32I48' selector='textView:clickedOnCell:inRect:atIndex:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='textView:clickedOnLink:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='link' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B20@0:4@8@12I16' type64='B36@0:8@16@24I32' selector='textView:clickedOnLink:atIndex:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='link' declared_type='id' type='@' index='1'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='@28@0:4@8@12{_NSRange=II}16^i24' type64='@48@0:8@16@24{_NSRange=II}32^i40' selector='textView:completions:forPartialWordRange:indexOfSelectedItem:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='words' declared_type='NSArray*' type='@' index='1'/>
      <arg name='charRange' declared_type='NSRange' type='{_NSRange=II}' index='2'/>
      <arg name='index' declared_type='int*' type='^i' index='3' type_modifier='o'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method type='B16@0:4@8:12' type64='B32@0:8@16:24' selector='textView:doCommandBySelector:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='commandSelector' declared_type='SEL' type=':' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='v32@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16' type64='v48@0:8@16@24{_NSRect={_NSPoint=ff}{_NSSize=ff}}32' selector='textView:doubleClickedOnCell:inRect:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v36@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16I32' type64='v52@0:8@16@24{_NSRect={_NSPoint=ff}{_NSSize=ff}}32I48' selector='textView:doubleClickedOnCell:inRect:atIndex:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='cellFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v36@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@32' type64='v56@0:8@16@24{_NSRect={_NSPoint=ff}{_NSSize=ff}}32@48' selector='textView:draggedCell:inRect:event:'>
      <arg name='view' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <arg name='event' declared_type='NSEvent*' type='@' index='3'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v40@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@32I36' type64='v60@0:8@16@24{_NSRect={_NSPoint=ff}{_NSSize=ff}}32@48I56' selector='textView:draggedCell:inRect:event:atIndex:'>
      <arg name='view' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <arg name='event' declared_type='NSEvent*' type='@' index='3'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='4'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='B24@0:4@8{_NSRange=II}12@20' type64='B40@0:8@16{_NSRange=II}24@32' selector='textView:shouldChangeTextInRange:replacementString:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='affectedCharRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <arg name='replacementString' declared_type='NSString*' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='textView:shouldChangeTextInRanges:replacementStrings:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='affectedRanges' declared_type='NSArray*' type='@' index='1'/>
      <arg name='replacementStrings' declared_type='NSArray*' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='textView:shouldChangeTypingAttributes:toAttributes:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='oldTypingAttributes' declared_type='NSDictionary*' type='@' index='1'/>
      <arg name='newTypingAttributes' declared_type='NSDictionary*' type='@' index='2'/>
      <retval declared_type='NSDictionary*' type='@'/>
    </method>
    <method type='{_NSRange=II}28@0:4@8{_NSRange=II}12{_NSRange=II}20' type64='{_NSRange=II}40@0:8@16{_NSRange=II}24{_NSRange=II}32' selector='textView:willChangeSelectionFromCharacterRange:toCharacterRange:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='oldSelectedCharRange' declared_type='NSRange' type='{_NSRange=II}' index='1'/>
      <arg name='newSelectedCharRange' declared_type='NSRange' type='{_NSRange=II}' index='2'/>
      <retval declared_type='NSRange' type='{_NSRange=II}'/>
    </method>
    <method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='oldSelectedCharRanges' declared_type='NSArray*' type='@' index='1'/>
      <arg name='newSelectedCharRanges' declared_type='NSArray*' type='@' index='2'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method type='@20@0:4@8@12I16' type64='@36@0:8@16@24I32' selector='textView:willDisplayToolTip:forCharacterAtIndex:'>
      <arg name='textView' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='tooltip' declared_type='NSString*' type='@' index='1'/>
      <arg name='characterIndex' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method type='@20@0:4@8@12I16' type64='@36@0:8@16@24I32' selector='textView:writablePasteboardTypesForCell:atIndex:'>
      <arg name='view' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method type='B28@0:4@8@12I16@20@24' type64='B52@0:8@16@24I32@36@44' selector='textView:writeCell:atIndex:toPasteboard:type:'>
      <arg name='view' declared_type='NSTextView*' type='@' index='0'/>
      <arg name='cell' declared_type='id' type='@' index='1'/>
      <arg name='charIndex' declared_type='unsigned int' type='I' index='2'/>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='3'/>
      <arg name='type' declared_type='NSString*' type='@' index='4'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='textViewDidChangeSelection:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='textViewDidChangeTypingAttributes:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='@12@0:4@8' type64='@24@0:8@16' selector='undoManagerForTextView:'>
      <arg name='view' declared_type='NSTextView*' type='@' index='0'/>
      <retval declared_type='NSUndoManager*' type='@'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSTokenFieldCellDelegate'>
    <method type='@24@0:4@8@12i16^i20' type64='@44@0:8@16@24i32^i36' selector='tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:'>
      <arg name='tokenFieldCell' declared_type='NSTokenFieldCell*' type='@' index='0'/>
      <arg name='substring' declared_type='NSString*' type='@' index='1'/>
      <arg name='tokenIndex' declared_type='int' type='i' index='2'/>
      <arg name='selectedIndex' declared_type='int*' type='^i' index='3' type_modifier='o'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='tokenFieldCell:displayStringForRepresentedObject:'>
      <arg name='tokenFieldCell' declared_type='NSTokenFieldCell*' type='@' index='0'/>
      <arg name='representedObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='tokenFieldCell:editingStringForRepresentedObject:'>
      <arg name='tokenFieldCell' declared_type='NSTokenFieldCell*' type='@' index='0'/>
      <arg name='representedObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='tokenFieldCell:hasMenuForRepresentedObject:'>
      <arg name='tokenFieldCell' declared_type='NSTokenFieldCell*' type='@' index='0'/>
      <arg name='representedObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='tokenFieldCell:menuForRepresentedObject:'>
      <arg name='tokenFieldCell' declared_type='NSTokenFieldCell*' type='@' index='0'/>
      <arg name='representedObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='tokenFieldCell:readFromPasteboard:'>
      <arg name='tokenFieldCell' declared_type='NSTokenFieldCell*' type='@' index='0'/>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='1'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='tokenFieldCell:representedObjectForEditingString:'>
      <arg name='tokenFieldCell' declared_type='NSTokenFieldCell*' type='@' index='0'/>
      <arg name='editingString' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method type='@20@0:4@8@12I16' type64='@36@0:8@16@24I32' selector='tokenFieldCell:shouldAddObjects:atIndex:'>
      <arg name='tokenFieldCell' declared_type='NSTokenFieldCell*' type='@' index='0'/>
      <arg name='tokens' declared_type='NSArray*' type='@' index='1'/>
      <arg name='index' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method type='i16@0:4@8@12' type64='i32@0:8@16@24' selector='tokenFieldCell:styleForRepresentedObject:'>
      <arg name='tokenFieldCell' declared_type='NSTokenFieldCell*' type='@' index='0'/>
      <arg name='representedObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='NSTokenStyle' type='i'/>
    </method>
    <method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='tokenFieldCell:writeRepresentedObjects:toPasteboard:'>
      <arg name='tokenFieldCell' declared_type='NSTokenFieldCell*' type='@' index='0'/>
      <arg name='objects' declared_type='NSArray*' type='@' index='1'/>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSTokenFieldDelegate'>
    <method type='@24@0:4@8@12i16^i20' type64='@44@0:8@16@24i32^i36' selector='tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:'>
      <arg name='tokenField' declared_type='NSTokenField*' type='@' index='0'/>
      <arg name='substring' declared_type='NSString*' type='@' index='1'/>
      <arg name='tokenIndex' declared_type='int' type='i' index='2'/>
      <arg name='selectedIndex' declared_type='int*' type='^i' index='3' type_modifier='o'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='tokenField:displayStringForRepresentedObject:'>
      <arg name='tokenField' declared_type='NSTokenField*' type='@' index='0'/>
      <arg name='representedObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='tokenField:editingStringForRepresentedObject:'>
      <arg name='tokenField' declared_type='NSTokenField*' type='@' index='0'/>
      <arg name='representedObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
    <method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='tokenField:hasMenuForRepresentedObject:'>
      <arg name='tokenField' declared_type='NSTokenField*' type='@' index='0'/>
      <arg name='representedObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='tokenField:menuForRepresentedObject:'>
      <arg name='tokenField' declared_type='NSTokenField*' type='@' index='0'/>
      <arg name='representedObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='NSMenu*' type='@'/>
    </method>
    <method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='tokenField:readFromPasteboard:'>
      <arg name='tokenField' declared_type='NSTokenField*' type='@' index='0'/>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='1'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='tokenField:representedObjectForEditingString:'>
      <arg name='tokenField' declared_type='NSTokenField*' type='@' index='0'/>
      <arg name='editingString' declared_type='NSString*' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method type='@20@0:4@8@12I16' type64='@36@0:8@16@24I32' selector='tokenField:shouldAddObjects:atIndex:'>
      <arg name='tokenField' declared_type='NSTokenField*' type='@' index='0'/>
      <arg name='tokens' declared_type='NSArray*' type='@' index='1'/>
      <arg name='index' declared_type='unsigned int' type='I' index='2'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method type='i16@0:4@8@12' type64='i32@0:8@16@24' selector='tokenField:styleForRepresentedObject:'>
      <arg name='tokenField' declared_type='NSTokenField*' type='@' index='0'/>
      <arg name='representedObject' declared_type='id' type='@' index='1'/>
      <retval declared_type='NSTokenStyle' type='i'/>
    </method>
    <method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='tokenField:writeRepresentedObjects:toPasteboard:'>
      <arg name='tokenField' declared_type='NSTokenField*' type='@' index='0'/>
      <arg name='objects' declared_type='NSArray*' type='@' index='1'/>
      <arg name='pboard' declared_type='NSPasteboard*' type='@' index='2'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSToolTipOwner'>
    <method type='@28@0:4@8i12{_NSPoint=ff}16^v24' type64='@44@0:8@16i24{_NSPoint=ff}28^v36' selector='view:stringForToolTip:point:userData:'>
      <arg name='view' declared_type='NSView*' type='@' index='0'/>
      <arg name='tag' declared_type='NSToolTipTag' type='i' index='1'/>
      <arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' index='2'/>
      <arg name='data' declared_type='void*' type='^v' index='3' type_modifier='n'/>
      <retval declared_type='NSString*' type='@'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSToolbarDelegate'>
    <method type='@20@0:4@8@12B16' type64='@36@0:8@16@24B32' selector='toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:'>
      <arg name='toolbar' declared_type='NSToolbar*' type='@' index='0'/>
      <arg name='itemIdentifier' declared_type='NSString*' type='@' index='1'/>
      <arg name='flag' declared_type='BOOL' type='B' index='2'/>
      <retval declared_type='NSToolbarItem*' type='@'/>
    </method>
    <method type='@12@0:4@8' type64='@24@0:8@16' selector='toolbarAllowedItemIdentifiers:'>
      <arg name='toolbar' declared_type='NSToolbar*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method type='@12@0:4@8' type64='@24@0:8@16' selector='toolbarDefaultItemIdentifiers:'>
      <arg name='toolbar' declared_type='NSToolbar*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
    <method type='@12@0:4@8' type64='@24@0:8@16' selector='toolbarSelectableItemIdentifiers:'>
      <arg name='toolbar' declared_type='NSToolbar*' type='@' index='0'/>
      <retval declared_type='NSArray*' type='@'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSToolbarItemValidation'>
    <method type='B12@0:4@8' type64='B24@0:8@16' selector='validateToolbarItem:'>
      <arg name='theItem' declared_type='NSToolbarItem*' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSToolbarNotifications'>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='toolbarDidRemoveItem:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='toolbarWillAddItem:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSUserInterfaceValidations'>
    <method type='B12@0:4@8' type64='B24@0:8@16' selector='validateUserInterfaceItem:'>
      <arg name='anItem' declared_type='id' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSValidatedUserInterfaceItem'>
    <method type=':8@0:4' type64=':16@0:8' selector='action'>
      <retval declared_type='SEL' type=':'/>
    </method>
    <method type='i8@0:4' type64='i16@0:8' selector='tag'>
      <retval declared_type='int' type='i'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSWindowDelegate'>
    <method type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}32@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}48@0:8@16@24{_NSRect={_NSPoint=ff}{_NSSize=ff}}32' selector='window:willPositionSheet:usingRect:'>
      <arg name='window' declared_type='NSWindow*' type='@' index='0'/>
      <arg name='sheet' declared_type='NSWindow*' type='@' index='1'/>
      <arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='2'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
    <method type='B12@0:4@8' type64='B24@0:8@16' selector='windowShouldClose:'>
      <arg name='sender' declared_type='id' type='@' index='0'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='B28@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12' type64='B40@0:8@16{_NSRect={_NSPoint=ff}{_NSSize=ff}}24' selector='windowShouldZoom:toFrame:'>
      <arg name='window' declared_type='NSWindow*' type='@' index='0'/>
      <arg name='newFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <retval declared_type='BOOL' type='B'/>
    </method>
    <method type='{_NSSize=ff}20@0:4@8{_NSSize=ff}12' type64='{_NSSize=ff}32@0:8@16{_NSSize=ff}24' selector='windowWillResize:toSize:'>
      <arg name='sender' declared_type='NSWindow*' type='@' index='0'/>
      <arg name='frameSize' declared_type='NSSize' type='{_NSSize=ff}' index='1'/>
      <retval declared_type='NSSize' type='{_NSSize=ff}'/>
    </method>
    <method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='windowWillReturnFieldEditor:toObject:'>
      <arg name='sender' declared_type='NSWindow*' type='@' index='0'/>
      <arg name='client' declared_type='id' type='@' index='1'/>
      <retval declared_type='id' type='@'/>
    </method>
    <method type='@12@0:4@8' type64='@24@0:8@16' selector='windowWillReturnUndoManager:'>
      <arg name='window' declared_type='NSWindow*' type='@' index='0'/>
      <retval declared_type='NSUndoManager*' type='@'/>
    </method>
    <method type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}28@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}40@0:8@16{_NSRect={_NSPoint=ff}{_NSSize=ff}}24' selector='windowWillUseStandardFrame:defaultFrame:'>
      <arg name='window' declared_type='NSWindow*' type='@' index='0'/>
      <arg name='newFrame' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='1'/>
      <retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
    </method>
  </informal_protocol>
  <informal_protocol name='NSWindowNotifications'>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='windowDidBecomeKey:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='windowDidBecomeMain:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='windowDidChangeScreen:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='windowDidChangeScreenProfile:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='windowDidDeminiaturize:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='windowDidEndSheet:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='windowDidExpose:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='windowDidMiniaturize:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='windowDidMove:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='windowDidResignKey:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='windowDidResignMain:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='windowDidResize:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='windowDidUpdate:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='windowWillBeginSheet:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='windowWillClose:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='windowWillMiniaturize:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
    <method type='v12@0:4@8' type64='v24@0:8@16' selector='windowWillMove:'>
      <arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
      <retval declared_type='void' type='v'/>
    </method>
  </informal_protocol>
</signatures>
