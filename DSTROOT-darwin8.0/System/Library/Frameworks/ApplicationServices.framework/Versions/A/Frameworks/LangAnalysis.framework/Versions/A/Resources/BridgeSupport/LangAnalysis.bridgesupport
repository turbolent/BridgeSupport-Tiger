<?xml version='1.0'?>
<signatures version='1.0'>
  <depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
  <depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
  <depends_on path='/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework'/>
  <depends_on path='/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/AE.framework'/>
  <depends_on path='/System/Library/Frameworks/SystemConfiguration.framework'/>
  <struct name='DCMDictionaryHeader' type='{DCMDictionaryHeader=&quot;headerSignature&quot;I&quot;headerVersion&quot;I&quot;headerSize&quot;I&quot;accessMethod&quot;[64C]}'>
    <field name='headerSignature' declared_type='FourCharCode' type='L' type64='I'/>
    <field name='headerVersion' declared_type='UInt32' type='L' type64='I'/>
    <field name='headerSize' declared_type='ByteCount' type='L' type64='I'/>
    <field name='accessMethod' declared_type='Str63' type='[64C]'/>
  </struct>
  <struct name='DictionaryAttributeTable' type='{DictionaryAttributeTable=&quot;datSize&quot;C&quot;datTable&quot;[1c]}'>
    <field name='datSize' declared_type='UInt8' type='C'/>
    <field name='datTable' declared_type='DictionaryEntryAttribute*' type='[1c]'/>
  </struct>
  <struct name='DictionaryInformation' type='{DictionaryInformation=&quot;dictionaryFSSpec&quot;{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;l&quot;name&quot;[64C]}&quot;numberOfRecords&quot;i&quot;currentGarbageSize&quot;i&quot;script&quot;s&quot;maximumKeyLength&quot;s&quot;keyAttributes&quot;c}' type64='{DictionaryInformation=&quot;dictionaryFSSpec&quot;{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;q&quot;name&quot;[64C]}&quot;numberOfRecords&quot;i&quot;currentGarbageSize&quot;i&quot;script&quot;s&quot;maximumKeyLength&quot;s&quot;keyAttributes&quot;c}'>
    <field name='dictionaryFSSpec' declared_type='FSSpec' type='{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;l&quot;name&quot;[64C]}' type64='{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;q&quot;name&quot;[64C]}'/>
    <field name='numberOfRecords' declared_type='SInt32' type='l' type64='i'/>
    <field name='currentGarbageSize' declared_type='SInt32' type='l' type64='i'/>
    <field name='script' declared_type='ScriptCode' type='s'/>
    <field name='maximumKeyLength' declared_type='SInt16' type='s'/>
    <field name='keyAttributes' declared_type='SInt8' type='c'/>
  </struct>
  <struct name='HomographDicInfoRec' type='{HomographDicInfoRec=&quot;dictionaryID&quot;^{OpaqueDCMObjectID}&quot;uniqueID&quot;I}'>
    <field name='dictionaryID' declared_type='DCMDictionaryID' type='^{OpaqueDCMObjectID=}'/>
    <field name='uniqueID' declared_type='DCMUniqueID' type='L' type64='I'/>
  </struct>
  <struct name='LAHomograph' type='{AEDesc=&quot;descriptorType&quot;I&quot;dataHandle&quot;^^{OpaqueAEDataStorageType}}'>
    <field name='descriptorType' declared_type='DescType' type='L' type64='I'/>
    <field name='dataHandle' declared_type='AEDataStorage' type='^^{OpaqueAEDataStorageType}'/>
  </struct>
  <struct name='LAMorpheme' type='{AEDesc=&quot;descriptorType&quot;I&quot;dataHandle&quot;^^{OpaqueAEDataStorageType}}'>
    <field name='descriptorType' declared_type='DescType' type='L' type64='I'/>
    <field name='dataHandle' declared_type='AEDataStorage' type='^^{OpaqueAEDataStorageType}'/>
  </struct>
  <struct name='LAMorphemeBundle' type='{AEDesc=&quot;descriptorType&quot;I&quot;dataHandle&quot;^^{OpaqueAEDataStorageType}}'>
    <field name='descriptorType' declared_type='DescType' type='L' type64='I'/>
    <field name='dataHandle' declared_type='AEDataStorage' type='^^{OpaqueAEDataStorageType}'/>
  </struct>
  <struct name='LAMorphemePath' type='{AEDesc=&quot;descriptorType&quot;I&quot;dataHandle&quot;^^{OpaqueAEDataStorageType}}'>
    <field name='descriptorType' declared_type='DescType' type='L' type64='I'/>
    <field name='dataHandle' declared_type='AEDataStorage' type='^^{OpaqueAEDataStorageType}'/>
  </struct>
  <struct name='LAMorphemeRec' type='{LAMorphemeRec=&quot;sourceTextLength&quot;I&quot;sourceTextPtr&quot;^v&quot;morphemeTextLength&quot;I&quot;morphemeTextPtr&quot;^v&quot;partOfSpeech&quot;I}'>
    <field name='sourceTextLength' declared_type='ByteCount' type='L' type64='I'/>
    <field name='sourceTextPtr' declared_type='LogicalAddress' type='^v'/>
    <field name='morphemeTextLength' declared_type='ByteCount' type='L' type64='I'/>
    <field name='morphemeTextPtr' declared_type='LogicalAddress' type='^v'/>
    <field name='partOfSpeech' declared_type='UInt32' type='L' type64='I'/>
  </struct>
  <struct name='LAMorphemesArray' type='{LAMorphemesArray=&quot;morphemesCount&quot;I&quot;processedTextLength&quot;I&quot;morphemesTextLength&quot;I&quot;morphemes&quot;[1{LAMorphemeRec=&quot;sourceTextLength&quot;I&quot;sourceTextPtr&quot;^v&quot;morphemeTextLength&quot;I&quot;morphemeTextPtr&quot;^v&quot;partOfSpeech&quot;I}]}'>
    <field name='morphemesCount' declared_type='ItemCount' type='L' type64='I'/>
    <field name='processedTextLength' declared_type='ByteCount' type='L' type64='I'/>
    <field name='morphemesTextLength' declared_type='ByteCount' type='L' type64='I'/>
    <field name='morphemes' declared_type='LAMorphemeRec*' type='[1{LAMorphemeRec=&quot;sourceTextLength&quot;I&quot;sourceTextPtr&quot;^v&quot;morphemeTextLength&quot;I&quot;morphemeTextPtr&quot;^v&quot;partOfSpeech&quot;I}]'/>
  </struct>
  <struct name='MorphemeTextRange' type='{MorphemeTextRange=&quot;sourceOffset&quot;I&quot;length&quot;I}'>
    <field name='sourceOffset' declared_type='UInt32' type='L' type64='I'/>
    <field name='length' declared_type='UInt32' type='L' type64='I'/>
  </struct>
  <cftype name='DCMObjectRef' type='^{OpaqueDCMObjectRef=}'/>
  <cftype name='LAContextRef' type='^{OpaqueLAContextRef=}'/>
  <cftype name='LAEnvironmentRef' type='^{OpaqueLAEnvironmentRef=}'/>
  <opaque name='DCMFoundRecordIterator' type='^{OpaqueDCMFoundRecordIterator=}'/>
  <opaque name='DCMObjectID' type='^{OpaqueDCMObjectID=}'/>
  <opaque name='DCMObjectIterator' type='^{OpaqueDCMObjectIterator=}'/>
  <string_constant name='kAppleJapaneseDefaultAccessMethodName' value='pDAM:Apple Backward Trie Access Method'/>
  <string_constant name='kLAJapaneseKanaKanjiEnvironment' value='pKanaKanjiConversion'/>
  <string_constant name='kLAJapaneseMorphemeAnalysisEnvironment' value='pJapaneseMorphemeAnalysis'/>
  <string_constant name='kLAJapaneseTTSEnvironment' value='pJapaneseTextToSpeech'/>
  <enum name='kAdjective' value='-3'/>
  <enum name='kAdverb' value='-4'/>
  <enum name='kAppleJapaneseDictionarySignature' value='1785487726'/>
  <enum name='kDCMAllowListing' value='0'/>
  <enum name='kDCMAnyFieldTag' value='707406378'/>
  <enum name='kDCMAnyFieldType' value='707406378'/>
  <enum name='kDCMBasicDictionaryClass' value='2'/>
  <enum name='kDCMCanAddDictionaryFieldMask' value='64'/>
  <enum name='kDCMCanCreateDictionaryMask' value='32'/>
  <enum name='kDCMCanHaveMultipleIndexMask' value='8'/>
  <enum name='kDCMCanModifyDictionaryMask' value='16'/>
  <enum name='kDCMCanStreamDictionaryMask' value='4'/>
  <enum name='kDCMCanUseFileDictionaryMask' value='1'/>
  <enum name='kDCMCanUseMemoryDictionaryMask' value='2'/>
  <enum name='kDCMCanUseTransactionMask' value='128'/>
  <enum name='kDCMDictionaryHeaderSignature' value='1684628340'/>
  <enum name='kDCMDictionaryHeaderVersion' value='2'/>
  <enum name='kDCMFindMethodBackwardTrie' value='1651798633'/>
  <enum name='kDCMFindMethodBeginningMatch' value='1650947956'/>
  <enum name='kDCMFindMethodContainsMatch' value='1668247156'/>
  <enum name='kDCMFindMethodEndingMatch' value='1701733491'/>
  <enum name='kDCMFindMethodExactMatch' value='1025515552'/>
  <enum name='kDCMFindMethodForwardTrie' value='1718907497'/>
  <enum name='kDCMFixedSizeFieldMask' value='8'/>
  <enum name='kDCMHiddenFieldMask' value64='2147483648' value='-2147483648'/>
  <enum name='kDCMIdentifyFieldMask' value='4'/>
  <enum name='kDCMIndexedFieldMask' value='1'/>
  <enum name='kDCMJapaneseAccentTag' value='1633906292'/>
  <enum name='kDCMJapaneseAccentType' value='1652126821'/>
  <enum name='kDCMJapaneseFukugouInfoTag' value='1718971253'/>
  <enum name='kDCMJapaneseFukugouInfoType' value='1718971253'/>
  <enum name='kDCMJapaneseHinshiTag' value='1751740019'/>
  <enum name='kDCMJapaneseHinshiType' value='1751740019'/>
  <enum name='kDCMJapaneseHyokiTag' value='1752788843'/>
  <enum name='kDCMJapaneseHyokiType' value='1970567284'/>
  <enum name='kDCMJapaneseOnKunReadingTag' value='1332628334'/>
  <enum name='kDCMJapaneseOnKunReadingType' value='1970567284'/>
  <enum name='kDCMJapanesePhoneticTag' value='1752461166'/>
  <enum name='kDCMJapanesePhoneticType' value='1970567284'/>
  <enum name='kDCMJapaneseWeightTag' value='1751740004'/>
  <enum name='kDCMJapaneseWeightType' value='1936224114'/>
  <enum name='kDCMJapaneseYomiTag' value='2037345641'/>
  <enum name='kDCMJapaneseYomiType' value='1970567284'/>
  <enum name='kDCMProhibitListing' value='1'/>
  <enum name='kDCMReadOnlyDictionary' value='0'/>
  <enum name='kDCMReadWriteDictionary' value='1'/>
  <enum name='kDCMRequiredFieldMask' value='2'/>
  <enum name='kDCMSpecificDictionaryClass' value='1'/>
  <enum name='kDCMUserDictionaryClass' value='0'/>
  <enum name='kDictionaryFileType' value='1684628340'/>
  <enum name='kInsert' value='0'/>
  <enum name='kInsertOrReplace' value='2'/>
  <enum name='kIsCaseSensitive' value='16'/>
  <enum name='kIsNotDiacriticalSensitive' value='32'/>
  <enum name='kLAAllMorphemes' value='0'/>
  <enum name='kLADefaultEdge' value='0'/>
  <enum name='kLAEndOfSourceTextMask' value='1'/>
  <enum name='kLAFreeEdge' value='1'/>
  <enum name='kLAIncompleteEdge' value='2'/>
  <enum name='kLAMorphemesArrayVersion' value='0'/>
  <enum name='kLASpeechBagyouGodan' value='20608'/>
  <enum name='kLASpeechChimei' value='512'/>
  <enum name='kLASpeechChimeiSetsubigo' value='37376'/>
  <enum name='kLASpeechDokuritsugo' value='41728'/>
  <enum name='kLASpeechDoushi' value='20480'/>
  <enum name='kLASpeechFukushi' value='8192'/>
  <enum name='kLASpeechFutsuuMeishi' value='0'/>
  <enum name='kLASpeechGagyouGodan' value='20592'/>
  <enum name='kLASpeechGodanDoushi' value='20480'/>
  <enum name='kLASpeechIchidanDoushi' value='20736'/>
  <enum name='kLASpeechJinmei' value='256'/>
  <enum name='kLASpeechJinmeiMei' value='288'/>
  <enum name='kLASpeechJinmeiSei' value='272'/>
  <enum name='kLASpeechJinmeiSetsubigo' value='37120'/>
  <enum name='kLASpeechJodoushi' value='45056'/>
  <enum name='kLASpeechJoshi' value='49152'/>
  <enum name='kLASpeechKagyouGodan' value='20480'/>
  <enum name='kLASpeechKahenDoushi' value='20992'/>
  <enum name='kLASpeechKandoushi' value='16384'/>
  <enum name='kLASpeechKatsuyouGokan' value='1'/>
  <enum name='kLASpeechKatsuyouKatei' value='6'/>
  <enum name='kLASpeechKatsuyouMask' value='15'/>
  <enum name='kLASpeechKatsuyouMeirei' value='7'/>
  <enum name='kLASpeechKatsuyouMizen' value='2'/>
  <enum name='kLASpeechKatsuyouRentai' value='5'/>
  <enum name='kLASpeechKatsuyouRenyou' value='3'/>
  <enum name='kLASpeechKatsuyouSyuushi' value='4'/>
  <enum name='kLASpeechKeidouMeishi' value='1536'/>
  <enum name='kLASpeechKeiyoudoushi' value='28672'/>
  <enum name='kLASpeechKeiyoushi' value='24576'/>
  <enum name='kLASpeechKigou' value='41216'/>
  <enum name='kLASpeechKoyuuMeishi' value='1024'/>
  <enum name='kLASpeechKuten' value='41232'/>
  <enum name='kLASpeechMagyouGodan' value='20544'/>
  <enum name='kLASpeechMediumClassMask' value='65280'/>
  <enum name='kLASpeechMeishi' value='0'/>
  <enum name='kLASpeechMuhinshi' value='40960'/>
  <enum name='kLASpeechNagyouGodan' value='20528'/>
  <enum name='kLASpeechRagyouGodan' value='20560'/>
  <enum name='kLASpeechRentaishi' value='4096'/>
  <enum name='kLASpeechRoughClassMask' value='61440'/>
  <enum name='kLASpeechSagyouGodan' value='20496'/>
  <enum name='kLASpeechSahenDoushi' value='21248'/>
  <enum name='kLASpeechSahenMeishi' value='1280'/>
  <enum name='kLASpeechSeiku' value='41984'/>
  <enum name='kLASpeechSetsubiChimei' value='528'/>
  <enum name='kLASpeechSetsubigo' value='36864'/>
  <enum name='kLASpeechSetsuzokushi' value='12288'/>
  <enum name='kLASpeechSettougo' value='32768'/>
  <enum name='kLASpeechSoshikimei' value='768'/>
  <enum name='kLASpeechSoshikimeiSetsubigo' value='37632'/>
  <enum name='kLASpeechStrictClassMask' value='65520'/>
  <enum name='kLASpeechSuujiSetsubigo' value='37888'/>
  <enum name='kLASpeechSuujiSettougo' value='33024'/>
  <enum name='kLASpeechSuushi' value='41472'/>
  <enum name='kLASpeechTagyouGodan' value='20512'/>
  <enum name='kLASpeechTankanji' value='40960'/>
  <enum name='kLASpeechTouten' value='41248'/>
  <enum name='kLASpeechWagyouGodan' value='20576'/>
  <enum name='kLASpeechZahenDoushi' value='21504'/>
  <enum name='kMaxInputLengthOfAppleJapaneseEngine' value='200'/>
  <enum name='kMaxKanjiLengthInAppleJapaneseDictionary' value='64'/>
  <enum name='kMaxYomiLengthInAppleJapaneseDictionary' value='40'/>
  <enum name='kNoun' value='-1'/>
  <enum name='kReplace' value='1'/>
  <enum name='kVerb' value='-2'/>
  <enum name='keyAEHomographAccent' value='1818323041'/>
  <enum name='keyAEHomographDicInfo' value='1818323044'/>
  <enum name='keyAEHomographWeight' value='1818323063'/>
  <enum name='keyAELAHomograph' value='1819108968'/>
  <enum name='keyAELAMorpheme' value='1819108974'/>
  <enum name='keyAELAMorphemeBundle' value='1819108962'/>
  <enum name='keyAELAMorphemePath' value='1819108976'/>
  <enum name='keyAEMorphemePartOfSpeechCode' value='1818324323'/>
  <enum name='keyAEMorphemeTextRange' value='1818324340'/>
  <enum name='keyDCMFieldAttributes' value='1717662834'/>
  <enum name='keyDCMFieldDefaultData' value='1717855590'/>
  <enum name='keyDCMFieldFindMethods' value='1717988964'/>
  <enum name='keyDCMFieldName' value='1718509933'/>
  <enum name='keyDCMFieldTag' value='1718903143'/>
  <enum name='keyDCMFieldType' value='1718909296'/>
  <enum name='keyDCMMaxRecordSize' value='1836217210'/>
  <enum name='pDCMAccessMethod' value='1634563172'/>
  <enum name='pDCMClass' value='1885564019'/>
  <enum name='pDCMCopyright' value='1768842863'/>
  <enum name='pDCMListing' value='1818850164'/>
  <enum name='pDCMLocale' value='1819239276'/>
  <enum name='pDCMMaintenance' value='1836346979'/>
  <enum name='pDCMPermission' value='1885696621'/>
  <enum name='typeAEHomographAccent' value='1818323041'/>
  <enum name='typeAEHomographDicInfo' value='1818323044'/>
  <enum name='typeAEHomographWeight' value='1936224114'/>
  <enum name='typeAEMorphemePartOfSpeechCode' value='1818324323'/>
  <enum name='typeAEMorphemeTextRange' value='1818324340'/>
  <enum name='typeDCMFieldAttributes' value='1717662834'/>
  <enum name='typeDCMFindMethod' value='1718449256'/>
  <enum name='typeLAHomograph' value='1818850164'/>
  <enum name='typeLAMorpheme' value='1818850164'/>
  <enum name='typeLAMorphemeBundle' value='1919247215'/>
  <enum name='typeLAMorphemePath' value='1919247215'/>
  <function name='DCMAddRecord'>
    <arg name='dictionaryRef' declared_type='DCMDictionaryRef' type='^{OpaqueDCMObjectRef=}'/>
    <arg name='keyFieldTag' declared_type='DCMFieldTag' type='L' type64='I'/>
    <arg name='keySize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='keyData' declared_type='ConstLogicalAddress' type='^v'/>
    <arg name='checkOnly' declared_type='Boolean' type='B'/>
    <arg name='dataList' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
    <arg name='newUniqueID' declared_type='DCMUniqueID*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMCloseDictionary'>
    <arg name='dictionaryRef' declared_type='DCMDictionaryRef' type='^{OpaqueDCMObjectRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMCompactDictionary'>
    <arg name='dictionaryID' declared_type='DCMDictionaryID' type='^{OpaqueDCMObjectID=}'/>
    <arg name='progressProc' function_pointer='true' declared_type='DCMProgressFilterUPP' type='^?'>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='UInt16' type='S'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <arg name='userData' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMCountObjectIterator'>
    <arg name='iterator' declared_type='DCMObjectIterator' type='^{OpaqueDCMObjectIterator=}'/>
    <retval declared_type='ItemCount' type='L' type64='I'/>
  </function>
  <function name='DCMCountRecord'>
    <arg name='dictionaryID' declared_type='DCMDictionaryID' type='^{OpaqueDCMObjectID=}'/>
    <arg name='count' declared_type='ItemCount*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMCountRecordIterator'>
    <arg name='recordIterator' declared_type='DCMFoundRecordIterator' type='^{OpaqueDCMFoundRecordIterator=}'/>
    <retval declared_type='ItemCount' type='L' type64='I'/>
  </function>
  <function name='DCMCreateAccessMethodIterator'>
    <arg name='accessMethodIterator' declared_type='DCMAccessMethodIterator*' type='^^{OpaqueDCMObjectIterator}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMCreateDictionaryIterator'>
    <arg name='dictionaryIterator' declared_type='DCMDictionaryIterator*' type='^^{OpaqueDCMObjectIterator}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMCreateFieldInfoRecord'>
    <arg name='fieldTag' declared_type='DescType' type='L' type64='I'/>
    <arg name='fieldType' declared_type='DescType' type='L' type64='I'/>
    <arg name='maxRecordSize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='fieldAttributes' declared_type='DCMFieldAttributes' type='L' type64='I'/>
    <arg name='fieldDefaultData' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
    <arg name='numberOfFindMethods' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='findMethods' declared_type='DCMFindMethod*' type='^I'/>
    <arg name='fieldInfoRecord' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMDeleteDictionary'>
    <arg name='dictionaryID' declared_type='DCMDictionaryID' type='^{OpaqueDCMObjectID=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMDeleteRecord'>
    <arg name='dictionaryRef' declared_type='DCMDictionaryRef' type='^{OpaqueDCMObjectRef=}'/>
    <arg name='keyFieldTag' declared_type='DCMFieldTag' type='L' type64='I'/>
    <arg name='keySize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='keyData' declared_type='ConstLogicalAddress' type='^v'/>
    <arg name='uniqueID' declared_type='DCMUniqueID' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMDeriveNewDictionary'>
    <arg name='srcDictionary' declared_type='DCMDictionaryID' type='^{OpaqueDCMObjectID=}'/>
    <arg name='newDictionaryFile' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}' const='true'/>
    <arg name='scriptTag' declared_type='ScriptCode' type='s'/>
    <arg name='invisible' declared_type='Boolean' type='B'/>
    <arg name='recordCapacity' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='newDictionary' declared_type='DCMDictionaryID*' type='^^{OpaqueDCMObjectID}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMDisposeObjectIterator'>
    <arg name='iterator' declared_type='DCMObjectIterator' type='^{OpaqueDCMObjectIterator=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMDisposeRecordIterator'>
    <arg name='recordIterator' declared_type='DCMFoundRecordIterator' type='^{OpaqueDCMFoundRecordIterator=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMFindRecords'>
    <arg name='dictionaryRef' declared_type='DCMDictionaryRef' type='^{OpaqueDCMObjectRef=}'/>
    <arg name='keyFieldTag' declared_type='DCMFieldTag' type='L' type64='I'/>
    <arg name='keySize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='keyData' declared_type='ConstLogicalAddress' type='^v'/>
    <arg name='findMethod' declared_type='DCMFindMethod' type='L' type64='I'/>
    <arg name='preFetchedDataNum' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='preFetchedData' declared_type='DCMFieldTag*' type='^I'/>
    <arg name='skipCount' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='maxRecordCount' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='recordIterator' declared_type='DCMFoundRecordIterator*' type='^^{OpaqueDCMFoundRecordIterator}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMGetAccessMethodIDFromName'>
    <arg name='accessMethodName' declared_type='ConstStr63Param' type='*'/>
    <arg name='accessMethodID' declared_type='DCMAccessMethodID*' type='^^{OpaqueDCMObjectID}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMGetDictionaryFieldInfo'>
    <arg name='dictionaryID' declared_type='DCMDictionaryID' type='^{OpaqueDCMObjectID=}'/>
    <arg name='fieldTag' declared_type='DCMFieldTag' type='L' type64='I'/>
    <arg name='fieldInfoRecord' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMGetDictionaryIDFromFile'>
    <arg name='fileRef' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}' const='true'/>
    <arg name='dictionaryID' declared_type='DCMDictionaryID*' type='^^{OpaqueDCMObjectID}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMGetDictionaryIDFromRef'>
    <arg name='dictionaryRef' declared_type='DCMDictionaryRef' type='^{OpaqueDCMObjectRef=}'/>
    <retval declared_type='DCMDictionaryID' type='^{OpaqueDCMObjectID=}'/>
  </function>
  <function name='DCMGetDictionaryProperty'>
    <arg name='dictionaryID' declared_type='DCMDictionaryID' type='^{OpaqueDCMObjectID=}'/>
    <arg name='propertyTag' declared_type='DCMFieldTag' type='L' type64='I'/>
    <arg name='maxPropertySize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='actualSize' declared_type='ByteCount*' type='^I'/>
    <arg name='propertyValue' declared_type='LogicalAddress' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMGetDictionaryPropertyList'>
    <arg name='dictionaryID' declared_type='DCMDictionaryID' type='^{OpaqueDCMObjectID=}'/>
    <arg name='maxPropertyNum' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='numProperties' declared_type='ItemCount*' type='^I'/>
    <arg name='propertyTag' declared_type='DCMFieldTag*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMGetDictionaryWriteAccess'>
    <arg name='dictionaryRef' declared_type='DCMDictionaryRef' type='^{OpaqueDCMObjectRef=}'/>
    <arg name='timeOutDuration' declared_type='Duration' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMGetFieldAttributes'>
    <arg name='fieldInfoRecord' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
    <arg name='attributes' declared_type='DCMFieldAttributes*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMGetFieldData'>
    <arg name='dictionaryRef' declared_type='DCMDictionaryRef' type='^{OpaqueDCMObjectRef=}'/>
    <arg name='keyFieldTag' declared_type='DCMFieldTag' type='L' type64='I'/>
    <arg name='keySize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='keyData' declared_type='ConstLogicalAddress' type='^v'/>
    <arg name='uniqueID' declared_type='DCMUniqueID' type='L' type64='I'/>
    <arg name='numOfData' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='dataTag' declared_type='DCMFieldTag*' type='^I' const='true'/>
    <arg name='dataList' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMGetFieldDefaultData'>
    <arg name='fieldInfoRecord' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
    <arg name='desiredType' declared_type='DescType' type='L' type64='I'/>
    <arg name='fieldDefaultData' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMGetFieldFindMethods'>
    <arg name='fieldInfoRecord' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
    <arg name='findMethodsArrayMaxSize' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='findMethods' declared_type='DCMFindMethod*' type='^I'/>
    <arg name='actualNumberOfFindMethods' declared_type='ItemCount*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMGetFieldMaxRecordSize'>
    <arg name='fieldInfoRecord' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
    <arg name='maxRecordSize' declared_type='ByteCount*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMGetFieldTagAndType'>
    <arg name='fieldInfoRecord' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
    <arg name='fieldTag' declared_type='DCMFieldTag*' type='^I'/>
    <arg name='fieldType' declared_type='DCMFieldType*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMGetFileFromDictionaryID'>
    <arg name='dictionaryID' declared_type='DCMDictionaryID' type='^{OpaqueDCMObjectID=}'/>
    <arg name='fileRef' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMGetNextRecord'>
    <arg name='dictionaryRef' declared_type='DCMDictionaryRef' type='^{OpaqueDCMObjectRef=}'/>
    <arg name='keyFieldTag' declared_type='DCMFieldTag' type='L' type64='I'/>
    <arg name='keySize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='keyData' declared_type='ConstLogicalAddress' type='^v'/>
    <arg name='uniqueID' declared_type='DCMUniqueID' type='L' type64='I'/>
    <arg name='maxKeySize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='nextKeySize' declared_type='ByteCount*' type='^I'/>
    <arg name='nextKeyData' declared_type='LogicalAddress' type='^v'/>
    <arg name='nextUniqueID' declared_type='DCMUniqueID*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMGetNthRecord'>
    <arg name='dictionaryRef' declared_type='DCMDictionaryRef' type='^{OpaqueDCMObjectRef=}'/>
    <arg name='keyFieldTag' declared_type='DCMFieldTag' type='L' type64='I'/>
    <arg name='serialNum' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='maxKeySize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='keySize' declared_type='ByteCount*' type='^I'/>
    <arg name='keyData' declared_type='LogicalAddress' type='^v'/>
    <arg name='uniqueID' declared_type='DCMUniqueID*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMGetPrevRecord'>
    <arg name='dictionaryRef' declared_type='DCMDictionaryRef' type='^{OpaqueDCMObjectRef=}'/>
    <arg name='keyFieldTag' declared_type='DCMFieldTag' type='L' type64='I'/>
    <arg name='keySize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='keyData' declared_type='ConstLogicalAddress' type='^v'/>
    <arg name='uniqueID' declared_type='DCMUniqueID' type='L' type64='I'/>
    <arg name='maxKeySize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='prevKeySize' declared_type='ByteCount*' type='^I'/>
    <arg name='prevKeyData' declared_type='LogicalAddress' type='^v'/>
    <arg name='prevUniqueID' declared_type='DCMUniqueID*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMGetRecordSequenceNumber'>
    <arg name='dictionaryRef' declared_type='DCMDictionaryRef' type='^{OpaqueDCMObjectRef=}'/>
    <arg name='keyFieldTag' declared_type='DCMFieldTag' type='L' type64='I'/>
    <arg name='keySize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='keyData' declared_type='ConstLogicalAddress' type='^v'/>
    <arg name='uniqueID' declared_type='DCMUniqueID' type='L' type64='I'/>
    <arg name='sequenceNum' declared_type='ItemCount*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMIterateFoundRecord'>
    <arg name='recordIterator' declared_type='DCMFoundRecordIterator' type='^{OpaqueDCMFoundRecordIterator=}'/>
    <arg name='maxKeySize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='actualKeySize' declared_type='ByteCount*' type='^I'/>
    <arg name='keyData' declared_type='LogicalAddress' type='^v'/>
    <arg name='uniqueID' declared_type='DCMUniqueID*' type='^I'/>
    <arg name='dataList' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMIterateObject'>
    <arg name='iterator' declared_type='DCMObjectIterator' type='^{OpaqueDCMObjectIterator=}'/>
    <arg name='objectID' declared_type='DCMObjectID*' type='^^{OpaqueDCMObjectID}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMLibraryVersion'>
    <retval declared_type='UInt32' type='L' type64='I'/>
  </function>
  <function name='DCMNewDictionary'>
    <arg name='accessMethodID' declared_type='DCMAccessMethodID' type='^{OpaqueDCMObjectID=}'/>
    <arg name='newDictionaryFile' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}' const='true'/>
    <arg name='scriptTag' declared_type='ScriptCode' type='s'/>
    <arg name='listOfFieldInfoRecords' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
    <arg name='invisible' declared_type='Boolean' type='B'/>
    <arg name='recordCapacity' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='newDictionary' declared_type='DCMDictionaryID*' type='^^{OpaqueDCMObjectID}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMOpenDictionary'>
    <arg name='dictionaryID' declared_type='DCMDictionaryID' type='^{OpaqueDCMObjectID=}'/>
    <arg name='protectKeySize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='protectKey' declared_type='ConstLogicalAddress' type='^v'/>
    <arg name='dictionaryRef' declared_type='DCMDictionaryRef*' type='^^{OpaqueDCMObjectRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMRegisterDictionaryFile'>
    <arg name='dictionaryFile' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}' const='true'/>
    <arg name='dictionaryID' declared_type='DCMDictionaryID*' type='^^{OpaqueDCMObjectID}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMReleaseDictionaryWriteAccess'>
    <arg name='dictionaryRef' declared_type='DCMDictionaryRef' type='^{OpaqueDCMObjectRef=}'/>
    <arg name='commitTransaction' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMReorganizeDictionary'>
    <arg name='dictionaryID' declared_type='DCMDictionaryID' type='^{OpaqueDCMObjectID=}'/>
    <arg name='extraCapacity' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='progressProc' function_pointer='true' declared_type='DCMProgressFilterUPP' type='^?'>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='UInt16' type='S'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <arg name='userData' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMResetObjectIterator'>
    <arg name='iterator' declared_type='DCMObjectIterator' type='^{OpaqueDCMObjectIterator=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMSetDictionaryProperty'>
    <arg name='dictionaryID' declared_type='DCMDictionaryID' type='^{OpaqueDCMObjectID=}'/>
    <arg name='propertyTag' declared_type='DCMFieldTag' type='L' type64='I'/>
    <arg name='propertySize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='propertyValue' declared_type='ConstLogicalAddress' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMSetFieldData'>
    <arg name='dictionaryRef' declared_type='DCMDictionaryRef' type='^{OpaqueDCMObjectRef=}'/>
    <arg name='keyFieldTag' declared_type='DCMFieldTag' type='L' type64='I'/>
    <arg name='keySize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='keyData' declared_type='ConstLogicalAddress' type='^v'/>
    <arg name='uniqueID' declared_type='DCMUniqueID' type='L' type64='I'/>
    <arg name='dataList' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DCMUnregisterDictionary'>
    <arg name='dictionaryID' declared_type='DCMDictionaryID' type='^{OpaqueDCMObjectID=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='LAAddNewWord'>
    <arg name='environ' declared_type='LAEnvironmentRef' type='^{OpaqueLAEnvironmentRef=}'/>
    <arg name='dictionary' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}' const='true'/>
    <arg name='dataList' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='LACloseAnalysisContext'>
    <arg name='context' declared_type='LAContextRef' type='^{OpaqueLAContextRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='LACloseDictionary'>
    <arg name='environ' declared_type='LAEnvironmentRef' type='^{OpaqueLAEnvironmentRef=}'/>
    <arg name='dictionary' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='LAContinuousMorphemeAnalysis'>
    <arg name='context' declared_type='LAContextRef' type='^{OpaqueLAContextRef=}'/>
    <arg name='text' declared_type='ConstUniCharArrayPtr' type='^S'/>
    <arg name='textLength' declared_type='UniCharCount' type='L' type64='I'/>
    <arg name='incrementalText' declared_type='Boolean' type='B'/>
    <arg name='leadingPath' declared_type='LAMorphemePath*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
    <arg name='trailingPath' declared_type='LAMorphemePath*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
    <arg name='modified' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='LACreateCustomEnvironment'>
    <arg name='baseEnvironment' declared_type='LAEnvironmentRef' type='^{OpaqueLAEnvironmentRef=}'/>
    <arg name='newEnvironmentName' declared_type='ConstStr63Param' type='*'/>
    <arg name='persistent' declared_type='Boolean' type='B'/>
    <arg name='newEnvironment' declared_type='LAEnvironmentRef*' type='^^{OpaqueLAEnvironmentRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='LADeleteCustomEnvironment'>
    <arg name='environment' declared_type='LAEnvironmentRef' type='^{OpaqueLAEnvironmentRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='LAGetEnvironmentList'>
    <arg name='maxCount' declared_type='UInt32' type='L' type64='I'/>
    <arg name='actualCount' declared_type='UInt32*' type='^I'/>
    <arg name='environmentList' declared_type='LAEnvironmentRef*' type='^^{OpaqueLAEnvironmentRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='LAGetEnvironmentName'>
    <arg name='environment' declared_type='LAEnvironmentRef' type='^{OpaqueLAEnvironmentRef=}'/>
    <arg name='environmentName' declared_type='unsigned char*' type='*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='LAGetEnvironmentRef'>
    <arg name='targetEnvironmentName' declared_type='ConstStr63Param' type='*'/>
    <arg name='environment' declared_type='LAEnvironmentRef*' type='^^{OpaqueLAEnvironmentRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='LAGetMorphemes'>
    <arg name='context' declared_type='LAContextRef' type='^{OpaqueLAContextRef=}'/>
    <arg name='result' declared_type='LAMorphemePath*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='LALibraryVersion'>
    <retval declared_type='UInt32' type='L' type64='I'/>
  </function>
  <function name='LAListAvailableDictionaries'>
    <arg name='environ' declared_type='LAEnvironmentRef' type='^{OpaqueLAEnvironmentRef=}'/>
    <arg name='maxCount' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='actualCount' declared_type='ItemCount*' type='^I'/>
    <arg name='dictionaryList' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}'/>
    <arg name='opened' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='LAMorphemeAnalysis'>
    <arg name='context' declared_type='LAContextRef' type='^{OpaqueLAContextRef=}'/>
    <arg name='text' declared_type='ConstUniCharArrayPtr' type='^S'/>
    <arg name='textLength' declared_type='UniCharCount' type='L' type64='I'/>
    <arg name='leadingPath' declared_type='LAMorphemePath*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
    <arg name='trailingPath' declared_type='LAMorphemePath*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
    <arg name='pathCount' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='result' declared_type='LAMorphemeBundle*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='LAOpenAnalysisContext'>
    <arg name='environ' declared_type='LAEnvironmentRef' type='^{OpaqueLAEnvironmentRef=}'/>
    <arg name='context' declared_type='LAContextRef*' type='^^{OpaqueLAContextRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='LAOpenDictionary'>
    <arg name='environ' declared_type='LAEnvironmentRef' type='^{OpaqueLAEnvironmentRef=}'/>
    <arg name='dictionary' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='LAResetAnalysis'>
    <arg name='context' declared_type='LAContextRef' type='^{OpaqueLAContextRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='LAShiftMorphemes'>
    <arg name='context' declared_type='LAContextRef' type='^{OpaqueLAContextRef=}'/>
    <arg name='morphemeCount' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='path' declared_type='LAMorphemePath*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
    <arg name='shiftedLength' declared_type='UniCharCount*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='LATextToMorphemes'>
    <arg name='context' declared_type='LAContextRef' type='^{OpaqueLAContextRef=}'/>
    <arg name='preferedEncoding' declared_type='TextEncoding' type='L' type64='I'/>
    <arg name='textLength' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='sourceText' declared_type='ConstLogicalAddress' type='^v'/>
    <arg name='bufferSize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='convertFlags' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='structureVersion' declared_type='UInt32' type='L' type64='I'/>
    <arg name='acceptedLength' declared_type='ByteCount*' type='^I'/>
    <arg name='resultBuffer' declared_type='LAMorphemesArrayPtr' type='^{LAMorphemesArray=III[1{LAMorphemeRec=I^vI^vI}]}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
</signatures>
