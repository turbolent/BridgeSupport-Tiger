<?xml version='1.0'?>
<signatures version='1.0'>
  <depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
  <depends_on path='/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CarbonSound.framework'/>
  <depends_on path='/System/Library/Frameworks/IOKit.framework'/>
  <depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
  <depends_on path='/System/Library/Frameworks/Foundation.framework'/>
  <struct name='AlertStdAlertParamRec' type='{AlertStdAlertParamRec=&quot;movable&quot;B&quot;helpButton&quot;B&quot;filterProc&quot;^?&quot;defaultText&quot;*&quot;cancelText&quot;*&quot;otherText&quot;*&quot;defaultButton&quot;s&quot;cancelButton&quot;s&quot;position&quot;S}'>
    <field name='movable' declared_type='Boolean' type='B'/>
    <field name='helpButton' declared_type='Boolean' type='B'/>
    <field name='filterProc' function_pointer='true' declared_type='ModalFilterUPP' type='^?'>
      <arg declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='DialogItemIndex*' type='^s'/>
      <retval declared_type='Boolean' type='B'/>
    </field>
    <field name='defaultText' declared_type='ConstStringPtr' type='*'/>
    <field name='cancelText' declared_type='ConstStringPtr' type='*'/>
    <field name='otherText' declared_type='ConstStringPtr' type='*'/>
    <field name='defaultButton' declared_type='SInt16' type='s'/>
    <field name='cancelButton' declared_type='SInt16' type='s'/>
    <field name='position' declared_type='UInt16' type='S'/>
  </struct>
  <struct name='AlertStdCFStringAlertParamRec' type='{AlertStdCFStringAlertParamRec=&quot;version&quot;I&quot;movable&quot;B&quot;helpButton&quot;B&quot;defaultText&quot;^{__CFString}&quot;cancelText&quot;^{__CFString}&quot;otherText&quot;^{__CFString}&quot;defaultButton&quot;s&quot;cancelButton&quot;s&quot;position&quot;S&quot;flags&quot;I}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='movable' declared_type='Boolean' type='B'/>
    <field name='helpButton' declared_type='Boolean' type='B'/>
    <field name='defaultText' declared_type='CFStringRef' type='^{__CFString=}'/>
    <field name='cancelText' declared_type='CFStringRef' type='^{__CFString=}'/>
    <field name='otherText' declared_type='CFStringRef' type='^{__CFString=}'/>
    <field name='defaultButton' declared_type='SInt16' type='s'/>
    <field name='cancelButton' declared_type='SInt16' type='s'/>
    <field name='position' declared_type='UInt16' type='S'/>
    <field name='flags' declared_type='OptionBits' type='L' type64='I'/>
  </struct>
  <struct name='AlertTemplate' type='{AlertTemplate=&quot;boundsRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;itemsID&quot;s&quot;stages&quot;s}'>
    <field name='boundsRect' declared_type='Rect' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
    <field name='itemsID' declared_type='SInt16' type='s'/>
    <field name='stages' declared_type='StageList' type='s'/>
  </struct>
  <struct name='BasicWindowDescription' type='{BasicWindowDescription=&quot;descriptionSize&quot;I&quot;windowContentRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;windowZoomRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;windowRefCon&quot;I&quot;windowStateFlags&quot;I&quot;windowPositionMethod&quot;I&quot;windowDefinitionVersion&quot;I&quot;windowDefinition&quot;(?=&quot;versionOne&quot;{?=&quot;windowDefProc&quot;s&quot;windowHasCloseBox&quot;B}&quot;versionTwo&quot;{?=&quot;windowClass&quot;I&quot;windowAttributes&quot;I})}'>
    <field name='descriptionSize' declared_type='UInt32' type='L' type64='I'/>
    <field name='windowContentRect' declared_type='Rect' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
    <field name='windowZoomRect' declared_type='Rect' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
    <field name='windowRefCon' declared_type='UInt32' type='L' type64='I'/>
    <field name='windowStateFlags' declared_type='UInt32' type='L' type64='I'/>
    <field name='windowPositionMethod' declared_type='WindowPositionMethod' type='L' type64='I'/>
    <field name='windowDefinitionVersion' declared_type='UInt32' type='L' type64='I'/>
    <field name='windowDefinition' declared_type='union BasicWindowDescription::' type='(?=&quot;versionOne&quot;{?=&quot;windowDefProc&quot;s&quot;windowHasCloseBox&quot;B}&quot;versionTwo&quot;{?=&quot;windowClass&quot;I&quot;windowAttributes&quot;I})'/>
  </struct>
  <struct name='Cell' type='{Point=&quot;v&quot;s&quot;h&quot;s}'>
    <field name='v' declared_type='short' type='s'/>
    <field name='h' declared_type='short' type='s'/>
  </struct>
  <struct name='ContextualMenuInterfaceStruct' type='{ContextualMenuInterfaceStruct=&quot;_reserved&quot;^v&quot;QueryInterface&quot;^?&quot;AddRef&quot;^?&quot;Release&quot;^?&quot;ExamineContext&quot;^?&quot;HandleSelection&quot;^?&quot;PostMenuCleanup&quot;^?}'>
    <field name='_reserved' declared_type='void*' type='^v'/>
    <field name='QueryInterface' function_pointer='true' declared_type='SInt32 (*)(void *, CFUUIDBytes, void **)' type='^?'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='CFUUIDBytes' type='{_CFUUIDBytes=CCCCCCCCCCCCCCCC}'/>
      <arg declared_type='void**' type='^^v'/>
      <retval declared_type='SInt32' type='l' type64='i'/>
    </field>
    <field name='AddRef' function_pointer='true' declared_type='UInt32 (*)(void *)' type='^?'>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='UInt32' type='L' type64='I'/>
    </field>
    <field name='Release' function_pointer='true' declared_type='UInt32 (*)(void *)' type='^?'>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='UInt32' type='L' type64='I'/>
    </field>
    <field name='ExamineContext' function_pointer='true' declared_type='OSStatus (*)(void *, AEDesc *, AEDescList *)' type='^?'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
      <arg declared_type='AEDescList*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='HandleSelection' function_pointer='true' declared_type='OSStatus (*)(void *, AEDesc *, SInt32)' type='^?'>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='PostMenuCleanup' function_pointer='true' declared_type='void (*)(void *)' type='^?'>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </field>
  </struct>
  <struct name='ControlApplyTextColorRec' type='{ControlApplyTextColorRec=&quot;depth&quot;s&quot;colorDevice&quot;B&quot;active&quot;B}'>
    <field name='depth' declared_type='SInt16' type='s'/>
    <field name='colorDevice' declared_type='Boolean' type='B'/>
    <field name='active' declared_type='Boolean' type='B'/>
  </struct>
  <struct name='ControlBackgroundRec' type='{ControlBackgroundRec=&quot;depth&quot;s&quot;colorDevice&quot;B}'>
    <field name='depth' declared_type='SInt16' type='s'/>
    <field name='colorDevice' declared_type='Boolean' type='B'/>
  </struct>
  <struct name='ControlButtonContentInfo' type='{ControlButtonContentInfo=&quot;contentType&quot;s&quot;u&quot;(?=&quot;resID&quot;s&quot;cIconHandle&quot;^^{CIcon}&quot;iconSuite&quot;^*&quot;iconRef&quot;^{OpaqueIconRef}&quot;picture&quot;^^{Picture}&quot;ICONHandle&quot;^*&quot;imageRef&quot;^{CGImage})}'>
    <field name='contentType' declared_type='ControlContentType' type='s'/>
    <field name='u' declared_type='union ControlButtonContentInfo::' type='(?=&quot;resID&quot;s&quot;cIconHandle&quot;^^{CIcon}&quot;iconSuite&quot;^*&quot;iconRef&quot;^{OpaqueIconRef}&quot;picture&quot;^^{Picture}&quot;ICONHandle&quot;^*&quot;imageRef&quot;^{CGImage})'/>
  </struct>
  <struct name='ControlCalcSizeRec' type='{ControlCalcSizeRec=&quot;height&quot;s&quot;width&quot;s&quot;baseLine&quot;s}'>
    <field name='height' declared_type='SInt16' type='s'/>
    <field name='width' declared_type='SInt16' type='s'/>
    <field name='baseLine' declared_type='SInt16' type='s'/>
  </struct>
  <struct name='ControlClickActivationRec' type='{ControlClickActivationRec=&quot;localPoint&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;modifiers&quot;S&quot;result&quot;I}'>
    <field name='localPoint' declared_type='Point' type='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
    <field name='modifiers' declared_type='EventModifiers' type='S'/>
    <field name='result' declared_type='ClickActivationResult' type='L' type64='I'/>
  </struct>
  <struct name='ControlContextualMenuClickRec' type='{ControlContextualMenuClickRec=&quot;localPoint&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;menuDisplayed&quot;B}'>
    <field name='localPoint' declared_type='Point' type='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
    <field name='menuDisplayed' declared_type='Boolean' type='B'/>
  </struct>
  <struct name='ControlDataAccessRec' type='{ControlDataAccessRec=&quot;tag&quot;I&quot;part&quot;I&quot;size&quot;i&quot;dataPtr&quot;*}' type64='{ControlDataAccessRec=&quot;tag&quot;I&quot;part&quot;I&quot;size&quot;q&quot;dataPtr&quot;*}'>
    <field name='tag' declared_type='ResType' type='L' type64='I'/>
    <field name='part' declared_type='ResType' type='L' type64='I'/>
    <field name='size' declared_type='Size' type='l' type64='q'/>
    <field name='dataPtr' declared_type='Ptr' type='*'/>
  </struct>
  <struct name='ControlDefSpec' type='{ControlDefSpec=&quot;defType&quot;I&quot;u&quot;(?=&quot;defProc&quot;^?&quot;classRef&quot;^v)}'>
    <field name='defType' declared_type='ControlDefType' type='L' type64='I'/>
    <field name='u' declared_type='union ControlDefSpec::' type='(?=&quot;defProc&quot;^?&quot;classRef&quot;^v)'/>
  </struct>
  <struct name='ControlEditTextSelectionRec' type='{ControlEditTextSelectionRec=&quot;selStart&quot;s&quot;selEnd&quot;s}'>
    <field name='selStart' declared_type='SInt16' type='s'/>
    <field name='selEnd' declared_type='SInt16' type='s'/>
  </struct>
  <struct name='ControlFontStyleRec' type='{ControlFontStyleRec=&quot;flags&quot;s&quot;font&quot;s&quot;size&quot;s&quot;style&quot;s&quot;mode&quot;s&quot;just&quot;s&quot;foreColor&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;backColor&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}'>
    <field name='flags' declared_type='SInt16' type='s'/>
    <field name='font' declared_type='SInt16' type='s'/>
    <field name='size' declared_type='SInt16' type='s'/>
    <field name='style' declared_type='SInt16' type='s'/>
    <field name='mode' declared_type='SInt16' type='s'/>
    <field name='just' declared_type='SInt16' type='s'/>
    <field name='foreColor' declared_type='RGBColor' type='{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}'/>
    <field name='backColor' declared_type='RGBColor' type='{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}'/>
  </struct>
  <struct name='ControlGetRegionRec' type='{ControlGetRegionRec=&quot;region&quot;^{OpaqueRgnHandle}&quot;part&quot;s}'>
    <field name='region' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <field name='part' declared_type='ControlPartCode' type='s'/>
  </struct>
  <struct name='ControlID' type='{ControlID=&quot;signature&quot;I&quot;id&quot;i}'>
    <field name='signature' declared_type='OSType' type='L' type64='I'/>
    <field name='id' declared_type='SInt32' type='l' type64='i'/>
  </struct>
  <struct name='ControlImageContentInfo' type='{ControlButtonContentInfo=&quot;contentType&quot;s&quot;u&quot;(?=&quot;resID&quot;s&quot;cIconHandle&quot;^^{CIcon}&quot;iconSuite&quot;^*&quot;iconRef&quot;^{OpaqueIconRef}&quot;picture&quot;^^{Picture}&quot;ICONHandle&quot;^*&quot;imageRef&quot;^{CGImage})}'>
    <field name='contentType' declared_type='ControlContentType' type='s'/>
    <field name='u' declared_type='union ControlButtonContentInfo::' type='(?=&quot;resID&quot;s&quot;cIconHandle&quot;^^{CIcon}&quot;iconSuite&quot;^*&quot;iconRef&quot;^{OpaqueIconRef}&quot;picture&quot;^^{Picture}&quot;ICONHandle&quot;^*&quot;imageRef&quot;^{CGImage})'/>
  </struct>
  <struct name='ControlKeyDownRec' type='{ControlKeyDownRec=&quot;modifiers&quot;S&quot;keyCode&quot;s&quot;charCode&quot;s}'>
    <field name='modifiers' declared_type='EventModifiers' type='S'/>
    <field name='keyCode' declared_type='SInt16' type='s'/>
    <field name='charCode' declared_type='SInt16' type='s'/>
  </struct>
  <struct name='ControlKind' type='{ControlKind=&quot;signature&quot;I&quot;kind&quot;I}'>
    <field name='signature' declared_type='OSType' type='L' type64='I'/>
    <field name='kind' declared_type='OSType' type='L' type64='I'/>
  </struct>
  <struct name='ControlSetCursorRec' type='{ControlSetCursorRec=&quot;localPoint&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;modifiers&quot;S&quot;cursorWasSet&quot;B}'>
    <field name='localPoint' declared_type='Point' type='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
    <field name='modifiers' declared_type='EventModifiers' type='S'/>
    <field name='cursorWasSet' declared_type='Boolean' type='B'/>
  </struct>
  <struct name='ControlTabEntry' type='{ControlTabEntry=&quot;icon&quot;^{ControlButtonContentInfo}&quot;name&quot;^{__CFString}&quot;enabled&quot;B}'>
    <field name='icon' declared_type='ControlButtonContentInfo*' type='^{ControlButtonContentInfo=s(?=s^^{CIcon}^*^{OpaqueIconRef}^^{Picture}^*^{CGImage})}'/>
    <field name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
    <field name='enabled' declared_type='Boolean' type='B'/>
  </struct>
  <struct name='ControlTabInfoRec' type='{ControlTabInfoRec=&quot;version&quot;s&quot;iconSuiteID&quot;s&quot;name&quot;[256C]}'>
    <field name='version' declared_type='SInt16' type='s'/>
    <field name='iconSuiteID' declared_type='SInt16' type='s'/>
    <field name='name' declared_type='Str255' type='[256C]'/>
  </struct>
  <struct name='ControlTabInfoRecV1' type='{ControlTabInfoRecV1=&quot;version&quot;s&quot;iconSuiteID&quot;s&quot;name&quot;^{__CFString}}'>
    <field name='version' declared_type='SInt16' type='s'/>
    <field name='iconSuiteID' declared_type='SInt16' type='s'/>
    <field name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
  </struct>
  <struct name='ControlTemplate' type='{ControlTemplate=&quot;controlRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;controlValue&quot;s&quot;controlVisible&quot;B&quot;fill&quot;C&quot;controlMaximum&quot;s&quot;controlMinimum&quot;s&quot;controlDefProcID&quot;s&quot;controlReference&quot;i&quot;controlTitle&quot;[256C]}'>
    <field name='controlRect' declared_type='Rect' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
    <field name='controlValue' declared_type='SInt16' type='s'/>
    <field name='controlVisible' declared_type='Boolean' type='B'/>
    <field name='fill' declared_type='UInt8' type='C'/>
    <field name='controlMaximum' declared_type='SInt16' type='s'/>
    <field name='controlMinimum' declared_type='SInt16' type='s'/>
    <field name='controlDefProcID' declared_type='SInt16' type='s'/>
    <field name='controlReference' declared_type='SInt32' type='l' type64='i'/>
    <field name='controlTitle' declared_type='Str255' type='[256C]'/>
  </struct>
  <struct name='ControlTrackingRec' type='{ControlTrackingRec=&quot;startPt&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;modifiers&quot;S&quot;action&quot;^?}'>
    <field name='startPt' declared_type='Point' type='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
    <field name='modifiers' declared_type='EventModifiers' type='S'/>
    <field name='action' function_pointer='true' declared_type='ControlActionUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlPartCode' type='s'/>
      <retval declared_type='void' type='v'/>
    </field>
  </struct>
  <struct name='CtlCTab' type='{CtlCTab=&quot;ccSeed&quot;i&quot;ccRider&quot;s&quot;ctSize&quot;s&quot;ctTable&quot;[4{ColorSpec=&quot;value&quot;s&quot;rgb&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}]}'>
    <field name='ccSeed' declared_type='SInt32' type='l' type64='i'/>
    <field name='ccRider' declared_type='SInt16' type='s'/>
    <field name='ctSize' declared_type='SInt16' type='s'/>
    <field name='ctTable' declared_type='ColorSpec*' type='[4{ColorSpec=&quot;value&quot;s&quot;rgb&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}]'/>
  </struct>
  <struct name='DataBrowserAccessibilityItemInfo' type='{DataBrowserAccessibilityItemInfo=&quot;version&quot;I&quot;u&quot;(?=&quot;v0&quot;{DataBrowserAccessibilityItemInfoV0=&quot;container&quot;I&quot;item&quot;I&quot;columnProperty&quot;I&quot;propertyPart&quot;I}&quot;v1&quot;{DataBrowserAccessibilityItemInfoV1=&quot;container&quot;I&quot;item&quot;I&quot;columnProperty&quot;I&quot;propertyPart&quot;I&quot;rowIndex&quot;I&quot;columnIndex&quot;I})}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='u' declared_type='union DataBrowserAccessibilityItemInfo::' type='(?=&quot;v0&quot;{DataBrowserAccessibilityItemInfoV0=&quot;container&quot;I&quot;item&quot;I&quot;columnProperty&quot;I&quot;propertyPart&quot;I}&quot;v1&quot;{DataBrowserAccessibilityItemInfoV1=&quot;container&quot;I&quot;item&quot;I&quot;columnProperty&quot;I&quot;propertyPart&quot;I&quot;rowIndex&quot;I&quot;columnIndex&quot;I})'/>
  </struct>
  <struct name='DataBrowserAccessibilityItemInfoV0' type='{DataBrowserAccessibilityItemInfoV0=&quot;container&quot;I&quot;item&quot;I&quot;columnProperty&quot;I&quot;propertyPart&quot;I}'>
    <field name='container' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <field name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <field name='columnProperty' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <field name='propertyPart' declared_type='DataBrowserPropertyPart' type='L' type64='I'/>
  </struct>
  <struct name='DataBrowserAccessibilityItemInfoV1' type='{DataBrowserAccessibilityItemInfoV1=&quot;container&quot;I&quot;item&quot;I&quot;columnProperty&quot;I&quot;propertyPart&quot;I&quot;rowIndex&quot;I&quot;columnIndex&quot;I}'>
    <field name='container' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <field name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <field name='columnProperty' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <field name='propertyPart' declared_type='DataBrowserPropertyPart' type='L' type64='I'/>
    <field name='rowIndex' declared_type='DataBrowserTableViewRowIndex' type='L' type64='I'/>
    <field name='columnIndex' declared_type='DataBrowserTableViewColumnIndex' type='L' type64='I'/>
  </struct>
  <struct name='DataBrowserCallbacks' type='{DataBrowserCallbacks=&quot;version&quot;I&quot;u&quot;(?=&quot;v1&quot;{?=&quot;itemDataCallback&quot;^?&quot;itemCompareCallback&quot;^?&quot;itemNotificationCallback&quot;^?&quot;addDragItemCallback&quot;^?&quot;acceptDragCallback&quot;^?&quot;receiveDragCallback&quot;^?&quot;postProcessDragCallback&quot;^?&quot;itemHelpContentCallback&quot;^?&quot;getContextualMenuCallback&quot;^?&quot;selectContextualMenuCallback&quot;^?})}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='u' declared_type='union DataBrowserCallbacks::' type='(?=&quot;v1&quot;{?=&quot;itemDataCallback&quot;^?&quot;itemCompareCallback&quot;^?&quot;itemNotificationCallback&quot;^?&quot;addDragItemCallback&quot;^?&quot;acceptDragCallback&quot;^?&quot;receiveDragCallback&quot;^?&quot;postProcessDragCallback&quot;^?&quot;itemHelpContentCallback&quot;^?&quot;getContextualMenuCallback&quot;^?&quot;selectContextualMenuCallback&quot;^?})'/>
  </struct>
  <struct name='DataBrowserCustomCallbacks' type='{DataBrowserCustomCallbacks=&quot;version&quot;I&quot;u&quot;(?=&quot;v1&quot;{?=&quot;drawItemCallback&quot;^?&quot;editTextCallback&quot;^?&quot;hitTestCallback&quot;^?&quot;trackingCallback&quot;^?&quot;dragRegionCallback&quot;^?&quot;acceptDragCallback&quot;^?&quot;receiveDragCallback&quot;^?})}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='u' declared_type='union DataBrowserCustomCallbacks::' type='(?=&quot;v1&quot;{?=&quot;drawItemCallback&quot;^?&quot;editTextCallback&quot;^?&quot;hitTestCallback&quot;^?&quot;trackingCallback&quot;^?&quot;dragRegionCallback&quot;^?&quot;acceptDragCallback&quot;^?&quot;receiveDragCallback&quot;^?})'/>
  </struct>
  <struct name='DataBrowserListViewColumnDesc' type='{DataBrowserListViewColumnDesc=&quot;propertyDesc&quot;{DataBrowserPropertyDesc=&quot;propertyID&quot;I&quot;propertyType&quot;I&quot;propertyFlags&quot;I}&quot;headerBtnDesc&quot;{DataBrowserListViewHeaderDesc=&quot;version&quot;I&quot;minimumWidth&quot;S&quot;maximumWidth&quot;S&quot;titleOffset&quot;s&quot;titleString&quot;^{__CFString}&quot;initialOrder&quot;S&quot;btnFontStyle&quot;{ControlFontStyleRec=&quot;flags&quot;s&quot;font&quot;s&quot;size&quot;s&quot;style&quot;s&quot;mode&quot;s&quot;just&quot;s&quot;foreColor&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;backColor&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}&quot;btnContentInfo&quot;{ControlButtonContentInfo=&quot;contentType&quot;s&quot;u&quot;(?=&quot;resID&quot;s&quot;cIconHandle&quot;^^{CIcon}&quot;iconSuite&quot;^*&quot;iconRef&quot;^{OpaqueIconRef}&quot;picture&quot;^^{Picture}&quot;ICONHandle&quot;^*&quot;imageRef&quot;^{CGImage})}}}' type64='{DataBrowserListViewColumnDesc=&quot;propertyDesc&quot;{DataBrowserPropertyDesc=&quot;propertyID&quot;I&quot;propertyType&quot;I&quot;propertyFlags&quot;Q}&quot;headerBtnDesc&quot;{DataBrowserListViewHeaderDesc=&quot;version&quot;I&quot;minimumWidth&quot;S&quot;maximumWidth&quot;S&quot;titleOffset&quot;s&quot;titleString&quot;^{__CFString}&quot;initialOrder&quot;S&quot;btnFontStyle&quot;{ControlFontStyleRec=&quot;flags&quot;s&quot;font&quot;s&quot;size&quot;s&quot;style&quot;s&quot;mode&quot;s&quot;just&quot;s&quot;foreColor&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;backColor&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}&quot;btnContentInfo&quot;{ControlButtonContentInfo=&quot;contentType&quot;s&quot;u&quot;(?=&quot;resID&quot;s&quot;cIconHandle&quot;^^{CIcon}&quot;iconSuite&quot;^*&quot;iconRef&quot;^{OpaqueIconRef}&quot;picture&quot;^^{Picture}&quot;ICONHandle&quot;^*&quot;imageRef&quot;^{CGImage})}}}'>
    <field name='propertyDesc' declared_type='DataBrowserTableViewColumnDesc' type='{DataBrowserPropertyDesc=&quot;propertyID&quot;I&quot;propertyType&quot;I&quot;propertyFlags&quot;I}' type64='{DataBrowserPropertyDesc=&quot;propertyID&quot;I&quot;propertyType&quot;I&quot;propertyFlags&quot;Q}'/>
    <field name='headerBtnDesc' declared_type='DataBrowserListViewHeaderDesc' type='{DataBrowserListViewHeaderDesc=&quot;version&quot;I&quot;minimumWidth&quot;S&quot;maximumWidth&quot;S&quot;titleOffset&quot;s&quot;titleString&quot;^{__CFString}&quot;initialOrder&quot;S&quot;btnFontStyle&quot;{ControlFontStyleRec=&quot;flags&quot;s&quot;font&quot;s&quot;size&quot;s&quot;style&quot;s&quot;mode&quot;s&quot;just&quot;s&quot;foreColor&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;backColor&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}&quot;btnContentInfo&quot;{ControlButtonContentInfo=&quot;contentType&quot;s&quot;u&quot;(?=&quot;resID&quot;s&quot;cIconHandle&quot;^^{CIcon}&quot;iconSuite&quot;^*&quot;iconRef&quot;^{OpaqueIconRef}&quot;picture&quot;^^{Picture}&quot;ICONHandle&quot;^*&quot;imageRef&quot;^{CGImage})}}'/>
  </struct>
  <struct name='DataBrowserListViewHeaderDesc' type='{DataBrowserListViewHeaderDesc=&quot;version&quot;I&quot;minimumWidth&quot;S&quot;maximumWidth&quot;S&quot;titleOffset&quot;s&quot;titleString&quot;^{__CFString}&quot;initialOrder&quot;S&quot;btnFontStyle&quot;{ControlFontStyleRec=&quot;flags&quot;s&quot;font&quot;s&quot;size&quot;s&quot;style&quot;s&quot;mode&quot;s&quot;just&quot;s&quot;foreColor&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;backColor&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}&quot;btnContentInfo&quot;{ControlButtonContentInfo=&quot;contentType&quot;s&quot;u&quot;(?=&quot;resID&quot;s&quot;cIconHandle&quot;^^{CIcon}&quot;iconSuite&quot;^*&quot;iconRef&quot;^{OpaqueIconRef}&quot;picture&quot;^^{Picture}&quot;ICONHandle&quot;^*&quot;imageRef&quot;^{CGImage})}}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='minimumWidth' declared_type='UInt16' type='S'/>
    <field name='maximumWidth' declared_type='UInt16' type='S'/>
    <field name='titleOffset' declared_type='SInt16' type='s'/>
    <field name='titleString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <field name='initialOrder' declared_type='DataBrowserSortOrder' type='S'/>
    <field name='btnFontStyle' declared_type='ControlFontStyleRec' type='{ControlFontStyleRec=&quot;flags&quot;s&quot;font&quot;s&quot;size&quot;s&quot;style&quot;s&quot;mode&quot;s&quot;just&quot;s&quot;foreColor&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;backColor&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}'/>
    <field name='btnContentInfo' declared_type='ControlButtonContentInfo' type='{ControlButtonContentInfo=&quot;contentType&quot;s&quot;u&quot;(?=&quot;resID&quot;s&quot;cIconHandle&quot;^^{CIcon}&quot;iconSuite&quot;^*&quot;iconRef&quot;^{OpaqueIconRef}&quot;picture&quot;^^{Picture}&quot;ICONHandle&quot;^*&quot;imageRef&quot;^{CGImage})}'/>
  </struct>
  <struct name='DataBrowserPropertyDesc' type='{DataBrowserPropertyDesc=&quot;propertyID&quot;I&quot;propertyType&quot;I&quot;propertyFlags&quot;I}' type64='{DataBrowserPropertyDesc=&quot;propertyID&quot;I&quot;propertyType&quot;I&quot;propertyFlags&quot;Q}'>
    <field name='propertyID' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <field name='propertyType' declared_type='DataBrowserPropertyType' type='L' type64='I'/>
    <field name='propertyFlags' declared_type='DataBrowserPropertyFlags' type='L' type64='Q'/>
  </struct>
  <struct name='DataBrowserTableViewColumnDesc' type='{DataBrowserPropertyDesc=&quot;propertyID&quot;I&quot;propertyType&quot;I&quot;propertyFlags&quot;I}' type64='{DataBrowserPropertyDesc=&quot;propertyID&quot;I&quot;propertyType&quot;I&quot;propertyFlags&quot;Q}'>
    <field name='propertyID' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <field name='propertyType' declared_type='DataBrowserPropertyType' type='L' type64='I'/>
    <field name='propertyFlags' declared_type='DataBrowserPropertyFlags' type='L' type64='Q'/>
  </struct>
  <struct name='DialogTemplate' type='{DialogTemplate=&quot;boundsRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;procID&quot;s&quot;visible&quot;B&quot;filler1&quot;B&quot;goAwayFlag&quot;B&quot;filler2&quot;B&quot;refCon&quot;i&quot;itemsID&quot;s&quot;title&quot;[256C]}'>
    <field name='boundsRect' declared_type='Rect' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
    <field name='procID' declared_type='SInt16' type='s'/>
    <field name='visible' declared_type='Boolean' type='B'/>
    <field name='filler1' declared_type='Boolean' type='B'/>
    <field name='goAwayFlag' declared_type='Boolean' type='B'/>
    <field name='filler2' declared_type='Boolean' type='B'/>
    <field name='refCon' declared_type='SInt32' type='l' type64='i'/>
    <field name='itemsID' declared_type='SInt16' type='s'/>
    <field name='title' declared_type='Str255' type='[256C]'/>
  </struct>
  <struct name='EvQEl' type='{EvQEl=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;evtQWhat&quot;S&quot;evtQMessage&quot;I&quot;evtQWhen&quot;I&quot;evtQWhere&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;evtQModifiers&quot;S}'>
    <field name='qLink' declared_type='QElemPtr' type='^{QElem=^{QElem}s[1s]}'/>
    <field name='qType' declared_type='SInt16' type='s'/>
    <field name='evtQWhat' declared_type='EventKind' type='S'/>
    <field name='evtQMessage' declared_type='UInt32' type='L' type64='I'/>
    <field name='evtQWhen' declared_type='UInt32' type='L' type64='I'/>
    <field name='evtQWhere' declared_type='Point' type='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
    <field name='evtQModifiers' declared_type='EventModifiers' type='S'/>
  </struct>
  <struct name='EventHotKeyID' type='{EventHotKeyID=&quot;signature&quot;I&quot;id&quot;I}'>
    <field name='signature' declared_type='OSType' type='L' type64='I'/>
    <field name='id' declared_type='UInt32' type='L' type64='I'/>
  </struct>
  <struct name='EventRecord' type='{EventRecord=&quot;what&quot;S&quot;message&quot;I&quot;when&quot;I&quot;where&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;modifiers&quot;S}'>
    <field name='what' declared_type='EventKind' type='S'/>
    <field name='message' declared_type='UInt32' type='L' type64='I'/>
    <field name='when' declared_type='UInt32' type='L' type64='I'/>
    <field name='where' declared_type='Point' type='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
    <field name='modifiers' declared_type='EventModifiers' type='S'/>
  </struct>
  <struct name='EventTypeSpec' type='{EventTypeSpec=&quot;eventClass&quot;I&quot;eventKind&quot;I}'>
    <field name='eventClass' declared_type='UInt32' type='L' type64='I'/>
    <field name='eventKind' declared_type='UInt32' type='L' type64='I'/>
  </struct>
  <struct name='FileTranslationList' type='{FileTranslationList=&quot;modDate&quot;L&quot;groupCount&quot;L}' type64='{FileTranslationList=&quot;modDate&quot;Q&quot;groupCount&quot;Q}'>
    <field name='modDate' declared_type='unsigned long' type='L' type64='Q'/>
    <field name='groupCount' declared_type='unsigned long' type='L' type64='Q'/>
  </struct>
  <struct name='FileTranslationSpec' type='{FileTranslationSpec=&quot;componentSignature&quot;I&quot;translationSystemInfo&quot;^v&quot;src&quot;{FileTypeSpec=&quot;format&quot;I&quot;hint&quot;l&quot;flags&quot;I&quot;catInfoType&quot;I&quot;catInfoCreator&quot;I}&quot;dst&quot;{FileTypeSpec=&quot;format&quot;I&quot;hint&quot;l&quot;flags&quot;I&quot;catInfoType&quot;I&quot;catInfoCreator&quot;I}}' type64='{FileTranslationSpec=&quot;componentSignature&quot;I&quot;translationSystemInfo&quot;^v&quot;src&quot;{FileTypeSpec=&quot;format&quot;I&quot;hint&quot;q&quot;flags&quot;I&quot;catInfoType&quot;I&quot;catInfoCreator&quot;I}&quot;dst&quot;{FileTypeSpec=&quot;format&quot;I&quot;hint&quot;q&quot;flags&quot;I&quot;catInfoType&quot;I&quot;catInfoCreator&quot;I}}'>
    <field name='componentSignature' declared_type='OSType' type='L' type64='I'/>
    <field name='translationSystemInfo' declared_type='void*' type='^v' const='true'/>
    <field name='src' declared_type='FileTypeSpec' type='{FileTypeSpec=&quot;format&quot;I&quot;hint&quot;l&quot;flags&quot;I&quot;catInfoType&quot;I&quot;catInfoCreator&quot;I}' type64='{FileTypeSpec=&quot;format&quot;I&quot;hint&quot;q&quot;flags&quot;I&quot;catInfoType&quot;I&quot;catInfoCreator&quot;I}'/>
    <field name='dst' declared_type='FileTypeSpec' type='{FileTypeSpec=&quot;format&quot;I&quot;hint&quot;l&quot;flags&quot;I&quot;catInfoType&quot;I&quot;catInfoCreator&quot;I}' type64='{FileTypeSpec=&quot;format&quot;I&quot;hint&quot;q&quot;flags&quot;I&quot;catInfoType&quot;I&quot;catInfoCreator&quot;I}'/>
  </struct>
  <struct name='FileTypeSpec' type='{FileTypeSpec=&quot;format&quot;I&quot;hint&quot;l&quot;flags&quot;I&quot;catInfoType&quot;I&quot;catInfoCreator&quot;I}' type64='{FileTypeSpec=&quot;format&quot;I&quot;hint&quot;q&quot;flags&quot;I&quot;catInfoType&quot;I&quot;catInfoCreator&quot;I}'>
    <field name='format' declared_type='FileType' type='L' type64='I'/>
    <field name='hint' declared_type='long' type='l' type64='q'/>
    <field name='flags' declared_type='TranslationAttributes' type='L' type64='I'/>
    <field name='catInfoType' declared_type='OSType' type='L' type64='I'/>
    <field name='catInfoCreator' declared_type='OSType' type='L' type64='I'/>
  </struct>
  <struct name='GetGrowImageRegionRec' type='{GetGrowImageRegionRec=&quot;growRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;growImageRegion&quot;^{OpaqueRgnHandle}}'>
    <field name='growRect' declared_type='Rect' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
    <field name='growImageRegion' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
  </struct>
  <struct name='GetWindowRegionRec' type='{GetWindowRegionRec=&quot;winRgn&quot;^{OpaqueRgnHandle}&quot;regionCode&quot;S}'>
    <field name='winRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <field name='regionCode' declared_type='WindowRegionCode' type='S'/>
  </struct>
  <struct name='HFSFlavor' type='{HFSFlavor=&quot;fileType&quot;I&quot;fileCreator&quot;I&quot;fdFlags&quot;S&quot;fileSpec&quot;{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;l&quot;name&quot;[64C]}}' type64='{HFSFlavor=&quot;fileType&quot;I&quot;fileCreator&quot;I&quot;fdFlags&quot;S&quot;fileSpec&quot;{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;q&quot;name&quot;[64C]}}'>
    <field name='fileType' declared_type='OSType' type='L' type64='I'/>
    <field name='fileCreator' declared_type='OSType' type='L' type64='I'/>
    <field name='fdFlags' declared_type='UInt16' type='S'/>
    <field name='fileSpec' declared_type='FSSpec' type='{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;l&quot;name&quot;[64C]}' type64='{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;q&quot;name&quot;[64C]}'/>
  </struct>
  <struct name='HIAxisPosition' type='{HIAxisPosition=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}'>
    <field name='toView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <field name='kind' declared_type='HIPositionKind' type='S'/>
    <field name='offset' declared_type='float' type='f'/>
  </struct>
  <struct name='HIAxisScale' type='{HIAxisScale=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;ratio&quot;f}'>
    <field name='toView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <field name='kind' declared_type='HIScaleKind' type='S'/>
    <field name='ratio' declared_type='float' type='f'/>
  </struct>
  <struct name='HIBinding' type='{HIBinding=&quot;top&quot;{HISideBinding=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}&quot;left&quot;{HISideBinding=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}&quot;bottom&quot;{HISideBinding=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}&quot;right&quot;{HISideBinding=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}}'>
    <field name='top' declared_type='HISideBinding' type='{HISideBinding=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}'/>
    <field name='left' declared_type='HISideBinding' type='{HISideBinding=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}'/>
    <field name='bottom' declared_type='HISideBinding' type='{HISideBinding=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}'/>
    <field name='right' declared_type='HISideBinding' type='{HISideBinding=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}'/>
  </struct>
  <struct name='HICommand' type='{HICommand=&quot;attributes&quot;I&quot;commandID&quot;I&quot;menu&quot;{?=&quot;menuRef&quot;^{OpaqueMenuRef}&quot;menuItemIndex&quot;S}}'>
    <field name='attributes' declared_type='UInt32' type='L' type64='I'/>
    <field name='commandID' declared_type='UInt32' type='L' type64='I'/>
    <field name='menu' declared_type='struct HICommand::' type='{_structHICommand=&quot;menuRef&quot;^{OpaqueMenuRef}&quot;menuItemIndex&quot;S}'/>
  </struct>
  <struct name='HICommandExtended' type='{HICommandExtended=&quot;attributes&quot;I&quot;commandID&quot;I&quot;source&quot;(?=&quot;control&quot;^{OpaqueControlRef}&quot;window&quot;^{OpaqueWindowPtr}&quot;menu&quot;{?=&quot;menuRef&quot;^{OpaqueMenuRef}&quot;menuItemIndex&quot;S})}'>
    <field name='attributes' declared_type='UInt32' type='L' type64='I'/>
    <field name='commandID' declared_type='UInt32' type='L' type64='I'/>
    <field name='source' declared_type='union HICommandExtended::' type='(?=&quot;control&quot;^{OpaqueControlRef}&quot;window&quot;^{OpaqueWindowPtr}&quot;menu&quot;{?=&quot;menuRef&quot;^{OpaqueMenuRef}&quot;menuItemIndex&quot;S})'/>
  </struct>
  <struct name='HILayoutInfo' type='{HILayoutInfo=&quot;version&quot;I&quot;binding&quot;{HIBinding=&quot;top&quot;{HISideBinding=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}&quot;left&quot;{HISideBinding=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}&quot;bottom&quot;{HISideBinding=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}&quot;right&quot;{HISideBinding=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}}&quot;scale&quot;{HIScaling=&quot;x&quot;{HIAxisScale=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;ratio&quot;f}&quot;y&quot;{HIAxisScale=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;ratio&quot;f}}&quot;position&quot;{HIPositioning=&quot;x&quot;{HIAxisPosition=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}&quot;y&quot;{HIAxisPosition=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}}}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='binding' declared_type='HIBinding' type='{HIBinding=&quot;top&quot;{HISideBinding=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}&quot;left&quot;{HISideBinding=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}&quot;bottom&quot;{HISideBinding=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}&quot;right&quot;{HISideBinding=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}}'/>
    <field name='scale' declared_type='HIScaling' type='{HIScaling=&quot;x&quot;{HIAxisScale=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;ratio&quot;f}&quot;y&quot;{HIAxisScale=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;ratio&quot;f}}'/>
    <field name='position' declared_type='HIPositioning' type='{HIPositioning=&quot;x&quot;{HIAxisPosition=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}&quot;y&quot;{HIAxisPosition=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}}'/>
  </struct>
  <struct name='HIPoint' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}'>
    <field name='x' declared_type='float' type='f'/>
    <field name='y' declared_type='float' type='f'/>
  </struct>
  <struct name='HIPositioning' type='{HIPositioning=&quot;x&quot;{HIAxisPosition=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}&quot;y&quot;{HIAxisPosition=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}}'>
    <field name='x' declared_type='HIAxisPosition' type='{HIAxisPosition=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}'/>
    <field name='y' declared_type='HIAxisPosition' type='{HIAxisPosition=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}'/>
  </struct>
  <struct name='HIRect' type='{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}'>
    <field name='origin' declared_type='CGPoint' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}'/>
    <field name='size' declared_type='CGSize' type='{CGSize=&quot;width&quot;f&quot;height&quot;f}'/>
  </struct>
  <struct name='HIScaling' type='{HIScaling=&quot;x&quot;{HIAxisScale=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;ratio&quot;f}&quot;y&quot;{HIAxisScale=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;ratio&quot;f}}'>
    <field name='x' declared_type='HIAxisScale' type='{HIAxisScale=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;ratio&quot;f}'/>
    <field name='y' declared_type='HIAxisScale' type='{HIAxisScale=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;ratio&quot;f}'/>
  </struct>
  <struct name='HIScrollBarTrackInfo' type='{HIScrollBarTrackInfo=&quot;version&quot;I&quot;enableState&quot;C&quot;pressState&quot;C&quot;viewsize&quot;f}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='enableState' declared_type='ThemeTrackEnableState' type='C'/>
    <field name='pressState' declared_type='ThemeTrackPressState' type='C'/>
    <field name='viewsize' declared_type='float' type='f'/>
  </struct>
  <struct name='HISideBinding' type='{HISideBinding=&quot;toView&quot;^{OpaqueControlRef}&quot;kind&quot;S&quot;offset&quot;f}'>
    <field name='toView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <field name='kind' declared_type='HIBindingKind' type='S'/>
    <field name='offset' declared_type='float' type='f'/>
  </struct>
  <struct name='HISize' type='{CGSize=&quot;width&quot;f&quot;height&quot;f}'>
    <field name='width' declared_type='float' type='f'/>
    <field name='height' declared_type='float' type='f'/>
  </struct>
  <struct name='HIThemeAnimationFrameInfo' type='{HIThemeAnimationFrameInfo=&quot;index&quot;I}'>
    <field name='index' declared_type='UInt32' type='L' type64='I'/>
  </struct>
  <struct name='HIThemeAnimationTimeInfo' type='{HIThemeAnimationTimeInfo=&quot;start&quot;d&quot;current&quot;d}'>
    <field name='start' declared_type='CFAbsoluteTime' type='d'/>
    <field name='current' declared_type='CFAbsoluteTime' type='d'/>
  </struct>
  <struct name='HIThemeBackgroundDrawInfo' type='{HIThemeBackgroundDrawInfo=&quot;version&quot;I&quot;state&quot;I&quot;kind&quot;I}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <field name='kind' declared_type='ThemeBackgroundKind' type='L' type64='I'/>
  </struct>
  <struct name='HIThemeButtonDrawInfo' type='{HIThemeButtonDrawInfo=&quot;version&quot;I&quot;state&quot;I&quot;kind&quot;S&quot;value&quot;S&quot;adornment&quot;S&quot;animation&quot;(?=&quot;time&quot;{HIThemeAnimationTimeInfo=&quot;start&quot;d&quot;current&quot;d}&quot;frame&quot;{HIThemeAnimationFrameInfo=&quot;index&quot;I})}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <field name='kind' declared_type='ThemeButtonKind' type='S'/>
    <field name='value' declared_type='ThemeButtonValue' type='S'/>
    <field name='adornment' declared_type='ThemeButtonAdornment' type='S'/>
    <field name='animation' declared_type='union HIThemeButtonDrawInfo::' type='(?=&quot;time&quot;{HIThemeAnimationTimeInfo=&quot;start&quot;d&quot;current&quot;d}&quot;frame&quot;{HIThemeAnimationFrameInfo=&quot;index&quot;I})'/>
  </struct>
  <struct name='HIThemeChasingArrowsDrawInfo' type='{HIThemeChasingArrowsDrawInfo=&quot;version&quot;I&quot;state&quot;I&quot;index&quot;I}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <field name='index' declared_type='UInt32' type='L' type64='I'/>
  </struct>
  <struct name='HIThemeFrameDrawInfo' type='{HIThemeFrameDrawInfo=&quot;version&quot;I&quot;kind&quot;I&quot;state&quot;I&quot;isFocused&quot;B}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='kind' declared_type='HIThemeFrameKind' type='L' type64='I'/>
    <field name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <field name='isFocused' declared_type='Boolean' type='B'/>
  </struct>
  <struct name='HIThemeGrabberDrawInfo' type='{HIThemeGrabberDrawInfo=&quot;version&quot;I&quot;state&quot;I}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
  </struct>
  <struct name='HIThemeGroupBoxDrawInfo' type='{HIThemeGroupBoxDrawInfo=&quot;version&quot;I&quot;state&quot;I&quot;kind&quot;I}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <field name='kind' declared_type='HIThemeGroupBoxKind' type='L' type64='I'/>
  </struct>
  <struct name='HIThemeGrowBoxDrawInfo' type='{HIThemeGrowBoxDrawInfo=&quot;version&quot;I&quot;state&quot;I&quot;kind&quot;I&quot;direction&quot;S&quot;size&quot;I}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <field name='kind' declared_type='HIThemeGrowBoxKind' type='L' type64='I'/>
    <field name='direction' declared_type='ThemeGrowDirection' type='S'/>
    <field name='size' declared_type='HIThemeGrowBoxSize' type='L' type64='I'/>
  </struct>
  <struct name='HIThemeHeaderDrawInfo' type='{HIThemeHeaderDrawInfo=&quot;version&quot;I&quot;state&quot;I&quot;kind&quot;I}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <field name='kind' declared_type='HIThemeHeaderKind' type='L' type64='I'/>
  </struct>
  <struct name='HIThemeMenuBarDrawInfo' type='{HIThemeMenuBarDrawInfo=&quot;version&quot;I&quot;state&quot;S&quot;attributes&quot;I}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='state' declared_type='ThemeMenuBarState' type='S'/>
    <field name='attributes' declared_type='UInt32' type='L' type64='I'/>
  </struct>
  <struct name='HIThemeMenuDrawInfo' type='{HIThemeMenuDrawInfo=&quot;version&quot;I&quot;menuType&quot;S}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='menuType' declared_type='ThemeMenuType' type='S'/>
  </struct>
  <struct name='HIThemeMenuItemDrawInfo' type='{HIThemeMenuItemDrawInfo=&quot;version&quot;I&quot;itemType&quot;S&quot;state&quot;S}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='itemType' declared_type='ThemeMenuItemType' type='S'/>
    <field name='state' declared_type='ThemeMenuState' type='S'/>
  </struct>
  <struct name='HIThemeMenuTitleDrawInfo' type='{HIThemeMenuTitleDrawInfo=&quot;version&quot;I&quot;state&quot;S&quot;attributes&quot;I&quot;condensedTitleExtra&quot;f}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='state' declared_type='ThemeMenuState' type='S'/>
    <field name='attributes' declared_type='UInt32' type='L' type64='I'/>
    <field name='condensedTitleExtra' declared_type='float' type='f'/>
  </struct>
  <struct name='HIThemePlacardDrawInfo' type='{HIThemePlacardDrawInfo=&quot;version&quot;I&quot;state&quot;I}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
  </struct>
  <struct name='HIThemePopupArrowDrawInfo' type='{HIThemePopupArrowDrawInfo=&quot;version&quot;I&quot;state&quot;I&quot;orientation&quot;S&quot;size&quot;S}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <field name='orientation' declared_type='ThemeArrowOrientation' type='S'/>
    <field name='size' declared_type='ThemePopupArrowSize' type='S'/>
  </struct>
  <struct name='HIThemeScrollBarDelimitersDrawInfo' type='{HIThemeScrollBarDelimitersDrawInfo=&quot;version&quot;I&quot;state&quot;I&quot;windowType&quot;S&quot;attributes&quot;I}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <field name='windowType' declared_type='ThemeWindowType' type='S'/>
    <field name='attributes' declared_type='ThemeWindowAttributes' type='L' type64='I'/>
  </struct>
  <struct name='HIThemeSegmentDrawInfo' type='{HIThemeSegmentDrawInfo=&quot;version&quot;I&quot;state&quot;I&quot;value&quot;S&quot;size&quot;I&quot;kind&quot;I&quot;position&quot;I&quot;adornment&quot;I}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <field name='value' declared_type='ThemeButtonValue' type='S'/>
    <field name='size' declared_type='HIThemeSegmentSize' type='L' type64='I'/>
    <field name='kind' declared_type='HIThemeSegmentKind' type='L' type64='I'/>
    <field name='position' declared_type='HIThemeSegmentPosition' type='L' type64='I'/>
    <field name='adornment' declared_type='HIThemeSegmentAdornment' type='L' type64='I'/>
  </struct>
  <struct name='HIThemeSeparatorDrawInfo' type='{HIThemeSeparatorDrawInfo=&quot;version&quot;I&quot;state&quot;I}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
  </struct>
  <struct name='HIThemeSplitterDrawInfo' type='{HIThemeSplitterDrawInfo=&quot;version&quot;I&quot;state&quot;I&quot;adornment&quot;I}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <field name='adornment' declared_type='HIThemeSplitterAdornment' type='L' type64='I'/>
  </struct>
  <struct name='HIThemeTabDrawInfo' type='{HIThemeTabDrawInfo=&quot;version&quot;I&quot;style&quot;S&quot;direction&quot;S&quot;size&quot;I&quot;adornment&quot;I&quot;kind&quot;I&quot;position&quot;I}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='style' declared_type='ThemeTabStyle' type='S'/>
    <field name='direction' declared_type='ThemeTabDirection' type='S'/>
    <field name='size' declared_type='HIThemeTabSize' type='L' type64='I'/>
    <field name='adornment' declared_type='HIThemeTabAdornment' type='L' type64='I'/>
    <field name='kind' declared_type='HIThemeTabKind' type='L' type64='I'/>
    <field name='position' declared_type='HIThemeTabPosition' type='L' type64='I'/>
  </struct>
  <struct name='HIThemeTabDrawInfoVersionZero' type='{HIThemeTabDrawInfoVersionZero=&quot;version&quot;I&quot;style&quot;S&quot;direction&quot;S&quot;size&quot;I&quot;adornment&quot;I}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='style' declared_type='ThemeTabStyle' type='S'/>
    <field name='direction' declared_type='ThemeTabDirection' type='S'/>
    <field name='size' declared_type='HIThemeTabSize' type='L' type64='I'/>
    <field name='adornment' declared_type='HIThemeTabAdornment' type='L' type64='I'/>
  </struct>
  <struct name='HIThemeTabPaneDrawInfo' type='{HIThemeTabPaneDrawInfo=&quot;version&quot;I&quot;state&quot;I&quot;direction&quot;S&quot;size&quot;I&quot;kind&quot;I&quot;adornment&quot;I}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <field name='direction' declared_type='ThemeTabDirection' type='S'/>
    <field name='size' declared_type='HIThemeTabSize' type='L' type64='I'/>
    <field name='kind' declared_type='HIThemeTabKind' type='L' type64='I'/>
    <field name='adornment' declared_type='HIThemeTabPaneAdornment' type='L' type64='I'/>
  </struct>
  <struct name='HIThemeTabPaneDrawInfoVersionZero' type='{HIThemeTabPaneDrawInfoVersionZero=&quot;version&quot;I&quot;state&quot;I&quot;direction&quot;S&quot;size&quot;I}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <field name='direction' declared_type='ThemeTabDirection' type='S'/>
    <field name='size' declared_type='HIThemeTabSize' type='L' type64='I'/>
  </struct>
  <struct name='HIThemeTextInfo' type='{HIThemeTextInfo=&quot;version&quot;I&quot;state&quot;I&quot;fontID&quot;S&quot;horizontalFlushness&quot;I&quot;verticalFlushness&quot;I&quot;options&quot;I&quot;truncationPosition&quot;I&quot;truncationMaxLines&quot;I&quot;truncationHappened&quot;B}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <field name='fontID' declared_type='ThemeFontID' type='S'/>
    <field name='horizontalFlushness' declared_type='HIThemeTextHorizontalFlush' type='L' type64='I'/>
    <field name='verticalFlushness' declared_type='HIThemeTextVerticalFlush' type='L' type64='I'/>
    <field name='options' declared_type='HIThemeTextBoxOptions' type='L' type64='I'/>
    <field name='truncationPosition' declared_type='HIThemeTextTruncation' type='L' type64='I'/>
    <field name='truncationMaxLines' declared_type='UInt32' type='L' type64='I'/>
    <field name='truncationHappened' declared_type='Boolean' type='B'/>
  </struct>
  <struct name='HIThemeTickMarkDrawInfo' type='{HIThemeTickMarkDrawInfo=&quot;version&quot;I&quot;state&quot;I}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
  </struct>
  <struct name='HIThemeTrackDrawInfo' type='{HIThemeTrackDrawInfo=&quot;version&quot;I&quot;kind&quot;S&quot;bounds&quot;{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}&quot;min&quot;i&quot;max&quot;i&quot;value&quot;i&quot;reserved&quot;I&quot;attributes&quot;S&quot;enableState&quot;C&quot;filler1&quot;C&quot;trackInfo&quot;(?=&quot;scrollbar&quot;{ScrollBarTrackInfo=&quot;viewsize&quot;i&quot;pressState&quot;C}&quot;slider&quot;{SliderTrackInfo=&quot;thumbDir&quot;C&quot;pressState&quot;C}&quot;progress&quot;{ProgressTrackInfo=&quot;phase&quot;C})}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='kind' declared_type='ThemeTrackKind' type='S'/>
    <field name='bounds' declared_type='HIRect' type='{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}'/>
    <field name='min' declared_type='SInt32' type='l' type64='i'/>
    <field name='max' declared_type='SInt32' type='l' type64='i'/>
    <field name='value' declared_type='SInt32' type='l' type64='i'/>
    <field name='reserved' declared_type='UInt32' type='L' type64='I'/>
    <field name='attributes' declared_type='ThemeTrackAttributes' type='S'/>
    <field name='enableState' declared_type='ThemeTrackEnableState' type='C'/>
    <field name='filler1' declared_type='UInt8' type='C'/>
    <field name='trackInfo' declared_type='union HIThemeTrackDrawInfo::' type='(?=&quot;scrollbar&quot;{ScrollBarTrackInfo=&quot;viewsize&quot;i&quot;pressState&quot;C}&quot;slider&quot;{SliderTrackInfo=&quot;thumbDir&quot;C&quot;pressState&quot;C}&quot;progress&quot;{ProgressTrackInfo=&quot;phase&quot;C})'/>
  </struct>
  <struct name='HIThemeWindowDrawInfo' type='{HIThemeWindowDrawInfo=&quot;version&quot;I&quot;state&quot;I&quot;windowType&quot;S&quot;attributes&quot;I&quot;titleHeight&quot;f&quot;titleWidth&quot;f}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <field name='windowType' declared_type='ThemeWindowType' type='S'/>
    <field name='attributes' declared_type='ThemeWindowAttributes' type='L' type64='I'/>
    <field name='titleHeight' declared_type='float' type='f'/>
    <field name='titleWidth' declared_type='float' type='f'/>
  </struct>
  <struct name='HIThemeWindowWidgetDrawInfo' type='{HIThemeWindowWidgetDrawInfo=&quot;version&quot;I&quot;widgetState&quot;I&quot;widgetType&quot;S&quot;windowState&quot;I&quot;windowType&quot;S&quot;attributes&quot;I&quot;titleHeight&quot;f&quot;titleWidth&quot;f}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='widgetState' declared_type='ThemeDrawState' type='L' type64='I'/>
    <field name='widgetType' declared_type='ThemeTitleBarWidget' type='S'/>
    <field name='windowState' declared_type='ThemeDrawState' type='L' type64='I'/>
    <field name='windowType' declared_type='ThemeWindowType' type='S'/>
    <field name='attributes' declared_type='ThemeWindowAttributes' type='L' type64='I'/>
    <field name='titleHeight' declared_type='float' type='f'/>
    <field name='titleWidth' declared_type='float' type='f'/>
  </struct>
  <struct name='HIViewContentInfo' type='{HIViewContentInfo=&quot;contentType&quot;s&quot;u&quot;(?=&quot;iconSuite&quot;^*&quot;iconRef&quot;^{OpaqueIconRef}&quot;imageRef&quot;^{CGImage})}'>
    <field name='contentType' declared_type='HIViewContentType' type='s'/>
    <field name='u' declared_type='union HIViewContentInfo::' type='(?=&quot;iconSuite&quot;^*&quot;iconRef&quot;^{OpaqueIconRef}&quot;imageRef&quot;^{CGImage})'/>
  </struct>
  <struct name='HIViewFrameMetrics' type='{HIViewFrameMetrics=&quot;top&quot;f&quot;left&quot;f&quot;bottom&quot;f&quot;right&quot;f}'>
    <field name='top' declared_type='float' type='f'/>
    <field name='left' declared_type='float' type='f'/>
    <field name='bottom' declared_type='float' type='f'/>
    <field name='right' declared_type='float' type='f'/>
  </struct>
  <struct name='HIViewID' type='{ControlID=&quot;signature&quot;I&quot;id&quot;i}'>
    <field name='signature' declared_type='OSType' type='L' type64='I'/>
    <field name='id' declared_type='SInt32' type='l' type64='i'/>
  </struct>
  <struct name='HIViewImageContentInfo' type='{ControlButtonContentInfo=&quot;contentType&quot;s&quot;u&quot;(?=&quot;resID&quot;s&quot;cIconHandle&quot;^^{CIcon}&quot;iconSuite&quot;^*&quot;iconRef&quot;^{OpaqueIconRef}&quot;picture&quot;^^{Picture}&quot;ICONHandle&quot;^*&quot;imageRef&quot;^{CGImage})}'>
    <field name='contentType' declared_type='ControlContentType' type='s'/>
    <field name='u' declared_type='union ControlButtonContentInfo::' type='(?=&quot;resID&quot;s&quot;cIconHandle&quot;^^{CIcon}&quot;iconSuite&quot;^*&quot;iconRef&quot;^{OpaqueIconRef}&quot;picture&quot;^^{Picture}&quot;ICONHandle&quot;^*&quot;imageRef&quot;^{CGImage})'/>
  </struct>
  <struct name='HIViewKind' type='{HIViewKind=&quot;signature&quot;I&quot;kind&quot;I}'>
    <field name='signature' declared_type='OSType' type='L' type64='I'/>
    <field name='kind' declared_type='OSType' type='L' type64='I'/>
  </struct>
  <struct name='HMHelpContent' type='{HMHelpContent=&quot;contentType&quot;I&quot;u&quot;(?=&quot;tagCFString&quot;^{__CFString}&quot;tagString&quot;[256C]&quot;tagStringRes&quot;{HMStringResType=&quot;hmmResID&quot;s&quot;hmmIndex&quot;s}&quot;tagTEHandle&quot;^^{TERec}&quot;tagTextRes&quot;s&quot;tagStrRes&quot;s)}'>
    <field name='contentType' declared_type='HMContentType' type='L' type64='I'/>
    <field name='u' declared_type='union HMHelpContent::' type='(?=&quot;tagCFString&quot;^{__CFString}&quot;tagString&quot;[256C]&quot;tagStringRes&quot;{HMStringResType=&quot;hmmResID&quot;s&quot;hmmIndex&quot;s}&quot;tagTEHandle&quot;^^{TERec}&quot;tagTextRes&quot;s&quot;tagStrRes&quot;s)'/>
  </struct>
  <struct name='HMHelpContentRec' type='{HMHelpContentRec=&quot;version&quot;i&quot;absHotRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;tagSide&quot;s&quot;content&quot;[2{HMHelpContent=&quot;contentType&quot;I&quot;u&quot;(?=&quot;tagCFString&quot;^{__CFString}&quot;tagString&quot;[256C]&quot;tagStringRes&quot;{HMStringResType=&quot;hmmResID&quot;s&quot;hmmIndex&quot;s}&quot;tagTEHandle&quot;^^{TERec}&quot;tagTextRes&quot;s&quot;tagStrRes&quot;s)}]}'>
    <field name='version' declared_type='SInt32' type='l' type64='i'/>
    <field name='absHotRect' declared_type='Rect' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
    <field name='tagSide' declared_type='HMTagDisplaySide' type='s'/>
    <field name='content' declared_type='HMHelpContent*' type='[2{HMHelpContent=&quot;contentType&quot;I&quot;u&quot;(?=&quot;tagCFString&quot;^{__CFString}&quot;tagString&quot;[256C]&quot;tagStringRes&quot;{HMStringResType=&quot;hmmResID&quot;s&quot;hmmIndex&quot;s}&quot;tagTEHandle&quot;^^{TERec}&quot;tagTextRes&quot;s&quot;tagStrRes&quot;s)}]'/>
  </struct>
  <struct name='HMStringResType' type='{HMStringResType=&quot;hmmResID&quot;s&quot;hmmIndex&quot;s}'>
    <field name='hmmResID' declared_type='short' type='s'/>
    <field name='hmmIndex' declared_type='short' type='s'/>
  </struct>
  <struct name='HMenuBarHeader' type='{HMenuBarHeader=&quot;lastHMenu&quot;S&quot;menuTitleBits&quot;^^{PixMap}}'>
    <field name='lastHMenu' declared_type='UInt16' type='S'/>
    <field name='menuTitleBits' declared_type='PixMapHandle' type='^^{PixMap}'/>
  </struct>
  <struct name='HMenuBarMenu' type='{HMenuBarMenu=&quot;menu&quot;^{OpaqueMenuRef}&quot;reserved&quot;s}'>
    <field name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <field name='reserved' declared_type='SInt16' type='s'/>
  </struct>
  <struct name='HiliteMenuItemData' type='{MDEFHiliteItemData=&quot;previousItem&quot;S&quot;newItem&quot;S&quot;context&quot;^v}'>
    <field name='previousItem' declared_type='MenuItemIndex' type='S'/>
    <field name='newItem' declared_type='MenuItemIndex' type='S'/>
    <field name='context' declared_type='void*' type='^v'/>
  </struct>
  <struct name='IndicatorDragConstraint' type='{IndicatorDragConstraint=&quot;limitRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;slopRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;axis&quot;S}'>
    <field name='limitRect' declared_type='Rect' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
    <field name='slopRect' declared_type='Rect' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
    <field name='axis' declared_type='DragConstraint' type='S'/>
  </struct>
  <struct name='LHElement' type='{LHElement=&quot;lhHeight&quot;s&quot;lhAscent&quot;s}'>
    <field name='lhHeight' declared_type='short' type='s'/>
    <field name='lhAscent' declared_type='short' type='s'/>
  </struct>
  <struct name='ListBounds' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'>
    <field name='top' declared_type='short' type='s'/>
    <field name='left' declared_type='short' type='s'/>
    <field name='bottom' declared_type='short' type='s'/>
    <field name='right' declared_type='short' type='s'/>
  </struct>
  <struct name='ListDefSpec' type='{ListDefSpec=&quot;defType&quot;I&quot;u&quot;(?=&quot;userProc&quot;^?)}'>
    <field name='defType' declared_type='ListDefType' type='L' type64='I'/>
    <field name='u' declared_type='union ListDefSpec::' type='(?=&quot;userProc&quot;^?)'/>
  </struct>
  <struct name='ListRec' type='{ListRec=&quot;rView&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;port&quot;^{OpaqueGrafPtr}&quot;indent&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;cellSize&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;visible&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;vScroll&quot;^{OpaqueControlRef}&quot;hScroll&quot;^{OpaqueControlRef}&quot;selFlags&quot;c&quot;lActive&quot;B&quot;lReserved&quot;c&quot;listFlags&quot;c&quot;clikTime&quot;l&quot;clikLoc&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;mouseLoc&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;lClickLoop&quot;^?&quot;lastClick&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;refCon&quot;l&quot;listDefProc&quot;^*&quot;userHandle&quot;^*&quot;dataBounds&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;cells&quot;^*&quot;maxIndex&quot;s&quot;cellArray&quot;[1s]}' type64='{ListRec=&quot;rView&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;port&quot;^{OpaqueGrafPtr}&quot;indent&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;cellSize&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;visible&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;vScroll&quot;^{OpaqueControlRef}&quot;hScroll&quot;^{OpaqueControlRef}&quot;selFlags&quot;c&quot;lActive&quot;B&quot;lReserved&quot;c&quot;listFlags&quot;c&quot;clikTime&quot;q&quot;clikLoc&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;mouseLoc&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;lClickLoop&quot;^?&quot;lastClick&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;refCon&quot;q&quot;listDefProc&quot;^*&quot;userHandle&quot;^*&quot;dataBounds&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;cells&quot;^*&quot;maxIndex&quot;s&quot;cellArray&quot;[1s]}'>
    <field name='rView' declared_type='Rect' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
    <field name='port' declared_type='GrafPtr' type='^{OpaqueGrafPtr=}'/>
    <field name='indent' declared_type='Point' type='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
    <field name='cellSize' declared_type='Point' type='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
    <field name='visible' declared_type='ListBounds' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
    <field name='vScroll' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <field name='hScroll' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <field name='selFlags' declared_type='SInt8' type='c'/>
    <field name='lActive' declared_type='Boolean' type='B'/>
    <field name='lReserved' declared_type='SInt8' type='c'/>
    <field name='listFlags' declared_type='SInt8' type='c'/>
    <field name='clikTime' declared_type='long' type='l' type64='q'/>
    <field name='clikLoc' declared_type='Point' type='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
    <field name='mouseLoc' declared_type='Point' type='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
    <field name='lClickLoop' function_pointer='true' declared_type='ListClickLoopUPP' type='^?'>
      <retval declared_type='Boolean' type='B'/>
    </field>
    <field name='lastClick' declared_type='Cell' type='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
    <field name='refCon' declared_type='long' type='l' type64='q'/>
    <field name='listDefProc' declared_type='Handle' type='^*'/>
    <field name='userHandle' declared_type='Handle' type='^*'/>
    <field name='dataBounds' declared_type='ListBounds' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
    <field name='cells' declared_type='DataHandle' type='^*'/>
    <field name='maxIndex' declared_type='short' type='s'/>
    <field name='cellArray' declared_type='short*' type='[1s]'/>
  </struct>
  <struct name='MCEntry' type='{MCEntry=&quot;mctID&quot;s&quot;mctItem&quot;s&quot;mctRGB1&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;mctRGB2&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;mctRGB3&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;mctRGB4&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;mctReserved&quot;s}'>
    <field name='mctID' declared_type='MenuID' type='s'/>
    <field name='mctItem' declared_type='short' type='s'/>
    <field name='mctRGB1' declared_type='RGBColor' type='{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}'/>
    <field name='mctRGB2' declared_type='RGBColor' type='{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}'/>
    <field name='mctRGB3' declared_type='RGBColor' type='{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}'/>
    <field name='mctRGB4' declared_type='RGBColor' type='{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}'/>
    <field name='mctReserved' declared_type='short' type='s'/>
  </struct>
  <struct name='MDEFDrawData' type='{MDEFDrawData=&quot;trackingData&quot;{MenuTrackingData=&quot;menu&quot;^{OpaqueMenuRef}&quot;itemSelected&quot;S&quot;itemUnderMouse&quot;S&quot;itemRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;virtualMenuTop&quot;i&quot;virtualMenuBottom&quot;i}&quot;context&quot;^v}'>
    <field name='trackingData' declared_type='MenuTrackingData' type='{MenuTrackingData=&quot;menu&quot;^{OpaqueMenuRef}&quot;itemSelected&quot;S&quot;itemUnderMouse&quot;S&quot;itemRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;virtualMenuTop&quot;i&quot;virtualMenuBottom&quot;i}'/>
    <field name='context' declared_type='void*' type='^v'/>
  </struct>
  <struct name='MDEFDrawItemsData' type='{MDEFDrawItemsData=&quot;firstItem&quot;S&quot;lastItem&quot;S&quot;trackingData&quot;^{MenuTrackingData}&quot;context&quot;^v}'>
    <field name='firstItem' declared_type='MenuItemIndex' type='S'/>
    <field name='lastItem' declared_type='MenuItemIndex' type='S'/>
    <field name='trackingData' declared_type='MenuTrackingData*' type='^{MenuTrackingData=^{OpaqueMenuRef}SS{Rect=ssss}ii}'/>
    <field name='context' declared_type='void*' type='^v'/>
  </struct>
  <struct name='MDEFFindItemData' type='{MDEFFindItemData=&quot;trackingData&quot;{MenuTrackingData=&quot;menu&quot;^{OpaqueMenuRef}&quot;itemSelected&quot;S&quot;itemUnderMouse&quot;S&quot;itemRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;virtualMenuTop&quot;i&quot;virtualMenuBottom&quot;i}&quot;context&quot;^v}'>
    <field name='trackingData' declared_type='MenuTrackingData' type='{MenuTrackingData=&quot;menu&quot;^{OpaqueMenuRef}&quot;itemSelected&quot;S&quot;itemUnderMouse&quot;S&quot;itemRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;virtualMenuTop&quot;i&quot;virtualMenuBottom&quot;i}'/>
    <field name='context' declared_type='void*' type='^v'/>
  </struct>
  <struct name='MDEFHiliteItemData' type='{MDEFHiliteItemData=&quot;previousItem&quot;S&quot;newItem&quot;S&quot;context&quot;^v}'>
    <field name='previousItem' declared_type='MenuItemIndex' type='S'/>
    <field name='newItem' declared_type='MenuItemIndex' type='S'/>
    <field name='context' declared_type='void*' type='^v'/>
  </struct>
  <struct name='MeasureWindowTitleRec' type='{MeasureWindowTitleRec=&quot;fullTitleWidth&quot;s&quot;titleTextWidth&quot;s&quot;isUnicodeTitle&quot;B&quot;unused&quot;B}'>
    <field name='fullTitleWidth' declared_type='SInt16' type='s'/>
    <field name='titleTextWidth' declared_type='SInt16' type='s'/>
    <field name='isUnicodeTitle' declared_type='Boolean' type='B'/>
    <field name='unused' declared_type='Boolean' type='B'/>
  </struct>
  <struct name='MenuBarHeader' type='{MenuBarHeader=&quot;lastMenu&quot;S&quot;lastRight&quot;s&quot;mbResID&quot;s}'>
    <field name='lastMenu' declared_type='UInt16' type='S'/>
    <field name='lastRight' declared_type='SInt16' type='s'/>
    <field name='mbResID' declared_type='SInt16' type='s'/>
  </struct>
  <struct name='MenuBarMenu' type='{MenuBarMenu=&quot;menu&quot;^{OpaqueMenuRef}&quot;menuLeft&quot;s}'>
    <field name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <field name='menuLeft' declared_type='SInt16' type='s'/>
  </struct>
  <struct name='MenuCRsrc' type='{MenuCRsrc=&quot;numEntries&quot;s&quot;mcEntryRecs&quot;[1{MCEntry=&quot;mctID&quot;s&quot;mctItem&quot;s&quot;mctRGB1&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;mctRGB2&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;mctRGB3&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;mctRGB4&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;mctReserved&quot;s}]}'>
    <field name='numEntries' declared_type='short' type='s'/>
    <field name='mcEntryRecs' declared_type='MCTable' type='[1{MCEntry=&quot;mctID&quot;s&quot;mctItem&quot;s&quot;mctRGB1&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;mctRGB2&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;mctRGB3&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;mctRGB4&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;mctReserved&quot;s}]'/>
  </struct>
  <struct name='MenuDefSpec' type='{MenuDefSpec=&quot;defType&quot;I&quot;u&quot;(?=&quot;defProc&quot;^?&quot;view&quot;{?=&quot;classID&quot;^{__CFString}&quot;initEvent&quot;^{OpaqueEventRef}})}'>
    <field name='defType' declared_type='MenuDefType' type='L' type64='I'/>
    <field name='u' declared_type='union MenuDefSpec::' type='(?=&quot;defProc&quot;^?&quot;view&quot;{?=&quot;classID&quot;^{__CFString}&quot;initEvent&quot;^{OpaqueEventRef}})'/>
  </struct>
  <struct name='MenuItemDataRec' type='{MenuItemDataRec=&quot;whichData&quot;Q&quot;text&quot;*&quot;mark&quot;S&quot;cmdKey&quot;S&quot;cmdKeyGlyph&quot;I&quot;cmdKeyModifiers&quot;I&quot;style&quot;C&quot;enabled&quot;B&quot;iconEnabled&quot;B&quot;filler1&quot;C&quot;iconID&quot;i&quot;iconType&quot;I&quot;iconHandle&quot;^*&quot;cmdID&quot;I&quot;encoding&quot;I&quot;submenuID&quot;s&quot;submenuHandle&quot;^{OpaqueMenuRef}&quot;fontID&quot;i&quot;refcon&quot;I&quot;attr&quot;I&quot;cfText&quot;^{__CFString}&quot;properties&quot;^{OpaqueCollection}&quot;indent&quot;I&quot;cmdVirtualKey&quot;S}'>
    <field name='whichData' declared_type='MenuItemDataFlags' type='Q'/>
    <field name='text' declared_type='StringPtr' type='*'/>
    <field name='mark' declared_type='UniChar' type='S'/>
    <field name='cmdKey' declared_type='UniChar' type='S'/>
    <field name='cmdKeyGlyph' declared_type='UInt32' type='L' type64='I'/>
    <field name='cmdKeyModifiers' declared_type='UInt32' type='L' type64='I'/>
    <field name='style' declared_type='Style' type='C'/>
    <field name='enabled' declared_type='Boolean' type='B'/>
    <field name='iconEnabled' declared_type='Boolean' type='B'/>
    <field name='filler1' declared_type='UInt8' type='C'/>
    <field name='iconID' declared_type='SInt32' type='l' type64='i'/>
    <field name='iconType' declared_type='UInt32' type='L' type64='I'/>
    <field name='iconHandle' declared_type='Handle' type='^*'/>
    <field name='cmdID' declared_type='MenuCommand' type='L' type64='I'/>
    <field name='encoding' declared_type='TextEncoding' type='L' type64='I'/>
    <field name='submenuID' declared_type='MenuID' type='s'/>
    <field name='submenuHandle' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <field name='fontID' declared_type='SInt32' type='l' type64='i'/>
    <field name='refcon' declared_type='UInt32' type='L' type64='I'/>
    <field name='attr' declared_type='OptionBits' type='L' type64='I'/>
    <field name='cfText' declared_type='CFStringRef' type='^{__CFString=}'/>
    <field name='properties' declared_type='Collection' type='^{OpaqueCollection=}'/>
    <field name='indent' declared_type='UInt32' type='L' type64='I'/>
    <field name='cmdVirtualKey' declared_type='UInt16' type='S'/>
  </struct>
  <struct name='MenuTrackingData' type='{MenuTrackingData=&quot;menu&quot;^{OpaqueMenuRef}&quot;itemSelected&quot;S&quot;itemUnderMouse&quot;S&quot;itemRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;virtualMenuTop&quot;i&quot;virtualMenuBottom&quot;i}'>
    <field name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <field name='itemSelected' declared_type='MenuItemIndex' type='S'/>
    <field name='itemUnderMouse' declared_type='MenuItemIndex' type='S'/>
    <field name='itemRect' declared_type='Rect' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
    <field name='virtualMenuTop' declared_type='SInt32' type='l' type64='i'/>
    <field name='virtualMenuBottom' declared_type='SInt32' type='l' type64='i'/>
  </struct>
  <struct name='MouseTrackingRegionID' type='{MouseTrackingRegionID=&quot;signature&quot;I&quot;id&quot;i}'>
    <field name='signature' declared_type='OSType' type='L' type64='I'/>
    <field name='id' declared_type='SInt32' type='l' type64='i'/>
  </struct>
  <struct name='NMRec' type='{NMRec=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;nmFlags&quot;s&quot;nmPrivate&quot;l&quot;nmReserved&quot;s&quot;nmMark&quot;s&quot;nmIcon&quot;^*&quot;nmSound&quot;^*&quot;nmStr&quot;*&quot;nmResp&quot;^?&quot;nmRefCon&quot;l}' type64='{NMRec=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;nmFlags&quot;s&quot;nmPrivate&quot;q&quot;nmReserved&quot;s&quot;nmMark&quot;s&quot;nmIcon&quot;^*&quot;nmSound&quot;^*&quot;nmStr&quot;*&quot;nmResp&quot;^?&quot;nmRefCon&quot;q}'>
    <field name='qLink' declared_type='QElemPtr' type='^{QElem=^{QElem}s[1s]}'/>
    <field name='qType' declared_type='short' type='s'/>
    <field name='nmFlags' declared_type='short' type='s'/>
    <field name='nmPrivate' declared_type='long' type='l' type64='q'/>
    <field name='nmReserved' declared_type='short' type='s'/>
    <field name='nmMark' declared_type='short' type='s'/>
    <field name='nmIcon' declared_type='Handle' type='^*'/>
    <field name='nmSound' declared_type='Handle' type='^*'/>
    <field name='nmStr' declared_type='StringPtr' type='*'/>
    <field name='nmResp' function_pointer='true' declared_type='NMUPP' type='^?'>
      <arg declared_type='NMRecPtr' type='^{NMRec=^{QElem}sslss^*^**^?l}' type64='^{NMRec=^{QElem}ssqss^*^**^?q}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='nmRefCon' declared_type='long' type='l' type64='q'/>
  </struct>
  <struct name='NullStRec' type='{NullStRec=&quot;teReserved&quot;l&quot;nullScrap&quot;^^{StScrpRec}}' type64='{NullStRec=&quot;teReserved&quot;q&quot;nullScrap&quot;^^{StScrpRec}}'>
    <field name='teReserved' declared_type='long' type='l' type64='q'/>
    <field name='nullScrap' declared_type='StScrpHandle' type='^^{StScrpRec}'/>
  </struct>
  <struct name='ProgressTrackInfo' type='{ProgressTrackInfo=&quot;phase&quot;C}'>
    <field name='phase' declared_type='UInt8' type='C'/>
  </struct>
  <struct name='PromiseHFSFlavor' type='{PromiseHFSFlavor=&quot;fileType&quot;I&quot;fileCreator&quot;I&quot;fdFlags&quot;S&quot;promisedFlavor&quot;I}'>
    <field name='fileType' declared_type='OSType' type='L' type64='I'/>
    <field name='fileCreator' declared_type='OSType' type='L' type64='I'/>
    <field name='fdFlags' declared_type='UInt16' type='S'/>
    <field name='promisedFlavor' declared_type='FlavorType' type='L' type64='I'/>
  </struct>
  <struct name='STElement' type='{STElement=&quot;stCount&quot;s&quot;stHeight&quot;s&quot;stAscent&quot;s&quot;stFont&quot;s&quot;stFace&quot;C&quot;stSize&quot;s&quot;stColor&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}'>
    <field name='stCount' declared_type='short' type='s'/>
    <field name='stHeight' declared_type='short' type='s'/>
    <field name='stAscent' declared_type='short' type='s'/>
    <field name='stFont' declared_type='short' type='s'/>
    <field name='stFace' declared_type='StyleField' type='C'/>
    <field name='stSize' declared_type='short' type='s'/>
    <field name='stColor' declared_type='RGBColor' type='{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}'/>
  </struct>
  <struct name='ScrapFlavorInfo' type='{ScrapFlavorInfo=&quot;flavorType&quot;I&quot;flavorFlags&quot;I}'>
    <field name='flavorType' declared_type='ScrapFlavorType' type='L' type64='I'/>
    <field name='flavorFlags' declared_type='ScrapFlavorFlags' type='L' type64='I'/>
  </struct>
  <struct name='ScrapTranslationList' type='{ScrapTranslationList=&quot;modDate&quot;L&quot;groupCount&quot;L}' type64='{ScrapTranslationList=&quot;modDate&quot;Q&quot;groupCount&quot;Q}'>
    <field name='modDate' declared_type='unsigned long' type='L' type64='Q'/>
    <field name='groupCount' declared_type='unsigned long' type='L' type64='Q'/>
  </struct>
  <struct name='ScrapTypeSpec' type='{ScrapTypeSpec=&quot;format&quot;I&quot;hint&quot;l}' type64='{ScrapTypeSpec=&quot;format&quot;I&quot;hint&quot;q}'>
    <field name='format' declared_type='ScrapType' type='L' type64='I'/>
    <field name='hint' declared_type='long' type='l' type64='q'/>
  </struct>
  <struct name='ScriptLanguageRecord' type='{ScriptLanguageRecord=&quot;fScript&quot;s&quot;fLanguage&quot;s}'>
    <field name='fScript' declared_type='ScriptCode' type='s'/>
    <field name='fLanguage' declared_type='LangCode' type='s'/>
  </struct>
  <struct name='ScriptLanguageSupport' type='{ScriptLanguageSupport=&quot;fScriptLanguageCount&quot;s&quot;fScriptLanguageArray&quot;[1{ScriptLanguageRecord=&quot;fScript&quot;s&quot;fLanguage&quot;s}]}'>
    <field name='fScriptLanguageCount' declared_type='short' type='s'/>
    <field name='fScriptLanguageArray' declared_type='ScriptLanguageRecord*' type='[1{ScriptLanguageRecord=&quot;fScript&quot;s&quot;fLanguage&quot;s}]'/>
  </struct>
  <struct name='ScrollBarTrackInfo' type='{ScrollBarTrackInfo=&quot;viewsize&quot;i&quot;pressState&quot;C}'>
    <field name='viewsize' declared_type='SInt32' type='l' type64='i'/>
    <field name='pressState' declared_type='ThemeTrackPressState' type='C'/>
  </struct>
  <struct name='ScrpSTElement' type='{ScrpSTElement=&quot;scrpStartChar&quot;l&quot;scrpHeight&quot;s&quot;scrpAscent&quot;s&quot;scrpFont&quot;s&quot;scrpFace&quot;C&quot;scrpSize&quot;s&quot;scrpColor&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}' type64='{ScrpSTElement=&quot;scrpStartChar&quot;q&quot;scrpHeight&quot;s&quot;scrpAscent&quot;s&quot;scrpFont&quot;s&quot;scrpFace&quot;C&quot;scrpSize&quot;s&quot;scrpColor&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}'>
    <field name='scrpStartChar' declared_type='long' type='l' type64='q'/>
    <field name='scrpHeight' declared_type='short' type='s'/>
    <field name='scrpAscent' declared_type='short' type='s'/>
    <field name='scrpFont' declared_type='short' type='s'/>
    <field name='scrpFace' declared_type='StyleField' type='C'/>
    <field name='scrpSize' declared_type='short' type='s'/>
    <field name='scrpColor' declared_type='RGBColor' type='{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}'/>
  </struct>
  <struct name='SetupWindowProxyDragImageRec' type='{SetupWindowProxyDragImageRec=&quot;imageGWorld&quot;^{OpaqueGrafPtr}&quot;imageRgn&quot;^{OpaqueRgnHandle}&quot;outlineRgn&quot;^{OpaqueRgnHandle}}'>
    <field name='imageGWorld' declared_type='GWorldPtr' type='^{OpaqueGrafPtr=}'/>
    <field name='imageRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <field name='outlineRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
  </struct>
  <struct name='SliderTrackInfo' type='{SliderTrackInfo=&quot;thumbDir&quot;C&quot;pressState&quot;C}'>
    <field name='thumbDir' declared_type='ThemeThumbDirection' type='C'/>
    <field name='pressState' declared_type='ThemeTrackPressState' type='C'/>
  </struct>
  <struct name='StScrpRec' type='{StScrpRec=&quot;scrpNStyles&quot;s&quot;scrpStyleTab&quot;[1601{ScrpSTElement=&quot;scrpStartChar&quot;l&quot;scrpHeight&quot;s&quot;scrpAscent&quot;s&quot;scrpFont&quot;s&quot;scrpFace&quot;C&quot;scrpSize&quot;s&quot;scrpColor&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}]}' type64='{StScrpRec=&quot;scrpNStyles&quot;s&quot;scrpStyleTab&quot;[1601{ScrpSTElement=&quot;scrpStartChar&quot;q&quot;scrpHeight&quot;s&quot;scrpAscent&quot;s&quot;scrpFont&quot;s&quot;scrpFace&quot;C&quot;scrpSize&quot;s&quot;scrpColor&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}]}'>
    <field name='scrpNStyles' declared_type='short' type='s'/>
    <field name='scrpStyleTab' declared_type='ScrpSTTable' type='[1601{ScrpSTElement=&quot;scrpStartChar&quot;l&quot;scrpHeight&quot;s&quot;scrpAscent&quot;s&quot;scrpFont&quot;s&quot;scrpFace&quot;C&quot;scrpSize&quot;s&quot;scrpColor&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}]' type64='[1601{ScrpSTElement=&quot;scrpStartChar&quot;q&quot;scrpHeight&quot;s&quot;scrpAscent&quot;s&quot;scrpFont&quot;s&quot;scrpFace&quot;C&quot;scrpSize&quot;s&quot;scrpColor&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}]'/>
  </struct>
  <struct name='StandardIconListCellDataRec' type='{StandardIconListCellDataRec=&quot;iconHandle&quot;^*&quot;font&quot;s&quot;face&quot;s&quot;size&quot;s&quot;name&quot;[256C]}'>
    <field name='iconHandle' declared_type='Handle' type='^*'/>
    <field name='font' declared_type='short' type='s'/>
    <field name='face' declared_type='short' type='s'/>
    <field name='size' declared_type='short' type='s'/>
    <field name='name' declared_type='Str255' type='[256C]'/>
  </struct>
  <struct name='StyleRun' type='{StyleRun=&quot;startChar&quot;s&quot;styleIndex&quot;s}'>
    <field name='startChar' declared_type='short' type='s'/>
    <field name='styleIndex' declared_type='short' type='s'/>
  </struct>
  <struct name='TERec' type='{TERec=&quot;destRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;viewRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;selRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;lineHeight&quot;s&quot;fontAscent&quot;s&quot;selPoint&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;selStart&quot;s&quot;selEnd&quot;s&quot;active&quot;s&quot;wordBreak&quot;^?&quot;clickLoop&quot;^?&quot;clickTime&quot;l&quot;clickLoc&quot;s&quot;caretTime&quot;l&quot;caretState&quot;s&quot;just&quot;s&quot;teLength&quot;s&quot;hText&quot;^*&quot;hDispatchRec&quot;l&quot;clikStuff&quot;s&quot;crOnly&quot;s&quot;txFont&quot;s&quot;txFace&quot;C&quot;txMode&quot;s&quot;txSize&quot;s&quot;inPort&quot;^{OpaqueGrafPtr}&quot;highHook&quot;^?&quot;caretHook&quot;^?&quot;nLines&quot;s&quot;lineStarts&quot;[16001s]}' type64='{TERec=&quot;destRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;viewRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;selRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;lineHeight&quot;s&quot;fontAscent&quot;s&quot;selPoint&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;selStart&quot;s&quot;selEnd&quot;s&quot;active&quot;s&quot;wordBreak&quot;^?&quot;clickLoop&quot;^?&quot;clickTime&quot;q&quot;clickLoc&quot;s&quot;caretTime&quot;q&quot;caretState&quot;s&quot;just&quot;s&quot;teLength&quot;s&quot;hText&quot;^*&quot;hDispatchRec&quot;q&quot;clikStuff&quot;s&quot;crOnly&quot;s&quot;txFont&quot;s&quot;txFace&quot;C&quot;txMode&quot;s&quot;txSize&quot;s&quot;inPort&quot;^{OpaqueGrafPtr}&quot;highHook&quot;^?&quot;caretHook&quot;^?&quot;nLines&quot;s&quot;lineStarts&quot;[16001s]}'>
    <field name='destRect' declared_type='Rect' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
    <field name='viewRect' declared_type='Rect' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
    <field name='selRect' declared_type='Rect' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
    <field name='lineHeight' declared_type='short' type='s'/>
    <field name='fontAscent' declared_type='short' type='s'/>
    <field name='selPoint' declared_type='Point' type='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
    <field name='selStart' declared_type='short' type='s'/>
    <field name='selEnd' declared_type='short' type='s'/>
    <field name='active' declared_type='short' type='s'/>
    <field name='wordBreak' function_pointer='true' declared_type='WordBreakUPP' type='^?'>
      <arg declared_type='Ptr' type='*'/>
      <arg declared_type='short' type='s'/>
      <retval declared_type='Boolean' type='B'/>
    </field>
    <field name='clickLoop' function_pointer='true' declared_type='TEClickLoopUPP' type='^?'>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <retval declared_type='Boolean' type='B'/>
    </field>
    <field name='clickTime' declared_type='long' type='l' type64='q'/>
    <field name='clickLoc' declared_type='short' type='s'/>
    <field name='caretTime' declared_type='long' type='l' type64='q'/>
    <field name='caretState' declared_type='short' type='s'/>
    <field name='just' declared_type='short' type='s'/>
    <field name='teLength' declared_type='short' type='s'/>
    <field name='hText' declared_type='Handle' type='^*'/>
    <field name='hDispatchRec' declared_type='long' type='l' type64='q'/>
    <field name='clikStuff' declared_type='short' type='s'/>
    <field name='crOnly' declared_type='short' type='s'/>
    <field name='txFont' declared_type='short' type='s'/>
    <field name='txFace' declared_type='StyleField' type='C'/>
    <field name='txMode' declared_type='short' type='s'/>
    <field name='txSize' declared_type='short' type='s'/>
    <field name='inPort' declared_type='GrafPtr' type='^{OpaqueGrafPtr=}'/>
    <field name='highHook' function_pointer='true' declared_type='HighHookUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='caretHook' function_pointer='true' declared_type='CaretHookUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='nLines' declared_type='short' type='s'/>
    <field name='lineStarts' declared_type='short*' type='[16001s]'/>
  </struct>
  <struct name='TEStyleRec' type='{TEStyleRec=&quot;nRuns&quot;s&quot;nStyles&quot;s&quot;styleTab&quot;^^{STElement}&quot;lhTab&quot;^^{LHElement}&quot;teRefCon&quot;l&quot;nullStyle&quot;^^{NullStRec}&quot;runs&quot;[8001{StyleRun=&quot;startChar&quot;s&quot;styleIndex&quot;s}]}' type64='{TEStyleRec=&quot;nRuns&quot;s&quot;nStyles&quot;s&quot;styleTab&quot;^^{STElement}&quot;lhTab&quot;^^{LHElement}&quot;teRefCon&quot;q&quot;nullStyle&quot;^^{NullStRec}&quot;runs&quot;[8001{StyleRun=&quot;startChar&quot;s&quot;styleIndex&quot;s}]}'>
    <field name='nRuns' declared_type='short' type='s'/>
    <field name='nStyles' declared_type='short' type='s'/>
    <field name='styleTab' declared_type='STHandle' type='^^{STElement}'/>
    <field name='lhTab' declared_type='LHHandle' type='^^{LHElement}'/>
    <field name='teRefCon' declared_type='long' type='l' type64='q'/>
    <field name='nullStyle' declared_type='NullStHandle' type='^^{NullStRec}'/>
    <field name='runs' declared_type='StyleRun*' type='[8001{StyleRun=&quot;startChar&quot;s&quot;styleIndex&quot;s}]'/>
  </struct>
  <struct name='TSMGlyphInfo' type='{TSMGlyphInfo=&quot;range&quot;{?=&quot;location&quot;i&quot;length&quot;i}&quot;fontRef&quot;I&quot;collection&quot;S&quot;glyphID&quot;S}'>
    <field name='range' declared_type='CFRange' type='{_CFRange=&quot;location&quot;i&quot;length&quot;i}'/>
    <field name='fontRef' declared_type='ATSFontRef' type='L' type64='I'/>
    <field name='collection' declared_type='UInt16' type='S'/>
    <field name='glyphID' declared_type='UInt16' type='S'/>
  </struct>
  <struct name='TSMGlyphInfoArray' type='{TSMGlyphInfo=&quot;range&quot;{?=&quot;location&quot;i&quot;length&quot;i}&quot;fontRef&quot;I&quot;collection&quot;S&quot;glyphID&quot;S}'>
    <field name='numGlyphInfo' declared_type='ItemCount' type='L' type64='I'/>
    <field name='glyphInfo' declared_type='TSMGlyphInfo*' type='[1{TSMGlyphInfo=&quot;range&quot;{?=&quot;location&quot;i&quot;length&quot;i}&quot;fontRef&quot;I&quot;collection&quot;S&quot;glyphID&quot;S}'/>
  </struct>
  <struct name='TSMTERec' type='{TSMTERec=&quot;textH&quot;^^{TERec}&quot;preUpdateProc&quot;^?&quot;postUpdateProc&quot;^?&quot;updateFlag&quot;l&quot;refCon&quot;l}' type64='{TSMTERec=&quot;textH&quot;^^{TERec}&quot;preUpdateProc&quot;^?&quot;postUpdateProc&quot;^?&quot;updateFlag&quot;q&quot;refCon&quot;q}'>
    <field name='textH' declared_type='TEHandle' type='^^{TERec}'/>
    <field name='preUpdateProc' function_pointer='true' declared_type='TSMTEPreUpdateUPP' type='^?'>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <arg declared_type='long' type='l' type64='q'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='postUpdateProc' function_pointer='true' declared_type='TSMTEPostUpdateUPP' type='^?'>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <retval declared_type='void' type='v'/>
    </field>
    <field name='updateFlag' declared_type='long' type='l' type64='q'/>
    <field name='refCon' declared_type='long' type='l' type64='q'/>
  </struct>
  <struct name='TXNATSUIFeatures' type='{TXNATSUIFeatures=&quot;featureCount&quot;I&quot;featureTypes&quot;^S&quot;featureSelectors&quot;^S}'>
    <field name='featureCount' declared_type='ItemCount' type='L' type64='I'/>
    <field name='featureTypes' declared_type='ATSUFontFeatureType*' type='^S'/>
    <field name='featureSelectors' declared_type='ATSUFontFeatureSelector*' type='^S'/>
  </struct>
  <struct name='TXNATSUIVariations' type='{TXNATSUIVariations=&quot;variationCount&quot;I&quot;variationAxis&quot;^I&quot;variationValues&quot;^i}'>
    <field name='variationCount' declared_type='ItemCount' type='L' type64='I'/>
    <field name='variationAxis' declared_type='ATSUFontVariationAxis*' type='^I'/>
    <field name='variationValues' declared_type='ATSUFontVariationValue*' type='^i'/>
  </struct>
  <struct name='TXNBackground' type='{TXNBackground=&quot;bgType&quot;I&quot;bg&quot;(TXNBackgroundData=&quot;color&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S})}'>
    <field name='bgType' declared_type='TXNBackgroundType' type='L' type64='I'/>
    <field name='bg' declared_type='TXNBackgroundData' type='(TXNBackgroundData=&quot;color&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S})'/>
  </struct>
  <struct name='TXNCarbonEventInfo' type='{TXNCarbonEventInfo=&quot;useCarbonEvents&quot;B&quot;filler&quot;C&quot;flags&quot;S&quot;fDictionary&quot;^{__CFDictionary}}'>
    <field name='useCarbonEvents' declared_type='Boolean' type='B'/>
    <field name='filler' declared_type='UInt8' type='C'/>
    <field name='flags' declared_type='UInt16' type='S'/>
    <field name='fDictionary' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
  </struct>
  <struct name='TXNLongRect' type='{TXNLongRect=&quot;top&quot;i&quot;left&quot;i&quot;bottom&quot;i&quot;right&quot;i}'>
    <field name='top' declared_type='SInt32' type='l' type64='i'/>
    <field name='left' declared_type='SInt32' type='l' type64='i'/>
    <field name='bottom' declared_type='SInt32' type='l' type64='i'/>
    <field name='right' declared_type='SInt32' type='l' type64='i'/>
  </struct>
  <struct name='TXNMacOSPreferredFontDescription' type='{TXNMacOSPreferredFontDescription=&quot;fontID&quot;I&quot;pointSize&quot;i&quot;encoding&quot;I&quot;fontStyle&quot;C}'>
    <field name='fontID' declared_type='UInt32' type='L' type64='I'/>
    <field name='pointSize' declared_type='Fixed' type='l' type64='i'/>
    <field name='encoding' declared_type='TextEncoding' type='L' type64='I'/>
    <field name='fontStyle' declared_type='Style' type='C'/>
  </struct>
  <struct name='TXNMargins' type='{TXNMargins=&quot;topMargin&quot;s&quot;leftMargin&quot;s&quot;bottomMargin&quot;s&quot;rightMargin&quot;s}'>
    <field name='topMargin' declared_type='SInt16' type='s'/>
    <field name='leftMargin' declared_type='SInt16' type='s'/>
    <field name='bottomMargin' declared_type='SInt16' type='s'/>
    <field name='rightMargin' declared_type='SInt16' type='s'/>
  </struct>
  <struct name='TXNMatchTextRecord' type='{TXNMatchTextRecord=&quot;iTextPtr&quot;^v&quot;iTextToMatchLength&quot;i&quot;iTextEncoding&quot;I}'>
    <field name='iTextPtr' declared_type='void*' type='^v'/>
    <field name='iTextToMatchLength' declared_type='SInt32' type='l' type64='i'/>
    <field name='iTextEncoding' declared_type='TextEncoding' type='L' type64='I'/>
  </struct>
  <struct name='TXNTab' type='{TXNTab=&quot;value&quot;s&quot;tabType&quot;c&quot;filler&quot;C}'>
    <field name='value' declared_type='SInt16' type='s'/>
    <field name='tabType' declared_type='TXNTabType' type='c'/>
    <field name='filler' declared_type='UInt8' type='C'/>
  </struct>
  <struct name='TXNTextBoxOptionsData' type='{TXNTextBoxOptionsData=&quot;optionTags&quot;I&quot;flushness&quot;i&quot;justification&quot;i&quot;rotation&quot;i&quot;options&quot;^v}'>
    <field name='optionTags' declared_type='TXNTextBoxOptions' type='L' type64='I'/>
    <field name='flushness' declared_type='Fract' type='l' type64='i'/>
    <field name='justification' declared_type='Fract' type='l' type64='i'/>
    <field name='rotation' declared_type='Fixed' type='l' type64='i'/>
    <field name='options' declared_type='void*' type='^v'/>
  </struct>
  <struct name='TXNTypeAttributes' type='{TXNTypeAttributes=&quot;tag&quot;I&quot;size&quot;I&quot;data&quot;(TXNAttributeData=&quot;dataPtr&quot;^v&quot;dataValue&quot;I&quot;atsuFeatures&quot;^{TXNATSUIFeatures}&quot;atsuVariations&quot;^{TXNATSUIVariations}&quot;urlReference&quot;^{__CFURL})}'>
    <field name='tag' declared_type='TXNTypeRunAttributes' type='L' type64='I'/>
    <field name='size' declared_type='ByteCount' type='L' type64='I'/>
    <field name='data' declared_type='TXNAttributeData' type='(TXNAttributeData=&quot;dataPtr&quot;^v&quot;dataValue&quot;I&quot;atsuFeatures&quot;^{TXNATSUIFeatures}&quot;atsuVariations&quot;^{TXNATSUIVariations}&quot;urlReference&quot;^{__CFURL})'/>
  </struct>
  <struct name='TabletPointRec' type='{TabletPointRec=&quot;absX&quot;i&quot;absY&quot;i&quot;absZ&quot;i&quot;buttons&quot;S&quot;pressure&quot;S&quot;tiltX&quot;s&quot;tiltY&quot;s&quot;rotation&quot;S&quot;tangentialPressure&quot;s&quot;deviceID&quot;S&quot;vendor1&quot;s&quot;vendor2&quot;s&quot;vendor3&quot;s}'>
    <field name='absX' declared_type='SInt32' type='l' type64='i'/>
    <field name='absY' declared_type='SInt32' type='l' type64='i'/>
    <field name='absZ' declared_type='SInt32' type='l' type64='i'/>
    <field name='buttons' declared_type='UInt16' type='S'/>
    <field name='pressure' declared_type='UInt16' type='S'/>
    <field name='tiltX' declared_type='SInt16' type='s'/>
    <field name='tiltY' declared_type='SInt16' type='s'/>
    <field name='rotation' declared_type='UInt16' type='S'/>
    <field name='tangentialPressure' declared_type='SInt16' type='s'/>
    <field name='deviceID' declared_type='UInt16' type='S'/>
    <field name='vendor1' declared_type='SInt16' type='s'/>
    <field name='vendor2' declared_type='SInt16' type='s'/>
    <field name='vendor3' declared_type='SInt16' type='s'/>
  </struct>
  <struct name='TabletPointerRec' type='{TabletPointRec=&quot;absX&quot;i&quot;absY&quot;i&quot;absZ&quot;i&quot;buttons&quot;S&quot;pressure&quot;S&quot;tiltX&quot;s&quot;tiltY&quot;s&quot;rotation&quot;S&quot;tangentialPressure&quot;s&quot;deviceID&quot;S&quot;vendor1&quot;s&quot;vendor2&quot;s&quot;vendor3&quot;s}'>
    <field name='absX' declared_type='SInt32' type='l' type64='i'/>
    <field name='absY' declared_type='SInt32' type='l' type64='i'/>
    <field name='absZ' declared_type='SInt32' type='l' type64='i'/>
    <field name='buttons' declared_type='UInt16' type='S'/>
    <field name='pressure' declared_type='UInt16' type='S'/>
    <field name='tiltX' declared_type='SInt16' type='s'/>
    <field name='tiltY' declared_type='SInt16' type='s'/>
    <field name='rotation' declared_type='UInt16' type='S'/>
    <field name='tangentialPressure' declared_type='SInt16' type='s'/>
    <field name='deviceID' declared_type='UInt16' type='S'/>
    <field name='vendor1' declared_type='SInt16' type='s'/>
    <field name='vendor2' declared_type='SInt16' type='s'/>
    <field name='vendor3' declared_type='SInt16' type='s'/>
  </struct>
  <struct name='TabletProximityRec' type='{TabletProximityRec=&quot;vendorID&quot;S&quot;tabletID&quot;S&quot;pointerID&quot;S&quot;deviceID&quot;S&quot;systemTabletID&quot;S&quot;vendorPointerType&quot;S&quot;pointerSerialNumber&quot;I&quot;uniqueID&quot;Q&quot;capabilityMask&quot;I&quot;pointerType&quot;C&quot;enterProximity&quot;C}'>
    <field name='vendorID' declared_type='UInt16' type='S'/>
    <field name='tabletID' declared_type='UInt16' type='S'/>
    <field name='pointerID' declared_type='UInt16' type='S'/>
    <field name='deviceID' declared_type='UInt16' type='S'/>
    <field name='systemTabletID' declared_type='UInt16' type='S'/>
    <field name='vendorPointerType' declared_type='UInt16' type='S'/>
    <field name='pointerSerialNumber' declared_type='UInt32' type='L' type64='I'/>
    <field name='uniqueID' declared_type='UInt64' type='Q'/>
    <field name='capabilityMask' declared_type='UInt32' type='L' type64='I'/>
    <field name='pointerType' declared_type='UInt8' type='C'/>
    <field name='enterProximity' declared_type='UInt8' type='C'/>
  </struct>
  <struct name='TextServiceInfo' type='{TextServiceInfo=&quot;fComponent&quot;^{ComponentRecord}&quot;fItemName&quot;[256C]}'>
    <field name='fComponent' declared_type='Component' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
    <field name='fItemName' declared_type='Str255' type='[256C]'/>
  </struct>
  <struct name='TextServiceList' type='{TextServiceList=&quot;fTextServiceCount&quot;s&quot;fServices&quot;[1{TextServiceInfo=&quot;fComponent&quot;^{ComponentRecord}&quot;fItemName&quot;[256C]}]}'>
    <field name='fTextServiceCount' declared_type='short' type='s'/>
    <field name='fServices' declared_type='TextServiceInfo*' type='[1{TextServiceInfo=&quot;fComponent&quot;^{ComponentRecord}&quot;fItemName&quot;[256C]}]'/>
  </struct>
  <struct name='TextStyle' type='{TextStyle=&quot;tsFont&quot;s&quot;tsFace&quot;C&quot;tsSize&quot;s&quot;tsColor&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}'>
    <field name='tsFont' declared_type='short' type='s'/>
    <field name='tsFace' declared_type='StyleField' type='C'/>
    <field name='tsSize' declared_type='short' type='s'/>
    <field name='tsColor' declared_type='RGBColor' type='{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}'/>
  </struct>
  <struct name='ThemeButtonDrawInfo' type='{ThemeButtonDrawInfo=&quot;state&quot;I&quot;value&quot;S&quot;adornment&quot;S}'>
    <field name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <field name='value' declared_type='ThemeButtonValue' type='S'/>
    <field name='adornment' declared_type='ThemeButtonAdornment' type='S'/>
  </struct>
  <struct name='ThemeTrackDrawInfo' type='{ThemeTrackDrawInfo=&quot;kind&quot;S&quot;bounds&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;min&quot;i&quot;max&quot;i&quot;value&quot;i&quot;reserved&quot;I&quot;attributes&quot;S&quot;enableState&quot;C&quot;filler1&quot;C&quot;trackInfo&quot;(?=&quot;scrollbar&quot;{ScrollBarTrackInfo=&quot;viewsize&quot;i&quot;pressState&quot;C}&quot;slider&quot;{SliderTrackInfo=&quot;thumbDir&quot;C&quot;pressState&quot;C}&quot;progress&quot;{ProgressTrackInfo=&quot;phase&quot;C})}'>
    <field name='kind' declared_type='ThemeTrackKind' type='S'/>
    <field name='bounds' declared_type='Rect' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
    <field name='min' declared_type='SInt32' type='l' type64='i'/>
    <field name='max' declared_type='SInt32' type='l' type64='i'/>
    <field name='value' declared_type='SInt32' type='l' type64='i'/>
    <field name='reserved' declared_type='UInt32' type='L' type64='I'/>
    <field name='attributes' declared_type='ThemeTrackAttributes' type='S'/>
    <field name='enableState' declared_type='ThemeTrackEnableState' type='C'/>
    <field name='filler1' declared_type='UInt8' type='C'/>
    <field name='trackInfo' declared_type='union ThemeTrackDrawInfo::' type='(?=&quot;scrollbar&quot;{ScrollBarTrackInfo=&quot;viewsize&quot;i&quot;pressState&quot;C}&quot;slider&quot;{SliderTrackInfo=&quot;thumbDir&quot;C&quot;pressState&quot;C}&quot;progress&quot;{ProgressTrackInfo=&quot;phase&quot;C})'/>
  </struct>
  <struct name='ThemeWindowMetrics' type='{ThemeWindowMetrics=&quot;metricSize&quot;S&quot;titleHeight&quot;s&quot;titleWidth&quot;s&quot;popupTabOffset&quot;s&quot;popupTabWidth&quot;s&quot;popupTabPosition&quot;S}'>
    <field name='metricSize' declared_type='UInt16' type='S'/>
    <field name='titleHeight' declared_type='SInt16' type='s'/>
    <field name='titleWidth' declared_type='SInt16' type='s'/>
    <field name='popupTabOffset' declared_type='SInt16' type='s'/>
    <field name='popupTabWidth' declared_type='SInt16' type='s'/>
    <field name='popupTabPosition' declared_type='UInt16' type='S'/>
  </struct>
  <struct name='TransitionWindowOptions' type='{TransitionWindowOptions=&quot;version&quot;I&quot;duration&quot;d&quot;window&quot;^{OpaqueWindowPtr}&quot;userData&quot;^v}'>
    <field name='version' declared_type='UInt32' type='L' type64='I'/>
    <field name='duration' declared_type='EventTime' type='d'/>
    <field name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <field name='userData' declared_type='void*' type='^v'/>
  </struct>
  <struct name='TypeSelectRecord' type='{TypeSelectRecord=&quot;tsrLastKeyTime&quot;L&quot;tsrScript&quot;s&quot;tsrKeyStrokes&quot;[64C]}' type64='{TypeSelectRecord=&quot;tsrLastKeyTime&quot;Q&quot;tsrScript&quot;s&quot;tsrKeyStrokes&quot;[64C]}'>
    <field name='tsrLastKeyTime' declared_type='unsigned long' type='L' type64='Q'/>
    <field name='tsrScript' declared_type='ScriptCode' type='s'/>
    <field name='tsrKeyStrokes' declared_type='Str63' type='[64C]'/>
  </struct>
  <struct name='WStateData' type='{WStateData=&quot;userState&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;stdState&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}}'>
    <field name='userState' declared_type='Rect' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
    <field name='stdState' declared_type='Rect' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
  </struct>
  <struct name='WinCTab' type='{WinCTab=&quot;wCSeed&quot;l&quot;wCReserved&quot;s&quot;ctSize&quot;s&quot;ctTable&quot;[5{ColorSpec=&quot;value&quot;s&quot;rgb&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}]}' type64='{WinCTab=&quot;wCSeed&quot;q&quot;wCReserved&quot;s&quot;ctSize&quot;s&quot;ctTable&quot;[5{ColorSpec=&quot;value&quot;s&quot;rgb&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}]}'>
    <field name='wCSeed' declared_type='long' type='l' type64='q'/>
    <field name='wCReserved' declared_type='short' type='s'/>
    <field name='ctSize' declared_type='short' type='s'/>
    <field name='ctTable' declared_type='ColorSpec*' type='[5{ColorSpec=&quot;value&quot;s&quot;rgb&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}]'/>
  </struct>
  <struct name='WindowDefSpec' type='{WindowDefSpec=&quot;defType&quot;I&quot;u&quot;(?=&quot;defProc&quot;^?&quot;classRef&quot;^v&quot;procID&quot;s&quot;rootView&quot;^v)}'>
    <field name='defType' declared_type='WindowDefType' type='L' type64='I'/>
    <field name='u' declared_type='union WindowDefSpec::' type='(?=&quot;defProc&quot;^?&quot;classRef&quot;^v&quot;procID&quot;s&quot;rootView&quot;^v)'/>
  </struct>
  <cftype name='ControlRef' type='^{OpaqueControlRef=}'/>
  <cftype name='DataBrowserItemDataRef' type='^v'/>
  <cftype name='DragRef' type='^{OpaqueDragRef=}'/>
  <cftype name='EventHandlerCallRef' type='^{OpaqueEventHandlerCallRef=}'/>
  <cftype name='EventHandlerRef' type='^{OpaqueEventHandlerRef=}'/>
  <cftype name='EventHotKeyRef' type='^{OpaqueEventHotKeyRef=}'/>
  <cftype name='EventLoopRef' type='^{OpaqueEventLoopRef=}'/>
  <cftype name='EventLoopTimerRef' type='^{__EventLoopTimer=}'/>
  <cftype name='EventQueueRef' type='^{OpaqueEventQueueRef=}'/>
  <cftype name='EventRef' type='^{OpaqueEventRef=}'/>
  <cftype name='EventTargetRef' type='^{OpaqueEventTargetRef=}'/>
  <cftype name='HIArchiveRef' tollfree='NSHIObject' gettypeid_func='HIArchiveGetTypeID' type='^{OpaqueHIArchiveRef=}'/>
  <cftype name='HIMutableShapeRef' gettypeid_func='HIShapeGetTypeID' type='^{__HIShape=}'/>
  <cftype name='HIObjectClassRef' type='^{OpaqueHIObjectClassRef=}'/>
  <cftype name='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
  <cftype name='HIShapeRef' gettypeid_func='HIShapeGetTypeID' type='^{__HIShape=}'/>
  <cftype name='HIViewTrackingAreaRef' type='^{OpaqueHIViewTrackingAreaRef=}'/>
  <cftype name='IBNibRef' type='^{OpaqueIBNibRef=}'/>
  <cftype name='KeyboardLayoutRef' type='^{OpaqueKeyboardLayoutRef=}'/>
  <cftype name='MenuRef' type='^{OpaqueMenuRef=}'/>
  <cftype name='MouseTrackingRef' type='^{OpaqueMouseTrackingRef=}'/>
  <cftype name='ScrapRef' type='^{OpaqueScrapRef=}'/>
  <cftype name='ToolboxObjectClassRef' type='^{OpaqueToolboxObjectClassRef=}'/>
  <cftype name='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
  <opaque name='TSMDocumentID' type='^{OpaqueTSMDocumentID=}'/>
  <opaque name='TXNFontMenuObject' type='^{OpaqueTXNFontMenuObject=}'/>
  <opaque name='TXNObject' type='^{OpaqueTXNObject=}'/>
  <opaque name='ThemeDrawingState' type='^{OpaqueThemeDrawingState=}'/>
  <constant name='kHIObjectCustomDataCDEFProcIDKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kHIObjectCustomDataClassIDKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kHIObjectCustomDataParameterNamesKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kHIObjectCustomDataParameterTypesKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kHIObjectCustomDataParameterValuesKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kHIObjectCustomDataSuperClassIDKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kHIToolboxVersionNumber' declared_type='float' type='f' const='true'/>
  <constant name='kHIViewMenuContentID' declared_type='HIViewID' type='{ControlID=Ii}'/>
  <constant name='kHIViewWindowContentID' declared_type='HIViewID' type='{ControlID=Ii}' const='true'/>
  <constant name='kHIViewWindowGrowBoxID' declared_type='HIViewID' type='{ControlID=Ii}' const='true'/>
  <constant name='kTXNActionAlignCenter' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNActionAlignLeft' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNActionAlignRight' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNActionChangeColor' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNActionChangeFont' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNActionChangeFontFeature' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNActionChangeFontVariation' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNActionChangeGlyphVariation' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNActionChangeSize' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNActionChangeStyle' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNActionChangeTextPosition' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNActionClear' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNActionCountOfAllChanges' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNActionCountOfStyleChanges' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNActionCountOfTextChanges' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNActionCut' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNActionDrop' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNActionMove' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNActionPaste' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNActionTyping' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNActionUndoLast' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNDataOptionCharacterEncodingKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNDataOptionDocumentTypeKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNDocumentAttributeAuthorKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNDocumentAttributeCommentKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNDocumentAttributeCompanyNameKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNDocumentAttributeCopyrightKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNDocumentAttributeCreationTimeKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNDocumentAttributeEditorKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNDocumentAttributeKeywordsKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNDocumentAttributeModificationTimeKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNDocumentAttributeSubjectKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNDocumentAttributeTitleKey' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNMLTEDocumentType' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNPlainTextDocumentType' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNQuickTimeDocumentType' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <constant name='kTXNRTFDocumentType' declared_type='CFStringRef' type='^{__CFString=}' const='true'/>
  <string_constant name='kComponentBundleInputModeDictKey' nsstring='true' value='ComponentInputModeDict'/>
  <string_constant name='kComponentBundleInvisibleInSystemUIKey' nsstring='true' value='ComponentInvisibleInSystemUI'/>
  <string_constant name='kHIAboutBoxCopyrightKey' nsstring='true' value='HIAboutBoxCopyright'/>
  <string_constant name='kHIAboutBoxDescriptionKey' nsstring='true' value='HIAboutBoxDescription'/>
  <string_constant name='kHIAboutBoxNameKey' nsstring='true' value='HIAboutBoxName'/>
  <string_constant name='kHIAboutBoxStringFileKey' nsstring='true' value='HIAboutBoxStringFile'/>
  <string_constant name='kHIAboutBoxVersionKey' nsstring='true' value='HIAboutBoxVersion'/>
  <string_constant name='kHIBevelButtonClassID' nsstring='true' value='com.apple.HIBevelButton'/>
  <string_constant name='kHIChasingArrowsClassID' nsstring='true' value='com.apple.HIChasingArrows'/>
  <string_constant name='kHICheckBoxClassID' nsstring='true' value='com.apple.HICheckBox'/>
  <string_constant name='kHICheckBoxGroupClassID' nsstring='true' value='com.apple.HICheckBoxGroup'/>
  <string_constant name='kHIClockViewClassID' nsstring='true' value='com.apple.HIClock'/>
  <string_constant name='kHIComboBoxClassID' nsstring='true' value='com.apple.HIComboBox'/>
  <string_constant name='kHIDataBrowserClassID' nsstring='true' value='com.apple.HIDataBrowser'/>
  <string_constant name='kHIDisclosureButtonClassID' nsstring='true' value='com.apple.HIDisclosureButton'/>
  <string_constant name='kHIDisclosureTriangleClassID' nsstring='true' value='com.apple.HIDisclosureTriangle'/>
  <string_constant name='kHIGroupBoxClassID' nsstring='true' value='com.apple.HIGroupBox'/>
  <string_constant name='kHIGrowBoxViewClassID' nsstring='true' value='com.apple.higrowboxview'/>
  <string_constant name='kHIIconViewClassID' nsstring='true' value='com.apple.HIIconView'/>
  <string_constant name='kHIImageViewClassID' nsstring='true' value='com.apple.HIImageView'/>
  <string_constant name='kHIImageWellClassID' nsstring='true' value='com.apple.HIImageWell'/>
  <string_constant name='kHILittleArrowsClassID' nsstring='true' value='com.apple.HILittleArrows'/>
  <string_constant name='kHIMenuViewClassID' nsstring='true' value='com.apple.HIMenuView'/>
  <string_constant name='kHIPlacardViewClassID' nsstring='true' value='com.apple.HIPlacardView'/>
  <string_constant name='kHIPopupButtonClassID' nsstring='true' value='com.apple.HIPopupButton'/>
  <string_constant name='kHIProgressBarClassID' nsstring='true' value='com.apple.HIProgressBar'/>
  <string_constant name='kHIPushButtonClassID' nsstring='true' value='com.apple.HIPushButton'/>
  <string_constant name='kHIRadioButtonClassID' nsstring='true' value='com.apple.HIRadioButton'/>
  <string_constant name='kHIRadioGroupClassID' nsstring='true' value='com.apple.HIRadioGroup'/>
  <string_constant name='kHIRelevanceBarClassID' nsstring='true' value='com.apple.HIRelevanceBar'/>
  <string_constant name='kHIRoundButtonClassID' nsstring='true' value='com.apple.HIRoundButton'/>
  <string_constant name='kHIScrollBarClassID' nsstring='true' value='com.apple.HIScrollBar'/>
  <string_constant name='kHIScrollViewClassID' nsstring='true' value='com.apple.HIScrollView'/>
  <string_constant name='kHISearchFieldClassID' nsstring='true' value='com.apple.HISearchField'/>
  <string_constant name='kHISegmentedViewClassID' nsstring='true' value='com.apple.HISegmentedView'/>
  <string_constant name='kHIServicesMenuCharCode' nsstring='true' value='kHIServicesMenuCharCode'/>
  <string_constant name='kHIServicesMenuItemName' nsstring='true' value='kHIServicesMenuItemName'/>
  <string_constant name='kHIServicesMenuKeyModifiers' nsstring='true' value='kHIServicesMenuKeyModifiers'/>
  <string_constant name='kHIServicesMenuProviderName' nsstring='true' value='kHIServicesMenuProviderName'/>
  <string_constant name='kHISliderClassID' nsstring='true' value='com.apple.HISlider'/>
  <string_constant name='kHIStandardMenuViewClassID' nsstring='true' value='com.apple.HIStandardMenuView'/>
  <string_constant name='kHIStaticTextViewClassID' nsstring='true' value='com.apple.HIStaticTextView'/>
  <string_constant name='kHISymbolicHotKeyCode' nsstring='true' value='kHISymbolicHotKeyCode'/>
  <string_constant name='kHISymbolicHotKeyEnabled' nsstring='true' value='kHISymbolicHotKeyEnabled'/>
  <string_constant name='kHISymbolicHotKeyModifiers' nsstring='true' value='kHISymbolicHotKeyModifiers'/>
  <string_constant name='kHITabbedViewClassID' nsstring='true' value='com.apple.HITabbedView'/>
  <string_constant name='kHITextFieldClassID' nsstring='true' value='com.apple.HITextField'/>
  <string_constant name='kHITextViewClassID' nsstring='true' value='com.apple.HITextView'/>
  <string_constant name='kHIToolbarCustomizeIdentifier' nsstring='true' value='com.apple.hitoolbox.toolbar.customize'/>
  <string_constant name='kHIToolbarDataKey' nsstring='true' value='data'/>
  <string_constant name='kHIToolbarFlexibleSpaceIdentifier' nsstring='true' value='com.apple.hitoolbox.toolbar.flexiblespace'/>
  <string_constant name='kHIToolbarFontsItemIdentifier' nsstring='true' value='com.apple.hitoolbox.toolbar.fonts'/>
  <string_constant name='kHIToolbarIdentifierKey' nsstring='true' value='identifier'/>
  <string_constant name='kHIToolbarItemClassID' nsstring='true' value='com.apple.hitoolbaritem'/>
  <string_constant name='kHIToolbarPrintItemIdentifier' nsstring='true' value='com.apple.hitoolbox.toolbar.print'/>
  <string_constant name='kHIToolbarSeparatorIdentifier' nsstring='true' value='com.apple.hitoolbox.toolbar.separator'/>
  <string_constant name='kHIToolbarSpaceIdentifier' nsstring='true' value='com.apple.hitoolbox.toolbar.space'/>
  <string_constant name='kHIUserPaneClassID' nsstring='true' value='com.apple.HIUserPane'/>
  <string_constant name='kHIViewClassID' nsstring='true' value='com.apple.hiview'/>
  <string_constant name='kHIVisualSeparatorClassID' nsstring='true' value='com.apple.HIVisualSeparator'/>
  <string_constant name='kHIWindowHeaderViewClassID' nsstring='true' value='com.apple.HIWindowHeaderView'/>
  <string_constant name='kScrapClipboardScrap' nsstring='true' value='com.apple.scrap.clipboard'/>
  <string_constant name='kScrapFindScrap' nsstring='true' value='com.apple.scrap.find'/>
  <string_constant name='kTSInputModeAlternateMenuIconFileKey' nsstring='true' value='tsInputModeAlternateMenuIconFileKey'/>
  <string_constant name='kTSInputModeDefaultStateKey' nsstring='true' value='tsInputModeDefaultStateKey'/>
  <string_constant name='kTSInputModeIsVisibleKey' nsstring='true' value='tsInputModeIsVisibleKey'/>
  <string_constant name='kTSInputModeJISKeyboardShortcutKey' nsstring='true' value='tsInputModeJISKeyboardShortcutKey'/>
  <string_constant name='kTSInputModeKeyEquivalentKey' nsstring='true' value='tsInputModeKeyEquivalentKey'/>
  <string_constant name='kTSInputModeKeyEquivalentModifiersKey' nsstring='true' value='tsInputModeKeyEquivalentModifiersKey'/>
  <string_constant name='kTSInputModeListKey' nsstring='true' value='tsInputModeListKey'/>
  <string_constant name='kTSInputModeMenuIconFileKey' nsstring='true' value='tsInputModeMenuIconFileKey'/>
  <string_constant name='kTSInputModePaletteIconFileKey' nsstring='true' value='tsInputModePaletteIconFileKey'/>
  <string_constant name='kTSInputModePaletteItemAltIconKey' nsstring='true' value='tsInputModePaletteItemAltIconKey'/>
  <string_constant name='kTSInputModePaletteItemEnabledKey' nsstring='true' value='tsInputModePaletteItemEnabledKey'/>
  <string_constant name='kTSInputModePaletteItemIDKey' nsstring='true' value='tsInputModePaletteItemIDKey'/>
  <string_constant name='kTSInputModePaletteItemIconKey' nsstring='true' value='tsInputModePaletteItemIconKey'/>
  <string_constant name='kTSInputModePaletteItemKeyEquivalentKey' nsstring='true' value='tsInputModePaletteItemKeyEquivalentKey'/>
  <string_constant name='kTSInputModePaletteItemKeyEquivalentModifiersKey' nsstring='true' value='tsInputModePaletteItemKeyEquivalentModifiersKey'/>
  <string_constant name='kTSInputModePaletteItemStateKey' nsstring='true' value='tsInputModePaletteItemStateKey'/>
  <string_constant name='kTSInputModePaletteItemTitleKey' nsstring='true' value='tsInputModePaletteItemTitleKey'/>
  <string_constant name='kTSInputModePaletteItemTypeKey' nsstring='true' value='tsInputModePaletteItemTypeKey'/>
  <string_constant name='kTSInputModePrimaryInScriptKey' nsstring='true' value='tsInputModePrimaryInScriptKey'/>
  <string_constant name='kTSInputModeScriptKey' nsstring='true' value='tsInputModeScriptKey'/>
  <string_constant name='kTSVisibleInputModeOrderedArrayKey' nsstring='true' value='tsVisibleInputModeOrderedArrayKey'/>
  <string_constant name='kTXNActionKeyMapperKey' nsstring='true' value='ActionKeyMapper'/>
  <string_constant name='kTXNActionNameMapperKey' nsstring='true' value='ActionNameMapper'/>
  <string_constant name='kTXNCommandTargetKey' nsstring='true' value='CommandTarget'/>
  <string_constant name='kTXNCommandUpdateKey' nsstring='true' value='CommandUpdate'/>
  <string_constant name='kTXNFontMenuObjectKey' nsstring='true' value='FontMenuObject'/>
  <string_constant name='kTXNFontMenuRefKey' nsstring='true' value='FontMenuRef'/>
  <string_constant name='kTXNFontPanelEventHandlerKey' nsstring='true' value='FontPanel'/>
  <string_constant name='kTXNTSMDocumentAccessHandlerKey' nsstring='true' value='TSMDocumentAccess'/>
  <string_constant name='kTXNTextHandlerKey' nsstring='true' value='TextInput'/>
  <string_constant name='kTXNWheelMouseEventHandlerKey' nsstring='true' value='WheelMouseEvent'/>
  <string_constant name='kTXNWindowEventHandlerKey' nsstring='true' value='WindowEvent'/>
  <string_constant name='kTXNWindowResizeEventHandlerKey' nsstring='true' value='WindowResize'/>
  <string_constant name='kTextServiceInputModeBopomofo' nsstring='true' value='com.apple.inputmethod.TradChinese.Bopomofo'/>
  <string_constant name='kTextServiceInputModeHangul' nsstring='true' value='com.apple.inputmethod.Korean.Hangul'/>
  <string_constant name='kTextServiceInputModeJapanese' nsstring='true' value='com.apple.inputmethod.Japanese'/>
  <string_constant name='kTextServiceInputModeJapaneseFirstName' nsstring='true' value='com.apple.inputmethod.Japanese.FirstName'/>
  <string_constant name='kTextServiceInputModeJapaneseFullWidthRoman' nsstring='true' value='com.apple.inputmethod.Japanese.FullWidthRoman'/>
  <string_constant name='kTextServiceInputModeJapaneseHalfWidthKana' nsstring='true' value='com.apple.inputmethod.Japanese.HalfWidthKana'/>
  <string_constant name='kTextServiceInputModeJapaneseHiragana' nsstring='true' value='com.apple.inputmethod.Japanese.Hiragana'/>
  <string_constant name='kTextServiceInputModeJapaneseKatakana' nsstring='true' value='com.apple.inputmethod.Japanese.Katakana'/>
  <string_constant name='kTextServiceInputModeJapaneseLastName' nsstring='true' value='com.apple.inputmethod.Japanese.LastName'/>
  <string_constant name='kTextServiceInputModeJapanesePlaceName' nsstring='true' value='com.apple.inputmethod.Japanese.PlaceName'/>
  <string_constant name='kTextServiceInputModeKorean' nsstring='true' value='com.apple.inputmethod.Korean'/>
  <string_constant name='kTextServiceInputModePassword' nsstring='true' value='com.apple.inputmethod.Password'/>
  <string_constant name='kTextServiceInputModeRoman' nsstring='true' value='com.apple.inputmethod.Roman'/>
  <string_constant name='kTextServiceInputModeSimpChinese' nsstring='true' value='com.apple.inputmethod.SimpChinese'/>
  <string_constant name='kTextServiceInputModeTradChinese' nsstring='true' value='com.apple.inputmethod.TradChinese'/>
  <string_constant name='kTextServiceInputModeTradChinesePlaceName' nsstring='true' value='com.apple.inputmethod.TradChinese.PlaceName'/>
  <string_constant name='kThemeAppearanceAqua' nsstring='true' value='com.apple.theme.appearance.aqua'/>
  <string_constant name='kThemeAppearanceAquaBlue' nsstring='true' value='com.apple.theme.appearance.aqua.blue'/>
  <string_constant name='kThemeAppearanceAquaGraphite' nsstring='true' value='com.apple.theme.appearance.aqua.graphite'/>
  <string_constant name='kThemeAppearancePlatinum' nsstring='true' value='com.apple.theme.appearance.platinum'/>
  <enum name='DRAWHook' value='4'/>
  <enum name='EOLHook' value='0'/>
  <enum name='HITTESTHook' value='12'/>
  <enum name='TextWidthHook' value='28'/>
  <enum name='WIDTHHook' value='8'/>
  <enum name='activMask' value='256'/>
  <enum name='activateEvt' value='8'/>
  <enum name='activeFlag' value='1'/>
  <enum name='activeFlagBit' value='0'/>
  <enum name='adbAddrMask' value='16711680'/>
  <enum name='addSize' value='16'/>
  <enum name='addSizeBit' value='4'/>
  <enum name='alphaLock' value='1024'/>
  <enum name='alphaLockBit' value='10'/>
  <enum name='altDBoxProc' value='3'/>
  <enum name='app1Evt' value='12'/>
  <enum name='app1Mask' value='4096'/>
  <enum name='app2Evt' value='13'/>
  <enum name='app2Mask' value='8192'/>
  <enum name='app3Evt' value='14'/>
  <enum name='app3Mask' value='16384'/>
  <enum name='app4Evt' value='15'/>
  <enum name='app4Mask' value='32768'/>
  <enum name='appearanceBadBrushIndexErr' value='-30560'/>
  <enum name='appearanceBadCursorIndexErr' value='-30565'/>
  <enum name='appearanceBadTextColorIndexErr' value='-30563'/>
  <enum name='appearanceProcessNotRegisteredErr' value='-30562'/>
  <enum name='appearanceProcessRegisteredErr' value='-30561'/>
  <enum name='appearanceThemeHasNoAccents' value='-30564'/>
  <enum name='appendDITLBottom' value='2'/>
  <enum name='appendDITLRight' value='1'/>
  <enum name='autoKey' value='5'/>
  <enum name='autoKeyMask' value='32'/>
  <enum name='autoTrack' value='8'/>
  <enum name='bHandleAERecording' value='16'/>
  <enum name='bLanguageMask' value='255'/>
  <enum name='bScriptLanguageMask' value='32767'/>
  <enum name='bScriptMask' value='32512'/>
  <enum name='bTakeActiveEvent' value='15'/>
  <enum name='btnCtrl' value='0'/>
  <enum name='btnState' value='128'/>
  <enum name='btnStateBit' value='7'/>
  <enum name='cBodyColor' value='1'/>
  <enum name='cFrameColor' value='0'/>
  <enum name='cTextColor' value='2'/>
  <enum name='cThumbColor' value='3'/>
  <enum name='calcCRgns' value='2'/>
  <enum name='calcCntlRgn' value='10'/>
  <enum name='calcThumbRgn' value='11'/>
  <enum name='cancel' value='2'/>
  <enum name='cautionIcon' value='2'/>
  <enum name='charCodeMask' value='255'/>
  <enum name='checkBoxProc' value='1'/>
  <enum name='chkCtrl' value='1'/>
  <enum name='clrBit' value='3'/>
  <enum name='cmdKey' value='256'/>
  <enum name='cmdKeyBit' value='8'/>
  <enum name='controlKey' value='4096'/>
  <enum name='controlKeyBit' value='12'/>
  <enum name='ctrlItem' value='4'/>
  <enum name='dBoxProc' value='1'/>
  <enum name='deskPatID' value='16'/>
  <enum name='dialogKind' value='2'/>
  <enum name='diskEvt' value='7'/>
  <enum name='diskMask' value='128'/>
  <enum name='dispCntl' value='4'/>
  <enum name='doAll' value='15'/>
  <enum name='doColor' value='8'/>
  <enum name='doFace' value='2'/>
  <enum name='doFont' value='1'/>
  <enum name='doSize' value='4'/>
  <enum name='doToggle' value='32'/>
  <enum name='documentProc' value='0'/>
  <enum name='domCannot' value='0'/>
  <enum name='domNative' value='1'/>
  <enum name='domTranslateFirst' value='2'/>
  <enum name='domWildcard' value='3'/>
  <enum name='dragCntl' value='7'/>
  <enum name='drawCntl' value='0'/>
  <enum name='drawThumbOutline' value='12'/>
  <enum name='driverEvt' value='11'/>
  <enum name='driverMask' value='2048'/>
  <enum name='editText' value='16'/>
  <enum name='errDataBrowserInvalidPropertyData' value='-4974'/>
  <enum name='errDataBrowserInvalidPropertyPart' value='-4973'/>
  <enum name='errDataBrowserItemNotAdded' value='-4975'/>
  <enum name='errDataBrowserItemNotFound' value='-4971'/>
  <enum name='errDataBrowserNotConfigured' value='-4970'/>
  <enum name='errDataBrowserPropertyNotFound' value='-4972'/>
  <enum name='errDataBrowserPropertyNotSupported' value='-4979'/>
  <enum name='errHMIllegalContentForMaximumState' value='-10981'/>
  <enum name='errHMIllegalContentForMinimumState' value='-10980'/>
  <enum name='errKBFailSettingID' value='-30852'/>
  <enum name='errKBFailSettingTranslationTable' value='-30853'/>
  <enum name='errKBFailWritePreference' value='-30854'/>
  <enum name='errKBIlligalParameters' value='-30851'/>
  <enum name='errKBPS2KeyboardNotAvailable' value='-30850'/>
  <enum name='errNeedsCompositedWindow' value='-30598'/>
  <enum name='eventAlreadyPostedErr' value='-9860'/>
  <enum name='eventClassIncorrectErr' value='-9864'/>
  <enum name='eventClassInvalidErr' value='-9862'/>
  <enum name='eventDeferAccessibilityEventErr' value='-9865'/>
  <enum name='eventHandlerAlreadyInstalledErr' value='-9866'/>
  <enum name='eventHotKeyExistsErr' value='-9878'/>
  <enum name='eventHotKeyInvalidErr' value='-9879'/>
  <enum name='eventInternalErr' value='-9868'/>
  <enum name='eventKindIncorrectErr' value='-9869'/>
  <enum name='eventLoopQuitErr' value='-9876'/>
  <enum name='eventLoopTimedOutErr' value='-9875'/>
  <enum name='eventNotHandledErr' value='-9874'/>
  <enum name='eventNotInQueueErr' value='-9877'/>
  <enum name='eventParameterNotFoundErr' value='-9870'/>
  <enum name='eventPassToNextTargetErr' value='-9880'/>
  <enum name='eventTargetBusyErr' value='-9861'/>
  <enum name='everyEvent' value='65535'/>
  <enum name='faceBit' value='1'/>
  <enum name='flavorDataPromised' value='512'/>
  <enum name='flavorNotSaved' value='4'/>
  <enum name='flavorSenderOnly' value='1'/>
  <enum name='flavorSenderTranslated' value='2'/>
  <enum name='flavorSystemTranslated' value='256'/>
  <enum name='flavorTypeDirectory' value='1684632185'/>
  <enum name='flavorTypeHFS' value='1751544608'/>
  <enum name='flavorTypePromiseHFS' value='1885890163'/>
  <enum name='floatGrowProc' value='1987'/>
  <enum name='floatProc' value='1985'/>
  <enum name='floatSideGrowProc' value='1995'/>
  <enum name='floatSideProc' value='1993'/>
  <enum name='floatSideZoomGrowProc' value='1999'/>
  <enum name='floatSideZoomProc' value='1997'/>
  <enum name='floatZoomGrowProc' value='1991'/>
  <enum name='floatZoomProc' value='1989'/>
  <enum name='fontBit' value='0'/>
  <enum name='gestaltContextualMenuAttr' value='1668116085'/>
  <enum name='gestaltContextualMenuHasAttributeAndModifierKeys' value='2'/>
  <enum name='gestaltContextualMenuHasUnicodeSupport' value='3'/>
  <enum name='gestaltContextualMenuTrapAvailable' value='1'/>
  <enum name='gestaltContextualMenuUnusedBit' value='0'/>
  <enum name='gestaltKBPS2Keyboards' value='1'/>
  <enum name='gestaltKBPS2SetIDToAny' value='2'/>
  <enum name='gestaltKBPS2SetTranslationTable' value='4'/>
  <enum name='gestaltKeyboardsAttr' value='1801610355'/>
  <enum name='hAxisOnly' value='1'/>
  <enum name='hMenuCmd' value='27'/>
  <enum name='hiArchiveEncodingCompleteErr' value='-6782'/>
  <enum name='hiArchiveHIObjectIgnoresArchivingErr' value='-6783'/>
  <enum name='hiArchiveKeyNotAvailableErr' value='-6781'/>
  <enum name='hiArchiveTypeMismatchErr' value='-6780'/>
  <enum name='hiObjectClassExistsErr' value='-22080'/>
  <enum name='hiObjectClassHasInstancesErr' value='-22081'/>
  <enum name='hiObjectClassHasSubclassesErr' value='-22082'/>
  <enum name='hiObjectClassIsAbstractErr' value='-22083'/>
  <enum name='hierMenu' value='-1'/>
  <enum name='highLevelEventMask' value='1024'/>
  <enum name='iconItem' value='32'/>
  <enum name='inCollapseBox' value='11'/>
  <enum name='inContent' value='3'/>
  <enum name='inDesk' value='0'/>
  <enum name='inDrag' value='4'/>
  <enum name='inGoAway' value='6'/>
  <enum name='inGrow' value='5'/>
  <enum name='inMenuBar' value='1'/>
  <enum name='inNoWindow' value='0'/>
  <enum name='inProxyIcon' value='12'/>
  <enum name='inStructure' value='15'/>
  <enum name='inSysWindow' value='2'/>
  <enum name='inToolbarButton' value='13'/>
  <enum name='inZoomIn' value='7'/>
  <enum name='inZoomOut' value='8'/>
  <enum name='initCntl' value='3'/>
  <enum name='intDrawHook' value='1'/>
  <enum name='intEOLHook' value='0'/>
  <enum name='intHitTestHook' value='3'/>
  <enum name='intInlineInputTSMTEPostUpdateHook' value='9'/>
  <enum name='intInlineInputTSMTEPreUpdateHook' value='8'/>
  <enum name='intNWidthHook' value='6'/>
  <enum name='intTextWidthHook' value='7'/>
  <enum name='intWidthHook' value='2'/>
  <enum name='itemDisable' value='128'/>
  <enum name='kAEAppearanceChanged' value='1953000805'/>
  <enum name='kAEDoNotIgnoreHandler' value='0'/>
  <enum name='kAEDontDisposeOnResume' value64='2147483648' value='-2147483648'/>
  <enum name='kAEIgnoreAppEventHandler' value='2'/>
  <enum name='kAEIgnoreAppPhacHandler' value='1'/>
  <enum name='kAEIgnoreSysEventHandler' value='8'/>
  <enum name='kAEIgnoreSysPhacHandler' value='4'/>
  <enum name='kAEIngoreBuiltInEventHandler' value='16'/>
  <enum name='kAEInteractWithAll' value='2'/>
  <enum name='kAEInteractWithLocal' value='1'/>
  <enum name='kAEInteractWithSelf' value='0'/>
  <enum name='kAENoDispatch' value='0'/>
  <enum name='kAESmallSystemFontChanged' value='1936942702'/>
  <enum name='kAESystemFontChanged' value='1937339238'/>
  <enum name='kAEThemeSwitch' value='1953000805'/>
  <enum name='kAEUseStandardDispatch' value64='4294967295' value='-1'/>
  <enum name='kAEViewsFontChanged' value='1986424436'/>
  <enum name='kActivateAndHandleClick' value='3'/>
  <enum name='kActivateAndIgnoreClick' value='2'/>
  <enum name='kAlertCautionAlert' value='2'/>
  <enum name='kAlertDefaultCancelText' value='-1'/>
  <enum name='kAlertDefaultOKText' value='-1'/>
  <enum name='kAlertDefaultOtherText' value='-1'/>
  <enum name='kAlertFlagsAlertIsMovable' value='4'/>
  <enum name='kAlertFlagsUseControlHierarchy' value='2'/>
  <enum name='kAlertFlagsUseThemeBackground' value='1'/>
  <enum name='kAlertFlagsUseThemeControls' value='8'/>
  <enum name='kAlertNoteAlert' value='1'/>
  <enum name='kAlertPlainAlert' value='3'/>
  <enum name='kAlertStdAlertCancelButton' value='2'/>
  <enum name='kAlertStdAlertHelpButton' value='4'/>
  <enum name='kAlertStdAlertOKButton' value='1'/>
  <enum name='kAlertStdAlertOtherButton' value='3'/>
  <enum name='kAlertStopAlert' value='0'/>
  <enum name='kAlertVariantCode' value='7'/>
  <enum name='kAlertWindowClass' value='1'/>
  <enum name='kAllWindowClasses' value='4294967295'/>
  <enum name='kAltPlainWindowClass' value='16'/>
  <enum name='kAppearanceEventClass' value='1634758770'/>
  <enum name='kAppearancePartDownButton' value='21'/>
  <enum name='kAppearancePartIndicator' value='129'/>
  <enum name='kAppearancePartLeftButton' value='20'/>
  <enum name='kAppearancePartMetaDisabled' value='254'/>
  <enum name='kAppearancePartMetaInactive' value='255'/>
  <enum name='kAppearancePartMetaNone' value='0'/>
  <enum name='kAppearancePartPageDownArea' value='23'/>
  <enum name='kAppearancePartPageLeftArea' value='22'/>
  <enum name='kAppearancePartPageRightArea' value='23'/>
  <enum name='kAppearancePartPageUpArea' value='22'/>
  <enum name='kAppearancePartRightButton' value='21'/>
  <enum name='kAppearancePartUpButton' value='20'/>
  <enum name='kAppearanceRegionCloseBox' value='2'/>
  <enum name='kAppearanceRegionCollapseBox' value='7'/>
  <enum name='kAppearanceRegionContent' value='33'/>
  <enum name='kAppearanceRegionDrag' value='5'/>
  <enum name='kAppearanceRegionGrow' value='6'/>
  <enum name='kAppearanceRegionStructure' value='32'/>
  <enum name='kAppearanceRegionTitleBar' value='0'/>
  <enum name='kAppearanceRegionTitleProxyIcon' value='8'/>
  <enum name='kAppearanceRegionTitleText' value='1'/>
  <enum name='kAppearanceRegionZoomBox' value='3'/>
  <enum name='kAppleLogoCharCode' value='20'/>
  <enum name='kAppleLogoUnicode' value='63743'/>
  <enum name='kApplicationWindowKind' value='8'/>
  <enum name='kAvailBoundsChangedForDisplay' value='2'/>
  <enum name='kAvailBoundsChangedForDock' value='1'/>
  <enum name='kBackspaceCharCode' value='8'/>
  <enum name='kBellCharCode' value='7'/>
  <enum name='kBulletCharCode' value='165'/>
  <enum name='kBulletUnicode' value='8226'/>
  <enum name='kButtonDialogItem' value='4'/>
  <enum name='kCMActivateTextService' value='4'/>
  <enum name='kCMCopyTextServiceInputModeList' value='15'/>
  <enum name='kCMDeactivateTextService' value='5'/>
  <enum name='kCMFixTextService' value='9'/>
  <enum name='kCMGetInputModePaletteMenu' value='17'/>
  <enum name='kCMGetScriptLangSupport' value='1'/>
  <enum name='kCMGetTextServiceMenu' value='7'/>
  <enum name='kCMGetTextServiceProperty' value='12'/>
  <enum name='kCMHelpItemAppleGuide' value='1'/>
  <enum name='kCMHelpItemNoHelp' value='0'/>
  <enum name='kCMHelpItemOtherHelp' value='2'/>
  <enum name='kCMHelpItemRemoveHelp' value='3'/>
  <enum name='kCMHidePaletteWindows' value='11'/>
  <enum name='kCMInitiateTextService' value='2'/>
  <enum name='kCMInputModePaletteItemHit' value='16'/>
  <enum name='kCMMenuItemSelected' value='1'/>
  <enum name='kCMNothingSelected' value='0'/>
  <enum name='kCMSetTextServiceCursor' value='10'/>
  <enum name='kCMSetTextServiceProperty' value='13'/>
  <enum name='kCMShowHelpSelected' value='3'/>
  <enum name='kCMTerminateTextService' value='3'/>
  <enum name='kCMTextServiceEvent' value='6'/>
  <enum name='kCMTextServiceEventRef' value='6'/>
  <enum name='kCMTextServiceMenuSelect' value='8'/>
  <enum name='kCMUCTextServiceEvent' value='14'/>
  <enum name='kCautionIcon' value='2'/>
  <enum name='kCenterOnScreen' value='2'/>
  <enum name='kCharacterPaletteInputMethodClass' value='1668312180'/>
  <enum name='kCheckBoxDialogItem' value='5'/>
  <enum name='kCheckCharCode' value='18'/>
  <enum name='kCheckUnicode' value='10003'/>
  <enum name='kClearCharCode' value='27'/>
  <enum name='kCommandCharCode' value='17'/>
  <enum name='kCommandUnicode' value='8984'/>
  <enum name='kControlAddFontSizeMask' value='256'/>
  <enum name='kControlAddToMetaFontMask' value='512'/>
  <enum name='kControlAutoToggles' value='16384'/>
  <enum name='kControlBehaviorCommandMenu' value='8192'/>
  <enum name='kControlBehaviorMultiValueMenu' value='16384'/>
  <enum name='kControlBehaviorOffsetContents' value='32768'/>
  <enum name='kControlBehaviorPushbutton' value='0'/>
  <enum name='kControlBehaviorSingleValueMenu' value='0'/>
  <enum name='kControlBehaviorSticky' value='512'/>
  <enum name='kControlBehaviorToggles' value='256'/>
  <enum name='kControlBevelButtonAlignBottom' value='4'/>
  <enum name='kControlBevelButtonAlignBottomLeft' value='6'/>
  <enum name='kControlBevelButtonAlignBottomRight' value='8'/>
  <enum name='kControlBevelButtonAlignCenter' value='0'/>
  <enum name='kControlBevelButtonAlignLeft' value='1'/>
  <enum name='kControlBevelButtonAlignRight' value='2'/>
  <enum name='kControlBevelButtonAlignSysDirection' value='-1'/>
  <enum name='kControlBevelButtonAlignTextCenter' value='1'/>
  <enum name='kControlBevelButtonAlignTextFlushLeft' value='-2'/>
  <enum name='kControlBevelButtonAlignTextFlushRight' value='-1'/>
  <enum name='kControlBevelButtonAlignTextSysDirection' value='0'/>
  <enum name='kControlBevelButtonAlignTop' value='3'/>
  <enum name='kControlBevelButtonAlignTopLeft' value='5'/>
  <enum name='kControlBevelButtonAlignTopRight' value='7'/>
  <enum name='kControlBevelButtonCenterPopupGlyphTag' value='1885826147'/>
  <enum name='kControlBevelButtonContentTag' value='1668247156'/>
  <enum name='kControlBevelButtonGraphicAlignTag' value='1734437993'/>
  <enum name='kControlBevelButtonGraphicOffsetTag' value='1735353958'/>
  <enum name='kControlBevelButtonIsMultiValueMenuTag' value='1836412020'/>
  <enum name='kControlBevelButtonKindTag' value='1650811499'/>
  <enum name='kControlBevelButtonLargeBevel' value='2'/>
  <enum name='kControlBevelButtonLargeBevelProc' value='34'/>
  <enum name='kControlBevelButtonLargeBevelVariant' value='2'/>
  <enum name='kControlBevelButtonLastMenuTag' value='1819111029'/>
  <enum name='kControlBevelButtonMenuDelayTag' value='1835297913'/>
  <enum name='kControlBevelButtonMenuHandleTag' value='1835560548'/>
  <enum name='kControlBevelButtonMenuOnBottom' value='0'/>
  <enum name='kControlBevelButtonMenuOnRight' value='4'/>
  <enum name='kControlBevelButtonMenuOnRightVariant' value='4'/>
  <enum name='kControlBevelButtonMenuRefTag' value='1835560548'/>
  <enum name='kControlBevelButtonMenuValueTag' value='1836474732'/>
  <enum name='kControlBevelButtonNormalBevel' value='1'/>
  <enum name='kControlBevelButtonNormalBevelProc' value='33'/>
  <enum name='kControlBevelButtonNormalBevelVariant' value='1'/>
  <enum name='kControlBevelButtonOwnedMenuRefTag' value='1869443686'/>
  <enum name='kControlBevelButtonPlaceAboveGraphic' value='4'/>
  <enum name='kControlBevelButtonPlaceBelowGraphic' value='3'/>
  <enum name='kControlBevelButtonPlaceNormally' value='0'/>
  <enum name='kControlBevelButtonPlaceSysDirection' value='-1'/>
  <enum name='kControlBevelButtonPlaceToLeftOfGraphic' value='2'/>
  <enum name='kControlBevelButtonPlaceToRightOfGraphic' value='1'/>
  <enum name='kControlBevelButtonScaleIconTag' value='1935892844'/>
  <enum name='kControlBevelButtonSmallBevel' value='0'/>
  <enum name='kControlBevelButtonSmallBevelProc' value='32'/>
  <enum name='kControlBevelButtonSmallBevelVariant' value='0'/>
  <enum name='kControlBevelButtonTextAlignTag' value='1952541801'/>
  <enum name='kControlBevelButtonTextOffsetTag' value='1953457766'/>
  <enum name='kControlBevelButtonTextPlaceTag' value='1953524835'/>
  <enum name='kControlBevelButtonTransformTag' value='1953653102'/>
  <enum name='kControlBoundsChangePositionChanged' value='8'/>
  <enum name='kControlBoundsChangeSizeChanged' value='4'/>
  <enum name='kControlButtonPart' value='10'/>
  <enum name='kControlChasingArrowsAnimatingTag' value='1634625901'/>
  <enum name='kControlChasingArrowsProc' value='112'/>
  <enum name='kControlCheckBoxAutoToggleProc' value='371'/>
  <enum name='kControlCheckBoxCheckedValue' value='1'/>
  <enum name='kControlCheckBoxMixedValue' value='2'/>
  <enum name='kControlCheckBoxPart' value='11'/>
  <enum name='kControlCheckBoxProc' value='369'/>
  <enum name='kControlCheckBoxUncheckedValue' value='0'/>
  <enum name='kControlClickableMetaPart' value='-4'/>
  <enum name='kControlClockAMPMPart' value='12'/>
  <enum name='kControlClockAnimatingTag' value='1634625901'/>
  <enum name='kControlClockDateProc' value='242'/>
  <enum name='kControlClockFlagDisplayOnly' value='1'/>
  <enum name='kControlClockFlagLive' value='2'/>
  <enum name='kControlClockFlagStandard' value='0'/>
  <enum name='kControlClockFontStyleTag' value='1718578804'/>
  <enum name='kControlClockHourDayPart' value='9'/>
  <enum name='kControlClockIsDisplayOnly' value='1'/>
  <enum name='kControlClockIsLive' value='2'/>
  <enum name='kControlClockLongDateTag' value='1684108389'/>
  <enum name='kControlClockMinuteMonthPart' value='10'/>
  <enum name='kControlClockMonthYearProc' value='243'/>
  <enum name='kControlClockNoFlags' value='0'/>
  <enum name='kControlClockPart' value='8'/>
  <enum name='kControlClockSecondYearPart' value='11'/>
  <enum name='kControlClockTimeProc' value='240'/>
  <enum name='kControlClockTimeSecondsProc' value='241'/>
  <enum name='kControlClockTypeHourMinute' value='0'/>
  <enum name='kControlClockTypeHourMinuteSecond' value='1'/>
  <enum name='kControlClockTypeMonthDayYear' value='2'/>
  <enum name='kControlClockTypeMonthYear' value='3'/>
  <enum name='kControlCollectionTagBounds' value='1651471726'/>
  <enum name='kControlCollectionTagCommand' value='1668113440'/>
  <enum name='kControlCollectionTagIDID' value='1768188260'/>
  <enum name='kControlCollectionTagIDSignature' value='1768190825'/>
  <enum name='kControlCollectionTagMaximum' value='1835104288'/>
  <enum name='kControlCollectionTagMinimum' value='1835626016'/>
  <enum name='kControlCollectionTagRefCon' value='1919247971'/>
  <enum name='kControlCollectionTagTitle' value='1953068140'/>
  <enum name='kControlCollectionTagUnicodeTitle' value='1970566252'/>
  <enum name='kControlCollectionTagValue' value='1986096245'/>
  <enum name='kControlCollectionTagVarCode' value='1986097763'/>
  <enum name='kControlCollectionTagViewSize' value='1986618743'/>
  <enum name='kControlCollectionTagVisibility' value='1986622313'/>
  <enum name='kControlColorTableResourceType' value='1667462242'/>
  <enum name='kControlContentCGImageRef' value='134'/>
  <enum name='kControlContentCIconHandle' value='130'/>
  <enum name='kControlContentCIconRes' value='2'/>
  <enum name='kControlContentICON' value='133'/>
  <enum name='kControlContentICONRes' value='4'/>
  <enum name='kControlContentIconRef' value='132'/>
  <enum name='kControlContentIconSuiteHandle' value='129'/>
  <enum name='kControlContentIconSuiteRes' value='1'/>
  <enum name='kControlContentMetaPart' value='-2'/>
  <enum name='kControlContentPictHandle' value='131'/>
  <enum name='kControlContentPictRes' value='3'/>
  <enum name='kControlContentTextOnly' value='0'/>
  <enum name='kControlDataBrowserDraggedPart' value='25'/>
  <enum name='kControlDataBrowserEditTextKeyFilterTag' value='1718383730'/>
  <enum name='kControlDataBrowserEditTextValidationProcTag' value='1986096233'/>
  <enum name='kControlDataBrowserIncludesFrameAndFocusTag' value='1651663986'/>
  <enum name='kControlDataBrowserKeyFilterTag' value='1718383730'/>
  <enum name='kControlDataBrowserPart' value='24'/>
  <enum name='kControlDefObjectClass' value='1'/>
  <enum name='kControlDefProcPtr' value='0'/>
  <enum name='kControlDefProcResourceType' value='1128547654'/>
  <enum name='kControlDefProcType' value='1128547654'/>
  <enum name='kControlDialogItem' value='4'/>
  <enum name='kControlDisabledPart' value='254'/>
  <enum name='kControlDisclosureButtonClosed' value='0'/>
  <enum name='kControlDisclosureButtonDisclosed' value='1'/>
  <enum name='kControlDisclosureTrianglePointDefault' value='0'/>
  <enum name='kControlDisclosureTrianglePointLeft' value='2'/>
  <enum name='kControlDisclosureTrianglePointRight' value='1'/>
  <enum name='kControlDownButtonPart' value='21'/>
  <enum name='kControlEditTextCFStringTag' value='1667658612'/>
  <enum name='kControlEditTextCharCount' value='1667789411'/>
  <enum name='kControlEditTextFixedTextTag' value='1718909044'/>
  <enum name='kControlEditTextInlineInputProc' value='276'/>
  <enum name='kControlEditTextInlinePostUpdateProcTag' value='1886352752'/>
  <enum name='kControlEditTextInlinePreUpdateProcTag' value='1886549360'/>
  <enum name='kControlEditTextInsertCFStringRefTag' value='1768842086'/>
  <enum name='kControlEditTextInsertTextBufferTag' value='1768846456'/>
  <enum name='kControlEditTextKeyFilterTag' value='1718383730'/>
  <enum name='kControlEditTextKeyScriptBehaviorTag' value='1802724210'/>
  <enum name='kControlEditTextLockedTag' value='1819239275'/>
  <enum name='kControlEditTextPart' value='5'/>
  <enum name='kControlEditTextPasswordCFStringTag' value='1886872422'/>
  <enum name='kControlEditTextPasswordProc' value='274'/>
  <enum name='kControlEditTextPasswordTag' value='1885434739'/>
  <enum name='kControlEditTextProc' value='272'/>
  <enum name='kControlEditTextSelectionTag' value='1936026725'/>
  <enum name='kControlEditTextSingleLineTag' value='1936157795'/>
  <enum name='kControlEditTextStyleTag' value='1718578804'/>
  <enum name='kControlEditTextTEHandleTag' value='1952997742'/>
  <enum name='kControlEditTextTextTag' value='1952807028'/>
  <enum name='kControlEditTextValidationProcTag' value='1986096233'/>
  <enum name='kControlEditUnicodeTextPasswordProc' value='914'/>
  <enum name='kControlEditUnicodeTextPostUpdateProcTag' value='1970304368'/>
  <enum name='kControlEditUnicodeTextProc' value='912'/>
  <enum name='kControlEntireControl' value='0'/>
  <enum name='kControlFocusNextPart' value='-1'/>
  <enum name='kControlFocusNoPart' value='0'/>
  <enum name='kControlFocusPrevPart' value='-2'/>
  <enum name='kControlFontBigSystemFont' value='-1'/>
  <enum name='kControlFontMiniSystemFont' value='-5'/>
  <enum name='kControlFontSmallBoldSystemFont' value='-3'/>
  <enum name='kControlFontSmallSystemFont' value='-2'/>
  <enum name='kControlFontStyleTag' value='1718578804'/>
  <enum name='kControlFontViewSystemFont' value='-4'/>
  <enum name='kControlGetsFocusOnClick' value='256'/>
  <enum name='kControlGroupBoxCheckBoxProc' value='161'/>
  <enum name='kControlGroupBoxFontStyleTag' value='1718578804'/>
  <enum name='kControlGroupBoxFrameRectTag' value='1718773091'/>
  <enum name='kControlGroupBoxMenuHandleTag' value='1835557230'/>
  <enum name='kControlGroupBoxMenuRefTag' value='1835557230'/>
  <enum name='kControlGroupBoxPopupButtonProc' value='162'/>
  <enum name='kControlGroupBoxSecondaryCheckBoxProc' value='165'/>
  <enum name='kControlGroupBoxSecondaryPopupButtonProc' value='166'/>
  <enum name='kControlGroupBoxSecondaryTextTitleProc' value='164'/>
  <enum name='kControlGroupBoxTextTitleProc' value='160'/>
  <enum name='kControlGroupBoxTitleRectTag' value='1953654115'/>
  <enum name='kControlHandlesTracking' value='32'/>
  <enum name='kControlHasRadioBehavior' value='2048'/>
  <enum name='kControlHasSpecialBackground' value='128'/>
  <enum name='kControlIconAlignmentTag' value='1634494318'/>
  <enum name='kControlIconContentTag' value='1668247156'/>
  <enum name='kControlIconNoTrackProc' value='321'/>
  <enum name='kControlIconPart' value='7'/>
  <enum name='kControlIconProc' value='320'/>
  <enum name='kControlIconRefNoTrackProc' value='325'/>
  <enum name='kControlIconRefProc' value='324'/>
  <enum name='kControlIconResourceIDTag' value='1769104755'/>
  <enum name='kControlIconSuiteNoTrackProc' value='323'/>
  <enum name='kControlIconSuiteProc' value='322'/>
  <enum name='kControlIconTransformTag' value='1953654381'/>
  <enum name='kControlIdlesWithTimer' value='8388608'/>
  <enum name='kControlImageWellContentTag' value='1668247156'/>
  <enum name='kControlImageWellIsDragDestinationTag' value='1685217639'/>
  <enum name='kControlImageWellPart' value='26'/>
  <enum name='kControlImageWellProc' value='176'/>
  <enum name='kControlImageWellTransformTag' value='1953653102'/>
  <enum name='kControlInactivePart' value='255'/>
  <enum name='kControlIndicatorPart' value='129'/>
  <enum name='kControlInvertsUpDownValueMeaning' value='16777216'/>
  <enum name='kControlKeyFilterBlockKey' value='0'/>
  <enum name='kControlKeyFilterPassKey' value='1'/>
  <enum name='kControlKeyFilterTag' value='1718383730'/>
  <enum name='kControlKeyScriptBehaviorAllowAnyScript' value='1634629920'/>
  <enum name='kControlKeyScriptBehaviorPrefersRoman' value='1886547310'/>
  <enum name='kControlKeyScriptBehaviorRequiresRoman' value='1920101742'/>
  <enum name='kControlKindBevelButton' value='1650816620'/>
  <enum name='kControlKindChasingArrows' value='1667330674'/>
  <enum name='kControlKindCheckBox' value='1667395448'/>
  <enum name='kControlKindCheckGroupBox' value='1667723888'/>
  <enum name='kControlKindClock' value='1668047723'/>
  <enum name='kControlKindDataBrowser' value='1684108386'/>
  <enum name='kControlKindDisclosureButton' value='1684632418'/>
  <enum name='kControlKindDisclosureTriangle' value='1684632436'/>
  <enum name='kControlKindEditText' value='1702131828'/>
  <enum name='kControlKindEditUnicodeText' value='1702196344'/>
  <enum name='kControlKindGroupBox' value='1735553122'/>
  <enum name='kControlKindHIComboBox' value='1667392120'/>
  <enum name='kControlKindHIGrowBoxView' value='1735552887'/>
  <enum name='kControlKindHIImageView' value='1768776039'/>
  <enum name='kControlKindHIMenuView' value='1835363957'/>
  <enum name='kControlKindHIScrollView' value='1935897196'/>
  <enum name='kControlKindHISearchField' value='1936877156'/>
  <enum name='kControlKindHIStandardMenuView' value='1936551541'/>
  <enum name='kControlKindHITextView' value='1751741560'/>
  <enum name='kControlKindIcon' value='1768124270'/>
  <enum name='kControlKindImageWell' value='2003135596'/>
  <enum name='kControlKindListBox' value='1818390392'/>
  <enum name='kControlKindLittleArrows' value='1818325618'/>
  <enum name='kControlKindPicture' value='1885954932'/>
  <enum name='kControlKindPlacard' value='1886151011'/>
  <enum name='kControlKindPopupArrow' value='1885434482'/>
  <enum name='kControlKindPopupButton' value='1886351458'/>
  <enum name='kControlKindPopupGroupBox' value='1885827696'/>
  <enum name='kControlKindProgressBar' value='1886545762'/>
  <enum name='kControlKindPushButton' value='1886745448'/>
  <enum name='kControlKindPushIconButton' value='1885954926'/>
  <enum name='kControlKindRadioButton' value='1919183215'/>
  <enum name='kControlKindRadioGroup' value='1919382128'/>
  <enum name='kControlKindRelevanceBar' value='1919249506'/>
  <enum name='kControlKindRoundButton' value='1919837282'/>
  <enum name='kControlKindScrollBar' value='1935827314'/>
  <enum name='kControlKindScrollingTextBox' value='1937007224'/>
  <enum name='kControlKindSeparator' value='1936027745'/>
  <enum name='kControlKindSignatureApple' value='1634758764'/>
  <enum name='kControlKindSlider' value='1936483442'/>
  <enum name='kControlKindStaticText' value='1937012852'/>
  <enum name='kControlKindTabs' value='1952539251'/>
  <enum name='kControlKindTag' value='1802071652'/>
  <enum name='kControlKindUserPane' value='1970299246'/>
  <enum name='kControlKindWindowHeader' value='2003330404'/>
  <enum name='kControlLabelPart' value='1'/>
  <enum name='kControlListBoxAutoSizeProc' value='353'/>
  <enum name='kControlListBoxDoubleClickPart' value='25'/>
  <enum name='kControlListBoxDoubleClickTag' value='1684171875'/>
  <enum name='kControlListBoxFontStyleTag' value='1718578804'/>
  <enum name='kControlListBoxKeyFilterTag' value='1718383730'/>
  <enum name='kControlListBoxLDEFTag' value='1818518886'/>
  <enum name='kControlListBoxListHandleTag' value='1818780014'/>
  <enum name='kControlListBoxPart' value='24'/>
  <enum name='kControlListBoxProc' value='352'/>
  <enum name='kControlListDescResType' value='1818518899'/>
  <enum name='kControlLittleArrowsIncrementValueTag' value='1768842098'/>
  <enum name='kControlLittleArrowsProc' value='96'/>
  <enum name='kControlMenuPart' value='2'/>
  <enum name='kControlMsgActivate' value='22'/>
  <enum name='kControlMsgApplyTextColor' value='30'/>
  <enum name='kControlMsgCalcBestRect' value='14'/>
  <enum name='kControlMsgCalcValueFromPos' value='26'/>
  <enum name='kControlMsgContextualMenuClick' value='47'/>
  <enum name='kControlMsgDisplayDebugInfo' value='46'/>
  <enum name='kControlMsgDragEnter' value='38'/>
  <enum name='kControlMsgDragLeave' value='39'/>
  <enum name='kControlMsgDragReceive' value='41'/>
  <enum name='kControlMsgDragWithin' value='40'/>
  <enum name='kControlMsgDrawGhost' value='13'/>
  <enum name='kControlMsgFlatten' value='32'/>
  <enum name='kControlMsgFocus' value='16'/>
  <enum name='kControlMsgGetClickActivation' value='48'/>
  <enum name='kControlMsgGetData' value='21'/>
  <enum name='kControlMsgGetFeatures' value='19'/>
  <enum name='kControlMsgGetRegion' value='31'/>
  <enum name='kControlMsgHandleTracking' value='15'/>
  <enum name='kControlMsgIdle' value='18'/>
  <enum name='kControlMsgKeyDown' value='17'/>
  <enum name='kControlMsgSetCursor' value='33'/>
  <enum name='kControlMsgSetData' value='20'/>
  <enum name='kControlMsgSetUpBackground' value='23'/>
  <enum name='kControlMsgSubControlAdded' value='28'/>
  <enum name='kControlMsgSubControlRemoved' value='29'/>
  <enum name='kControlMsgSubValueChanged' value='25'/>
  <enum name='kControlMsgTestNewMsgSupport' value='27'/>
  <enum name='kControlNoContent' value='0'/>
  <enum name='kControlNoPart' value='0'/>
  <enum name='kControlNoVariant' value='0'/>
  <enum name='kControlOpaqueMetaPart' value='-3'/>
  <enum name='kControlPageDownPart' value='23'/>
  <enum name='kControlPageUpPart' value='22'/>
  <enum name='kControlPictureHandleTag' value='1885954920'/>
  <enum name='kControlPictureNoTrackProc' value='305'/>
  <enum name='kControlPicturePart' value='6'/>
  <enum name='kControlPictureProc' value='304'/>
  <enum name='kControlPlacardProc' value='224'/>
  <enum name='kControlPopupArrowEastProc' value='192'/>
  <enum name='kControlPopupArrowNorthProc' value='194'/>
  <enum name='kControlPopupArrowOrientationEast' value='0'/>
  <enum name='kControlPopupArrowOrientationNorth' value='2'/>
  <enum name='kControlPopupArrowOrientationSouth' value='3'/>
  <enum name='kControlPopupArrowOrientationWest' value='1'/>
  <enum name='kControlPopupArrowSizeNormal' value='0'/>
  <enum name='kControlPopupArrowSizeSmall' value='1'/>
  <enum name='kControlPopupArrowSmallEastProc' value='196'/>
  <enum name='kControlPopupArrowSmallNorthProc' value='198'/>
  <enum name='kControlPopupArrowSmallSouthProc' value='199'/>
  <enum name='kControlPopupArrowSmallWestProc' value='197'/>
  <enum name='kControlPopupArrowSouthProc' value='195'/>
  <enum name='kControlPopupArrowWestProc' value='193'/>
  <enum name='kControlPopupButtonCheckCurrentTag' value='1667785579'/>
  <enum name='kControlPopupButtonExtraHeightTag' value='1702389876'/>
  <enum name='kControlPopupButtonMenuHandleTag' value='1835557230'/>
  <enum name='kControlPopupButtonMenuIDTag' value='1835952484'/>
  <enum name='kControlPopupButtonMenuRefTag' value='1835557230'/>
  <enum name='kControlPopupButtonOwnedMenuRefTag' value='1869443686'/>
  <enum name='kControlPopupButtonProc' value='400'/>
  <enum name='kControlPopupFixedWidthVariant' value='1'/>
  <enum name='kControlPopupUseAddResMenuVariant' value='4'/>
  <enum name='kControlPopupUseWFontVariant' value='8'/>
  <enum name='kControlPopupVariableWidthVariant' value='2'/>
  <enum name='kControlProgressBarAnimatingTag' value='1634625901'/>
  <enum name='kControlProgressBarIndeterminateTag' value='1768842341'/>
  <enum name='kControlProgressBarProc' value='80'/>
  <enum name='kControlPropertyPersistent' value='1'/>
  <enum name='kControlPushButLeftIconProc' value='374'/>
  <enum name='kControlPushButRightIconProc' value='375'/>
  <enum name='kControlPushButtonCancelTag' value='1668178796'/>
  <enum name='kControlPushButtonDefaultTag' value='1684434036'/>
  <enum name='kControlPushButtonIconOnLeft' value='6'/>
  <enum name='kControlPushButtonIconOnRight' value='7'/>
  <enum name='kControlPushButtonProc' value='368'/>
  <enum name='kControlRadioButtonAutoToggleProc' value='372'/>
  <enum name='kControlRadioButtonCheckedValue' value='1'/>
  <enum name='kControlRadioButtonMixedValue' value='2'/>
  <enum name='kControlRadioButtonPart' value='11'/>
  <enum name='kControlRadioButtonProc' value='370'/>
  <enum name='kControlRadioButtonUncheckedValue' value='0'/>
  <enum name='kControlRadioGroupPart' value='27'/>
  <enum name='kControlRadioGroupProc' value='416'/>
  <enum name='kControlRelevanceBarProc' value='81'/>
  <enum name='kControlRoundButtonContentTag' value='1668247156'/>
  <enum name='kControlRoundButtonLargeSize' value='2'/>
  <enum name='kControlRoundButtonNormalSize' value='0'/>
  <enum name='kControlRoundButtonSizeTag' value='1936292453'/>
  <enum name='kControlScrollBarLiveProc' value='386'/>
  <enum name='kControlScrollBarProc' value='384'/>
  <enum name='kControlScrollBarShowsArrowsTag' value='1634890351'/>
  <enum name='kControlScrollTextBoxAnimatingTag' value='1634625901'/>
  <enum name='kControlScrollTextBoxAutoScrollAmountTag' value='1935764852'/>
  <enum name='kControlScrollTextBoxAutoScrollProc' value='433'/>
  <enum name='kControlScrollTextBoxContentsTag' value='1953654131'/>
  <enum name='kControlScrollTextBoxDelayBeforeAutoScrollTag' value='1937007724'/>
  <enum name='kControlScrollTextBoxDelayBetweenAutoScrollTag' value='1935893612'/>
  <enum name='kControlScrollTextBoxProc' value='432'/>
  <enum name='kControlSearchFieldCancelPart' value='30'/>
  <enum name='kControlSearchFieldMenuPart' value='31'/>
  <enum name='kControlSeparatorLineProc' value='144'/>
  <enum name='kControlSizeAuto' value='65535'/>
  <enum name='kControlSizeLarge' value='2'/>
  <enum name='kControlSizeMini' value='3'/>
  <enum name='kControlSizeNormal' value='0'/>
  <enum name='kControlSizeSmall' value='1'/>
  <enum name='kControlSizeTag' value='1936292453'/>
  <enum name='kControlSliderDoesNotPoint' value='2'/>
  <enum name='kControlSliderHasTickMarks' value='2'/>
  <enum name='kControlSliderLiveFeedback' value='1'/>
  <enum name='kControlSliderNonDirectional' value='8'/>
  <enum name='kControlSliderPointsDownOrRight' value='0'/>
  <enum name='kControlSliderPointsUpOrLeft' value='1'/>
  <enum name='kControlSliderProc' value='48'/>
  <enum name='kControlSliderReverseDirection' value='4'/>
  <enum name='kControlStaticTextCFStringTag' value='1667658612'/>
  <enum name='kControlStaticTextIsMultilineTag' value='1937009005'/>
  <enum name='kControlStaticTextProc' value='288'/>
  <enum name='kControlStaticTextStyleTag' value='1718578804'/>
  <enum name='kControlStaticTextTextHeightTag' value='1952998761'/>
  <enum name='kControlStaticTextTextTag' value='1952807028'/>
  <enum name='kControlStaticTextTruncTag' value='1953658222'/>
  <enum name='kControlStructureMetaPart' value='-1'/>
  <enum name='kControlSupportsCalcBestRect' value='512'/>
  <enum name='kControlSupportsClickActivation' value='4194304'/>
  <enum name='kControlSupportsContextualMenus' value='2097152'/>
  <enum name='kControlSupportsDataAccess' value='64'/>
  <enum name='kControlSupportsDragAndDrop' value='4096'/>
  <enum name='kControlSupportsEmbedding' value='2'/>
  <enum name='kControlSupportsFlattening' value='524288'/>
  <enum name='kControlSupportsFocus' value='4'/>
  <enum name='kControlSupportsGetRegion' value='131072'/>
  <enum name='kControlSupportsGhosting' value='1'/>
  <enum name='kControlSupportsLiveFeedback' value='1024'/>
  <enum name='kControlSupportsNewMessages' value='544172832'/>
  <enum name='kControlSupportsSetCursor' value='1048576'/>
  <enum name='kControlTabContentRectTag' value='1919247220'/>
  <enum name='kControlTabDirectionEast' value='2'/>
  <enum name='kControlTabDirectionNorth' value='0'/>
  <enum name='kControlTabDirectionSouth' value='1'/>
  <enum name='kControlTabDirectionWest' value='3'/>
  <enum name='kControlTabEnabledFlagTag' value='1701732706'/>
  <enum name='kControlTabFontStyleTag' value='1718578804'/>
  <enum name='kControlTabImageContentTag' value='1668247156'/>
  <enum name='kControlTabInfoTag' value='1952539241'/>
  <enum name='kControlTabInfoVersionOne' value='1'/>
  <enum name='kControlTabInfoVersionZero' value='0'/>
  <enum name='kControlTabLargeEastProc' value='132'/>
  <enum name='kControlTabLargeNorthProc' value='128'/>
  <enum name='kControlTabLargeProc' value='128'/>
  <enum name='kControlTabLargeSouthProc' value='130'/>
  <enum name='kControlTabLargeWestProc' value='134'/>
  <enum name='kControlTabListResType' value='1952539171'/>
  <enum name='kControlTabSizeLarge' value='0'/>
  <enum name='kControlTabSizeMini' value='3'/>
  <enum name='kControlTabSizeSmall' value='1'/>
  <enum name='kControlTabSmallEastProc' value='133'/>
  <enum name='kControlTabSmallNorthProc' value='129'/>
  <enum name='kControlTabSmallProc' value='129'/>
  <enum name='kControlTabSmallSouthProc' value='131'/>
  <enum name='kControlTabSmallWestProc' value='135'/>
  <enum name='kControlTemplateResourceType' value='1129206860'/>
  <enum name='kControlTriangleAutoToggleProc' value='66'/>
  <enum name='kControlTriangleLastValueTag' value='1818325876'/>
  <enum name='kControlTriangleLeftFacingAutoToggleProc' value='67'/>
  <enum name='kControlTriangleLeftFacingProc' value='65'/>
  <enum name='kControlTrianglePart' value='4'/>
  <enum name='kControlTriangleProc' value='64'/>
  <enum name='kControlUnicode' value='8963'/>
  <enum name='kControlUpButtonPart' value='20'/>
  <enum name='kControlUseAllMask' value='255'/>
  <enum name='kControlUseBackColorMask' value='16'/>
  <enum name='kControlUseFaceMask' value='2'/>
  <enum name='kControlUseFontMask' value='1'/>
  <enum name='kControlUseForeColorMask' value='8'/>
  <enum name='kControlUseJustMask' value='64'/>
  <enum name='kControlUseModeMask' value='32'/>
  <enum name='kControlUseSizeMask' value='4'/>
  <enum name='kControlUseThemeFontIDMask' value='128'/>
  <enum name='kControlUserItemDrawProcTag' value='1969841264'/>
  <enum name='kControlUserPaneActivateProcTag' value='1633907817'/>
  <enum name='kControlUserPaneBackgroundProcTag' value='1650549611'/>
  <enum name='kControlUserPaneDrawProcTag' value='1685217655'/>
  <enum name='kControlUserPaneFocusProcTag' value='1718575977'/>
  <enum name='kControlUserPaneHitTestProcTag' value='1751741556'/>
  <enum name='kControlUserPaneIdleProcTag' value='1768189029'/>
  <enum name='kControlUserPaneKeyDownProcTag' value='1801812324'/>
  <enum name='kControlUserPaneProc' value='256'/>
  <enum name='kControlUserPaneTrackingProcTag' value='1953653099'/>
  <enum name='kControlUsesOwningWindowsFontVariant' value='8'/>
  <enum name='kControlWantsActivate' value='16'/>
  <enum name='kControlWantsIdle' value='8'/>
  <enum name='kControlWindowHeaderIsListHeaderTag' value='1769172072'/>
  <enum name='kControlWindowHeaderProc' value='336'/>
  <enum name='kControlWindowListViewHeaderProc' value='337'/>
  <enum name='kDataBrowserAlwaysExtendSelection' value='32'/>
  <enum name='kDataBrowserAttributeColumnViewResizeWindow' value='1'/>
  <enum name='kDataBrowserAttributeListViewAlternatingRowColors' value='2'/>
  <enum name='kDataBrowserAttributeListViewDrawColumnDividers' value='4'/>
  <enum name='kDataBrowserAttributeNone' value='0'/>
  <enum name='kDataBrowserCheckboxTriState' value='256'/>
  <enum name='kDataBrowserCheckboxType' value='1667785336'/>
  <enum name='kDataBrowserClientPropertyFlagsMask' value64='18446744073692774400' value='4278190080'/>
  <enum name='kDataBrowserClientPropertyFlagsOffset' value='24'/>
  <enum name='kDataBrowserCmdTogglesSelection' value='8'/>
  <enum name='kDataBrowserColumnView' value='1668050294'/>
  <enum name='kDataBrowserColumnViewPreviewProperty' value='10'/>
  <enum name='kDataBrowserContainerAliasIDProperty' value='9'/>
  <enum name='kDataBrowserContainerClosed' value='10'/>
  <enum name='kDataBrowserContainerClosing' value='9'/>
  <enum name='kDataBrowserContainerIsClosableProperty' value='6'/>
  <enum name='kDataBrowserContainerIsOpen' value='2'/>
  <enum name='kDataBrowserContainerIsOpenableProperty' value='5'/>
  <enum name='kDataBrowserContainerIsSortableProperty' value='7'/>
  <enum name='kDataBrowserContainerOpened' value='8'/>
  <enum name='kDataBrowserContainerSorted' value='12'/>
  <enum name='kDataBrowserContainerSorting' value='11'/>
  <enum name='kDataBrowserContentHit' value='1'/>
  <enum name='kDataBrowserCustomType' value='1061109567'/>
  <enum name='kDataBrowserDateTimeDateOnly' value='512'/>
  <enum name='kDataBrowserDateTimeRelative' value='256'/>
  <enum name='kDataBrowserDateTimeSecondsToo' value='2048'/>
  <enum name='kDataBrowserDateTimeTimeOnly' value='1024'/>
  <enum name='kDataBrowserDateTimeType' value='1684108389'/>
  <enum name='kDataBrowserDefaultPropertyFlags' value='0'/>
  <enum name='kDataBrowserDoNotTruncateText' value='768'/>
  <enum name='kDataBrowserDragSelect' value='1'/>
  <enum name='kDataBrowserEditMsgClear' value='1668048225'/>
  <enum name='kDataBrowserEditMsgCopy' value='1668247673'/>
  <enum name='kDataBrowserEditMsgCut' value='1668641824'/>
  <enum name='kDataBrowserEditMsgPaste' value='1885434740'/>
  <enum name='kDataBrowserEditMsgRedo' value='1919247471'/>
  <enum name='kDataBrowserEditMsgSelectAll' value='1935764588'/>
  <enum name='kDataBrowserEditMsgUndo' value='1970168943'/>
  <enum name='kDataBrowserEditStarted' value='3'/>
  <enum name='kDataBrowserEditStopped' value='4'/>
  <enum name='kDataBrowserIconAndTextType' value='1953063790'/>
  <enum name='kDataBrowserIconType' value='1768124018'/>
  <enum name='kDataBrowserItemAdded' value='1'/>
  <enum name='kDataBrowserItemAnyState' value64='18446744073709551615' value='4294967295'/>
  <enum name='kDataBrowserItemDeselected' value='6'/>
  <enum name='kDataBrowserItemDoubleClicked' value='7'/>
  <enum name='kDataBrowserItemIsActiveProperty' value='1'/>
  <enum name='kDataBrowserItemIsContainerProperty' value='4'/>
  <enum name='kDataBrowserItemIsDragTarget' value='4'/>
  <enum name='kDataBrowserItemIsEditableProperty' value='3'/>
  <enum name='kDataBrowserItemIsSelectableProperty' value='2'/>
  <enum name='kDataBrowserItemIsSelected' value='1'/>
  <enum name='kDataBrowserItemNoProperty' value='0'/>
  <enum name='kDataBrowserItemNoState' value='0'/>
  <enum name='kDataBrowserItemParentContainerProperty' value='11'/>
  <enum name='kDataBrowserItemRemoved' value='2'/>
  <enum name='kDataBrowserItemSelected' value='5'/>
  <enum name='kDataBrowserItemSelfIdentityProperty' value='8'/>
  <enum name='kDataBrowserItemsAdd' value='0'/>
  <enum name='kDataBrowserItemsAssign' value='1'/>
  <enum name='kDataBrowserItemsRemove' value='3'/>
  <enum name='kDataBrowserItemsToggle' value='2'/>
  <enum name='kDataBrowserLatestCallbacks' value='0'/>
  <enum name='kDataBrowserLatestCustomCallbacks' value='0'/>
  <enum name='kDataBrowserListView' value='1819505782'/>
  <enum name='kDataBrowserListViewAppendColumn' value='-1'/>
  <enum name='kDataBrowserListViewDefaultColumnFlags' value='393216'/>
  <enum name='kDataBrowserListViewLatestHeaderDesc' value='0'/>
  <enum name='kDataBrowserListViewMovableColumn' value='131072'/>
  <enum name='kDataBrowserListViewNoGapForIconInHeaderButton' value='1048576'/>
  <enum name='kDataBrowserListViewSelectionColumn' value='65536'/>
  <enum name='kDataBrowserListViewSortableColumn' value='262144'/>
  <enum name='kDataBrowserListViewTypeSelectColumn' value='524288'/>
  <enum name='kDataBrowserMetricCellContentInset' value='1'/>
  <enum name='kDataBrowserMetricDisclosureColumnEdgeInset' value='3'/>
  <enum name='kDataBrowserMetricDisclosureColumnPerDepthGap' value='5'/>
  <enum name='kDataBrowserMetricDisclosureTriangleAndContentGap' value='4'/>
  <enum name='kDataBrowserMetricIconAndTextGap' value='2'/>
  <enum name='kDataBrowserMetricLast' value='5'/>
  <enum name='kDataBrowserNeverEmptySelectionSet' value='64'/>
  <enum name='kDataBrowserNoDisjointSelection' value='16'/>
  <enum name='kDataBrowserNoItem' value='0'/>
  <enum name='kDataBrowserNoView' value='1061109567'/>
  <enum name='kDataBrowserNothingHit' value='0'/>
  <enum name='kDataBrowserOrderDecreasing' value='2'/>
  <enum name='kDataBrowserOrderIncreasing' value='1'/>
  <enum name='kDataBrowserOrderUndefined' value='0'/>
  <enum name='kDataBrowserPopupMenuButtonless' value='256'/>
  <enum name='kDataBrowserPopupMenuType' value='1835363957'/>
  <enum name='kDataBrowserProgressBarType' value='1886547815'/>
  <enum name='kDataBrowserPropertyCheckboxPart' value='1667785336'/>
  <enum name='kDataBrowserPropertyContentPart' value='757935405'/>
  <enum name='kDataBrowserPropertyDisclosurePart' value='1684632419'/>
  <enum name='kDataBrowserPropertyEnclosingPart' value='0'/>
  <enum name='kDataBrowserPropertyFlagsMask' value='65280'/>
  <enum name='kDataBrowserPropertyFlagsOffset' value='8'/>
  <enum name='kDataBrowserPropertyIconPart' value='1768124018'/>
  <enum name='kDataBrowserPropertyIsEditable' value='1'/>
  <enum name='kDataBrowserPropertyIsMutable' value='1'/>
  <enum name='kDataBrowserPropertyModificationFlags' value='65280'/>
  <enum name='kDataBrowserPropertyProgressBarPart' value='1886547815'/>
  <enum name='kDataBrowserPropertyRelevanceRankPart' value='1918987883'/>
  <enum name='kDataBrowserPropertySliderPart' value='1936483442'/>
  <enum name='kDataBrowserPropertyTextPart' value='1952807028'/>
  <enum name='kDataBrowserRelativeDateTime' value='256'/>
  <enum name='kDataBrowserRelevanceRankType' value='1918987883'/>
  <enum name='kDataBrowserResetSelection' value='4'/>
  <enum name='kDataBrowserRevealAndCenterInView' value='1'/>
  <enum name='kDataBrowserRevealOnly' value='0'/>
  <enum name='kDataBrowserRevealWithoutSelecting' value='2'/>
  <enum name='kDataBrowserSelectOnlyOne' value='2'/>
  <enum name='kDataBrowserSelectionAnchorDown' value='1'/>
  <enum name='kDataBrowserSelectionAnchorLeft' value='2'/>
  <enum name='kDataBrowserSelectionAnchorRight' value='3'/>
  <enum name='kDataBrowserSelectionAnchorUp' value='0'/>
  <enum name='kDataBrowserSelectionSetChanged' value='14'/>
  <enum name='kDataBrowserSliderDownwardThumb' value='512'/>
  <enum name='kDataBrowserSliderPlainThumb' value='0'/>
  <enum name='kDataBrowserSliderType' value='1936483442'/>
  <enum name='kDataBrowserSliderUpwardThumb' value='256'/>
  <enum name='kDataBrowserStopTracking' value='-1'/>
  <enum name='kDataBrowserTableViewFillHilite' value='1'/>
  <enum name='kDataBrowserTableViewLastColumn' value='-1'/>
  <enum name='kDataBrowserTableViewMinimalHilite' value='0'/>
  <enum name='kDataBrowserTableViewSelectionColumn' value='65536'/>
  <enum name='kDataBrowserTargetChanged' value='15'/>
  <enum name='kDataBrowserTextType' value='1952807028'/>
  <enum name='kDataBrowserTruncateTextAtEnd' value='512'/>
  <enum name='kDataBrowserTruncateTextAtStart' value='256'/>
  <enum name='kDataBrowserTruncateTextMiddle' value='0'/>
  <enum name='kDataBrowserUniversalPropertyFlags' value='255'/>
  <enum name='kDataBrowserUniversalPropertyFlagsMask' value='255'/>
  <enum name='kDataBrowserUserStateChanged' value='13'/>
  <enum name='kDataBrowserUserToggledContainer' value='16'/>
  <enum name='kDataBrowserViewSpecificFlagsMask' value='16711680'/>
  <enum name='kDataBrowserViewSpecificFlagsOffset' value='16'/>
  <enum name='kDataBrowserViewSpecificPropertyFlags' value='16711680'/>
  <enum name='kDeleteCharCode' value='127'/>
  <enum name='kDialogFlagsHandleMovableModal' value='4'/>
  <enum name='kDialogFlagsUseControlHierarchy' value='2'/>
  <enum name='kDialogFlagsUseThemeBackground' value='1'/>
  <enum name='kDialogFlagsUseThemeControls' value='8'/>
  <enum name='kDialogFontAddFontSizeMask' value='256'/>
  <enum name='kDialogFontAddToMetaFontMask' value='1024'/>
  <enum name='kDialogFontNoFontStyle' value='0'/>
  <enum name='kDialogFontUseAllMask' value='255'/>
  <enum name='kDialogFontUseBackColorMask' value='16'/>
  <enum name='kDialogFontUseFaceMask' value='2'/>
  <enum name='kDialogFontUseFontMask' value='1'/>
  <enum name='kDialogFontUseFontNameMask' value='512'/>
  <enum name='kDialogFontUseForeColorMask' value='8'/>
  <enum name='kDialogFontUseJustMask' value='64'/>
  <enum name='kDialogFontUseModeMask' value='32'/>
  <enum name='kDialogFontUseSizeMask' value='4'/>
  <enum name='kDialogFontUseThemeFontIDMask' value='128'/>
  <enum name='kDialogWindowKind' value='2'/>
  <enum name='kDiamondCharCode' value='19'/>
  <enum name='kDiamondUnicode' value='9670'/>
  <enum name='kDoNotActivateAndHandleClick' value='1'/>
  <enum name='kDoNotActivateAndIgnoreClick' value='0'/>
  <enum name='kDocumentWindowClass' value='6'/>
  <enum name='kDocumentWindowVariantCode' value='0'/>
  <enum name='kDownArrowCharCode' value='31'/>
  <enum name='kDragActionAlias' value='2'/>
  <enum name='kDragActionAll' value64='4294967295' value='-1'/>
  <enum name='kDragActionCopy' value='1'/>
  <enum name='kDragActionDelete' value='32'/>
  <enum name='kDragActionGeneric' value='4'/>
  <enum name='kDragActionMove' value='16'/>
  <enum name='kDragActionNothing' value='0'/>
  <enum name='kDragActionPrivate' value='8'/>
  <enum name='kDragBehaviorNone' value='0'/>
  <enum name='kDragBehaviorZoomBackAnimation' value='1'/>
  <enum name='kDragControlEntireControl' value='0'/>
  <enum name='kDragControlIndicator' value='1'/>
  <enum name='kDragDarkTranslucency' value='1'/>
  <enum name='kDragDarkerTranslucency' value='2'/>
  <enum name='kDragDoNotScaleImage' value='32'/>
  <enum name='kDragFlavorTypeHFS' value='1751544608'/>
  <enum name='kDragFlavorTypePromiseHFS' value='1885890163'/>
  <enum name='kDragHasLeftSenderWindow' value='1'/>
  <enum name='kDragInsideSenderApplication' value='2'/>
  <enum name='kDragInsideSenderWindow' value='4'/>
  <enum name='kDragOpaqueTranslucency' value='3'/>
  <enum name='kDragPromisedFlavor' value='1718842192'/>
  <enum name='kDragPromisedFlavorFindFile' value='1918332209'/>
  <enum name='kDragPseudoCreatorVolumeOrDirectory' value='1296122707'/>
  <enum name='kDragPseudoFileTypeDirectory' value='1718578276'/>
  <enum name='kDragPseudoFileTypeVolume' value='1684632427'/>
  <enum name='kDragRegionAndImage' value='16'/>
  <enum name='kDragRegionBegin' value='1'/>
  <enum name='kDragRegionDraw' value='2'/>
  <enum name='kDragRegionEnd' value='5'/>
  <enum name='kDragRegionHide' value='3'/>
  <enum name='kDragRegionIdle' value='4'/>
  <enum name='kDragStandardDropLocationTrash' value='1953657704'/>
  <enum name='kDragStandardDropLocationUnknown' value='1970170734'/>
  <enum name='kDragStandardTranslucency' value='0'/>
  <enum name='kDragTrackingEnterControl' value='2'/>
  <enum name='kDragTrackingEnterHandler' value='1'/>
  <enum name='kDragTrackingEnterWindow' value='2'/>
  <enum name='kDragTrackingInControl' value='3'/>
  <enum name='kDragTrackingInWindow' value='3'/>
  <enum name='kDragTrackingLeaveControl' value='4'/>
  <enum name='kDragTrackingLeaveHandler' value='5'/>
  <enum name='kDragTrackingLeaveWindow' value='4'/>
  <enum name='kDrawControlEntireControl' value='0'/>
  <enum name='kDrawControlIndicatorOnly' value='129'/>
  <enum name='kDrawerWindowClass' value='20'/>
  <enum name='kEditTextDialogItem' value='16'/>
  <enum name='kEndCharCode' value='4'/>
  <enum name='kEnterCharCode' value='3'/>
  <enum name='kEscapeCharCode' value='27'/>
  <enum name='kEventAccessibleGetAllActionNames' value='41'/>
  <enum name='kEventAccessibleGetAllAttributeNames' value='21'/>
  <enum name='kEventAccessibleGetAllParameterizedAttributeNames' value='25'/>
  <enum name='kEventAccessibleGetChildAtPoint' value='1'/>
  <enum name='kEventAccessibleGetFocusedChild' value='2'/>
  <enum name='kEventAccessibleGetNamedActionDescription' value='44'/>
  <enum name='kEventAccessibleGetNamedAttribute' value='22'/>
  <enum name='kEventAccessibleIsNamedAttributeSettable' value='24'/>
  <enum name='kEventAccessiblePerformNamedAction' value='42'/>
  <enum name='kEventAccessibleSetNamedAttribute' value='23'/>
  <enum name='kEventAppActivated' value='1'/>
  <enum name='kEventAppActiveWindowChanged' value='111'/>
  <enum name='kEventAppAvailableWindowBoundsChanged' value='110'/>
  <enum name='kEventAppDeactivated' value='2'/>
  <enum name='kEventAppFocusDrawer' value='12'/>
  <enum name='kEventAppFocusMenuBar' value='8'/>
  <enum name='kEventAppFocusNextDocumentWindow' value='9'/>
  <enum name='kEventAppFocusNextFloatingWindow' value='10'/>
  <enum name='kEventAppFocusToolbar' value='11'/>
  <enum name='kEventAppFrontSwitched' value='7'/>
  <enum name='kEventAppGetDockTileMenu' value='20'/>
  <enum name='kEventAppHidden' value='107'/>
  <enum name='kEventAppIsEventInInstantMouser' value='104'/>
  <enum name='kEventAppLaunchNotification' value='4'/>
  <enum name='kEventAppLaunched' value='5'/>
  <enum name='kEventAppQuit' value='3'/>
  <enum name='kEventAppShown' value='108'/>
  <enum name='kEventAppSystemUIModeChanged' value='109'/>
  <enum name='kEventAppTerminated' value='6'/>
  <enum name='kEventAppearanceScrollBarVariantChanged' value='1'/>
  <enum name='kEventAppleEvent' value='1'/>
  <enum name='kEventAttributeMonitored' value='8'/>
  <enum name='kEventAttributeNone' value='0'/>
  <enum name='kEventAttributeUserEvent' value='1'/>
  <enum name='kEventClassAccessibility' value='1633903461'/>
  <enum name='kEventClassAppearance' value='1634758765'/>
  <enum name='kEventClassAppleEvent' value='1701867619'/>
  <enum name='kEventClassApplication' value='1634758764'/>
  <enum name='kEventClassClockView' value='1668050787'/>
  <enum name='kEventClassCommand' value='1668113523'/>
  <enum name='kEventClassControl' value='1668183148'/>
  <enum name='kEventClassEPPC' value='1701867619'/>
  <enum name='kEventClassHIComboBox' value='1751737186'/>
  <enum name='kEventClassHIObject' value='1751740258'/>
  <enum name='kEventClassInk' value='1768844064'/>
  <enum name='kEventClassKeyboard' value='1801812322'/>
  <enum name='kEventClassMenu' value='1835363957'/>
  <enum name='kEventClassMouse' value='1836021107'/>
  <enum name='kEventClassScrollable' value='1935897196'/>
  <enum name='kEventClassSearchField' value='1936877156'/>
  <enum name='kEventClassService' value='1936028278'/>
  <enum name='kEventClassSystem' value='1835098995'/>
  <enum name='kEventClassTSMDocumentAccess' value='1952735587'/>
  <enum name='kEventClassTablet' value='1952607348'/>
  <enum name='kEventClassTextField' value='1954047588'/>
  <enum name='kEventClassTextInput' value='1952807028'/>
  <enum name='kEventClassToolbar' value='1952604530'/>
  <enum name='kEventClassToolbarItem' value='1952606580'/>
  <enum name='kEventClassToolbarItemView' value='1952606582'/>
  <enum name='kEventClassVolume' value='1987013664'/>
  <enum name='kEventClassWindow' value='2003398244'/>
  <enum name='kEventClockDateOrTimeChanged' value='1'/>
  <enum name='kEventComboBoxListItemSelected' value='1'/>
  <enum name='kEventCommandProcess' value='1'/>
  <enum name='kEventCommandUpdateStatus' value='2'/>
  <enum name='kEventControlActivate' value='9'/>
  <enum name='kEventControlAddedSubControl' value='152'/>
  <enum name='kEventControlApplyBackground' value='5'/>
  <enum name='kEventControlApplyTextColor' value='6'/>
  <enum name='kEventControlArbitraryMessage' value='201'/>
  <enum name='kEventControlBoundsChanged' value='154'/>
  <enum name='kEventControlClick' value='13'/>
  <enum name='kEventControlContextualMenuClick' value='12'/>
  <enum name='kEventControlDeactivate' value='10'/>
  <enum name='kEventControlDispose' value='1001'/>
  <enum name='kEventControlDragEnter' value='18'/>
  <enum name='kEventControlDragLeave' value='20'/>
  <enum name='kEventControlDragReceive' value='21'/>
  <enum name='kEventControlDragWithin' value='19'/>
  <enum name='kEventControlDraw' value='4'/>
  <enum name='kEventControlEnabledStateChanged' value='161'/>
  <enum name='kEventControlGetActionProcPart' value='56'/>
  <enum name='kEventControlGetAutoToggleValue' value='15'/>
  <enum name='kEventControlGetClickActivation' value='17'/>
  <enum name='kEventControlGetData' value='104'/>
  <enum name='kEventControlGetFocusPart' value='8'/>
  <enum name='kEventControlGetFrameMetrics' value='106'/>
  <enum name='kEventControlGetIndicatorDragConstraint' value='53'/>
  <enum name='kEventControlGetNextFocusCandidate' value='14'/>
  <enum name='kEventControlGetOptimalBounds' value='1003'/>
  <enum name='kEventControlGetPartBounds' value='102'/>
  <enum name='kEventControlGetPartRegion' value='101'/>
  <enum name='kEventControlGetScrollToHereStartPoint' value='52'/>
  <enum name='kEventControlGetSizeConstraints' value='105'/>
  <enum name='kEventControlGetSubviewForMouseEvent' value='16'/>
  <enum name='kEventControlGhostingFinished' value='55'/>
  <enum name='kEventControlHiliteChanged' value='160'/>
  <enum name='kEventControlHit' value='1'/>
  <enum name='kEventControlHitTest' value='3'/>
  <enum name='kEventControlIndicatorMoved' value='54'/>
  <enum name='kEventControlInitialize' value='1000'/>
  <enum name='kEventControlInterceptSubviewClick' value='16'/>
  <enum name='kEventControlInvalidateForSizeChange' value='22'/>
  <enum name='kEventControlLayoutInfoChanged' value='162'/>
  <enum name='kEventControlOwningWindowChanged' value='159'/>
  <enum name='kEventControlRemovingSubControl' value='153'/>
  <enum name='kEventControlSetCursor' value='11'/>
  <enum name='kEventControlSetData' value='103'/>
  <enum name='kEventControlSetFocusPart' value='7'/>
  <enum name='kEventControlSimulateHit' value='2'/>
  <enum name='kEventControlTitleChanged' value='158'/>
  <enum name='kEventControlTrack' value='51'/>
  <enum name='kEventControlTrackingAreaEntered' value='23'/>
  <enum name='kEventControlTrackingAreaExited' value='24'/>
  <enum name='kEventControlValueFieldChanged' value='151'/>
  <enum name='kEventControlVisibilityChanged' value='157'/>
  <enum name='kEventDurationDay' value='86400'/>
  <enum name='kEventDurationForever' value='-1'/>
  <enum name='kEventDurationHour' value='3600'/>
  <enum name='kEventDurationMicrosecond' value='1.0E-6'/>
  <enum name='kEventDurationMillisecond' value='0.001'/>
  <enum name='kEventDurationMinute' value='60'/>
  <enum name='kEventDurationNanosecond' value='1.0E-9'/>
  <enum name='kEventDurationNoWait' value='0'/>
  <enum name='kEventDurationSecond' value='1'/>
  <enum name='kEventGetSelectedText' value='6'/>
  <enum name='kEventHIObjectConstruct' value='1'/>
  <enum name='kEventHIObjectDestruct' value='3'/>
  <enum name='kEventHIObjectEncode' value='6'/>
  <enum name='kEventHIObjectInitialize' value='2'/>
  <enum name='kEventHIObjectIsEqual' value='4'/>
  <enum name='kEventHIObjectPrintDebugInfo' value='5'/>
  <enum name='kEventHighLevelEvent' value='1'/>
  <enum name='kEventHotKeyPressed' value='5'/>
  <enum name='kEventHotKeyReleased' value='6'/>
  <enum name='kEventInkGesture' value='11'/>
  <enum name='kEventInkPoint' value='10'/>
  <enum name='kEventInkText' value='12'/>
  <enum name='kEventKeyModifierFnBit' value='17'/>
  <enum name='kEventKeyModifierFnMask' value='131072'/>
  <enum name='kEventKeyModifierNumLockBit' value='16'/>
  <enum name='kEventKeyModifierNumLockMask' value='65536'/>
  <enum name='kEventLeaveInQueue' value='0'/>
  <enum name='kEventLoopIdleTimerIdling' value='2'/>
  <enum name='kEventLoopIdleTimerStarted' value='1'/>
  <enum name='kEventLoopIdleTimerStopped' value='3'/>
  <enum name='kEventMenuBarHidden' value='2001'/>
  <enum name='kEventMenuBarShown' value='2000'/>
  <enum name='kEventMenuBecomeScrollable' value='1007'/>
  <enum name='kEventMenuBeginTracking' value='1'/>
  <enum name='kEventMenuCalculateSize' value='1004'/>
  <enum name='kEventMenuCeaseToBeScrollable' value='1008'/>
  <enum name='kEventMenuChangeTrackingMode' value='3'/>
  <enum name='kEventMenuClosed' value='5'/>
  <enum name='kEventMenuCreateFrameView' value='1005'/>
  <enum name='kEventMenuDispose' value='1001'/>
  <enum name='kEventMenuDrawItem' value='102'/>
  <enum name='kEventMenuDrawItemContent' value='103'/>
  <enum name='kEventMenuEnableItems' value='8'/>
  <enum name='kEventMenuEndTracking' value='2'/>
  <enum name='kEventMenuGetFrameBounds' value='1006'/>
  <enum name='kEventMenuMatchKey' value='7'/>
  <enum name='kEventMenuMeasureItemHeight' value='101'/>
  <enum name='kEventMenuMeasureItemWidth' value='100'/>
  <enum name='kEventMenuOpening' value='4'/>
  <enum name='kEventMenuPopulate' value='9'/>
  <enum name='kEventMenuTargetItem' value='6'/>
  <enum name='kEventMouseButtonPrimary' value='1'/>
  <enum name='kEventMouseButtonSecondary' value='2'/>
  <enum name='kEventMouseButtonTertiary' value='3'/>
  <enum name='kEventMouseDown' value='1'/>
  <enum name='kEventMouseDragged' value='6'/>
  <enum name='kEventMouseEntered' value='8'/>
  <enum name='kEventMouseExited' value='9'/>
  <enum name='kEventMouseMoved' value='5'/>
  <enum name='kEventMouseUp' value='2'/>
  <enum name='kEventMouseWheelAxisX' value='0'/>
  <enum name='kEventMouseWheelAxisY' value='1'/>
  <enum name='kEventMouseWheelMoved' value='10'/>
  <enum name='kEventOffsetToPos' value='3'/>
  <enum name='kEventParamAEEventClass' value='1702257516'/>
  <enum name='kEventParamAEEventID' value='1702261865'/>
  <enum name='kEventParamAccessibilityEventQueued' value='1634038133'/>
  <enum name='kEventParamAccessibleActionDescription' value='1633903731'/>
  <enum name='kEventParamAccessibleActionName' value='1633906285'/>
  <enum name='kEventParamAccessibleActionNames' value='1633906291'/>
  <enum name='kEventParamAccessibleAttributeName' value='1635020397'/>
  <enum name='kEventParamAccessibleAttributeNames' value='1635020403'/>
  <enum name='kEventParamAccessibleAttributeParameter' value='1635020897'/>
  <enum name='kEventParamAccessibleAttributeSettable' value='1635021684'/>
  <enum name='kEventParamAccessibleAttributeValue' value='1635022444'/>
  <enum name='kEventParamAccessibleChild' value='1633904748'/>
  <enum name='kEventParamAccessibleObject' value='1634689642'/>
  <enum name='kEventParamAttributes' value='1635021938'/>
  <enum name='kEventParamAvailableBounds' value='1635150946'/>
  <enum name='kEventParamBounds' value='1651471726'/>
  <enum name='kEventParamCGContextRef' value='1668183160'/>
  <enum name='kEventParamCandidateText' value='1953723512'/>
  <enum name='kEventParamClickActivation' value='1668047203'/>
  <enum name='kEventParamClickCount' value='1667460724'/>
  <enum name='kEventParamComboBoxListSelectedItemIndex' value='1667394665'/>
  <enum name='kEventParamControlAction' value='1667331440'/>
  <enum name='kEventParamControlClickActivationResult' value='1667457394'/>
  <enum name='kEventParamControlCurrentOwningWindow' value='1667460983'/>
  <enum name='kEventParamControlCurrentPart' value='1668182115'/>
  <enum name='kEventParamControlDataBuffer' value='1667523174'/>
  <enum name='kEventParamControlDataBufferSize' value='1667523187'/>
  <enum name='kEventParamControlDataTag' value='1667527783'/>
  <enum name='kEventParamControlDrawDepth' value='1667523696'/>
  <enum name='kEventParamControlDrawInColor' value='1667524963'/>
  <enum name='kEventParamControlFeatures' value='1667658866'/>
  <enum name='kEventParamControlFocusEverything' value='1667655030'/>
  <enum name='kEventParamControlFrameMetrics' value='1667657076'/>
  <enum name='kEventParamControlHit' value='1667787124'/>
  <enum name='kEventParamControlIndicatorDragConstraint' value='1667851363'/>
  <enum name='kEventParamControlIndicatorOffset' value='1667854182'/>
  <enum name='kEventParamControlIndicatorRegion' value='1667854958'/>
  <enum name='kEventParamControlInvalRgn' value='1667855986'/>
  <enum name='kEventParamControlIsGhosting' value='1667724148'/>
  <enum name='kEventParamControlMessage' value='1668117351'/>
  <enum name='kEventParamControlOptimalBaselineOffset' value='1668244079'/>
  <enum name='kEventParamControlOptimalBounds' value='1668244078'/>
  <enum name='kEventParamControlOriginalOwningWindow' value='1668247415'/>
  <enum name='kEventParamControlParam' value='1668313709'/>
  <enum name='kEventParamControlPart' value='1668313716'/>
  <enum name='kEventParamControlPartAutoRepeats' value='1667331442'/>
  <enum name='kEventParamControlPartBounds' value='1668309604'/>
  <enum name='kEventParamControlPrefersShape' value='1668313960'/>
  <enum name='kEventParamControlPreviousPart' value='1668247651'/>
  <enum name='kEventParamControlRef' value='1668575852'/>
  <enum name='kEventParamControlRegion' value='1668441966'/>
  <enum name='kEventParamControlResult' value='1668445036'/>
  <enum name='kEventParamControlSubControl' value='1668511074'/>
  <enum name='kEventParamControlSubview' value='1668511351'/>
  <enum name='kEventParamControlValue' value='1668702572'/>
  <enum name='kEventParamControlWouldAcceptDrop' value='1668047975'/>
  <enum name='kEventParamCurrentBounds' value='1668440948'/>
  <enum name='kEventParamCurrentDockDevice' value='1667524452'/>
  <enum name='kEventParamCurrentDockRect' value='1667527267'/>
  <enum name='kEventParamCurrentMenuTrackingMode' value='1668117613'/>
  <enum name='kEventParamCurrentWindow' value='1668641399'/>
  <enum name='kEventParamDeviceColor' value='1684371043'/>
  <enum name='kEventParamDeviceDepth' value='1684371044'/>
  <enum name='kEventParamDimensions' value='1684630899'/>
  <enum name='kEventParamDirectObject' value='757935405'/>
  <enum name='kEventParamDragRef' value='1685217639'/>
  <enum name='kEventParamEnableMenuForKeyEvent' value='1718579819'/>
  <enum name='kEventParamEnabled' value='1701732706'/>
  <enum name='kEventParamEventRef' value='1702260340'/>
  <enum name='kEventParamGDevice' value='1734632822'/>
  <enum name='kEventParamGrafPort' value='1735549286'/>
  <enum name='kEventParamHIArchive' value='1751736675'/>
  <enum name='kEventParamHICommand' value='1751346532'/>
  <enum name='kEventParamHIObjectInstance' value='1751740265'/>
  <enum name='kEventParamHIViewTrackingArea' value='1668575841'/>
  <enum name='kEventParamImageSize' value='1768780666'/>
  <enum name='kEventParamIndex' value='1768842360'/>
  <enum name='kEventParamInitCollection' value='1768124268'/>
  <enum name='kEventParamInkGestureBounds' value='1734504036'/>
  <enum name='kEventParamInkGestureHotspot' value='1734897524'/>
  <enum name='kEventParamInkGestureKind' value='1735093860'/>
  <enum name='kEventParamInkKeyboardShortcut' value='1768645220'/>
  <enum name='kEventParamInkTextRef' value='1769435748'/>
  <enum name='kEventParamIsInInstantMouser' value='1768779637'/>
  <enum name='kEventParamKeyCode' value='1801678692'/>
  <enum name='kEventParamKeyMacCharCodes' value='1801676914'/>
  <enum name='kEventParamKeyModifiers' value='1802334052'/>
  <enum name='kEventParamKeyUnicodes' value='1802858089'/>
  <enum name='kEventParamKeyboardType' value='1801610356'/>
  <enum name='kEventParamLaunchErr' value='1701999136'/>
  <enum name='kEventParamLaunchRefCon' value='1819436390'/>
  <enum name='kEventParamLineSize' value='1819177850'/>
  <enum name='kEventParamMaximumSize' value='1836610426'/>
  <enum name='kEventParamMenuCommand' value='1835232612'/>
  <enum name='kEventParamMenuCommandKeyBounds' value='1835232610'/>
  <enum name='kEventParamMenuContext' value='1835234424'/>
  <enum name='kEventParamMenuDirection' value='1835297138'/>
  <enum name='kEventParamMenuDismissed' value='1835297139'/>
  <enum name='kEventParamMenuDrawState' value='1835299443'/>
  <enum name='kEventParamMenuEventOptions' value='1835364208'/>
  <enum name='kEventParamMenuFirstOpen' value='829650031'/>
  <enum name='kEventParamMenuFrameView' value='1835430518'/>
  <enum name='kEventParamMenuIconBounds' value='1835623266'/>
  <enum name='kEventParamMenuIsPopup' value='1836085104'/>
  <enum name='kEventParamMenuItemBounds' value='1835627618'/>
  <enum name='kEventParamMenuItemHeight' value='1835627624'/>
  <enum name='kEventParamMenuItemIndex' value='1769235821'/>
  <enum name='kEventParamMenuItemType' value='1835627632'/>
  <enum name='kEventParamMenuItemWidth' value='1835627639'/>
  <enum name='kEventParamMenuMarkBounds' value='1835887458'/>
  <enum name='kEventParamMenuPopupItem' value='1836083572'/>
  <enum name='kEventParamMenuRef' value='1835363957'/>
  <enum name='kEventParamMenuTextBaseline' value='1836343916'/>
  <enum name='kEventParamMenuTextBounds' value='1836349538'/>
  <enum name='kEventParamMenuType' value='1836349808'/>
  <enum name='kEventParamMenuVirtualBottom' value='1836479074'/>
  <enum name='kEventParamMenuVirtualTop' value='1836479092'/>
  <enum name='kEventParamMinimumSize' value='1835955066'/>
  <enum name='kEventParamModalClickResult' value='2003657586'/>
  <enum name='kEventParamModalWindow' value='1836542318'/>
  <enum name='kEventParamMouseButton' value='1835168878'/>
  <enum name='kEventParamMouseChord' value='1667788658'/>
  <enum name='kEventParamMouseDelta' value='1835299937'/>
  <enum name='kEventParamMouseLocation' value='1835822947'/>
  <enum name='kEventParamMouseTrackingRef' value='1836348006'/>
  <enum name='kEventParamMouseWheelAxis' value='1836540280'/>
  <enum name='kEventParamMouseWheelDelta' value='1836541036'/>
  <enum name='kEventParamMutableArray' value='1835102834'/>
  <enum name='kEventParamNewMenuTrackingMode' value='1852666989'/>
  <enum name='kEventParamNewScrollBarVariant' value='1853055606'/>
  <enum name='kEventParamNextControl' value='1668184163'/>
  <enum name='kEventParamOrigin' value='1869768558'/>
  <enum name='kEventParamOriginalBounds' value='1869767540'/>
  <enum name='kEventParamParentMenu' value='1836085869'/>
  <enum name='kEventParamParentMenuItem' value='1836085865'/>
  <enum name='kEventParamPasteboardRef' value='1885500004'/>
  <enum name='kEventParamPostTarget' value='1886679655'/>
  <enum name='kEventParamPreviousBounds' value='1886544756'/>
  <enum name='kEventParamPreviousDockDevice' value='1885628260'/>
  <enum name='kEventParamPreviousDockRect' value='1885631075'/>
  <enum name='kEventParamPreviousWindow' value='1886549623'/>
  <enum name='kEventParamProcessID' value='1886613024'/>
  <enum name='kEventParamReason' value='2003335487'/>
  <enum name='kEventParamReplacementText' value='1953657976'/>
  <enum name='kEventParamResult' value='1634628466'/>
  <enum name='kEventParamRgnHandle' value='1919381096'/>
  <enum name='kEventParamScrapRef' value='1935897200'/>
  <enum name='kEventParamServiceCopyTypes' value='1937142628'/>
  <enum name='kEventParamServiceMessageName' value='1937141095'/>
  <enum name='kEventParamServicePasteTypes' value='1937141876'/>
  <enum name='kEventParamServiceUserData' value='1937143140'/>
  <enum name='kEventParamShape' value='1936220528'/>
  <enum name='kEventParamStartControl' value='1668510819'/>
  <enum name='kEventParamSystemUIMode' value='1969843556'/>
  <enum name='kEventParamTSMDocAccessCharacterCount' value='1952736116'/>
  <enum name='kEventParamTSMDocAccessEffectiveRange' value='1952736626'/>
  <enum name='kEventParamTSMDocAccessLineBounds' value='1952738402'/>
  <enum name='kEventParamTSMDocAccessLockCount' value='1952738403'/>
  <enum name='kEventParamTSMDocAccessReplyATSFont' value='1952735590'/>
  <enum name='kEventParamTSMDocAccessReplyATSUGlyphSelector' value='1952739943'/>
  <enum name='kEventParamTSMDocAccessReplyCharacterRange' value='1952739954'/>
  <enum name='kEventParamTSMDocAccessReplyCharactersPtr' value='1952739952'/>
  <enum name='kEventParamTSMDocAccessReplyFontSize' value='1952739955'/>
  <enum name='kEventParamTSMDocAccessRequestedCharacterAttributes' value='1952736097'/>
  <enum name='kEventParamTSMDocAccessSendCharacterIndex' value='1952740201'/>
  <enum name='kEventParamTSMDocAccessSendCharacterRange' value='1952740210'/>
  <enum name='kEventParamTSMDocAccessSendCharactersPtr' value='1952740208'/>
  <enum name='kEventParamTSMDocAccessSendComponentInstance' value='1953719145'/>
  <enum name='kEventParamTSMDocAccessSendRefCon' value='1953722979'/>
  <enum name='kEventParamTSMSendComponentInstance' value='1953719145'/>
  <enum name='kEventParamTSMSendRefCon' value='1953722979'/>
  <enum name='kEventParamTabletEventType' value='1952607348'/>
  <enum name='kEventParamTabletPointRec' value='1952608867'/>
  <enum name='kEventParamTabletPointerRec' value='1952608867'/>
  <enum name='kEventParamTabletProximityRec' value='1952608376'/>
  <enum name='kEventParamTextInputGlyphInfoArray' value='1735159912'/>
  <enum name='kEventParamTextInputReplyFMFont' value='1953654381'/>
  <enum name='kEventParamTextInputReplyFont' value='1953654388'/>
  <enum name='kEventParamTextInputReplyGlyphInfoArray' value='1919381608'/>
  <enum name='kEventParamTextInputReplyLeadingEdge' value='1953655909'/>
  <enum name='kEventParamTextInputReplyLineAscent' value='1953655905'/>
  <enum name='kEventParamTextInputReplyLineHeight' value='1953655912'/>
  <enum name='kEventParamTextInputReplyMacEncoding' value='1953656165'/>
  <enum name='kEventParamTextInputReplyPoint' value='1953656948'/>
  <enum name='kEventParamTextInputReplyPointSize' value='1953656954'/>
  <enum name='kEventParamTextInputReplyRegionClass' value='1953657447'/>
  <enum name='kEventParamTextInputReplySLRec' value='1953657708'/>
  <enum name='kEventParamTextInputReplyShowHide' value='1953657704'/>
  <enum name='kEventParamTextInputReplyText' value='1953657976'/>
  <enum name='kEventParamTextInputReplyTextAngle' value='1953657953'/>
  <enum name='kEventParamTextInputReplyTextOffset' value='1953657967'/>
  <enum name='kEventParamTextInputSendClauseRng' value='1953719148'/>
  <enum name='kEventParamTextInputSendComponentInstance' value='1953719145'/>
  <enum name='kEventParamTextInputSendCurrentPoint' value='1953719152'/>
  <enum name='kEventParamTextInputSendDraggingMode' value='1953719405'/>
  <enum name='kEventParamTextInputSendFixLen' value='1953719928'/>
  <enum name='kEventParamTextInputSendGlyphInfoArray' value='1735159912'/>
  <enum name='kEventParamTextInputSendHiliteRng' value='1953720425'/>
  <enum name='kEventParamTextInputSendKeyboardEvent' value='1953721189'/>
  <enum name='kEventParamTextInputSendLeadingEdge' value='1953721445'/>
  <enum name='kEventParamTextInputSendPinRng' value='1953722478'/>
  <enum name='kEventParamTextInputSendRefCon' value='1953722979'/>
  <enum name='kEventParamTextInputSendReplaceRange' value='1953722992'/>
  <enum name='kEventParamTextInputSendSLRec' value='1953723244'/>
  <enum name='kEventParamTextInputSendShowHide' value='1953723240'/>
  <enum name='kEventParamTextInputSendText' value='1953723512'/>
  <enum name='kEventParamTextInputSendTextOffset' value='1953723503'/>
  <enum name='kEventParamTextInputSendTextServiceEncoding' value='1953723237'/>
  <enum name='kEventParamTextInputSendTextServiceMacEncoding' value='1953723245'/>
  <enum name='kEventParamTextInputSendUpdateRng' value='1953723760'/>
  <enum name='kEventParamTextSelection' value='1954050924'/>
  <enum name='kEventParamToolbar' value='1952604530'/>
  <enum name='kEventParamToolbarDisplayMode' value='1952605293'/>
  <enum name='kEventParamToolbarDisplaySize' value='1952605299'/>
  <enum name='kEventParamToolbarItem' value='1952606580'/>
  <enum name='kEventParamToolbarItemConfigData' value='1952606564'/>
  <enum name='kEventParamToolbarItemIdentifier' value='1952606569'/>
  <enum name='kEventParamTransactionID' value='1953656435'/>
  <enum name='kEventParamUnconfirmedRange' value='1953853042'/>
  <enum name='kEventParamUnconfirmedText' value='1954051438'/>
  <enum name='kEventParamUserData' value='1970500196'/>
  <enum name='kEventParamViewSize' value='1987539834'/>
  <enum name='kEventParamWindowDefPart' value='2003071075'/>
  <enum name='kEventParamWindowDragHiliteFlag' value='2003069030'/>
  <enum name='kEventParamWindowFeatures' value='2003203186'/>
  <enum name='kEventParamWindowGrowRect' value='1735549812'/>
  <enum name='kEventParamWindowModality' value='2003660644'/>
  <enum name='kEventParamWindowModifiedFlag' value='2003658342'/>
  <enum name='kEventParamWindowMouseLocation' value='2003660661'/>
  <enum name='kEventParamWindowPartCode' value='2003853682'/>
  <enum name='kEventParamWindowProxyGWorldPtr' value='2003855223'/>
  <enum name='kEventParamWindowProxyImageRgn' value='2003855730'/>
  <enum name='kEventParamWindowProxyOutlineRgn' value='2003857266'/>
  <enum name='kEventParamWindowRef' value='2003398244'/>
  <enum name='kEventParamWindowRegionCode' value='2004052080'/>
  <enum name='kEventParamWindowStateChangedFlags' value='2004050790'/>
  <enum name='kEventParamWindowTitleFullWidth' value='2004117111'/>
  <enum name='kEventParamWindowTitleTextWidth' value='2004120695'/>
  <enum name='kEventParamWindowTransitionAction' value='2004115811'/>
  <enum name='kEventParamWindowTransitionEffect' value='2004116838'/>
  <enum name='kEventPosToOffset' value='4'/>
  <enum name='kEventPriorityHigh' value='2'/>
  <enum name='kEventPriorityLow' value='0'/>
  <enum name='kEventPriorityStandard' value='1'/>
  <enum name='kEventProcessCommand' value='1'/>
  <enum name='kEventQueueOptionsNone' value='0'/>
  <enum name='kEventRawKeyDown' value='1'/>
  <enum name='kEventRawKeyModifiersChanged' value='4'/>
  <enum name='kEventRawKeyRepeat' value='2'/>
  <enum name='kEventRawKeyUp' value='3'/>
  <enum name='kEventRemoveFromQueue' value='1'/>
  <enum name='kEventScrollableGetInfo' value='1'/>
  <enum name='kEventScrollableInfoChanged' value='2'/>
  <enum name='kEventScrollableScrollTo' value='10'/>
  <enum name='kEventSearchFieldCancelClicked' value='1'/>
  <enum name='kEventSearchFieldSearchClicked' value='2'/>
  <enum name='kEventServiceCopy' value='1'/>
  <enum name='kEventServiceGetTypes' value='3'/>
  <enum name='kEventServicePaste' value='2'/>
  <enum name='kEventServicePerform' value='4'/>
  <enum name='kEventShowHideBottomWindow' value='5'/>
  <enum name='kEventSystemTimeDateChanged' value='2'/>
  <enum name='kEventSystemUserSessionActivated' value='10'/>
  <enum name='kEventSystemUserSessionDeactivated' value='11'/>
  <enum name='kEventTSMDocumentAccessGetCharacters' value='5'/>
  <enum name='kEventTSMDocumentAccessGetCharactersPtr' value='3'/>
  <enum name='kEventTSMDocumentAccessGetCharactersPtrForLargestBuffer' value='4'/>
  <enum name='kEventTSMDocumentAccessGetFont' value='6'/>
  <enum name='kEventTSMDocumentAccessGetGlyphInfo' value='7'/>
  <enum name='kEventTSMDocumentAccessGetLength' value='1'/>
  <enum name='kEventTSMDocumentAccessGetSelectedRange' value='2'/>
  <enum name='kEventTSMDocumentAccessLockDocument' value='8'/>
  <enum name='kEventTSMDocumentAccessUnlockDocument' value='9'/>
  <enum name='kEventTabletPoint' value='1'/>
  <enum name='kEventTabletPointer' value='1'/>
  <enum name='kEventTabletProximity' value='2'/>
  <enum name='kEventTargetDontPropagate' value='1'/>
  <enum name='kEventTargetSendToAllHandlers' value='2'/>
  <enum name='kEventTextAccepted' value='1'/>
  <enum name='kEventTextDidChange' value='3'/>
  <enum name='kEventTextInputFilterText' value='14'/>
  <enum name='kEventTextInputGetSelectedText' value='6'/>
  <enum name='kEventTextInputOffsetToPos' value='3'/>
  <enum name='kEventTextInputPosToOffset' value='4'/>
  <enum name='kEventTextInputShowHideBottomWindow' value='5'/>
  <enum name='kEventTextInputUnicodeForKeyEvent' value='2'/>
  <enum name='kEventTextInputUnicodeText' value='7'/>
  <enum name='kEventTextInputUpdateActiveInputArea' value='1'/>
  <enum name='kEventTextShouldChangeInRange' value='2'/>
  <enum name='kEventToolbarBeginMultiChange' value='12'/>
  <enum name='kEventToolbarCreateItemFromDrag' value='4'/>
  <enum name='kEventToolbarCreateItemWithIdentifier' value='3'/>
  <enum name='kEventToolbarDisplayModeChanged' value='7'/>
  <enum name='kEventToolbarDisplaySizeChanged' value='8'/>
  <enum name='kEventToolbarEndMultiChange' value='13'/>
  <enum name='kEventToolbarGetAllowedIdentifiers' value='2'/>
  <enum name='kEventToolbarGetDefaultIdentifiers' value='1'/>
  <enum name='kEventToolbarGetSelectableIdentifiers' value='10'/>
  <enum name='kEventToolbarItemAcceptDrop' value='11'/>
  <enum name='kEventToolbarItemAdded' value='5'/>
  <enum name='kEventToolbarItemCommandIDChanged' value='4'/>
  <enum name='kEventToolbarItemCreateCustomView' value='6'/>
  <enum name='kEventToolbarItemEnabledStateChanged' value='7'/>
  <enum name='kEventToolbarItemGetPersistentData' value='5'/>
  <enum name='kEventToolbarItemHelpTextChanged' value='3'/>
  <enum name='kEventToolbarItemImageChanged' value='1'/>
  <enum name='kEventToolbarItemLabelChanged' value='2'/>
  <enum name='kEventToolbarItemPerformAction' value='8'/>
  <enum name='kEventToolbarItemRemoved' value='6'/>
  <enum name='kEventToolbarItemSelectedStateChanged' value='12'/>
  <enum name='kEventToolbarItemViewConfigForMode' value='3'/>
  <enum name='kEventToolbarItemViewConfigForSize' value='4'/>
  <enum name='kEventToolbarItemViewEnterConfigMode' value='5'/>
  <enum name='kEventToolbarItemViewExitConfigMode' value='6'/>
  <enum name='kEventToolbarItemWouldAcceptDrop' value='10'/>
  <enum name='kEventToolbarLayoutChanged' value='9'/>
  <enum name='kEventUnicodeForKeyEvent' value='2'/>
  <enum name='kEventUpdateActiveInputArea' value='1'/>
  <enum name='kEventVolumeMounted' value='1'/>
  <enum name='kEventVolumeUnmounted' value='2'/>
  <enum name='kEventWindowActivated' value='5'/>
  <enum name='kEventWindowAttributesChanged' value='1019'/>
  <enum name='kEventWindowBoundsChanged' value='27'/>
  <enum name='kEventWindowBoundsChanging' value='26'/>
  <enum name='kEventWindowClickCloseRgn' value='35'/>
  <enum name='kEventWindowClickCollapseRgn' value='34'/>
  <enum name='kEventWindowClickContentRgn' value='37'/>
  <enum name='kEventWindowClickDragRgn' value='32'/>
  <enum name='kEventWindowClickProxyIconRgn' value='38'/>
  <enum name='kEventWindowClickResizeRgn' value='33'/>
  <enum name='kEventWindowClickStructureRgn' value='42'/>
  <enum name='kEventWindowClickToolbarButtonRgn' value='41'/>
  <enum name='kEventWindowClickZoomRgn' value='36'/>
  <enum name='kEventWindowClose' value='72'/>
  <enum name='kEventWindowCloseAll' value='74'/>
  <enum name='kEventWindowClosed' value='73'/>
  <enum name='kEventWindowCollapse' value='66'/>
  <enum name='kEventWindowCollapseAll' value='68'/>
  <enum name='kEventWindowCollapsed' value='67'/>
  <enum name='kEventWindowCollapsing' value='86'/>
  <enum name='kEventWindowConstrain' value='83'/>
  <enum name='kEventWindowContextualMenuSelect' value='78'/>
  <enum name='kEventWindowCursorChange' value='40'/>
  <enum name='kEventWindowDeactivated' value='6'/>
  <enum name='kEventWindowDefDispose' value='1005'/>
  <enum name='kEventWindowDefDragHilite' value='1006'/>
  <enum name='kEventWindowDefDrawFrame' value='1000'/>
  <enum name='kEventWindowDefDrawGrowBox' value='1011'/>
  <enum name='kEventWindowDefDrawPart' value='1001'/>
  <enum name='kEventWindowDefGetGrowImageRegion' value='1012'/>
  <enum name='kEventWindowDefGetRegion' value='1002'/>
  <enum name='kEventWindowDefHitTest' value='1003'/>
  <enum name='kEventWindowDefInit' value='1004'/>
  <enum name='kEventWindowDefMeasureTitle' value='1010'/>
  <enum name='kEventWindowDefModified' value='1007'/>
  <enum name='kEventWindowDefSetupProxyDragImage' value='1008'/>
  <enum name='kEventWindowDefStateChanged' value='1009'/>
  <enum name='kEventWindowDispose' value='1005'/>
  <enum name='kEventWindowDragCompleted' value='31'/>
  <enum name='kEventWindowDragHilite' value='1006'/>
  <enum name='kEventWindowDragStarted' value='30'/>
  <enum name='kEventWindowDrawContent' value='2'/>
  <enum name='kEventWindowDrawFrame' value='1000'/>
  <enum name='kEventWindowDrawGrowBox' value='1011'/>
  <enum name='kEventWindowDrawPart' value='1001'/>
  <enum name='kEventWindowDrawerClosed' value='223'/>
  <enum name='kEventWindowDrawerClosing' value='222'/>
  <enum name='kEventWindowDrawerOpened' value='221'/>
  <enum name='kEventWindowDrawerOpening' value='220'/>
  <enum name='kEventWindowExpand' value='69'/>
  <enum name='kEventWindowExpandAll' value='71'/>
  <enum name='kEventWindowExpanded' value='70'/>
  <enum name='kEventWindowExpanding' value='87'/>
  <enum name='kEventWindowFocusAcquired' value='200'/>
  <enum name='kEventWindowFocusContent' value='202'/>
  <enum name='kEventWindowFocusDrawer' value='204'/>
  <enum name='kEventWindowFocusRelinquish' value='201'/>
  <enum name='kEventWindowFocusToolbar' value='203'/>
  <enum name='kEventWindowGetClickActivation' value='7'/>
  <enum name='kEventWindowGetClickModality' value='8'/>
  <enum name='kEventWindowGetDockTileMenu' value='90'/>
  <enum name='kEventWindowGetGrowImageRegion' value='1012'/>
  <enum name='kEventWindowGetIdealSize' value='80'/>
  <enum name='kEventWindowGetMaximumSize' value='82'/>
  <enum name='kEventWindowGetMinimumSize' value='81'/>
  <enum name='kEventWindowGetRegion' value='1002'/>
  <enum name='kEventWindowHandleActivate' value='91'/>
  <enum name='kEventWindowHandleContentClick' value='85'/>
  <enum name='kEventWindowHandleDeactivate' value='92'/>
  <enum name='kEventWindowHidden' value='25'/>
  <enum name='kEventWindowHiding' value='23'/>
  <enum name='kEventWindowHitTest' value='1003'/>
  <enum name='kEventWindowInit' value='1004'/>
  <enum name='kEventWindowMeasureTitle' value='1010'/>
  <enum name='kEventWindowModified' value='1007'/>
  <enum name='kEventWindowPaint' value='1013'/>
  <enum name='kEventWindowPathSelect' value='79'/>
  <enum name='kEventWindowProxyBeginDrag' value='128'/>
  <enum name='kEventWindowProxyEndDrag' value='129'/>
  <enum name='kEventWindowResizeCompleted' value='29'/>
  <enum name='kEventWindowResizeStarted' value='28'/>
  <enum name='kEventWindowSetupProxyDragImage' value='1008'/>
  <enum name='kEventWindowSheetClosed' value='213'/>
  <enum name='kEventWindowSheetClosing' value='212'/>
  <enum name='kEventWindowSheetOpened' value='211'/>
  <enum name='kEventWindowSheetOpening' value='210'/>
  <enum name='kEventWindowShowing' value='22'/>
  <enum name='kEventWindowShown' value='24'/>
  <enum name='kEventWindowStateChanged' value='1009'/>
  <enum name='kEventWindowTitleChanged' value='1020'/>
  <enum name='kEventWindowToolbarSwitchMode' value='150'/>
  <enum name='kEventWindowTransitionCompleted' value='89'/>
  <enum name='kEventWindowTransitionStarted' value='88'/>
  <enum name='kEventWindowUpdate' value='1'/>
  <enum name='kEventWindowZoom' value='75'/>
  <enum name='kEventWindowZoomAll' value='77'/>
  <enum name='kEventWindowZoomed' value='76'/>
  <enum name='kFillScreen' value='4'/>
  <enum name='kFitToScreen' value='3'/>
  <enum name='kFlavorTypeClippingFilename' value='1668048494'/>
  <enum name='kFlavorTypeClippingName' value='1668050541'/>
  <enum name='kFlavorTypeDragToTrashOnly' value='1717859444'/>
  <enum name='kFlavorTypeFinderNoTrackingBehavior' value='1718514786'/>
  <enum name='kFlavorTypeUnicodeClippingFilename' value='1969450086'/>
  <enum name='kFlavorTypeUnicodeClippingName' value='1969450094'/>
  <enum name='kFloatingWindowClass' value='5'/>
  <enum name='kFloatingWindowDefinition' value='124'/>
  <enum name='kFormFeedCharCode' value='12'/>
  <enum name='kFunctionKeyCharCode' value='16'/>
  <enum name='kHIArchiveDecodeSuperclassForUnregisteredObjects' value='1'/>
  <enum name='kHIComboBoxAutoCompletionAttribute' value='1'/>
  <enum name='kHIComboBoxAutoDisclosureAttribute' value='2'/>
  <enum name='kHIComboBoxAutoSizeListAttribute' value='8'/>
  <enum name='kHIComboBoxAutoSortAttribute' value='4'/>
  <enum name='kHIComboBoxDisclosurePart' value='28'/>
  <enum name='kHIComboBoxEditTextPart' value='5'/>
  <enum name='kHIComboBoxListPixelHeightTag' value='1667394664'/>
  <enum name='kHIComboBoxListPixelWidthTag' value='1667394679'/>
  <enum name='kHIComboBoxListTag' value='1667394675'/>
  <enum name='kHIComboBoxNoAttributes' value='0'/>
  <enum name='kHIComboBoxNumVisibleItemsTag' value='1667395177'/>
  <enum name='kHIComboBoxStandardAttributes' value='11'/>
  <enum name='kHICommandAbout' value='1633841013'/>
  <enum name='kHICommandAppHelp' value='1634233456'/>
  <enum name='kHICommandArrangeInFront' value='1718775412'/>
  <enum name='kHICommandBringAllToFront' value='1650881140'/>
  <enum name='kHICommandCancel' value='1852797985'/>
  <enum name='kHICommandChangeSpelling' value='1667789680'/>
  <enum name='kHICommandCheckSpelling' value='1667986288'/>
  <enum name='kHICommandCheckSpellingAsYouType' value='1634955363'/>
  <enum name='kHICommandClear' value='1668048225'/>
  <enum name='kHICommandClose' value='1668050803'/>
  <enum name='kHICommandCopy' value='1668247673'/>
  <enum name='kHICommandCustomizeToolbar' value='1952671335'/>
  <enum name='kHICommandCut' value='1668641824'/>
  <enum name='kHICommandCycleToolbarModeLarger' value='1952607596'/>
  <enum name='kHICommandCycleToolbarModeSmaller' value='1952607603'/>
  <enum name='kHICommandFromControl' value='2'/>
  <enum name='kHICommandFromMenu' value='1'/>
  <enum name='kHICommandFromWindow' value='4'/>
  <enum name='kHICommandHide' value='1751737445'/>
  <enum name='kHICommandHideOthers' value='1751737455'/>
  <enum name='kHICommandHideToolbar' value='1952606308'/>
  <enum name='kHICommandIgnoreSpelling' value='1768387440'/>
  <enum name='kHICommandLearnWord' value='1819440996'/>
  <enum name='kHICommandMaximizeAll' value='1835104353'/>
  <enum name='kHICommandMaximizeWindow' value='1835104361'/>
  <enum name='kHICommandMinimizeAll' value='1835626081'/>
  <enum name='kHICommandMinimizeWindow' value='1835626089'/>
  <enum name='kHICommandNew' value='1852143392'/>
  <enum name='kHICommandOK' value='1869291552'/>
  <enum name='kHICommandOpen' value='1869636974'/>
  <enum name='kHICommandOther' value='1869899890'/>
  <enum name='kHICommandPageSetup' value='1885431653'/>
  <enum name='kHICommandPaste' value='1885434740'/>
  <enum name='kHICommandPreferences' value='1886545254'/>
  <enum name='kHICommandPrint' value='1886547572'/>
  <enum name='kHICommandQuit' value='1903520116'/>
  <enum name='kHICommandRedo' value='1919247471'/>
  <enum name='kHICommandRevert' value='1920365172'/>
  <enum name='kHICommandRotateFloatingWindowsBackward' value='1920231010'/>
  <enum name='kHICommandRotateFloatingWindowsForward' value='1920231031'/>
  <enum name='kHICommandRotateWindowsBackward' value='1919906914'/>
  <enum name='kHICommandRotateWindowsForward' value='1919906935'/>
  <enum name='kHICommandSave' value='1935767141'/>
  <enum name='kHICommandSaveAs' value='1937138035'/>
  <enum name='kHICommandSelectAll' value='1935764588'/>
  <enum name='kHICommandSelectWindow' value='1937205614'/>
  <enum name='kHICommandShowAll' value='1936220524'/>
  <enum name='kHICommandShowCharacterPalette' value='1667789424'/>
  <enum name='kHICommandShowSpellingPanel' value='1936225136'/>
  <enum name='kHICommandShowToolbar' value='1952609128'/>
  <enum name='kHICommandToggleAllToolbars' value='1952609377'/>
  <enum name='kHICommandToggleToolbar' value='1952609383'/>
  <enum name='kHICommandUndo' value='1970168943'/>
  <enum name='kHICommandWindowListSeparator' value='2003592310'/>
  <enum name='kHICommandWindowListTerminator' value='2003596148'/>
  <enum name='kHICommandZoomWindow' value='2054123373'/>
  <enum name='kHICoordSpace72DPIGlobal' value='1'/>
  <enum name='kHICoordSpaceScreenPixel' value='2'/>
  <enum name='kHICoordSpaceView' value='4'/>
  <enum name='kHICoordSpaceWindow' value='3'/>
  <enum name='kHIHotKeyModeAllDisabled' value='1'/>
  <enum name='kHIHotKeyModeAllDisabledExceptUniversalAccess' value='2'/>
  <enum name='kHIHotKeyModeAllEnabled' value='0'/>
  <enum name='kHIImageViewImageTag' value='1768776039'/>
  <enum name='kHILayoutBindBottom' value='2'/>
  <enum name='kHILayoutBindLeft' value='1'/>
  <enum name='kHILayoutBindMax' value='2'/>
  <enum name='kHILayoutBindMin' value='1'/>
  <enum name='kHILayoutBindNone' value='0'/>
  <enum name='kHILayoutBindRight' value='2'/>
  <enum name='kHILayoutBindTop' value='1'/>
  <enum name='kHILayoutInfoVersionZero' value='0'/>
  <enum name='kHILayoutPositionBottom' value='3'/>
  <enum name='kHILayoutPositionCenter' value='1'/>
  <enum name='kHILayoutPositionLeft' value='2'/>
  <enum name='kHILayoutPositionMax' value='3'/>
  <enum name='kHILayoutPositionMin' value='2'/>
  <enum name='kHILayoutPositionNone' value='0'/>
  <enum name='kHILayoutPositionRight' value='3'/>
  <enum name='kHILayoutPositionTop' value='2'/>
  <enum name='kHILayoutScaleAbsolute' value='0'/>
  <enum name='kHIMenuAppendItem' value='65535'/>
  <enum name='kHIMenuCenterDirection' value='2'/>
  <enum name='kHIMenuDismissedByActivationChange' value='9'/>
  <enum name='kHIMenuDismissedByAppSwitch' value='6'/>
  <enum name='kHIMenuDismissedByCancelMenuTracking' value='8'/>
  <enum name='kHIMenuDismissedByFocusChange' value='10'/>
  <enum name='kHIMenuDismissedByKeyEvent' value='5'/>
  <enum name='kHIMenuDismissedByMouseDown' value='3'/>
  <enum name='kHIMenuDismissedByMouseUp' value='4'/>
  <enum name='kHIMenuDismissedBySelection' value='1'/>
  <enum name='kHIMenuDismissedByTimeout' value='7'/>
  <enum name='kHIMenuDismissedByUserCancel' value='2'/>
  <enum name='kHIMenuLeftDirection' value='1'/>
  <enum name='kHIMenuRightDirection' value='0'/>
  <enum name='kHIModalClickAllowEvent' value='2'/>
  <enum name='kHIModalClickAnnounce' value='4'/>
  <enum name='kHIModalClickIsModal' value='1'/>
  <enum name='kHIModalClickRaiseWindow' value='8'/>
  <enum name='kHIScrollViewOptionsAllowGrow' value='4'/>
  <enum name='kHIScrollViewOptionsHorizScroll' value='2'/>
  <enum name='kHIScrollViewOptionsVertScroll' value='1'/>
  <enum name='kHIScrollViewPageDown' value='32'/>
  <enum name='kHIScrollViewPageLeft' value='64'/>
  <enum name='kHIScrollViewPageRight' value='128'/>
  <enum name='kHIScrollViewPageUp' value='16'/>
  <enum name='kHIScrollViewScrollToBottom' value='2'/>
  <enum name='kHIScrollViewScrollToLeft' value='4'/>
  <enum name='kHIScrollViewScrollToRight' value='8'/>
  <enum name='kHIScrollViewScrollToTop' value='1'/>
  <enum name='kHIScrollViewValidOptions' value='7'/>
  <enum name='kHISearchFieldAttributesCancel' value='1'/>
  <enum name='kHISearchFieldAttributesSearchIcon' value='2'/>
  <enum name='kHISearchFieldNoAttributes' value='0'/>
  <enum name='kHISegmentBehaviorMomentary' value='1'/>
  <enum name='kHISegmentBehaviorRadio' value='2'/>
  <enum name='kHISegmentBehaviorSticky' value='4'/>
  <enum name='kHISegmentBehaviorToggles' value='3'/>
  <enum name='kHISegmentNoAttributes' value='0'/>
  <enum name='kHISegmentSendCmdToUserFocus' value='1'/>
  <enum name='kHISegmentedViewKind' value='1936158068'/>
  <enum name='kHIThemeFrameListBox' value='1'/>
  <enum name='kHIThemeFrameTextFieldSquare' value='0'/>
  <enum name='kHIThemeGroupBoxKindPrimary' value='0'/>
  <enum name='kHIThemeGroupBoxKindPrimaryOpaque' value='3'/>
  <enum name='kHIThemeGroupBoxKindSecondary' value='1'/>
  <enum name='kHIThemeGroupBoxKindSecondaryOpaque' value='4'/>
  <enum name='kHIThemeGrowBoxKindNone' value='1'/>
  <enum name='kHIThemeGrowBoxKindNormal' value='0'/>
  <enum name='kHIThemeGrowBoxSizeNormal' value='0'/>
  <enum name='kHIThemeGrowBoxSizeSmall' value='1'/>
  <enum name='kHIThemeHeaderKindList' value='1'/>
  <enum name='kHIThemeHeaderKindWindow' value='0'/>
  <enum name='kHIThemeMenuTitleDrawCondensed' value='1'/>
  <enum name='kHIThemeOrientationInverted' value='1'/>
  <enum name='kHIThemeOrientationNormal' value='0'/>
  <enum name='kHIThemeSegmentAdornmentFocus' value='4'/>
  <enum name='kHIThemeSegmentAdornmentLeadingSeparator' value='8'/>
  <enum name='kHIThemeSegmentAdornmentNone' value='0'/>
  <enum name='kHIThemeSegmentAdornmentTrailingSeparator' value='16'/>
  <enum name='kHIThemeSegmentKindInset' value='1'/>
  <enum name='kHIThemeSegmentKindNormal' value='0'/>
  <enum name='kHIThemeSegmentPositionFirst' value='0'/>
  <enum name='kHIThemeSegmentPositionLast' value='2'/>
  <enum name='kHIThemeSegmentPositionMiddle' value='1'/>
  <enum name='kHIThemeSegmentPositionOnly' value='3'/>
  <enum name='kHIThemeSegmentSizeMini' value='3'/>
  <enum name='kHIThemeSegmentSizeNormal' value='0'/>
  <enum name='kHIThemeSegmentSizeSmall' value='1'/>
  <enum name='kHIThemeSplitterAdornmentMetal' value='1'/>
  <enum name='kHIThemeSplitterAdornmentNone' value='0'/>
  <enum name='kHIThemeTabAdornmentFocus' value='4'/>
  <enum name='kHIThemeTabAdornmentLeadingSeparator' value='8'/>
  <enum name='kHIThemeTabAdornmentNone' value='0'/>
  <enum name='kHIThemeTabAdornmentTrailingSeparator' value='16'/>
  <enum name='kHIThemeTabKindNormal' value='0'/>
  <enum name='kHIThemeTabPaneAdornmentNormal' value='0'/>
  <enum name='kHIThemeTabPositionFirst' value='0'/>
  <enum name='kHIThemeTabPositionLast' value='2'/>
  <enum name='kHIThemeTabPositionMiddle' value='1'/>
  <enum name='kHIThemeTabPositionOnly' value='3'/>
  <enum name='kHIThemeTabSizeMini' value='3'/>
  <enum name='kHIThemeTabSizeNormal' value='0'/>
  <enum name='kHIThemeTabSizeSmall' value='1'/>
  <enum name='kHIThemeTextBoxOptionNone' value='0'/>
  <enum name='kHIThemeTextBoxOptionStronglyVertical' value='2'/>
  <enum name='kHIThemeTextHorizontalFlushCenter' value='1'/>
  <enum name='kHIThemeTextHorizontalFlushLeft' value='0'/>
  <enum name='kHIThemeTextHorizontalFlushRight' value='2'/>
  <enum name='kHIThemeTextInfoVersionZero' value='0'/>
  <enum name='kHIThemeTextTruncationEnd' value='2'/>
  <enum name='kHIThemeTextTruncationMiddle' value='1'/>
  <enum name='kHIThemeTextTruncationNone' value='0'/>
  <enum name='kHIThemeTextVerticalFlushBottom' value='2'/>
  <enum name='kHIThemeTextVerticalFlushCenter' value='1'/>
  <enum name='kHIThemeTextVerticalFlushTop' value='0'/>
  <enum name='kHIToolbarAutoSavesConfig' value='1'/>
  <enum name='kHIToolbarCommandPressAction' value='1952608370'/>
  <enum name='kHIToolbarDisplayModeDefault' value='0'/>
  <enum name='kHIToolbarDisplayModeIconAndLabel' value='1'/>
  <enum name='kHIToolbarDisplayModeIconOnly' value='2'/>
  <enum name='kHIToolbarDisplayModeLabelOnly' value='3'/>
  <enum name='kHIToolbarDisplaySizeDefault' value='0'/>
  <enum name='kHIToolbarDisplaySizeNormal' value='1'/>
  <enum name='kHIToolbarDisplaySizeSmall' value='2'/>
  <enum name='kHIToolbarIsConfigurable' value='2'/>
  <enum name='kHIToolbarItemAllowDuplicates' value='1'/>
  <enum name='kHIToolbarItemAnchoredLeft' value='4'/>
  <enum name='kHIToolbarItemCantBeRemoved' value='2'/>
  <enum name='kHIToolbarItemDisabled' value='64'/>
  <enum name='kHIToolbarItemIsSeparator' value='8'/>
  <enum name='kHIToolbarItemLabelDisabled' value='32'/>
  <enum name='kHIToolbarItemMutableAttrs' value='230'/>
  <enum name='kHIToolbarItemNoAttributes' value='0'/>
  <enum name='kHIToolbarItemSelected' value='128'/>
  <enum name='kHIToolbarItemSendCmdToUserFocus' value='16'/>
  <enum name='kHIToolbarItemValidAttrs' value='255'/>
  <enum name='kHIToolbarNoAttributes' value='0'/>
  <enum name='kHIToolbarValidAttrs' value='3'/>
  <enum name='kHIToolbarViewDrawBackgroundTag' value='1650549611'/>
  <enum name='kHIToolboxVersionNumber10_3' value='145.0'/>
  <enum name='kHIToolboxVersionNumber10_3_2' value='145.35'/>
  <enum name='kHIToolboxVersionNumber10_3_3' value='145.38'/>
  <enum name='kHIToolboxVersionNumber10_3_4' value='145.41'/>
  <enum name='kHIToolboxVersionNumber10_3_5' value='145.43'/>
  <enum name='kHITransformDisabled' value='1'/>
  <enum name='kHITransformNone' value='0'/>
  <enum name='kHITransformSelected' value='16384'/>
  <enum name='kHIViewAllowsSubviews' value='2'/>
  <enum name='kHIViewAttributeIsFieldEditor' value='2'/>
  <enum name='kHIViewAttributeSendCommandToUserFocus' value='1'/>
  <enum name='kHIViewAutoToggles' value='16384'/>
  <enum name='kHIViewClickableMetaPart' value='-4'/>
  <enum name='kHIViewContentCGImageRef' value='134'/>
  <enum name='kHIViewContentIconRef' value='132'/>
  <enum name='kHIViewContentIconSuiteRef' value='129'/>
  <enum name='kHIViewContentMetaPart' value='-2'/>
  <enum name='kHIViewContentNone' value='0'/>
  <enum name='kHIViewContentTextOnly' value='0'/>
  <enum name='kHIViewDisabledPart' value='254'/>
  <enum name='kHIViewDoesNotDraw' value='134217728'/>
  <enum name='kHIViewDoesNotUseSpecialParts' value='268435456'/>
  <enum name='kHIViewEntireView' value='0'/>
  <enum name='kHIViewFeatureAllowsSubviews' value='2'/>
  <enum name='kHIViewFeatureAutoToggles' value='16384'/>
  <enum name='kHIViewFeatureDoesNotDraw' value='134217728'/>
  <enum name='kHIViewFeatureDoesNotUseSpecialParts' value='268435456'/>
  <enum name='kHIViewFeatureGetsFocusOnClick' value='256'/>
  <enum name='kHIViewFeatureIdlesWithTimer' value='8388608'/>
  <enum name='kHIViewFeatureIgnoresClicks' value='536870912'/>
  <enum name='kHIViewFeatureInvertsUpDownValueMeaning' value='16777216'/>
  <enum name='kHIViewFeatureIsOpaque' value='33554432'/>
  <enum name='kHIViewFeatureSupportsGhosting' value='1'/>
  <enum name='kHIViewFeatureSupportsLiveFeedback' value='1024'/>
  <enum name='kHIViewFeatureSupportsRadioBehavior' value='2048'/>
  <enum name='kHIViewFocusNextPart' value='-1'/>
  <enum name='kHIViewFocusNoPart' value='0'/>
  <enum name='kHIViewFocusPrevPart' value='-2'/>
  <enum name='kHIViewGetsFocusOnClick' value='256'/>
  <enum name='kHIViewIdlesWithTimer' value='8388608'/>
  <enum name='kHIViewIgnoresClicks' value='536870912'/>
  <enum name='kHIViewInactivePart' value='255'/>
  <enum name='kHIViewIndicatorPart' value='129'/>
  <enum name='kHIViewInvertsUpDownValueMeaning' value='16777216'/>
  <enum name='kHIViewIsOpaque' value='33554432'/>
  <enum name='kHIViewKindSignatureApple' value='1634758764'/>
  <enum name='kHIViewNoPart' value='0'/>
  <enum name='kHIViewOpaqueMetaPart' value='-3'/>
  <enum name='kHIViewSendCommandToUserFocus' value='1'/>
  <enum name='kHIViewStructureMetaPart' value='-1'/>
  <enum name='kHIViewSupportsGhosting' value='1'/>
  <enum name='kHIViewSupportsLiveFeedback' value='1024'/>
  <enum name='kHIViewSupportsRadioBehavior' value='2048'/>
  <enum name='kHIViewValidFeaturesForPanther' value='998264067'/>
  <enum name='kHIViewZOrderAbove' value='1'/>
  <enum name='kHIViewZOrderBelow' value='2'/>
  <enum name='kHIWindowExposeHidden' value='1'/>
  <enum name='kHIWindowScaleModeApplicationScaled' value='3'/>
  <enum name='kHIWindowScaleModeFrameworkScaled' value='2'/>
  <enum name='kHIWindowScaleModeMagnified' value='1'/>
  <enum name='kHIWindowScaleModeUnscaled' value='0'/>
  <enum name='kHMAbsoluteCenterAligned' value='23'/>
  <enum name='kHMBottomLeftCorner' value='9'/>
  <enum name='kHMBottomRightCorner' value='10'/>
  <enum name='kHMBottomSide' value='3'/>
  <enum name='kHMCFStringContent' value='1667658612'/>
  <enum name='kHMCFStringLocalizedContent' value='1667658604'/>
  <enum name='kHMContentNotProvided' value='1'/>
  <enum name='kHMContentNotProvidedDontPropagate' value='2'/>
  <enum name='kHMContentProvided' value='0'/>
  <enum name='kHMDefaultSide' value='0'/>
  <enum name='kHMDisposeContent' value='1'/>
  <enum name='kHMHelpMenuID' value='-16490'/>
  <enum name='kHMHideTagFade' value='1'/>
  <enum name='kHMHideTagImmediately' value='2'/>
  <enum name='kHMIllegalContentForMinimumState' value='-10980'/>
  <enum name='kHMInsideBottomCenterAligned' value='17'/>
  <enum name='kHMInsideBottomLeftCorner' value='21'/>
  <enum name='kHMInsideBottomRightCorner' value='22'/>
  <enum name='kHMInsideLeftCenterAligned' value='16'/>
  <enum name='kHMInsideRightCenterAligned' value='15'/>
  <enum name='kHMInsideTopCenterAligned' value='18'/>
  <enum name='kHMInsideTopLeftCorner' value='19'/>
  <enum name='kHMInsideTopRightCorner' value='20'/>
  <enum name='kHMLeftBottomCorner' value='8'/>
  <enum name='kHMLeftSide' value='2'/>
  <enum name='kHMLeftTopCorner' value='7'/>
  <enum name='kHMMaximumContentIndex' value='1'/>
  <enum name='kHMMinimumContentIndex' value='0'/>
  <enum name='kHMNoContent' value='1852796517'/>
  <enum name='kHMOutsideBottomCenterAligned' value='14'/>
  <enum name='kHMOutsideBottomLeftAligned' value='9'/>
  <enum name='kHMOutsideBottomRightAligned' value='10'/>
  <enum name='kHMOutsideBottomScriptAligned' value='3'/>
  <enum name='kHMOutsideLeftBottomAligned' value='8'/>
  <enum name='kHMOutsideLeftCenterAligned' value='2'/>
  <enum name='kHMOutsideLeftTopAligned' value='7'/>
  <enum name='kHMOutsideRightBottomAligned' value='12'/>
  <enum name='kHMOutsideRightCenterAligned' value='4'/>
  <enum name='kHMOutsideRightTopAligned' value='11'/>
  <enum name='kHMOutsideTopCenterAligned' value='13'/>
  <enum name='kHMOutsideTopLeftAligned' value='5'/>
  <enum name='kHMOutsideTopRightAligned' value='6'/>
  <enum name='kHMOutsideTopScriptAligned' value='1'/>
  <enum name='kHMPascalStrContent' value='1886614642'/>
  <enum name='kHMRightBottomCorner' value='12'/>
  <enum name='kHMRightSide' value='4'/>
  <enum name='kHMRightTopCorner' value='11'/>
  <enum name='kHMStrResContent' value='1937011232'/>
  <enum name='kHMStringResContent' value='1937011235'/>
  <enum name='kHMSupplyContent' value='0'/>
  <enum name='kHMTEHandleContent' value='1954051176'/>
  <enum name='kHMTextResContent' value='1952807028'/>
  <enum name='kHMTopLeftCorner' value='5'/>
  <enum name='kHMTopRightCorner' value='6'/>
  <enum name='kHMTopSide' value='1'/>
  <enum name='kHelpCharCode' value='5'/>
  <enum name='kHelpDialogItem' value='1'/>
  <enum name='kHelpTagEventHandlerTag' value='1751479924'/>
  <enum name='kHelpWindowClass' value='10'/>
  <enum name='kHierarchicalFontMenuOption' value='1'/>
  <enum name='kHighLevelEvent' value='23'/>
  <enum name='kHomeCharCode' value='1'/>
  <enum name='kIBCarbonRuntimeCantFindNibFile' value='-10960'/>
  <enum name='kIBCarbonRuntimeCantFindObject' value='-10962'/>
  <enum name='kIBCarbonRuntimeObjectNotOfRequestedType' value='-10961'/>
  <enum name='kIMJaTypingMethodKana' value='1801547361'/>
  <enum name='kIMJaTypingMethodProperty' value='1786018160'/>
  <enum name='kIMJaTypingMethodRoman' value='1919905121'/>
  <enum name='kIconDialogItem' value='32'/>
  <enum name='kInkInputMethodClass' value='1768844064'/>
  <enum name='kInsertHierarchicalMenu' value='-1'/>
  <enum name='kItemDisableBit' value='128'/>
  <enum name='kKLGroupIdentifier' value='6'/>
  <enum name='kKLIcon' value='3'/>
  <enum name='kKLIdentifier' value='2'/>
  <enum name='kKLKCHRData' value='0'/>
  <enum name='kKLKCHRKind' value='1'/>
  <enum name='kKLKCHRuchrKind' value='0'/>
  <enum name='kKLKind' value='7'/>
  <enum name='kKLLanguageCode' value='9'/>
  <enum name='kKLLocalizedName' value='4'/>
  <enum name='kKLName' value='5'/>
  <enum name='kKLUSKeyboard' value='0'/>
  <enum name='kKLuchrData' value='1'/>
  <enum name='kKLuchrKind' value='2'/>
  <enum name='kKeyboardANSI' value='1095652169'/>
  <enum name='kKeyboardISO' value='1230196512'/>
  <enum name='kKeyboardInputMethodClass' value='1768845421'/>
  <enum name='kKeyboardJIS' value='1246319392'/>
  <enum name='kKeyboardUnknown' value='1061109567'/>
  <enum name='kLeftArrowCharCode' value='28'/>
  <enum name='kLineFeedCharCode' value='10'/>
  <enum name='kListDefProcPtr' value='0'/>
  <enum name='kListDefStandardIconType' value='2'/>
  <enum name='kListDefStandardTextType' value='1'/>
  <enum name='kListDefUserProcType' value='0'/>
  <enum name='kMacHelpVersion' value='3'/>
  <enum name='kMenuAppleLogoFilledGlyph' value='20'/>
  <enum name='kMenuAppleLogoOutlineGlyph' value='108'/>
  <enum name='kMenuAttrAutoDisable' value='4'/>
  <enum name='kMenuAttrCondenseSeparators' value='32'/>
  <enum name='kMenuAttrDoNotCacheImage' value='64'/>
  <enum name='kMenuAttrDoNotUseUserCommandKeys' value='128'/>
  <enum name='kMenuAttrExcludesMarkColumn' value='1'/>
  <enum name='kMenuAttrHidden' value='16'/>
  <enum name='kMenuAttrUsePencilGlyph' value='8'/>
  <enum name='kMenuBlankGlyph' value='97'/>
  <enum name='kMenuCGImageRefType' value='7'/>
  <enum name='kMenuCalcItemMsg' value='5'/>
  <enum name='kMenuCapsLockGlyph' value='99'/>
  <enum name='kMenuCheckmarkGlyph' value='18'/>
  <enum name='kMenuClearGlyph' value='28'/>
  <enum name='kMenuColorIconType' value='4'/>
  <enum name='kMenuCommandGlyph' value='17'/>
  <enum name='kMenuContextCommandIDSearch' value='1048576'/>
  <enum name='kMenuContextKeyMatching' value='262144'/>
  <enum name='kMenuContextMenuBar' value='1'/>
  <enum name='kMenuContextMenuBarTracking' value='65536'/>
  <enum name='kMenuContextMenuEnabling' value='524288'/>
  <enum name='kMenuContextPopUp' value='512'/>
  <enum name='kMenuContextPopUpTracking' value='131072'/>
  <enum name='kMenuContextPullDown' value='256'/>
  <enum name='kMenuContextSubmenu' value='1024'/>
  <enum name='kMenuContextualMenuGlyph' value='109'/>
  <enum name='kMenuControlGlyph' value='6'/>
  <enum name='kMenuControlISOGlyph' value='138'/>
  <enum name='kMenuControlModifier' value='4'/>
  <enum name='kMenuDefClassID' value='1'/>
  <enum name='kMenuDefProcPtr' value='0'/>
  <enum name='kMenuDeleteLeftGlyph' value='23'/>
  <enum name='kMenuDeleteRightGlyph' value='10'/>
  <enum name='kMenuDiamondGlyph' value='19'/>
  <enum name='kMenuDisposeMsg' value='9'/>
  <enum name='kMenuDownArrowGlyph' value='106'/>
  <enum name='kMenuDownwardArrowDashedGlyph' value='16'/>
  <enum name='kMenuDrawItemsMsg' value='12'/>
  <enum name='kMenuDrawMsg' value='0'/>
  <enum name='kMenuEisuGlyph' value='141'/>
  <enum name='kMenuEjectGlyph' value='140'/>
  <enum name='kMenuEnterGlyph' value='4'/>
  <enum name='kMenuEscapeGlyph' value='27'/>
  <enum name='kMenuEventDontCheckSubmenus' value='4'/>
  <enum name='kMenuEventIncludeDisabledItems' value='1'/>
  <enum name='kMenuEventQueryOnly' value='2'/>
  <enum name='kMenuF10Glyph' value='120'/>
  <enum name='kMenuF11Glyph' value='121'/>
  <enum name='kMenuF12Glyph' value='122'/>
  <enum name='kMenuF13Glyph' value='135'/>
  <enum name='kMenuF14Glyph' value='136'/>
  <enum name='kMenuF15Glyph' value='137'/>
  <enum name='kMenuF1Glyph' value='111'/>
  <enum name='kMenuF2Glyph' value='112'/>
  <enum name='kMenuF3Glyph' value='113'/>
  <enum name='kMenuF4Glyph' value='114'/>
  <enum name='kMenuF5Glyph' value='115'/>
  <enum name='kMenuF6Glyph' value='116'/>
  <enum name='kMenuF7Glyph' value='117'/>
  <enum name='kMenuF8Glyph' value='118'/>
  <enum name='kMenuF9Glyph' value='119'/>
  <enum name='kMenuFindItemMsg' value='10'/>
  <enum name='kMenuHelpGlyph' value='103'/>
  <enum name='kMenuHiliteItemMsg' value='11'/>
  <enum name='kMenuIconRefType' value='6'/>
  <enum name='kMenuIconResourceType' value='9'/>
  <enum name='kMenuIconSuiteType' value='5'/>
  <enum name='kMenuIconType' value='1'/>
  <enum name='kMenuInitMsg' value='8'/>
  <enum name='kMenuItemAttrAutoDisable' value='8192'/>
  <enum name='kMenuItemAttrAutoRepeat' value='512'/>
  <enum name='kMenuItemAttrCustomDraw' value='2048'/>
  <enum name='kMenuItemAttrDisabled' value='1'/>
  <enum name='kMenuItemAttrDynamic' value='8'/>
  <enum name='kMenuItemAttrHidden' value='32'/>
  <enum name='kMenuItemAttrIconDisabled' value='2'/>
  <enum name='kMenuItemAttrIgnoreMeta' value='256'/>
  <enum name='kMenuItemAttrIncludeInCmdKeyMatching' value='4096'/>
  <enum name='kMenuItemAttrNotPreviousAlternate' value='16'/>
  <enum name='kMenuItemAttrSectionHeader' value='128'/>
  <enum name='kMenuItemAttrSeparator' value='64'/>
  <enum name='kMenuItemAttrSubmenuParentChoosable' value='4'/>
  <enum name='kMenuItemAttrUpdateSingleItem' value='16384'/>
  <enum name='kMenuItemAttrUseVirtualKey' value='1024'/>
  <enum name='kMenuItemDataAllDataVersionOne' value='1048575'/>
  <enum name='kMenuItemDataAllDataVersionTwo' value='2097151'/>
  <enum name='kMenuItemDataAttributes' value='65536'/>
  <enum name='kMenuItemDataCFString' value='131072'/>
  <enum name='kMenuItemDataCmdKey' value='4'/>
  <enum name='kMenuItemDataCmdKeyGlyph' value='8'/>
  <enum name='kMenuItemDataCmdKeyModifiers' value='16'/>
  <enum name='kMenuItemDataCmdVirtualKey' value='1048576'/>
  <enum name='kMenuItemDataCommandID' value='1024'/>
  <enum name='kMenuItemDataEnabled' value='64'/>
  <enum name='kMenuItemDataFontID' value='16384'/>
  <enum name='kMenuItemDataIconEnabled' value='128'/>
  <enum name='kMenuItemDataIconHandle' value='512'/>
  <enum name='kMenuItemDataIconID' value='256'/>
  <enum name='kMenuItemDataIndent' value='524288'/>
  <enum name='kMenuItemDataMark' value='2'/>
  <enum name='kMenuItemDataProperties' value='262144'/>
  <enum name='kMenuItemDataRefcon' value='32768'/>
  <enum name='kMenuItemDataStyle' value='32'/>
  <enum name='kMenuItemDataSubmenuHandle' value='8192'/>
  <enum name='kMenuItemDataSubmenuID' value='4096'/>
  <enum name='kMenuItemDataText' value='1'/>
  <enum name='kMenuItemDataTextEncoding' value='2048'/>
  <enum name='kMenuKanaGlyph' value='142'/>
  <enum name='kMenuLeftArrowDashedGlyph' value='24'/>
  <enum name='kMenuLeftArrowGlyph' value='100'/>
  <enum name='kMenuLeftDoubleQuotesJapaneseGlyph' value='29'/>
  <enum name='kMenuNoCommandModifier' value='8'/>
  <enum name='kMenuNoIcon' value='0'/>
  <enum name='kMenuNoModifiers' value='0'/>
  <enum name='kMenuNonmarkingReturnGlyph' value='13'/>
  <enum name='kMenuNorthwestArrowGlyph' value='102'/>
  <enum name='kMenuNullGlyph' value='0'/>
  <enum name='kMenuOptionGlyph' value='7'/>
  <enum name='kMenuOptionModifier' value='2'/>
  <enum name='kMenuPageDownGlyph' value='107'/>
  <enum name='kMenuPageUpGlyph' value='98'/>
  <enum name='kMenuParagraphKoreanGlyph' value='21'/>
  <enum name='kMenuPencilGlyph' value='15'/>
  <enum name='kMenuPopUpMsg' value='3'/>
  <enum name='kMenuPowerGlyph' value='110'/>
  <enum name='kMenuPropertyPersistent' value='1'/>
  <enum name='kMenuReturnGlyph' value='11'/>
  <enum name='kMenuReturnR2LGlyph' value='12'/>
  <enum name='kMenuRightArrowDashedGlyph' value='26'/>
  <enum name='kMenuRightArrowGlyph' value='101'/>
  <enum name='kMenuRightDoubleQuotesJapaneseGlyph' value='30'/>
  <enum name='kMenuShiftGlyph' value='5'/>
  <enum name='kMenuShiftModifier' value='1'/>
  <enum name='kMenuShrinkIconType' value='2'/>
  <enum name='kMenuSizeMsg' value='2'/>
  <enum name='kMenuSmallIconType' value='3'/>
  <enum name='kMenuSoutheastArrowGlyph' value='105'/>
  <enum name='kMenuSpaceGlyph' value='9'/>
  <enum name='kMenuStdMenuBarProc' value='63'/>
  <enum name='kMenuStdMenuProc' value='63'/>
  <enum name='kMenuSystemIconSelectorType' value='8'/>
  <enum name='kMenuTabLeftGlyph' value='3'/>
  <enum name='kMenuTabRightGlyph' value='2'/>
  <enum name='kMenuThemeSavvyMsg' value='7'/>
  <enum name='kMenuTrackingModeKeyboard' value='2'/>
  <enum name='kMenuTrackingModeMouse' value='1'/>
  <enum name='kMenuTrademarkJapaneseGlyph' value='31'/>
  <enum name='kMenuUpArrowDashedGlyph' value='25'/>
  <enum name='kMenuUpArrowGlyph' value='104'/>
  <enum name='kModalDialogVariantCode' value='1'/>
  <enum name='kModalWindowClass' value='3'/>
  <enum name='kMouseParamsSticky' value='1937008995'/>
  <enum name='kMouseTrackingKeyModifiersChanged' value='6'/>
  <enum name='kMouseTrackingMouseDown' value='1'/>
  <enum name='kMouseTrackingMouseDragged' value='5'/>
  <enum name='kMouseTrackingMouseEntered' value='4'/>
  <enum name='kMouseTrackingMouseExited' value='3'/>
  <enum name='kMouseTrackingMouseMoved' value='9'/>
  <enum name='kMouseTrackingMousePressed' value='1'/>
  <enum name='kMouseTrackingMouseReleased' value='2'/>
  <enum name='kMouseTrackingMouseUp' value='2'/>
  <enum name='kMouseTrackingOptionsGlobalClip' value='1'/>
  <enum name='kMouseTrackingOptionsLocalClip' value='0'/>
  <enum name='kMouseTrackingOptionsStandard' value='0'/>
  <enum name='kMouseTrackingTimedOut' value='8'/>
  <enum name='kMouseTrackingUserCancelled' value='7'/>
  <enum name='kMouseUpOutOfSlop' value64='2147516416' value='-2147450880'/>
  <enum name='kMovableAlertVariantCode' value='9'/>
  <enum name='kMovableAlertWindowClass' value='2'/>
  <enum name='kMovableModalDialogVariantCode' value='5'/>
  <enum name='kMovableModalWindowClass' value='4'/>
  <enum name='kNeutralScript' value='65535'/>
  <enum name='kNextWindowGroup' value='1'/>
  <enum name='kNonBreakingSpaceCharCode' value='202'/>
  <enum name='kNoteIcon' value='1'/>
  <enum name='kNullCharCode' value='0'/>
  <enum name='kNumberCtlCTabEntries' value='4'/>
  <enum name='kOCRInputMethodClass' value='1868788256'/>
  <enum name='kOptionUnicode' value='8997'/>
  <enum name='kOutputTextInUnicodeEncodingBit' value='9'/>
  <enum name='kOutputTextInUnicodeEncodingMask' value='512'/>
  <enum name='kOverlayWindowClass' value='14'/>
  <enum name='kPageDownCharCode' value='12'/>
  <enum name='kPageUpCharCode' value='11'/>
  <enum name='kPencilLeftUnicode' value='63490'/>
  <enum name='kPencilUnicode' value='9998'/>
  <enum name='kPictureDialogItem' value='64'/>
  <enum name='kPlainDialogVariantCode' value='2'/>
  <enum name='kPlainWindowClass' value='13'/>
  <enum name='kPreviousWindowGroup' value='0'/>
  <enum name='kPublicThemeFontCount' value='20'/>
  <enum name='kRadioButtonDialogItem' value='6'/>
  <enum name='kResourceControlDialogItem' value='7'/>
  <enum name='kReturnCharCode' value='13'/>
  <enum name='kRightArrowCharCode' value='29'/>
  <enum name='kRoundWindowDefinition' value='1'/>
  <enum name='kScrapClearNamedScrap' value='1'/>
  <enum name='kScrapFlavorMaskNone' value='0'/>
  <enum name='kScrapFlavorMaskSenderOnly' value='1'/>
  <enum name='kScrapFlavorMaskTranslated' value='2'/>
  <enum name='kScrapFlavorSizeUnknown' value='-1'/>
  <enum name='kScrapFlavorTypeMovie' value='1836019574'/>
  <enum name='kScrapFlavorTypePicture' value='1346978644'/>
  <enum name='kScrapFlavorTypeSound' value='1936614432'/>
  <enum name='kScrapFlavorTypeText' value='1413830740'/>
  <enum name='kScrapFlavorTypeTextStyle' value='1937013100'/>
  <enum name='kScrapFlavorTypeUTF16External' value='1970549046'/>
  <enum name='kScrapFlavorTypeUnicode' value='1970567284'/>
  <enum name='kScrapFlavorTypeUnicodeStyle' value='1970500716'/>
  <enum name='kScrapGetNamedScrap' value='0'/>
  <enum name='kScrapReservedFlavorType' value='1936877172'/>
  <enum name='kScrollBarsAlwaysActive' value='1'/>
  <enum name='kScrollBarsSyncWithFocus' value='0'/>
  <enum name='kScrollWindowEraseToPortBackground' value='2'/>
  <enum name='kScrollWindowInvalidate' value='1'/>
  <enum name='kScrollWindowNoOptions' value='0'/>
  <enum name='kShadowDialogVariantCode' value='3'/>
  <enum name='kSheetAlertWindowClass' value='15'/>
  <enum name='kSheetWindowClass' value='11'/>
  <enum name='kShiftUnicode' value='8679'/>
  <enum name='kSideFloaterVariantCode' value='8'/>
  <enum name='kSimpleWindowClass' value='18'/>
  <enum name='kSpaceCharCode' value='32'/>
  <enum name='kSpeechInputMethodClass' value='1987012963'/>
  <enum name='kStandardWindowDefinition' value='0'/>
  <enum name='kStaticTextDialogItem' value='8'/>
  <enum name='kStdAlertDoNotAnimateOnCancel' value='4'/>
  <enum name='kStdAlertDoNotAnimateOnDefault' value='2'/>
  <enum name='kStdAlertDoNotAnimateOnOther' value='8'/>
  <enum name='kStdAlertDoNotCloseOnHelp' value='16'/>
  <enum name='kStdAlertDoNotDisposeSheet' value='1'/>
  <enum name='kStdCFStringAlertVersionOne' value='1'/>
  <enum name='kStdCancelItemIndex' value='2'/>
  <enum name='kStdOkItemIndex' value='1'/>
  <enum name='kStopIcon' value='0'/>
  <enum name='kStoredBasicWindowDescriptionID' value='1935827315'/>
  <enum name='kStoredWindowPascalTitleID' value='1932670261'/>
  <enum name='kStoredWindowSystemTag' value='1634758764'/>
  <enum name='kStoredWindowTitleCFStringID' value='1667658612'/>
  <enum name='kSupportsFileTranslation' value='1'/>
  <enum name='kSupportsScrapTranslation' value='2'/>
  <enum name='kTSM15Version' value='336'/>
  <enum name='kTSM20Version' value='512'/>
  <enum name='kTSM22Version' value='544'/>
  <enum name='kTSM23Version' value='560'/>
  <enum name='kTSMDocAccessEffectiveRangeAttribute' value='2'/>
  <enum name='kTSMDocAccessEffectiveRangeAttributeBit' value='1'/>
  <enum name='kTSMDocAccessFontSizeAttribute' value='1'/>
  <enum name='kTSMDocAccessFontSizeAttributeBit' value='0'/>
  <enum name='kTSMDocumentInputModePropertyTag' value='1768778093'/>
  <enum name='kTSMDocumentPropertySupportGlyphInfo' value='1685088105'/>
  <enum name='kTSMDocumentPropertyUnicodeInputWindow' value='1685091682'/>
  <enum name='kTSMDocumentRefconPropertyTag' value='1919247971'/>
  <enum name='kTSMDocumentSupportDocumentAccessPropertyTag' value='1684107385'/>
  <enum name='kTSMDocumentSupportGlyphInfoPropertyTag' value='1685088105'/>
  <enum name='kTSMDocumentTSMTEPropertyTag' value='1953322053'/>
  <enum name='kTSMDocumentTextServicePropertyTag' value='1953724003'/>
  <enum name='kTSMDocumentUnicodeInputWindowPropertyTag' value='1685091682'/>
  <enum name='kTSMDocumentUnicodePropertyTag' value='1969516387'/>
  <enum name='kTSMDocumentUseFloatingWindowPropertyTag' value='1970501485'/>
  <enum name='kTSMDocumentWindowLevelPropertyTag' value='1953983600'/>
  <enum name='kTSMTEAutoScroll' value='1'/>
  <enum name='kTSMTEDocumentInterfaceType' value='1953322053'/>
  <enum name='kTSMTEInterfaceType' value='1953322053'/>
  <enum name='kTSMTESignature' value='1953322053'/>
  <enum name='kTSMVersion' value='336'/>
  <enum name='kTXNAIFFFile' value='1095321158'/>
  <enum name='kTXNATSUIFontFeaturesAttribute' value='1635018341'/>
  <enum name='kTXNATSUIFontVariationsAttribute' value='1635022433'/>
  <enum name='kTXNATSUIStyle' value='1634956396'/>
  <enum name='kTXNATSUIStyleContinuousBit' value='4'/>
  <enum name='kTXNATSUIStyleContinuousMask' value='16'/>
  <enum name='kTXNATSUIStyleSize' value64='8' value='4'/>
  <enum name='kTXNAlignCenterAction' value='9'/>
  <enum name='kTXNAlignLeftAction' value='8'/>
  <enum name='kTXNAlignRightAction' value='10'/>
  <enum name='kTXNAllCountMask' value='3'/>
  <enum name='kTXNAlwaysUseQuickDrawTextBit' value='3'/>
  <enum name='kTXNAlwaysUseQuickDrawTextMask' value='8'/>
  <enum name='kTXNAlwaysWrapAtViewEdgeBit' value='11'/>
  <enum name='kTXNAlwaysWrapAtViewEdgeMask' value='2048'/>
  <enum name='kTXNAutoIndentOff' value='0'/>
  <enum name='kTXNAutoIndentOn' value='1'/>
  <enum name='kTXNAutoIndentStateTag' value='1635084654'/>
  <enum name='kTXNAutoScrollBehaviorTag' value='1935828342'/>
  <enum name='kTXNAutoScrollInsertionIntoView' value='0'/>
  <enum name='kTXNAutoScrollNever' value='1'/>
  <enum name='kTXNAutoScrollWhenInsertionVisible' value='2'/>
  <enum name='kTXNAutoWrap' value='0'/>
  <enum name='kTXNBackgroundTypeRGB' value='1'/>
  <enum name='kTXNCenter' value='4'/>
  <enum name='kTXNCenterTab' value='1'/>
  <enum name='kTXNChangeFontAction' value='4'/>
  <enum name='kTXNChangeFontColorAction' value='5'/>
  <enum name='kTXNChangeFontSizeAction' value='6'/>
  <enum name='kTXNChangeStyleAction' value='7'/>
  <enum name='kTXNClearAction' value='3'/>
  <enum name='kTXNClearTheseFontFeatures' value64='2147483648' value='-2147483648'/>
  <enum name='kTXNClearThisControl' value64='4294967295' value='-1'/>
  <enum name='kTXNColorContinuousBit' value='3'/>
  <enum name='kTXNColorContinuousMask' value='8'/>
  <enum name='kTXNCutAction' value='1'/>
  <enum name='kTXNDecrementTypeSize' value64='2147483648' value='-2147483648'/>
  <enum name='kTXNDefaultFontSize' value='786432'/>
  <enum name='kTXNDefaultFontStyle' value='0'/>
  <enum name='kTXNDestinationRectKey' value='1'/>
  <enum name='kTXNDisableDragAndDrop' value='1'/>
  <enum name='kTXNDisableDragAndDropBit' value='15'/>
  <enum name='kTXNDisableDragAndDropMask' value='32768'/>
  <enum name='kTXNDisableDragAndDropTag' value='1685217639'/>
  <enum name='kTXNDisableLayoutAndDraw' value='1'/>
  <enum name='kTXNDisableLayoutAndDrawTag' value='1986622306'/>
  <enum name='kTXNDisabledFunctionalityErr' value='-22019'/>
  <enum name='kTXNDoFontSubstitution' value='1716745570'/>
  <enum name='kTXNDoFontSubstitutionBit' value='22'/>
  <enum name='kTXNDoFontSubstitutionMask' value='4194304'/>
  <enum name='kTXNDoNotInstallDragProcsBit' value='10'/>
  <enum name='kTXNDoNotInstallDragProcsMask' value='1024'/>
  <enum name='kTXNDontCareTypeSize' value64='4294967295' value='-1'/>
  <enum name='kTXNDontCareTypeStyle' value='255'/>
  <enum name='kTXNDontDrawCaretWhenInactive' value='0'/>
  <enum name='kTXNDontDrawCaretWhenInactiveBit' value='12'/>
  <enum name='kTXNDontDrawCaretWhenInactiveMask' value='4096'/>
  <enum name='kTXNDontDrawSelectionWhenInactive' value='0'/>
  <enum name='kTXNDontDrawSelectionWhenInactiveBit' value='13'/>
  <enum name='kTXNDontDrawSelectionWhenInactiveMask' value='8192'/>
  <enum name='kTXNDontDrawTextBit' value='6'/>
  <enum name='kTXNDontDrawTextMask' value='64'/>
  <enum name='kTXNDontUpdateBoxRectBit' value='5'/>
  <enum name='kTXNDontUpdateBoxRectMask' value='32'/>
  <enum name='kTXNDontWrapTextBit' value='9'/>
  <enum name='kTXNDontWrapTextMask' value='512'/>
  <enum name='kTXNDrawCaretWhenInactive' value='1'/>
  <enum name='kTXNDrawCaretWhenInactiveTag' value='1684238964'/>
  <enum name='kTXNDrawGrowIconBit' value='0'/>
  <enum name='kTXNDrawGrowIconMask' value='1'/>
  <enum name='kTXNDrawItemAllMask' value='4294967295'/>
  <enum name='kTXNDrawItemScrollbarsBit' value='0'/>
  <enum name='kTXNDrawItemScrollbarsMask' value='1'/>
  <enum name='kTXNDrawItemTextAndSelectionBit' value='2'/>
  <enum name='kTXNDrawItemTextAndSelectionMask' value='4'/>
  <enum name='kTXNDrawItemTextBit' value='1'/>
  <enum name='kTXNDrawItemTextMask' value='2'/>
  <enum name='kTXNDrawSelectionWhenInactive' value='1'/>
  <enum name='kTXNDrawSelectionWhenInactiveTag' value='1685285998'/>
  <enum name='kTXNDropAction' value='11'/>
  <enum name='kTXNEnableDragAndDrop' value='0'/>
  <enum name='kTXNEnableLayoutAndDraw' value='0'/>
  <enum name='kTXNEndOffset' value='2147483647'/>
  <enum name='kTXNEntireWordBit' value='1'/>
  <enum name='kTXNEntireWordMask' value='2'/>
  <enum name='kTXNFlattenMoviesTag' value='1718378868'/>
  <enum name='kTXNFlushDefault' value='0'/>
  <enum name='kTXNFlushLeft' value='1'/>
  <enum name='kTXNFlushRight' value='2'/>
  <enum name='kTXNFontContinuousBit' value='0'/>
  <enum name='kTXNFontContinuousMask' value='1'/>
  <enum name='kTXNFontFeatureAction' value='13'/>
  <enum name='kTXNFontSizeAttributeSize' value='4'/>
  <enum name='kTXNFontVariationAction' value='14'/>
  <enum name='kTXNForceFullJust' value='16'/>
  <enum name='kTXNFullJust' value='8'/>
  <enum name='kTXNHorizontal' value='0'/>
  <enum name='kTXNHorizontalScrollBarRectKey' value='4'/>
  <enum name='kTXNIOPrivilegesTag' value='1768910966'/>
  <enum name='kTXNIgnoreCaseBit' value='0'/>
  <enum name='kTXNIgnoreCaseMask' value='1'/>
  <enum name='kTXNImageWithQDBit' value='8'/>
  <enum name='kTXNImageWithQDMask' value='256'/>
  <enum name='kTXNIncrementTypeSize' value='1'/>
  <enum name='kTXNInlineStateTag' value='1768846196'/>
  <enum name='kTXNJustificationTag' value='1786082164'/>
  <enum name='kTXNKeyboardSyncStateTag' value='1801614201'/>
  <enum name='kTXNLeftTab' value='0'/>
  <enum name='kTXNLeftToRight' value='0'/>
  <enum name='kTXNLineDirectionTag' value='1819174002'/>
  <enum name='kTXNLinkNotPressed' value='0'/>
  <enum name='kTXNLinkTracking' value='3'/>
  <enum name='kTXNLinkWasPressed' value='1'/>
  <enum name='kTXNMacOSEncoding' value='1'/>
  <enum name='kTXNMarginsTag' value='1835102823'/>
  <enum name='kTXNMonostyledTextBit' value='17'/>
  <enum name='kTXNMonostyledTextMask' value='131072'/>
  <enum name='kTXNMoveAction' value='12'/>
  <enum name='kTXNMovieData' value='1836019574'/>
  <enum name='kTXNMovieFile' value='1299148630'/>
  <enum name='kTXNMultipleFrameType' value='3'/>
  <enum name='kTXNMultipleStylesPerTextDocumentResType' value='1937013100'/>
  <enum name='kTXNNoAppleEventHandlersBit' value='0'/>
  <enum name='kTXNNoAppleEventHandlersMask' value='1'/>
  <enum name='kTXNNoAutoWrap' value='1'/>
  <enum name='kTXNNoFontVariations' value='32767'/>
  <enum name='kTXNNoKeyboardSyncBit' value='6'/>
  <enum name='kTXNNoKeyboardSyncMask' value='64'/>
  <enum name='kTXNNoSelectionBit' value='7'/>
  <enum name='kTXNNoSelectionMask' value='128'/>
  <enum name='kTXNNoSyncKeyboard' value='1'/>
  <enum name='kTXNNoTSMEverBit' value='4'/>
  <enum name='kTXNNoTSMEverMask' value='16'/>
  <enum name='kTXNNoUserIOTag' value='1853188463'/>
  <enum name='kTXNOperationNotAllowedErr' value='-22020'/>
  <enum name='kTXNPageFrameType' value='2'/>
  <enum name='kTXNPasteAction' value='2'/>
  <enum name='kTXNPictureData' value='1346978644'/>
  <enum name='kTXNPictureFile' value='1346978644'/>
  <enum name='kTXNQDFontColorAttribute' value='1802268530'/>
  <enum name='kTXNQDFontColorAttributeSize' value='6'/>
  <enum name='kTXNQDFontFamilyIDAttribute' value='1718578804'/>
  <enum name='kTXNQDFontFamilyIDAttributeSize' value='2'/>
  <enum name='kTXNQDFontNameAttribute' value='1718514798'/>
  <enum name='kTXNQDFontNameAttributeSize' value='256'/>
  <enum name='kTXNQDFontSizeAttribute' value='1936292453'/>
  <enum name='kTXNQDFontSizeAttributeSize' value='2'/>
  <enum name='kTXNQDFontStyleAttribute' value='1717658469'/>
  <enum name='kTXNQDFontStyleAttributeSize' value='1'/>
  <enum name='kTXNReadOnly' value='1'/>
  <enum name='kTXNReadOnlyBit' value='5'/>
  <enum name='kTXNReadOnlyMask' value='32'/>
  <enum name='kTXNReadWrite' value='0'/>
  <enum name='kTXNRefConTag' value='1919312750'/>
  <enum name='kTXNRestartAppleEventHandlersBit' value='1'/>
  <enum name='kTXNRestartAppleEventHandlersMask' value='2'/>
  <enum name='kTXNRichTextFormatData' value='1381254688'/>
  <enum name='kTXNRightTab' value='-1'/>
  <enum name='kTXNRightToLeft' value='1'/>
  <enum name='kTXNRotateTextBit' value='3'/>
  <enum name='kTXNRotateTextMask' value='8'/>
  <enum name='kTXNRunCountBit' value='1'/>
  <enum name='kTXNRunCountMask' value='2'/>
  <enum name='kTXNSaveStylesAsSTYLResourceBit' value='8'/>
  <enum name='kTXNSaveStylesAsSTYLResourceMask' value='256'/>
  <enum name='kTXNScrollUnitsInLines' value='1'/>
  <enum name='kTXNScrollUnitsInPixels' value='0'/>
  <enum name='kTXNScrollUnitsInViewRects' value='2'/>
  <enum name='kTXNSelectionOff' value='0'/>
  <enum name='kTXNSelectionOn' value='1'/>
  <enum name='kTXNSelectionStateTag' value='1936487284'/>
  <enum name='kTXNSetFlushnessBit' value='0'/>
  <enum name='kTXNSetFlushnessMask' value='1'/>
  <enum name='kTXNSetJustificationBit' value='1'/>
  <enum name='kTXNSetJustificationMask' value='2'/>
  <enum name='kTXNShowEnd' value='1'/>
  <enum name='kTXNShowStart' value='0'/>
  <enum name='kTXNShowWindowBit' value='1'/>
  <enum name='kTXNShowWindowMask' value='2'/>
  <enum name='kTXNSingleLevelUndoTag' value='1970168943'/>
  <enum name='kTXNSingleLineOnlyBit' value='14'/>
  <enum name='kTXNSingleLineOnlyMask' value='16384'/>
  <enum name='kTXNSingleStylePerTextDocumentResType' value='1297109842'/>
  <enum name='kTXNSizeContinuousBit' value='1'/>
  <enum name='kTXNSizeContinuousMask' value='2'/>
  <enum name='kTXNSoundData' value='1936614432'/>
  <enum name='kTXNSoundFile' value='1936091500'/>
  <enum name='kTXNStartOffset' value='0'/>
  <enum name='kTXNStyleContinuousBit' value='2'/>
  <enum name='kTXNStyleContinuousMask' value='4'/>
  <enum name='kTXNSupportEditCommandProcessing' value='1'/>
  <enum name='kTXNSupportEditCommandUpdating' value='2'/>
  <enum name='kTXNSupportFontCommandProcessing' value='16'/>
  <enum name='kTXNSupportFontCommandUpdating' value='32'/>
  <enum name='kTXNSupportSpellCheckCommandProcessing' value='4'/>
  <enum name='kTXNSupportSpellCheckCommandUpdating' value='8'/>
  <enum name='kTXNSyncKeyboard' value='0'/>
  <enum name='kTXNSystemDefaultEncoding' value='0'/>
  <enum name='kTXNTabSettingsTag' value='1952539251'/>
  <enum name='kTXNTextAndMultimediaData' value='1954051182'/>
  <enum name='kTXNTextData' value='1413830740'/>
  <enum name='kTXNTextEditStyleFrameType' value='1'/>
  <enum name='kTXNTextEncodingAttribute' value='1701733220'/>
  <enum name='kTXNTextEncodingAttributeSize' value='4'/>
  <enum name='kTXNTextFile' value='1413830740'/>
  <enum name='kTXNTextInputCountBit' value='0'/>
  <enum name='kTXNTextInputCountMask' value='1'/>
  <enum name='kTXNTextRectKey' value='2'/>
  <enum name='kTXNTextensionFile' value='1954051182'/>
  <enum name='kTXNTypingAction' value='0'/>
  <enum name='kTXNURLAttribute' value='1970433121'/>
  <enum name='kTXNUndoLastAction' value='1024'/>
  <enum name='kTXNUnicodeEncoding' value='2'/>
  <enum name='kTXNUnicodeTextData' value='1970567284'/>
  <enum name='kTXNUnicodeTextFile' value='1970567284'/>
  <enum name='kTXNUseBottomline' value='1'/>
  <enum name='kTXNUseCGContextRefBit' value='7'/>
  <enum name='kTXNUseCGContextRefMask' value='128'/>
  <enum name='kTXNUseCarbonEvents' value='1667392354'/>
  <enum name='kTXNUseCurrentSelection' value='4294967295'/>
  <enum name='kTXNUseEncodingWordRulesBit' value='31'/>
  <enum name='kTXNUseEncodingWordRulesMask' value='2147483648'/>
  <enum name='kTXNUseFontFallBackBit' value='2'/>
  <enum name='kTXNUseFontFallBackMask' value='4'/>
  <enum name='kTXNUseInline' value='0'/>
  <enum name='kTXNUseQDforImagingBit' value='16'/>
  <enum name='kTXNUseQDforImagingMask' value='65536'/>
  <enum name='kTXNUseScriptDefaultValue' value='-1'/>
  <enum name='kTXNUseTemporaryMemoryBit' value='4'/>
  <enum name='kTXNUseTemporaryMemoryMask' value='16'/>
  <enum name='kTXNUseVerticalTextBit' value='4'/>
  <enum name='kTXNUseVerticalTextMask' value='16'/>
  <enum name='kTXNVertical' value='1'/>
  <enum name='kTXNVerticalScrollBarRectKey' value='3'/>
  <enum name='kTXNViewRectKey' value='0'/>
  <enum name='kTXNVisibilityTag' value='1986622306'/>
  <enum name='kTXNWantGraphicsBit' value='2'/>
  <enum name='kTXNWantGraphicsMask' value='4'/>
  <enum name='kTXNWantHScrollBarBit' value='2'/>
  <enum name='kTXNWantHScrollBarMask' value='4'/>
  <enum name='kTXNWantMoviesBit' value='0'/>
  <enum name='kTXNWantMoviesMask' value='1'/>
  <enum name='kTXNWantSoundBit' value='1'/>
  <enum name='kTXNWantSoundMask' value='2'/>
  <enum name='kTXNWantVScrollBarBit' value='3'/>
  <enum name='kTXNWantVScrollBarMask' value='8'/>
  <enum name='kTXNWillDefaultToATSUIBit' value='0'/>
  <enum name='kTXNWillDefaultToATSUIMask' value='1'/>
  <enum name='kTXNWillDefaultToCarbonEventBit' value='1'/>
  <enum name='kTXNWillDefaultToCarbonEventMask' value='2'/>
  <enum name='kTXNWordWrapStateTag' value='2004316787'/>
  <enum name='kTabCharCode' value='9'/>
  <enum name='kTextService' value='1953724003'/>
  <enum name='kTextServiceDocumentInterfaceType' value='1953724003'/>
  <enum name='kTextServiceInputModePropertyTag' value='1768778093'/>
  <enum name='kTextServiceJaTypingMethodPropertyTag' value='1786018160'/>
  <enum name='kThemeActiveAlertBackgroundBrush' value='3'/>
  <enum name='kThemeActiveAlertTextColor' value='3'/>
  <enum name='kThemeActiveBevelButtonTextColor' value='15'/>
  <enum name='kThemeActiveDialogBackgroundBrush' value='1'/>
  <enum name='kThemeActiveDialogTextColor' value='1'/>
  <enum name='kThemeActiveDocumentWindowTitleTextColor' value='23'/>
  <enum name='kThemeActiveMenuItemTextColor' value='34'/>
  <enum name='kThemeActiveModelessDialogBackgroundBrush' value='5'/>
  <enum name='kThemeActiveModelessDialogTextColor' value='5'/>
  <enum name='kThemeActiveMovableModalWindowTitleTextColor' value='25'/>
  <enum name='kThemeActivePlacardTextColor' value='9'/>
  <enum name='kThemeActivePopupArrowBrush' value='20'/>
  <enum name='kThemeActivePopupButtonTextColor' value='18'/>
  <enum name='kThemeActivePopupLabelTextColor' value='37'/>
  <enum name='kThemeActivePopupWindowTitleColor' value='29'/>
  <enum name='kThemeActivePushButtonTextColor' value='12'/>
  <enum name='kThemeActiveRootMenuTextColor' value='31'/>
  <enum name='kThemeActiveScrollBarDelimiterBrush' value='17'/>
  <enum name='kThemeActiveUtilityWindowBackgroundBrush' value='7'/>
  <enum name='kThemeActiveUtilityWindowTitleTextColor' value='27'/>
  <enum name='kThemeActiveWindowHeaderTextColor' value='7'/>
  <enum name='kThemeAdornmentArrowDoubleArrow' value='256'/>
  <enum name='kThemeAdornmentArrowDownArrow' value='128'/>
  <enum name='kThemeAdornmentArrowLeftArrow' value='64'/>
  <enum name='kThemeAdornmentArrowUpArrow' value='512'/>
  <enum name='kThemeAdornmentDefault' value='1'/>
  <enum name='kThemeAdornmentDrawIndicatorOnly' value='32'/>
  <enum name='kThemeAdornmentFocus' value='4'/>
  <enum name='kThemeAdornmentHeaderButtonLeftNeighborSelected' value='64'/>
  <enum name='kThemeAdornmentHeaderButtonNoShadow' value='1024'/>
  <enum name='kThemeAdornmentHeaderButtonNoSortArrow' value='4096'/>
  <enum name='kThemeAdornmentHeaderButtonRightNeighborSelected' value='128'/>
  <enum name='kThemeAdornmentHeaderButtonShadowOnly' value='2048'/>
  <enum name='kThemeAdornmentHeaderButtonSortUp' value='256'/>
  <enum name='kThemeAdornmentHeaderMenuButton' value='512'/>
  <enum name='kThemeAdornmentNoShadow' value='1024'/>
  <enum name='kThemeAdornmentNone' value='0'/>
  <enum name='kThemeAdornmentRightToLeft' value='16'/>
  <enum name='kThemeAdornmentShadowOnly' value='2048'/>
  <enum name='kThemeAlertHeaderFont' value='107'/>
  <enum name='kThemeAlertWindow' value='3'/>
  <enum name='kThemeAliasArrowCursor' value='2'/>
  <enum name='kThemeAppearanceFileNameTag' value='1953000805'/>
  <enum name='kThemeAppleGuideCoachmarkBrush' value='23'/>
  <enum name='kThemeApplicationFont' value='5'/>
  <enum name='kThemeArrow3pt' value='0'/>
  <enum name='kThemeArrow5pt' value='1'/>
  <enum name='kThemeArrow7pt' value='2'/>
  <enum name='kThemeArrow9pt' value='3'/>
  <enum name='kThemeArrowButton' value='4'/>
  <enum name='kThemeArrowButtonMini' value='24'/>
  <enum name='kThemeArrowButtonSmall' value='23'/>
  <enum name='kThemeArrowCursor' value='0'/>
  <enum name='kThemeArrowDown' value='1'/>
  <enum name='kThemeArrowLeft' value='0'/>
  <enum name='kThemeArrowRight' value='2'/>
  <enum name='kThemeArrowUp' value='3'/>
  <enum name='kThemeBackgroundListViewWindowHeader' value='4'/>
  <enum name='kThemeBackgroundMetal' value='6'/>
  <enum name='kThemeBackgroundPlacard' value='2'/>
  <enum name='kThemeBackgroundSecondaryGroupBox' value='5'/>
  <enum name='kThemeBackgroundTabPane' value='1'/>
  <enum name='kThemeBackgroundWindowHeader' value='3'/>
  <enum name='kThemeBevelButton' value='3'/>
  <enum name='kThemeBevelButtonInset' value='31'/>
  <enum name='kThemeBevelButtonLarge' value='9'/>
  <enum name='kThemeBevelButtonMedium' value='3'/>
  <enum name='kThemeBevelButtonSmall' value='8'/>
  <enum name='kThemeBottomInsideArrowPressed' value='32'/>
  <enum name='kThemeBottomOutsideArrowPressed' value='64'/>
  <enum name='kThemeBottomTrackPressed' value='16'/>
  <enum name='kThemeBrushActiveAreaFill' value='26'/>
  <enum name='kThemeBrushAlertBackgroundActive' value='3'/>
  <enum name='kThemeBrushAlertBackgroundInactive' value='4'/>
  <enum name='kThemeBrushAlternatePrimaryHighlightColor' value='-5'/>
  <enum name='kThemeBrushAppleGuideCoachmark' value='23'/>
  <enum name='kThemeBrushBevelActiveDark' value='45'/>
  <enum name='kThemeBrushBevelActiveLight' value='44'/>
  <enum name='kThemeBrushBevelInactiveDark' value='47'/>
  <enum name='kThemeBrushBevelInactiveLight' value='46'/>
  <enum name='kThemeBrushBlack' value='-1'/>
  <enum name='kThemeBrushButtonActiveDarkHighlight' value='33'/>
  <enum name='kThemeBrushButtonActiveDarkShadow' value='32'/>
  <enum name='kThemeBrushButtonActiveLightHighlight' value='35'/>
  <enum name='kThemeBrushButtonActiveLightShadow' value='34'/>
  <enum name='kThemeBrushButtonFaceActive' value='29'/>
  <enum name='kThemeBrushButtonFaceInactive' value='30'/>
  <enum name='kThemeBrushButtonFacePressed' value='31'/>
  <enum name='kThemeBrushButtonFrameActive' value='27'/>
  <enum name='kThemeBrushButtonFrameInactive' value='28'/>
  <enum name='kThemeBrushButtonInactiveDarkHighlight' value='37'/>
  <enum name='kThemeBrushButtonInactiveDarkShadow' value='36'/>
  <enum name='kThemeBrushButtonInactiveLightHighlight' value='39'/>
  <enum name='kThemeBrushButtonInactiveLightShadow' value='38'/>
  <enum name='kThemeBrushButtonPressedDarkHighlight' value='41'/>
  <enum name='kThemeBrushButtonPressedDarkShadow' value='40'/>
  <enum name='kThemeBrushButtonPressedLightHighlight' value='43'/>
  <enum name='kThemeBrushButtonPressedLightShadow' value='42'/>
  <enum name='kThemeBrushChasingArrows' value='13'/>
  <enum name='kThemeBrushDialogBackgroundActive' value='1'/>
  <enum name='kThemeBrushDialogBackgroundInactive' value='2'/>
  <enum name='kThemeBrushDocumentWindowBackground' value='15'/>
  <enum name='kThemeBrushDragHilite' value='14'/>
  <enum name='kThemeBrushDrawerBackground' value='51'/>
  <enum name='kThemeBrushFinderWindowBackground' value='16'/>
  <enum name='kThemeBrushFocusHighlight' value='19'/>
  <enum name='kThemeBrushIconLabelBackground' value='11'/>
  <enum name='kThemeBrushIconLabelBackgroundSelected' value='24'/>
  <enum name='kThemeBrushListViewBackground' value='10'/>
  <enum name='kThemeBrushListViewColumnDivider' value='58'/>
  <enum name='kThemeBrushListViewEvenRowBackground' value='57'/>
  <enum name='kThemeBrushListViewOddRowBackground' value='56'/>
  <enum name='kThemeBrushListViewSeparator' value='12'/>
  <enum name='kThemeBrushListViewSortColumnBackground' value='9'/>
  <enum name='kThemeBrushMenuBackground' value='54'/>
  <enum name='kThemeBrushMenuBackgroundSelected' value='55'/>
  <enum name='kThemeBrushModelessDialogBackgroundActive' value='5'/>
  <enum name='kThemeBrushModelessDialogBackgroundInactive' value='6'/>
  <enum name='kThemeBrushMovableModalBackground' value='49'/>
  <enum name='kThemeBrushNotificationWindowBackground' value='48'/>
  <enum name='kThemeBrushPassiveAreaFill' value='25'/>
  <enum name='kThemeBrushPopupArrowActive' value='20'/>
  <enum name='kThemeBrushPopupArrowInactive' value='22'/>
  <enum name='kThemeBrushPopupArrowPressed' value='21'/>
  <enum name='kThemeBrushPrimaryHighlightColor' value='-3'/>
  <enum name='kThemeBrushScrollBarDelimiterActive' value='17'/>
  <enum name='kThemeBrushScrollBarDelimiterInactive' value='18'/>
  <enum name='kThemeBrushSecondaryHighlightColor' value='-4'/>
  <enum name='kThemeBrushSheetBackground' value='50'/>
  <enum name='kThemeBrushSheetBackgroundOpaque' value='50'/>
  <enum name='kThemeBrushSheetBackgroundTransparent' value='53'/>
  <enum name='kThemeBrushStaticAreaFill' value='25'/>
  <enum name='kThemeBrushToolbarBackground' value='52'/>
  <enum name='kThemeBrushUtilityWindowBackgroundActive' value='7'/>
  <enum name='kThemeBrushUtilityWindowBackgroundInactive' value='8'/>
  <enum name='kThemeBrushWhite' value='-2'/>
  <enum name='kThemeButtonMixed' value='2'/>
  <enum name='kThemeButtonOff' value='0'/>
  <enum name='kThemeButtonOn' value='1'/>
  <enum name='kThemeChasingArrowsBrush' value='13'/>
  <enum name='kThemeCheckBox' value='1'/>
  <enum name='kThemeCheckBoxCheckMark' value='1'/>
  <enum name='kThemeCheckBoxClassicX' value='0'/>
  <enum name='kThemeCheckBoxMini' value='19'/>
  <enum name='kThemeCheckBoxSmall' value='13'/>
  <enum name='kThemeClosedHandCursor' value='8'/>
  <enum name='kThemeComboBox' value='16'/>
  <enum name='kThemeComboBoxMini' value='18'/>
  <enum name='kThemeComboBoxSmall' value='17'/>
  <enum name='kThemeContextualMenuArrowCursor' value='3'/>
  <enum name='kThemeControlSoundsMask' value='4'/>
  <enum name='kThemeCopyArrowCursor' value='1'/>
  <enum name='kThemeCountingDownHandCursor' value='12'/>
  <enum name='kThemeCountingUpAndDownHandCursor' value='13'/>
  <enum name='kThemeCountingUpHandCursor' value='11'/>
  <enum name='kThemeCrossCursor' value='5'/>
  <enum name='kThemeCurrentPortFont' value='200'/>
  <enum name='kThemeCustomThemesFileType' value='1935893870'/>
  <enum name='kThemeDataFileType' value='1953000805'/>
  <enum name='kThemeDblClickCollapseTag' value='1668246636'/>
  <enum name='kThemeDefaultAdornment' value='1'/>
  <enum name='kThemeDesktopPatternNameTag' value='1885434990'/>
  <enum name='kThemeDesktopPatternTag' value='1885434996'/>
  <enum name='kThemeDesktopPictureAliasTag' value='1685086572'/>
  <enum name='kThemeDesktopPictureAlignmentTag' value='1685086574'/>
  <enum name='kThemeDesktopPictureNameTag' value='1685089901'/>
  <enum name='kThemeDialogWindow' value='1'/>
  <enum name='kThemeDisabledMenuItemTextColor' value='36'/>
  <enum name='kThemeDisabledRootMenuTextColor' value='33'/>
  <enum name='kThemeDisclosureButton' value='6'/>
  <enum name='kThemeDisclosureDown' value='1'/>
  <enum name='kThemeDisclosureLeft' value='2'/>
  <enum name='kThemeDisclosureRight' value='0'/>
  <enum name='kThemeDisclosureTriangle' value='6'/>
  <enum name='kThemeDocumentWindow' value='0'/>
  <enum name='kThemeDocumentWindowBackgroundBrush' value='15'/>
  <enum name='kThemeDragHiliteBrush' value='14'/>
  <enum name='kThemeDragSoundDragging' value='1685217639'/>
  <enum name='kThemeDragSoundGrowUtilWindow' value='1969713775'/>
  <enum name='kThemeDragSoundGrowWindow' value='2003268207'/>
  <enum name='kThemeDragSoundMoveAlert' value='1634561910'/>
  <enum name='kThemeDragSoundMoveDialog' value='1684893558'/>
  <enum name='kThemeDragSoundMoveIcon' value='1768779638'/>
  <enum name='kThemeDragSoundMoveUtilWindow' value='1970106230'/>
  <enum name='kThemeDragSoundMoveWindow' value='2003660662'/>
  <enum name='kThemeDragSoundNone' value='0'/>
  <enum name='kThemeDragSoundScrollBarArrowDecreasing' value='1935827300'/>
  <enum name='kThemeDragSoundScrollBarArrowIncreasing' value='1935827305'/>
  <enum name='kThemeDragSoundScrollBarGhost' value='1935828840'/>
  <enum name='kThemeDragSoundScrollBarThumb' value='1935832168'/>
  <enum name='kThemeDragSoundSliderGhost' value='1936484200'/>
  <enum name='kThemeDragSoundSliderThumb' value='1936487528'/>
  <enum name='kThemeDrawIndicatorOnly' value='32'/>
  <enum name='kThemeDrawerWindow' value='11'/>
  <enum name='kThemeEmphasizedSystemFont' value='4'/>
  <enum name='kThemeExamplePictureIDTag' value='1701865827'/>
  <enum name='kThemeFinderSoundsMask' value='8'/>
  <enum name='kThemeFinderWindowBackgroundBrush' value='16'/>
  <enum name='kThemeFocusAdornment' value='4'/>
  <enum name='kThemeFocusHighlightBrush' value='19'/>
  <enum name='kThemeGrowDown' value='8'/>
  <enum name='kThemeGrowLeft' value='1'/>
  <enum name='kThemeGrowRight' value='2'/>
  <enum name='kThemeGrowUp' value='4'/>
  <enum name='kThemeHighlightColorNameTag' value='1751346797'/>
  <enum name='kThemeHighlightColorTag' value='1751347052'/>
  <enum name='kThemeIBeamCursor' value='4'/>
  <enum name='kThemeIconLabelBackgroundBrush' value='11'/>
  <enum name='kThemeIconLabelTextColor' value='21'/>
  <enum name='kThemeInactiveAlertBackgroundBrush' value='4'/>
  <enum name='kThemeInactiveAlertTextColor' value='4'/>
  <enum name='kThemeInactiveBevelButtonTextColor' value='16'/>
  <enum name='kThemeInactiveDialogBackgroundBrush' value='2'/>
  <enum name='kThemeInactiveDialogTextColor' value='2'/>
  <enum name='kThemeInactiveDocumentWindowTitleTextColor' value='24'/>
  <enum name='kThemeInactiveModelessDialogBackgroundBrush' value='6'/>
  <enum name='kThemeInactiveModelessDialogTextColor' value='6'/>
  <enum name='kThemeInactiveMovableModalWindowTitleTextColor' value='26'/>
  <enum name='kThemeInactivePlacardTextColor' value='10'/>
  <enum name='kThemeInactivePopupArrowBrush' value='22'/>
  <enum name='kThemeInactivePopupButtonTextColor' value='19'/>
  <enum name='kThemeInactivePopupLabelTextColor' value='38'/>
  <enum name='kThemeInactivePopupWindowTitleColor' value='30'/>
  <enum name='kThemeInactivePushButtonTextColor' value='13'/>
  <enum name='kThemeInactiveScrollBarDelimiterBrush' value='18'/>
  <enum name='kThemeInactiveUtilityWindowBackgroundBrush' value='8'/>
  <enum name='kThemeInactiveUtilityWindowTitleTextColor' value='28'/>
  <enum name='kThemeInactiveWindowHeaderTextColor' value='8'/>
  <enum name='kThemeIncDecButton' value='7'/>
  <enum name='kThemeIncDecButtonMini' value='22'/>
  <enum name='kThemeIncDecButtonSmall' value='21'/>
  <enum name='kThemeIndeterminateBar' value='4'/>
  <enum name='kThemeIndeterminateBarLarge' value='8'/>
  <enum name='kThemeIndeterminateBarMedium' value='4'/>
  <enum name='kThemeIndeterminateBarMini' value='12'/>
  <enum name='kThemeLabelFont' value='6'/>
  <enum name='kThemeLargeBevelButton' value='9'/>
  <enum name='kThemeLargeIndeterminateBar' value='8'/>
  <enum name='kThemeLargeProgressBar' value='7'/>
  <enum name='kThemeLargeRoundButton' value='12'/>
  <enum name='kThemeLargeTabHeight' value='21'/>
  <enum name='kThemeLargeTabHeightMax' value='24'/>
  <enum name='kThemeLeftInsideArrowPressed' value='2'/>
  <enum name='kThemeLeftOutsideArrowPressed' value='1'/>
  <enum name='kThemeLeftTrackPressed' value='4'/>
  <enum name='kThemeListHeaderButton' value='10'/>
  <enum name='kThemeListViewBackgroundBrush' value='10'/>
  <enum name='kThemeListViewSeparatorBrush' value='12'/>
  <enum name='kThemeListViewSortColumnBackgroundBrush' value='9'/>
  <enum name='kThemeListViewTextColor' value='22'/>
  <enum name='kThemeMediumBevelButton' value='3'/>
  <enum name='kThemeMediumIndeterminateBar' value='4'/>
  <enum name='kThemeMediumProgressBar' value='3'/>
  <enum name='kThemeMediumScrollBar' value='0'/>
  <enum name='kThemeMediumSlider' value='2'/>
  <enum name='kThemeMenuActive' value='0'/>
  <enum name='kThemeMenuBarNormal' value='0'/>
  <enum name='kThemeMenuBarSelected' value='1'/>
  <enum name='kThemeMenuDisabled' value='3'/>
  <enum name='kThemeMenuItemAtBottom' value='512'/>
  <enum name='kThemeMenuItemAtTop' value='256'/>
  <enum name='kThemeMenuItemCmdKeyFont' value='103'/>
  <enum name='kThemeMenuItemFont' value='101'/>
  <enum name='kThemeMenuItemHasIcon' value='32768'/>
  <enum name='kThemeMenuItemHierBackground' value='1024'/>
  <enum name='kThemeMenuItemHierarchical' value='1'/>
  <enum name='kThemeMenuItemMarkFont' value='102'/>
  <enum name='kThemeMenuItemNoBackground' value='16384'/>
  <enum name='kThemeMenuItemPlain' value='0'/>
  <enum name='kThemeMenuItemPopUpBackground' value='2048'/>
  <enum name='kThemeMenuItemScrollDownArrow' value='3'/>
  <enum name='kThemeMenuItemScrollUpArrow' value='2'/>
  <enum name='kThemeMenuSelected' value='1'/>
  <enum name='kThemeMenuSoundsMask' value='2'/>
  <enum name='kThemeMenuSquareMenuBar' value='1'/>
  <enum name='kThemeMenuTitleFont' value='100'/>
  <enum name='kThemeMenuTypeHierarchical' value='2'/>
  <enum name='kThemeMenuTypeInactive' value='256'/>
  <enum name='kThemeMenuTypePopUp' value='1'/>
  <enum name='kThemeMenuTypePullDown' value='0'/>
  <enum name='kThemeMetricBestListHeaderHeight' value='20'/>
  <enum name='kThemeMetricCheckBoxGlyphHeight' value='2'/>
  <enum name='kThemeMetricCheckBoxHeight' value='2'/>
  <enum name='kThemeMetricCheckBoxWidth' value='50'/>
  <enum name='kThemeMetricComboBoxLargeBottomShadowOffset' value='70'/>
  <enum name='kThemeMetricComboBoxLargeDisclosureWidth' value='74'/>
  <enum name='kThemeMetricComboBoxLargeRightShadowOffset' value='71'/>
  <enum name='kThemeMetricComboBoxMiniBottomShadowOffset' value='81'/>
  <enum name='kThemeMetricComboBoxMiniDisclosureWidth' value='82'/>
  <enum name='kThemeMetricComboBoxMiniRightShadowOffset' value='83'/>
  <enum name='kThemeMetricComboBoxSmallBottomShadowOffset' value='72'/>
  <enum name='kThemeMetricComboBoxSmallDisclosureWidth' value='75'/>
  <enum name='kThemeMetricComboBoxSmallRightShadowOffset' value='73'/>
  <enum name='kThemeMetricDisclosureButtonHeight' value='17'/>
  <enum name='kThemeMetricDisclosureButtonSize' value='17'/>
  <enum name='kThemeMetricDisclosureButtonWidth' value='22'/>
  <enum name='kThemeMetricDisclosureTriangleHeight' value='25'/>
  <enum name='kThemeMetricDisclosureTriangleWidth' value='26'/>
  <enum name='kThemeMetricEditTextFrameOutset' value='5'/>
  <enum name='kThemeMetricEditTextWhitespace' value='4'/>
  <enum name='kThemeMetricFocusRectOutset' value='7'/>
  <enum name='kThemeMetricHSliderHeight' value='41'/>
  <enum name='kThemeMetricHSliderTickHeight' value='42'/>
  <enum name='kThemeMetricHSliderTickOffset' value='128'/>
  <enum name='kThemeMetricImageWellThickness' value='8'/>
  <enum name='kThemeMetricLargeProgressBarThickness' value='32'/>
  <enum name='kThemeMetricLargeRoundButtonSize' value='40'/>
  <enum name='kThemeMetricLargeTabCapsWidth' value='11'/>
  <enum name='kThemeMetricLargeTabHeight' value='10'/>
  <enum name='kThemeMetricListBoxFrameOutset' value='6'/>
  <enum name='kThemeMetricListHeaderHeight' value='20'/>
  <enum name='kThemeMetricLittleArrowsHeight' value='27'/>
  <enum name='kThemeMetricLittleArrowsMiniHeight' value='84'/>
  <enum name='kThemeMetricLittleArrowsMiniWidth' value='85'/>
  <enum name='kThemeMetricLittleArrowsSmallHeight' value='86'/>
  <enum name='kThemeMetricLittleArrowsSmallWidth' value='87'/>
  <enum name='kThemeMetricLittleArrowsWidth' value='28'/>
  <enum name='kThemeMetricMenuExcludedMarkColumnWidth' value='64'/>
  <enum name='kThemeMetricMenuIconTrailingEdgeMargin' value='69'/>
  <enum name='kThemeMetricMenuIndentWidth' value='68'/>
  <enum name='kThemeMetricMenuMarkColumnWidth' value='63'/>
  <enum name='kThemeMetricMenuMarkIndent' value='65'/>
  <enum name='kThemeMetricMenuTextLeadingEdgeMargin' value='66'/>
  <enum name='kThemeMetricMenuTextTrailingEdgeMargin' value='67'/>
  <enum name='kThemeMetricMiniCheckBoxHeight' value='88'/>
  <enum name='kThemeMetricMiniCheckBoxWidth' value='89'/>
  <enum name='kThemeMetricMiniDisclosureButtonHeight' value='90'/>
  <enum name='kThemeMetricMiniDisclosureButtonWidth' value='91'/>
  <enum name='kThemeMetricMiniHSliderHeight' value='92'/>
  <enum name='kThemeMetricMiniHSliderMinThumbWidth' value='93'/>
  <enum name='kThemeMetricMiniHSliderTickHeight' value='94'/>
  <enum name='kThemeMetricMiniHSliderTickOffset' value='95'/>
  <enum name='kThemeMetricMiniPopupButtonHeight' value='96'/>
  <enum name='kThemeMetricMiniPullDownHeight' value='97'/>
  <enum name='kThemeMetricMiniPushButtonHeight' value='98'/>
  <enum name='kThemeMetricMiniRadioButtonHeight' value='99'/>
  <enum name='kThemeMetricMiniRadioButtonWidth' value='100'/>
  <enum name='kThemeMetricMiniTabCapsWidth' value='101'/>
  <enum name='kThemeMetricMiniTabFrameOverlap' value='102'/>
  <enum name='kThemeMetricMiniTabHeight' value='103'/>
  <enum name='kThemeMetricMiniTabOverlap' value='104'/>
  <enum name='kThemeMetricMiniVSliderMinThumbHeight' value='105'/>
  <enum name='kThemeMetricMiniVSliderTickOffset' value='106'/>
  <enum name='kThemeMetricMiniVSliderTickWidth' value='107'/>
  <enum name='kThemeMetricMiniVSliderWidth' value='108'/>
  <enum name='kThemeMetricNormalProgressBarThickness' value='58'/>
  <enum name='kThemeMetricPaneSplitterHeight' value='29'/>
  <enum name='kThemeMetricPopupButtonHeight' value='30'/>
  <enum name='kThemeMetricPrimaryGroupBoxContentInset' value='61'/>
  <enum name='kThemeMetricProgressBarShadowOutset' value='59'/>
  <enum name='kThemeMetricProgressBarThickness' value='32'/>
  <enum name='kThemeMetricPullDownHeight' value='33'/>
  <enum name='kThemeMetricPushButtonHeight' value='19'/>
  <enum name='kThemeMetricRadioButtonGlyphHeight' value='3'/>
  <enum name='kThemeMetricRadioButtonHeight' value='3'/>
  <enum name='kThemeMetricRadioButtonWidth' value='52'/>
  <enum name='kThemeMetricRelevanceIndicatorHeight' value='37'/>
  <enum name='kThemeMetricResizeControlHeight' value='38'/>
  <enum name='kThemeMetricRoundButtonSize' value='18'/>
  <enum name='kThemeMetricRoundTextFieldContentHeight' value='80'/>
  <enum name='kThemeMetricRoundTextFieldContentInsetBottom' value='78'/>
  <enum name='kThemeMetricRoundTextFieldContentInsetLeft' value='76'/>
  <enum name='kThemeMetricRoundTextFieldContentInsetRight' value='77'/>
  <enum name='kThemeMetricRoundTextFieldContentInsetTop' value='79'/>
  <enum name='kThemeMetricRoundTextFieldContentInsetWithIconLeft' value='109'/>
  <enum name='kThemeMetricRoundTextFieldContentInsetWithIconRight' value='110'/>
  <enum name='kThemeMetricRoundTextFieldMiniContentHeight' value='111'/>
  <enum name='kThemeMetricRoundTextFieldMiniContentInsetBottom' value='112'/>
  <enum name='kThemeMetricRoundTextFieldMiniContentInsetLeft' value='113'/>
  <enum name='kThemeMetricRoundTextFieldMiniContentInsetRight' value='114'/>
  <enum name='kThemeMetricRoundTextFieldMiniContentInsetTop' value='115'/>
  <enum name='kThemeMetricRoundTextFieldMiniContentInsetWithIconLeft' value='116'/>
  <enum name='kThemeMetricRoundTextFieldMiniContentInsetWithIconRight' value='117'/>
  <enum name='kThemeMetricRoundTextFieldSmallContentHeight' value='118'/>
  <enum name='kThemeMetricRoundTextFieldSmallContentInsetBottom' value='119'/>
  <enum name='kThemeMetricRoundTextFieldSmallContentInsetLeft' value='120'/>
  <enum name='kThemeMetricRoundTextFieldSmallContentInsetRight' value='121'/>
  <enum name='kThemeMetricRoundTextFieldSmallContentInsetTop' value='122'/>
  <enum name='kThemeMetricRoundTextFieldSmallContentInsetWithIconLeft' value='123'/>
  <enum name='kThemeMetricRoundTextFieldSmallContentInsetWithIconRight' value='124'/>
  <enum name='kThemeMetricScrollBarMinThumbHeight' value='132'/>
  <enum name='kThemeMetricScrollBarMinThumbWidth' value='133'/>
  <enum name='kThemeMetricScrollBarOverlap' value='9'/>
  <enum name='kThemeMetricScrollBarWidth' value='0'/>
  <enum name='kThemeMetricSecondaryGroupBoxContentInset' value='62'/>
  <enum name='kThemeMetricSliderMinThumbHeight' value='130'/>
  <enum name='kThemeMetricSliderMinThumbWidth' value='131'/>
  <enum name='kThemeMetricSmallCheckBoxHeight' value='21'/>
  <enum name='kThemeMetricSmallCheckBoxWidth' value='51'/>
  <enum name='kThemeMetricSmallDisclosureButtonHeight' value='23'/>
  <enum name='kThemeMetricSmallDisclosureButtonWidth' value='24'/>
  <enum name='kThemeMetricSmallHSliderHeight' value='43'/>
  <enum name='kThemeMetricSmallHSliderMinThumbWidth' value='54'/>
  <enum name='kThemeMetricSmallHSliderTickHeight' value='44'/>
  <enum name='kThemeMetricSmallHSliderTickOffset' value='56'/>
  <enum name='kThemeMetricSmallPaneSplitterHeight' value='127'/>
  <enum name='kThemeMetricSmallPopupButtonHeight' value='31'/>
  <enum name='kThemeMetricSmallProgressBarShadowOutset' value='60'/>
  <enum name='kThemeMetricSmallProgressBarThickness' value='58'/>
  <enum name='kThemeMetricSmallPullDownHeight' value='34'/>
  <enum name='kThemeMetricSmallPushButtonHeight' value='35'/>
  <enum name='kThemeMetricSmallRadioButtonHeight' value='36'/>
  <enum name='kThemeMetricSmallRadioButtonWidth' value='53'/>
  <enum name='kThemeMetricSmallResizeControlHeight' value='39'/>
  <enum name='kThemeMetricSmallScrollBarMinThumbHeight' value='134'/>
  <enum name='kThemeMetricSmallScrollBarMinThumbWidth' value='135'/>
  <enum name='kThemeMetricSmallScrollBarWidth' value='1'/>
  <enum name='kThemeMetricSmallTabCapsWidth' value='16'/>
  <enum name='kThemeMetricSmallTabFrameOverlap' value='125'/>
  <enum name='kThemeMetricSmallTabHeight' value='15'/>
  <enum name='kThemeMetricSmallTabOverlap' value='126'/>
  <enum name='kThemeMetricSmallVSliderMinThumbHeight' value='55'/>
  <enum name='kThemeMetricSmallVSliderTickOffset' value='57'/>
  <enum name='kThemeMetricSmallVSliderTickWidth' value='48'/>
  <enum name='kThemeMetricSmallVSliderWidth' value='47'/>
  <enum name='kThemeMetricTabFrameOverlap' value='12'/>
  <enum name='kThemeMetricTabIndentOrStyle' value='13'/>
  <enum name='kThemeMetricTabOverlap' value='14'/>
  <enum name='kThemeMetricTitleBarControlsHeight' value='49'/>
  <enum name='kThemeMetricVSliderTickOffset' value='129'/>
  <enum name='kThemeMetricVSliderTickWidth' value='46'/>
  <enum name='kThemeMetricVSliderWidth' value='45'/>
  <enum name='kThemeMiniCheckBox' value='19'/>
  <enum name='kThemeMiniIndeterminateBar' value='12'/>
  <enum name='kThemeMiniProgressBar' value='11'/>
  <enum name='kThemeMiniRadioButton' value='20'/>
  <enum name='kThemeMiniScrollBar' value='9'/>
  <enum name='kThemeMiniSlider' value='10'/>
  <enum name='kThemeMiniSystemFont' value='109'/>
  <enum name='kThemeMovableAlertWindow' value='4'/>
  <enum name='kThemeMovableDialogWindow' value='2'/>
  <enum name='kThemeNameTag' value='1851878757'/>
  <enum name='kThemeNoAdornment' value='0'/>
  <enum name='kThemeNoSounds' value='0'/>
  <enum name='kThemeNormalCheckBox' value='1'/>
  <enum name='kThemeNormalRadioButton' value='2'/>
  <enum name='kThemeNotAllowedCursor' value='18'/>
  <enum name='kThemeOpenHandCursor' value='9'/>
  <enum name='kThemePlainDialogWindow' value='5'/>
  <enum name='kThemePlatinumFileType' value='1886155886'/>
  <enum name='kThemePlusCursor' value='6'/>
  <enum name='kThemePointingHandCursor' value='10'/>
  <enum name='kThemePoofCursor' value='22'/>
  <enum name='kThemePopupButton' value='5'/>
  <enum name='kThemePopupButtonMini' value='30'/>
  <enum name='kThemePopupButtonNormal' value='28'/>
  <enum name='kThemePopupButtonSmall' value='29'/>
  <enum name='kThemePopupTabCenterOnOffset' value='2'/>
  <enum name='kThemePopupTabCenterOnWindow' value='1'/>
  <enum name='kThemePopupTabNormalPosition' value='0'/>
  <enum name='kThemePopupWindow' value='7'/>
  <enum name='kThemePressedBevelButtonTextColor' value='17'/>
  <enum name='kThemePressedPlacardTextColor' value='11'/>
  <enum name='kThemePressedPopupArrowBrush' value='21'/>
  <enum name='kThemePressedPopupButtonTextColor' value='20'/>
  <enum name='kThemePressedPushButtonTextColor' value='14'/>
  <enum name='kThemeProgressBar' value='3'/>
  <enum name='kThemeProgressBarLarge' value='7'/>
  <enum name='kThemeProgressBarMedium' value='3'/>
  <enum name='kThemeProgressBarMini' value='11'/>
  <enum name='kThemePushButton' value='0'/>
  <enum name='kThemePushButtonFont' value='105'/>
  <enum name='kThemePushButtonInset' value='32'/>
  <enum name='kThemePushButtonInsetSmall' value='33'/>
  <enum name='kThemePushButtonMini' value='27'/>
  <enum name='kThemePushButtonNormal' value='25'/>
  <enum name='kThemePushButtonSmall' value='26'/>
  <enum name='kThemeRadioButton' value='2'/>
  <enum name='kThemeRadioButtonMini' value='20'/>
  <enum name='kThemeRadioButtonSmall' value='14'/>
  <enum name='kThemeRelevanceBar' value='5'/>
  <enum name='kThemeResizeDownCursor' value='20'/>
  <enum name='kThemeResizeLeftCursor' value='15'/>
  <enum name='kThemeResizeLeftRightCursor' value='17'/>
  <enum name='kThemeResizeRightCursor' value='16'/>
  <enum name='kThemeResizeUpCursor' value='19'/>
  <enum name='kThemeResizeUpDownCursor' value='21'/>
  <enum name='kThemeRightInsideArrowPressed' value='32'/>
  <enum name='kThemeRightOutsideArrowPressed' value='64'/>
  <enum name='kThemeRightToLeftAdornment' value='16'/>
  <enum name='kThemeRightTrackPressed' value='16'/>
  <enum name='kThemeRoundButton' value='11'/>
  <enum name='kThemeRoundButtonHelp' value='34'/>
  <enum name='kThemeRoundButtonLarge' value='12'/>
  <enum name='kThemeRoundedBevelButton' value='15'/>
  <enum name='kThemeSavvyMenuResponse' value='29811'/>
  <enum name='kThemeScrollBar' value='0'/>
  <enum name='kThemeScrollBarArrowStyleTag' value='1935827314'/>
  <enum name='kThemeScrollBarArrowsLowerRight' value='1'/>
  <enum name='kThemeScrollBarArrowsSingle' value='0'/>
  <enum name='kThemeScrollBarMedium' value='0'/>
  <enum name='kThemeScrollBarMini' value='9'/>
  <enum name='kThemeScrollBarSmall' value='1'/>
  <enum name='kThemeScrollBarThumbNormal' value='0'/>
  <enum name='kThemeScrollBarThumbProportional' value='1'/>
  <enum name='kThemeScrollBarThumbStyleTag' value='1935832168'/>
  <enum name='kThemeSelectedMenuItemTextColor' value='35'/>
  <enum name='kThemeSelectedRootMenuTextColor' value='32'/>
  <enum name='kThemeShadowDialogWindow' value='6'/>
  <enum name='kThemeSheetWindow' value='10'/>
  <enum name='kThemeSlider' value='2'/>
  <enum name='kThemeSliderMedium' value='2'/>
  <enum name='kThemeSliderMini' value='10'/>
  <enum name='kThemeSliderSmall' value='6'/>
  <enum name='kThemeSmallBevelButton' value='8'/>
  <enum name='kThemeSmallCheckBox' value='13'/>
  <enum name='kThemeSmallEmphasizedSystemFont' value='2'/>
  <enum name='kThemeSmallRadioButton' value='14'/>
  <enum name='kThemeSmallScrollBar' value='1'/>
  <enum name='kThemeSmallSlider' value='6'/>
  <enum name='kThemeSmallSystemFont' value='1'/>
  <enum name='kThemeSmallSystemFontTag' value='1936552806'/>
  <enum name='kThemeSmallTabHeight' value='16'/>
  <enum name='kThemeSmallTabHeightMax' value='19'/>
  <enum name='kThemeSmoothFontEnabledTag' value='1936551791'/>
  <enum name='kThemeSmoothFontMinSizeTag' value='1936551795'/>
  <enum name='kThemeSoundAlertClose' value='1634497635'/>
  <enum name='kThemeSoundAlertOpen' value='1634693230'/>
  <enum name='kThemeSoundBalloonClose' value='1651273315'/>
  <enum name='kThemeSoundBalloonOpen' value='1651273327'/>
  <enum name='kThemeSoundBevelEnter' value='1650816613'/>
  <enum name='kThemeSoundBevelExit' value='1650816632'/>
  <enum name='kThemeSoundBevelPress' value='1650816624'/>
  <enum name='kThemeSoundBevelRelease' value='1650816626'/>
  <enum name='kThemeSoundButtonEnter' value='1651797605'/>
  <enum name='kThemeSoundButtonExit' value='1651797624'/>
  <enum name='kThemeSoundButtonPress' value='1651797616'/>
  <enum name='kThemeSoundButtonRelease' value='1651797618'/>
  <enum name='kThemeSoundCancelButtonEnter' value='1667396709'/>
  <enum name='kThemeSoundCancelButtonExit' value='1667396728'/>
  <enum name='kThemeSoundCancelButtonPress' value='1667396720'/>
  <enum name='kThemeSoundCancelButtonRelease' value='1667396722'/>
  <enum name='kThemeSoundCheckboxEnter' value='1667787621'/>
  <enum name='kThemeSoundCheckboxExit' value='1667787640'/>
  <enum name='kThemeSoundCheckboxPress' value='1667787632'/>
  <enum name='kThemeSoundCheckboxRelease' value='1667787634'/>
  <enum name='kThemeSoundCopyDone' value='1717792868'/>
  <enum name='kThemeSoundDefaultButtonEnter' value='1684173925'/>
  <enum name='kThemeSoundDefaultButtonExit' value='1684173944'/>
  <enum name='kThemeSoundDefaultButtonPress' value='1684173936'/>
  <enum name='kThemeSoundDefaultButtonRelease' value='1684173938'/>
  <enum name='kThemeSoundDialogClose' value='1684825955'/>
  <enum name='kThemeSoundDialogOpen' value='1685024878'/>
  <enum name='kThemeSoundDisclosureEnter' value='1685283685'/>
  <enum name='kThemeSoundDisclosureExit' value='1685283704'/>
  <enum name='kThemeSoundDisclosurePress' value='1685283696'/>
  <enum name='kThemeSoundDisclosureRelease' value='1685283698'/>
  <enum name='kThemeSoundDiskEject' value='1685285733'/>
  <enum name='kThemeSoundDiskInsert' value='1685285737'/>
  <enum name='kThemeSoundDragTargetDrop' value='1685349490'/>
  <enum name='kThemeSoundDragTargetHilite' value='1685350505'/>
  <enum name='kThemeSoundDragTargetUnhilite' value='1685353832'/>
  <enum name='kThemeSoundEmptyTrash' value='1718907507'/>
  <enum name='kThemeSoundFinderDragOffIcon' value='1717858150'/>
  <enum name='kThemeSoundFinderDragOnIcon' value='1717858158'/>
  <enum name='kThemeSoundLaunchApp' value='1718378864'/>
  <enum name='kThemeSoundLittleArrowDnPress' value='1818322032'/>
  <enum name='kThemeSoundLittleArrowDnRelease' value='1818322034'/>
  <enum name='kThemeSoundLittleArrowEnter' value='1818325605'/>
  <enum name='kThemeSoundLittleArrowExit' value='1818325624'/>
  <enum name='kThemeSoundLittleArrowUpPress' value='1818326384'/>
  <enum name='kThemeSoundLittleArrowUpRelease' value='1818326386'/>
  <enum name='kThemeSoundMaskTag' value='1936552811'/>
  <enum name='kThemeSoundMenuClose' value='1835955555'/>
  <enum name='kThemeSoundMenuItemHilite' value='1835955561'/>
  <enum name='kThemeSoundMenuItemRelease' value='1835955571'/>
  <enum name='kThemeSoundMenuOpen' value='1835955567'/>
  <enum name='kThemeSoundNewItem' value='1718510967'/>
  <enum name='kThemeSoundNone' value='0'/>
  <enum name='kThemeSoundPopupEnter' value='1886351461'/>
  <enum name='kThemeSoundPopupExit' value='1886351480'/>
  <enum name='kThemeSoundPopupPress' value='1886351472'/>
  <enum name='kThemeSoundPopupRelease' value='1886351474'/>
  <enum name='kThemeSoundPopupWindowClose' value='1886872428'/>
  <enum name='kThemeSoundPopupWindowOpen' value='1886875504'/>
  <enum name='kThemeSoundRadioEnter' value='1918985317'/>
  <enum name='kThemeSoundRadioExit' value='1918985336'/>
  <enum name='kThemeSoundRadioPress' value='1918985328'/>
  <enum name='kThemeSoundRadioRelease' value='1918985330'/>
  <enum name='kThemeSoundReceiveDrop' value='1717858928'/>
  <enum name='kThemeSoundResolveAlias' value='1718772076'/>
  <enum name='kThemeSoundScrollArrowEnter' value='1935827301'/>
  <enum name='kThemeSoundScrollArrowExit' value='1935827320'/>
  <enum name='kThemeSoundScrollArrowPress' value='1935827312'/>
  <enum name='kThemeSoundScrollArrowRelease' value='1935827314'/>
  <enum name='kThemeSoundScrollEndOfTrack' value='1935832165'/>
  <enum name='kThemeSoundScrollTrackPress' value='1935832176'/>
  <enum name='kThemeSoundSelectItem' value='1718838636'/>
  <enum name='kThemeSoundSliderEndOfTrack' value='1936487525'/>
  <enum name='kThemeSoundSliderTrackPress' value='1936487536'/>
  <enum name='kThemeSoundTabEnter' value='1952539237'/>
  <enum name='kThemeSoundTabExit' value='1952539256'/>
  <enum name='kThemeSoundTabPressed' value='1952539248'/>
  <enum name='kThemeSoundTabRelease' value='1952539250'/>
  <enum name='kThemeSoundTrackFileType' value='1953721956'/>
  <enum name='kThemeSoundTrackNameTag' value='1936614516'/>
  <enum name='kThemeSoundUtilWinCloseEnter' value='1969450085'/>
  <enum name='kThemeSoundUtilWinCloseExit' value='1969450104'/>
  <enum name='kThemeSoundUtilWinClosePress' value='1969450096'/>
  <enum name='kThemeSoundUtilWinCloseRelease' value='1969450098'/>
  <enum name='kThemeSoundUtilWinCollapseEnter' value='1969450853'/>
  <enum name='kThemeSoundUtilWinCollapseExit' value='1969450872'/>
  <enum name='kThemeSoundUtilWinCollapsePress' value='1969450864'/>
  <enum name='kThemeSoundUtilWinCollapseRelease' value='1969450866'/>
  <enum name='kThemeSoundUtilWinDragBoundary' value='1969513060'/>
  <enum name='kThemeSoundUtilWinZoomEnter' value='1970957669'/>
  <enum name='kThemeSoundUtilWinZoomExit' value='1970957688'/>
  <enum name='kThemeSoundUtilWinZoomPress' value='1970957680'/>
  <enum name='kThemeSoundUtilWinZoomRelease' value='1970957682'/>
  <enum name='kThemeSoundUtilWindowActivate' value='1969316724'/>
  <enum name='kThemeSoundUtilWindowClose' value='1969450099'/>
  <enum name='kThemeSoundUtilWindowCollapseDown' value='1969584240'/>
  <enum name='kThemeSoundUtilWindowCollapseUp' value='1969450860'/>
  <enum name='kThemeSoundUtilWindowOpen' value='1970237550'/>
  <enum name='kThemeSoundUtilWindowZoomIn' value='1970957673'/>
  <enum name='kThemeSoundUtilWindowZoomOut' value='1970957679'/>
  <enum name='kThemeSoundWindowActivate' value='2002871156'/>
  <enum name='kThemeSoundWindowClose' value='2003004531'/>
  <enum name='kThemeSoundWindowCloseEnter' value='2003004517'/>
  <enum name='kThemeSoundWindowCloseExit' value='2003004536'/>
  <enum name='kThemeSoundWindowClosePress' value='2003004528'/>
  <enum name='kThemeSoundWindowCloseRelease' value='2003004530'/>
  <enum name='kThemeSoundWindowCollapseDown' value='2003138672'/>
  <enum name='kThemeSoundWindowCollapseEnter' value='2003005285'/>
  <enum name='kThemeSoundWindowCollapseExit' value='2003005304'/>
  <enum name='kThemeSoundWindowCollapsePress' value='2003005296'/>
  <enum name='kThemeSoundWindowCollapseRelease' value='2003005298'/>
  <enum name='kThemeSoundWindowCollapseUp' value='2003005292'/>
  <enum name='kThemeSoundWindowDragBoundary' value='2003067492'/>
  <enum name='kThemeSoundWindowOpen' value='2003791982'/>
  <enum name='kThemeSoundWindowZoomEnter' value='2004512101'/>
  <enum name='kThemeSoundWindowZoomExit' value='2004512120'/>
  <enum name='kThemeSoundWindowZoomIn' value='2004512105'/>
  <enum name='kThemeSoundWindowZoomOut' value='2004512111'/>
  <enum name='kThemeSoundWindowZoomPress' value='2004512112'/>
  <enum name='kThemeSoundWindowZoomRelease' value='2004512114'/>
  <enum name='kThemeSoundsEnabledTag' value='1936614515'/>
  <enum name='kThemeSpinningCursor' value='14'/>
  <enum name='kThemeStateActive' value='1'/>
  <enum name='kThemeStateDisabled' value='0'/>
  <enum name='kThemeStateInactive' value='0'/>
  <enum name='kThemeStatePressed' value='2'/>
  <enum name='kThemeStatePressedDown' value='3'/>
  <enum name='kThemeStatePressedUp' value='2'/>
  <enum name='kThemeStateRollover' value='6'/>
  <enum name='kThemeStateUnavailable' value='7'/>
  <enum name='kThemeStateUnavailableInactive' value='8'/>
  <enum name='kThemeSystemFont' value='0'/>
  <enum name='kThemeSystemFontDetail' value='7'/>
  <enum name='kThemeSystemFontDetailEmphasized' value='8'/>
  <enum name='kThemeSystemFontTag' value='1818719078'/>
  <enum name='kThemeTabEast' value='2'/>
  <enum name='kThemeTabFront' value='3'/>
  <enum name='kThemeTabFrontInactive' value='4'/>
  <enum name='kThemeTabFrontUnavailable' value='6'/>
  <enum name='kThemeTabNonFront' value='0'/>
  <enum name='kThemeTabNonFrontInactive' value='2'/>
  <enum name='kThemeTabNonFrontPressed' value='1'/>
  <enum name='kThemeTabNonFrontUnavailable' value='5'/>
  <enum name='kThemeTabNorth' value='0'/>
  <enum name='kThemeTabPaneOverlap' value='3'/>
  <enum name='kThemeTabSouth' value='1'/>
  <enum name='kThemeTabWest' value='3'/>
  <enum name='kThemeTextColorAlertActive' value='3'/>
  <enum name='kThemeTextColorAlertInactive' value='4'/>
  <enum name='kThemeTextColorBevelButtonActive' value='15'/>
  <enum name='kThemeTextColorBevelButtonInactive' value='16'/>
  <enum name='kThemeTextColorBevelButtonPressed' value='17'/>
  <enum name='kThemeTextColorBevelButtonStickyActive' value='45'/>
  <enum name='kThemeTextColorBevelButtonStickyInactive' value='46'/>
  <enum name='kThemeTextColorBlack' value='-1'/>
  <enum name='kThemeTextColorDialogActive' value='1'/>
  <enum name='kThemeTextColorDialogInactive' value='2'/>
  <enum name='kThemeTextColorDocumentWindowTitleActive' value='23'/>
  <enum name='kThemeTextColorDocumentWindowTitleInactive' value='24'/>
  <enum name='kThemeTextColorIconLabel' value='21'/>
  <enum name='kThemeTextColorIconLabelSelected' value='44'/>
  <enum name='kThemeTextColorListView' value='22'/>
  <enum name='kThemeTextColorMenuItemActive' value='34'/>
  <enum name='kThemeTextColorMenuItemDisabled' value='36'/>
  <enum name='kThemeTextColorMenuItemSelected' value='35'/>
  <enum name='kThemeTextColorModelessDialogActive' value='5'/>
  <enum name='kThemeTextColorModelessDialogInactive' value='6'/>
  <enum name='kThemeTextColorMovableModalWindowTitleActive' value='25'/>
  <enum name='kThemeTextColorMovableModalWindowTitleInactive' value='26'/>
  <enum name='kThemeTextColorNotification' value='47'/>
  <enum name='kThemeTextColorPlacardActive' value='9'/>
  <enum name='kThemeTextColorPlacardInactive' value='10'/>
  <enum name='kThemeTextColorPlacardPressed' value='11'/>
  <enum name='kThemeTextColorPopupButtonActive' value='18'/>
  <enum name='kThemeTextColorPopupButtonInactive' value='19'/>
  <enum name='kThemeTextColorPopupButtonPressed' value='20'/>
  <enum name='kThemeTextColorPopupLabelActive' value='37'/>
  <enum name='kThemeTextColorPopupLabelInactive' value='38'/>
  <enum name='kThemeTextColorPopupWindowTitleActive' value='29'/>
  <enum name='kThemeTextColorPopupWindowTitleInactive' value='30'/>
  <enum name='kThemeTextColorPushButtonActive' value='12'/>
  <enum name='kThemeTextColorPushButtonInactive' value='13'/>
  <enum name='kThemeTextColorPushButtonPressed' value='14'/>
  <enum name='kThemeTextColorRootMenuActive' value='31'/>
  <enum name='kThemeTextColorRootMenuDisabled' value='33'/>
  <enum name='kThemeTextColorRootMenuSelected' value='32'/>
  <enum name='kThemeTextColorSystemDetail' value='48'/>
  <enum name='kThemeTextColorTabFrontActive' value='39'/>
  <enum name='kThemeTextColorTabFrontInactive' value='42'/>
  <enum name='kThemeTextColorTabNonFrontActive' value='40'/>
  <enum name='kThemeTextColorTabNonFrontInactive' value='43'/>
  <enum name='kThemeTextColorTabNonFrontPressed' value='41'/>
  <enum name='kThemeTextColorUtilityWindowTitleActive' value='27'/>
  <enum name='kThemeTextColorUtilityWindowTitleInactive' value='28'/>
  <enum name='kThemeTextColorWhite' value='-2'/>
  <enum name='kThemeTextColorWindowHeaderActive' value='7'/>
  <enum name='kThemeTextColorWindowHeaderInactive' value='8'/>
  <enum name='kThemeThumbDownward' value='2'/>
  <enum name='kThemeThumbPlain' value='0'/>
  <enum name='kThemeThumbPressed' value='8'/>
  <enum name='kThemeThumbUpward' value='1'/>
  <enum name='kThemeToolbarFont' value='108'/>
  <enum name='kThemeTopInsideArrowPressed' value='2'/>
  <enum name='kThemeTopOutsideArrowPressed' value='1'/>
  <enum name='kThemeTopTrackPressed' value='4'/>
  <enum name='kThemeTrackActive' value='0'/>
  <enum name='kThemeTrackDisabled' value='1'/>
  <enum name='kThemeTrackHasFocus' value='32'/>
  <enum name='kThemeTrackHorizontal' value='1'/>
  <enum name='kThemeTrackInactive' value='3'/>
  <enum name='kThemeTrackNoScrollBarArrows' value='16'/>
  <enum name='kThemeTrackNothingToScroll' value='2'/>
  <enum name='kThemeTrackRightToLeft' value='2'/>
  <enum name='kThemeTrackShowThumb' value='4'/>
  <enum name='kThemeTrackThumbRgnIsNotGhost' value='8'/>
  <enum name='kThemeUserDefinedTag' value='1970496882'/>
  <enum name='kThemeUtilitySideWindow' value='9'/>
  <enum name='kThemeUtilityWindow' value='8'/>
  <enum name='kThemeUtilityWindowTitleFont' value='106'/>
  <enum name='kThemeVariantBaseTintTag' value='1953066612'/>
  <enum name='kThemeVariantNameTag' value='1986097774'/>
  <enum name='kThemeViewsFont' value='3'/>
  <enum name='kThemeViewsFontSizeTag' value='1986425722'/>
  <enum name='kThemeViewsFontTag' value='1986424436'/>
  <enum name='kThemeWatchCursor' value='7'/>
  <enum name='kThemeWidgetABox' value='3'/>
  <enum name='kThemeWidgetBBox' value='4'/>
  <enum name='kThemeWidgetBOffBox' value='5'/>
  <enum name='kThemeWidgetCloseBox' value='0'/>
  <enum name='kThemeWidgetCollapseBox' value='2'/>
  <enum name='kThemeWidgetDirtyCloseBox' value='6'/>
  <enum name='kThemeWidgetZoomBox' value='1'/>
  <enum name='kThemeWindowHasCloseBox' value='32'/>
  <enum name='kThemeWindowHasCollapseBox' value='64'/>
  <enum name='kThemeWindowHasDirty' value='512'/>
  <enum name='kThemeWindowHasFullZoom' value='24'/>
  <enum name='kThemeWindowHasGrow' value='1'/>
  <enum name='kThemeWindowHasHorizontalZoom' value='8'/>
  <enum name='kThemeWindowHasTitleText' value='128'/>
  <enum name='kThemeWindowHasToolbarButton' value='2048'/>
  <enum name='kThemeWindowHasVerticalZoom' value='16'/>
  <enum name='kThemeWindowIsCollapsed' value='256'/>
  <enum name='kThemeWindowSoundsMask' value='1'/>
  <enum name='kThemeWindowTitleFont' value='104'/>
  <enum name='kTiledOnScreen' value='1'/>
  <enum name='kToolbarWindowClass' value='12'/>
  <enum name='kTrackMouseLocationOptionDontConsumeMouseUp' value='1'/>
  <enum name='kTranslateGetFileTranslationList' value='0'/>
  <enum name='kTranslateGetScrapTranslationList' value='10'/>
  <enum name='kTranslateGetScrapTranslationListConsideringData' value='13'/>
  <enum name='kTranslateGetTranslatedFilename' value='3'/>
  <enum name='kTranslateIdentifyFile' value='1'/>
  <enum name='kTranslateIdentifyScrap' value='11'/>
  <enum name='kTranslateTranslateFile' value='2'/>
  <enum name='kTranslateTranslateScrap' value='12'/>
  <enum name='kTranslationScrapProgressDialogID' value='-16555'/>
  <enum name='kTranslatorCanGenerateFilename' value='4'/>
  <enum name='kUIModeAllHidden' value='3'/>
  <enum name='kUIModeAllSuppressed' value='4'/>
  <enum name='kUIModeContentHidden' value='2'/>
  <enum name='kUIModeContentSuppressed' value='1'/>
  <enum name='kUIModeNormal' value='0'/>
  <enum name='kUIOptionAutoShowMenuBar' value='1'/>
  <enum name='kUIOptionDisableAppleMenu' value='4'/>
  <enum name='kUIOptionDisableForceQuit' value='16'/>
  <enum name='kUIOptionDisableHide' value='64'/>
  <enum name='kUIOptionDisableProcessSwitch' value='8'/>
  <enum name='kUIOptionDisableSessionTerminate' value='32'/>
  <enum name='kUnicodeDocument' value='1969516387'/>
  <enum name='kUnicodeDocumentInterfaceType' value='1969516387'/>
  <enum name='kUnknownLanguage' value='65535'/>
  <enum name='kUnknownScript' value='65535'/>
  <enum name='kUpArrowCharCode' value='30'/>
  <enum name='kUseBestGuess' value='5'/>
  <enum name='kUserDialogItem' value='0'/>
  <enum name='kUtilityWindowClass' value='8'/>
  <enum name='kVerticalTabCharCode' value='11'/>
  <enum name='kWindowActivationScopeAll' value='2'/>
  <enum name='kWindowActivationScopeIndependent' value='1'/>
  <enum name='kWindowActivationScopeNone' value='0'/>
  <enum name='kWindowAlertPositionMainScreen' value='12298'/>
  <enum name='kWindowAlertPositionOnMainScreen' value='7'/>
  <enum name='kWindowAlertPositionOnParentWindow' value='8'/>
  <enum name='kWindowAlertPositionOnParentWindowScreen' value='9'/>
  <enum name='kWindowAlertPositionParentWindow' value='45066'/>
  <enum name='kWindowAlertPositionParentWindowScreen' value='28682'/>
  <enum name='kWindowAlertProc' value='1044'/>
  <enum name='kWindowApplicationScaledAttribute' value='1073741824'/>
  <enum name='kWindowAsyncDragAttribute' value='8388608'/>
  <enum name='kWindowBoundsChangeOriginChanged' value='8'/>
  <enum name='kWindowBoundsChangeSizeChanged' value='4'/>
  <enum name='kWindowBoundsChangeUserDrag' value='1'/>
  <enum name='kWindowBoundsChangeUserResize' value='2'/>
  <enum name='kWindowBoundsChangeZoom' value='16'/>
  <enum name='kWindowCanCollapse' value='4'/>
  <enum name='kWindowCanDrawInCurrentPort' value='512'/>
  <enum name='kWindowCanGetWindowRegion' value='16'/>
  <enum name='kWindowCanGrow' value='1'/>
  <enum name='kWindowCanMeasureTitle' value='2048'/>
  <enum name='kWindowCanSetupProxyDragImage' value='1024'/>
  <enum name='kWindowCanZoom' value='2'/>
  <enum name='kWindowCascadeOnMainScreen' value='4'/>
  <enum name='kWindowCascadeOnParentWindow' value='5'/>
  <enum name='kWindowCascadeOnParentWindowScreen' value='6'/>
  <enum name='kWindowCascadeStartAtParentWindowScreen' value='10'/>
  <enum name='kWindowCenterMainScreen' value='10250'/>
  <enum name='kWindowCenterOnMainScreen' value='1'/>
  <enum name='kWindowCenterOnParentWindow' value='2'/>
  <enum name='kWindowCenterOnParentWindowScreen' value='3'/>
  <enum name='kWindowCenterParentWindow' value='43018'/>
  <enum name='kWindowCenterParentWindowScreen' value='26634'/>
  <enum name='kWindowCloseBoxAttribute' value='1'/>
  <enum name='kWindowCloseBoxRgn' value='2'/>
  <enum name='kWindowCollapseBoxAttribute' value='8'/>
  <enum name='kWindowCollapseBoxRgn' value='7'/>
  <enum name='kWindowCompositingAttribute' value='524288'/>
  <enum name='kWindowConstrainAllowPartial' value='4'/>
  <enum name='kWindowConstrainCalcOnly' value='8'/>
  <enum name='kWindowConstrainMayResize' value='1'/>
  <enum name='kWindowConstrainMoveRegardlessOfFit' value='2'/>
  <enum name='kWindowConstrainStandardOptions' value='2'/>
  <enum name='kWindowConstrainUseTransitionWindow' value='16'/>
  <enum name='kWindowContentRgn' value='33'/>
  <enum name='kWindowDefHIView' value='3'/>
  <enum name='kWindowDefObjectClass' value='1'/>
  <enum name='kWindowDefProcID' value='2'/>
  <enum name='kWindowDefProcPtr' value='0'/>
  <enum name='kWindowDefProcType' value='1464091974'/>
  <enum name='kWindowDefSupportsColorGrafPort' value='1073741826'/>
  <enum name='kWindowDefaultPosition' value='0'/>
  <enum name='kWindowDefinitionVersionOne' value='1'/>
  <enum name='kWindowDefinitionVersionTwo' value='2'/>
  <enum name='kWindowDialogDefProcResID' value='65'/>
  <enum name='kWindowDocumentDefProcResID' value='64'/>
  <enum name='kWindowDocumentProc' value='1024'/>
  <enum name='kWindowDoesNotCycleAttribute' value='32768'/>
  <enum name='kWindowDragRgn' value='5'/>
  <enum name='kWindowDrawerClosed' value='4'/>
  <enum name='kWindowDrawerClosing' value='3'/>
  <enum name='kWindowDrawerOpen' value='2'/>
  <enum name='kWindowDrawerOpening' value='1'/>
  <enum name='kWindowEdgeBottom' value='4'/>
  <enum name='kWindowEdgeDefault' value='0'/>
  <enum name='kWindowEdgeLeft' value='2'/>
  <enum name='kWindowEdgeRight' value='8'/>
  <enum name='kWindowEdgeTop' value='1'/>
  <enum name='kWindowFadeTransitionEffect' value='4'/>
  <enum name='kWindowFloatFullZoomGrowProc' value='1071'/>
  <enum name='kWindowFloatFullZoomProc' value='1069'/>
  <enum name='kWindowFloatGrowProc' value='1059'/>
  <enum name='kWindowFloatHorizZoomGrowProc' value='1067'/>
  <enum name='kWindowFloatHorizZoomProc' value='1065'/>
  <enum name='kWindowFloatProc' value='1057'/>
  <enum name='kWindowFloatSideFullZoomGrowProc' value='1087'/>
  <enum name='kWindowFloatSideFullZoomProc' value='1085'/>
  <enum name='kWindowFloatSideGrowProc' value='1075'/>
  <enum name='kWindowFloatSideHorizZoomGrowProc' value='1083'/>
  <enum name='kWindowFloatSideHorizZoomProc' value='1081'/>
  <enum name='kWindowFloatSideProc' value='1073'/>
  <enum name='kWindowFloatSideVertZoomGrowProc' value='1079'/>
  <enum name='kWindowFloatSideVertZoomProc' value='1077'/>
  <enum name='kWindowFloatVertZoomGrowProc' value='1063'/>
  <enum name='kWindowFloatVertZoomProc' value='1061'/>
  <enum name='kWindowFrameworkScaledAttribute' value='1048576'/>
  <enum name='kWindowFullZoomAttribute' value='6'/>
  <enum name='kWindowFullZoomDocumentProc' value='1030'/>
  <enum name='kWindowFullZoomGrowDocumentProc' value='1031'/>
  <enum name='kWindowGenieTransitionEffect' value='5'/>
  <enum name='kWindowGlobalPortRgn' value='40'/>
  <enum name='kWindowGroupAttrFixedLevel' value='32'/>
  <enum name='kWindowGroupAttrHideOnCollapse' value='16'/>
  <enum name='kWindowGroupAttrLayerTogether' value='4'/>
  <enum name='kWindowGroupAttrMoveTogether' value='2'/>
  <enum name='kWindowGroupAttrPositionFixed' value='2'/>
  <enum name='kWindowGroupAttrSelectAsLayer' value='1'/>
  <enum name='kWindowGroupAttrSelectable' value='1'/>
  <enum name='kWindowGroupAttrSharedActivation' value='8'/>
  <enum name='kWindowGroupAttrZOrderFixed' value='4'/>
  <enum name='kWindowGroupContentsRecurse' value='2'/>
  <enum name='kWindowGroupContentsReturnWindows' value='1'/>
  <enum name='kWindowGroupContentsVisible' value='4'/>
  <enum name='kWindowGroupLevelActive' value='1'/>
  <enum name='kWindowGroupLevelInactive' value='2'/>
  <enum name='kWindowGroupLevelPromoted' value='3'/>
  <enum name='kWindowGrowDocumentProc' value='1025'/>
  <enum name='kWindowGrowRgn' value='6'/>
  <enum name='kWindowHasTitleBar' value='64'/>
  <enum name='kWindowHideOnFullScreenAttribute' value='67108864'/>
  <enum name='kWindowHideOnSuspendAttribute' value='16777216'/>
  <enum name='kWindowHideTransitionAction' value='2'/>
  <enum name='kWindowHorizZoomDocumentProc' value='1028'/>
  <enum name='kWindowHorizZoomGrowDocumentProc' value='1029'/>
  <enum name='kWindowHorizontalZoomAttribute' value='2'/>
  <enum name='kWindowIgnoreClicksAttribute' value='536870912'/>
  <enum name='kWindowInWindowMenuAttribute' value='134217728'/>
  <enum name='kWindowIsAlert' value='32'/>
  <enum name='kWindowIsCollapsedState' value='1'/>
  <enum name='kWindowIsModal' value='8'/>
  <enum name='kWindowIsOpaque' value='16384'/>
  <enum name='kWindowLatentVisibleAppHidden' value='8'/>
  <enum name='kWindowLatentVisibleCollapsedGroup' value='32'/>
  <enum name='kWindowLatentVisibleCollapsedOwner' value='16'/>
  <enum name='kWindowLatentVisibleFloater' value='1'/>
  <enum name='kWindowLatentVisibleFullScreen' value='4'/>
  <enum name='kWindowLatentVisibleSuspend' value='2'/>
  <enum name='kWindowLiveResizeAttribute' value='268435456'/>
  <enum name='kWindowMenuIncludeRotate' value='1'/>
  <enum name='kWindowMetalAttribute' value='256'/>
  <enum name='kWindowMetalNoContentSeparatorAttribute' value='2048'/>
  <enum name='kWindowModalDialogProc' value='1042'/>
  <enum name='kWindowModalityAppModal' value='2'/>
  <enum name='kWindowModalityNone' value='0'/>
  <enum name='kWindowModalitySystemModal' value='1'/>
  <enum name='kWindowModalityWindowModal' value='3'/>
  <enum name='kWindowMovableAlertProc' value='1045'/>
  <enum name='kWindowMovableModalDialogProc' value='1043'/>
  <enum name='kWindowMovableModalGrowProc' value='1046'/>
  <enum name='kWindowMoveTransitionAction' value='3'/>
  <enum name='kWindowMsgCalculateShape' value='2'/>
  <enum name='kWindowMsgCleanUp' value='4'/>
  <enum name='kWindowMsgDragHilite' value='9'/>
  <enum name='kWindowMsgDraw' value='0'/>
  <enum name='kWindowMsgDrawGrowBox' value='6'/>
  <enum name='kWindowMsgDrawGrowOutline' value='5'/>
  <enum name='kWindowMsgDrawInCurrentPort' value='11'/>
  <enum name='kWindowMsgGetFeatures' value='7'/>
  <enum name='kWindowMsgGetGrowImageRegion' value='19'/>
  <enum name='kWindowMsgGetRegion' value='8'/>
  <enum name='kWindowMsgHitTest' value='1'/>
  <enum name='kWindowMsgInitialize' value='3'/>
  <enum name='kWindowMsgMeasureTitle' value='14'/>
  <enum name='kWindowMsgModified' value='10'/>
  <enum name='kWindowMsgSetupProxyDragImage' value='12'/>
  <enum name='kWindowMsgStateChanged' value='13'/>
  <enum name='kWindowNoActivatesAttribute' value='131072'/>
  <enum name='kWindowNoAttributes' value='0'/>
  <enum name='kWindowNoConstrainAttribute' value='2147483648'/>
  <enum name='kWindowNoPosition' value='0'/>
  <enum name='kWindowNoShadowAttribute' value='2097152'/>
  <enum name='kWindowNoTitleBarAttribute' value='512'/>
  <enum name='kWindowNoUpdatesAttribute' value='65536'/>
  <enum name='kWindowOffsetUnchanged' value='-1'/>
  <enum name='kWindowOpaqueForEventsAttribute' value='262144'/>
  <enum name='kWindowOpaqueRgn' value='35'/>
  <enum name='kWindowPaintProcOptionsNone' value='0'/>
  <enum name='kWindowPlainDialogProc' value='1040'/>
  <enum name='kWindowPropertyPersistent' value='1'/>
  <enum name='kWindowResizableAttribute' value='16'/>
  <enum name='kWindowResizeTransitionAction' value='4'/>
  <enum name='kWindowShadowDialogProc' value='1041'/>
  <enum name='kWindowSheetAlertDefProcResID' value='70'/>
  <enum name='kWindowSheetAlertProc' value='1120'/>
  <enum name='kWindowSheetDefProcResID' value='68'/>
  <enum name='kWindowSheetProc' value='1088'/>
  <enum name='kWindowSheetTransitionEffect' value='2'/>
  <enum name='kWindowShowTransitionAction' value='1'/>
  <enum name='kWindowSideTitlebarAttribute' value='32'/>
  <enum name='kWindowSimpleDefProcResID' value='69'/>
  <enum name='kWindowSimpleFrameProc' value='1105'/>
  <enum name='kWindowSimpleProc' value='1104'/>
  <enum name='kWindowSlideTransitionEffect' value='3'/>
  <enum name='kWindowStaggerMainScreen' value='14346'/>
  <enum name='kWindowStaggerParentWindow' value='47114'/>
  <enum name='kWindowStaggerParentWindowScreen' value='30730'/>
  <enum name='kWindowStandardDocumentAttributes' value='31'/>
  <enum name='kWindowStandardFloatingAttributes' value='9'/>
  <enum name='kWindowStandardHandlerAttribute' value='33554432'/>
  <enum name='kWindowStateTitleChanged' value='1'/>
  <enum name='kWindowStructureRgn' value='32'/>
  <enum name='kWindowSupportsDragHilite' value='128'/>
  <enum name='kWindowSupportsGetGrowImageRegion' value='8192'/>
  <enum name='kWindowSupportsModifiedBit' value='256'/>
  <enum name='kWindowTitleBarRgn' value='0'/>
  <enum name='kWindowTitleProxyIconRgn' value='8'/>
  <enum name='kWindowTitleTextRgn' value='1'/>
  <enum name='kWindowToolbarButtonAttribute' value='64'/>
  <enum name='kWindowToolbarButtonRgn' value='41'/>
  <enum name='kWindowUpdateRgn' value='34'/>
  <enum name='kWindowUtilityDefProcResID' value='66'/>
  <enum name='kWindowUtilitySideTitleDefProcResID' value='67'/>
  <enum name='kWindowVertZoomDocumentProc' value='1026'/>
  <enum name='kWindowVertZoomGrowDocumentProc' value='1027'/>
  <enum name='kWindowVerticalZoomAttribute' value='4'/>
  <enum name='kWindowWantsDisposeAtProcessDeath' value='4096'/>
  <enum name='kWindowZoomBoxRgn' value='3'/>
  <enum name='kWindowZoomTransitionEffect' value='1'/>
  <enum name='kZoomAccelerate' value='1'/>
  <enum name='kZoomDecelerate' value='2'/>
  <enum name='kZoomNoAcceleration' value='0'/>
  <enum name='keyCodeMask' value='65280'/>
  <enum name='keyContextualMenuAttributes' value='1668112756'/>
  <enum name='keyContextualMenuCommandID' value='1668113252'/>
  <enum name='keyContextualMenuModifiers' value='1668115812'/>
  <enum name='keyContextualMenuName' value='1886282093'/>
  <enum name='keyContextualMenuSubmenu' value='1668117346'/>
  <enum name='keyDown' value='3'/>
  <enum name='keyDownMask' value='8'/>
  <enum name='keyUp' value='4'/>
  <enum name='keyUpMask' value='16'/>
  <enum name='lCloseMsg' value='3'/>
  <enum name='lDoHAutoscroll' value='1'/>
  <enum name='lDoHAutoscrollBit' value='0'/>
  <enum name='lDoVAutoscroll' value='2'/>
  <enum name='lDoVAutoscrollBit' value='1'/>
  <enum name='lDrawMsg' value='1'/>
  <enum name='lDrawingModeOff' value='8'/>
  <enum name='lDrawingModeOffBit' value='3'/>
  <enum name='lExtendDrag' value='64'/>
  <enum name='lExtendDragBit' value='6'/>
  <enum name='lHiliteMsg' value='2'/>
  <enum name='lInitMsg' value='0'/>
  <enum name='lNoDisjoint' value='32'/>
  <enum name='lNoDisjointBit' value='5'/>
  <enum name='lNoExtend' value='16'/>
  <enum name='lNoExtendBit' value='4'/>
  <enum name='lNoNilHilite' value='2'/>
  <enum name='lNoNilHiliteBit' value='1'/>
  <enum name='lNoRect' value='8'/>
  <enum name='lNoRectBit' value='3'/>
  <enum name='lOnlyOne' value='-128'/>
  <enum name='lOnlyOneBit' value='7'/>
  <enum name='lUseSense' value='4'/>
  <enum name='lUseSenseBit' value='2'/>
  <enum name='mCalcItemMsg' value='5'/>
  <enum name='mDownMask' value='2'/>
  <enum name='mDrawMsg' value='0'/>
  <enum name='mPopUpMsg' value='3'/>
  <enum name='mSizeMsg' value='2'/>
  <enum name='mUpMask' value='4'/>
  <enum name='mctAllItems' value='-98'/>
  <enum name='mctLastIDIndic' value='-99'/>
  <enum name='mouseDown' value='1'/>
  <enum name='mouseMovedMessage' value='250'/>
  <enum name='mouseUp' value='2'/>
  <enum name='movableDBoxProc' value='5'/>
  <enum name='nWIDTHHook' value='24'/>
  <enum name='networkEvt' value='10'/>
  <enum name='networkMask' value='1024'/>
  <enum name='noConstraint' value='0'/>
  <enum name='noGrowDocProc' value='4'/>
  <enum name='noMark' value='0'/>
  <enum name='noteIcon' value='1'/>
  <enum name='nullEvent' value='0'/>
  <enum name='ok' value='1'/>
  <enum name='optionKey' value='2048'/>
  <enum name='optionKeyBit' value='11'/>
  <enum name='osEvt' value='15'/>
  <enum name='osEvtMessageMask' value='4278190080'/>
  <enum name='osMask' value='32768'/>
  <enum name='overlayDITL' value='0'/>
  <enum name='picItem' value='64'/>
  <enum name='plainDBox' value='2'/>
  <enum name='popupFixedWidth' value='1'/>
  <enum name='popupMenuProc' value='1008'/>
  <enum name='popupTitleBold' value='256'/>
  <enum name='popupTitleCenterJust' value='1'/>
  <enum name='popupTitleCondense' value='8192'/>
  <enum name='popupTitleExtend' value='16384'/>
  <enum name='popupTitleItalic' value='512'/>
  <enum name='popupTitleLeftJust' value='0'/>
  <enum name='popupTitleNoStyle' value='32768'/>
  <enum name='popupTitleOutline' value='2048'/>
  <enum name='popupTitleRightJust' value='255'/>
  <enum name='popupTitleShadow' value='4096'/>
  <enum name='popupTitleUnderline' value='1024'/>
  <enum name='popupUseAddResMenu' value='4'/>
  <enum name='popupUseWFont' value='8'/>
  <enum name='popupVariableWidth' value='2'/>
  <enum name='posCntl' value='5'/>
  <enum name='pushButProc' value='0'/>
  <enum name='radCtrl' value='2'/>
  <enum name='radioButProc' value='2'/>
  <enum name='resCtrl' value='3'/>
  <enum name='resumeFlag' value='1'/>
  <enum name='rightControlKey' value='32768'/>
  <enum name='rightControlKeyBit' value='15'/>
  <enum name='rightOptionKey' value='16384'/>
  <enum name='rightOptionKeyBit' value='14'/>
  <enum name='rightShiftKey' value='8192'/>
  <enum name='rightShiftKeyBit' value='13'/>
  <enum name='scrollBarProc' value='16'/>
  <enum name='shiftKey' value='512'/>
  <enum name='shiftKeyBit' value='9'/>
  <enum name='sizeBit' value='2'/>
  <enum name='statText' value='8'/>
  <enum name='stopIcon' value='0'/>
  <enum name='suspendResumeMessage' value='1'/>
  <enum name='taDstDocNeedsResourceFork' value='1'/>
  <enum name='taDstIsAppTranslation' value='2'/>
  <enum name='teBitClear' value='0'/>
  <enum name='teBitSet' value='1'/>
  <enum name='teBitTest' value='-1'/>
  <enum name='teCaret' value='-2'/>
  <enum name='teCenter' value='1'/>
  <enum name='teDraw' value='-1'/>
  <enum name='teFAutoScroll' value='0'/>
  <enum name='teFIdleWithEventLoopTimer' value='7'/>
  <enum name='teFInlineInput' value='3'/>
  <enum name='teFInlineInputAutoScroll' value='6'/>
  <enum name='teFOutlineHilite' value='2'/>
  <enum name='teFTextBuffering' value='1'/>
  <enum name='teFUseInlineInput' value='5'/>
  <enum name='teFUseTextServices' value='4'/>
  <enum name='teFUseWhiteBackground' value='4'/>
  <enum name='teFind' value='0'/>
  <enum name='teFlushDefault' value='0'/>
  <enum name='teFlushLeft' value='-2'/>
  <enum name='teFlushRight' value='-1'/>
  <enum name='teForceLeft' value='-2'/>
  <enum name='teFromFind' value='12'/>
  <enum name='teFromRecal' value='16'/>
  <enum name='teHighlight' value='1'/>
  <enum name='teJustCenter' value='1'/>
  <enum name='teJustLeft' value='0'/>
  <enum name='teJustRight' value='-1'/>
  <enum name='teWordDrag' value='8'/>
  <enum name='teWordSelect' value='4'/>
  <enum name='testCntl' value='1'/>
  <enum name='textMenuProc' value='0'/>
  <enum name='thumbCntl' value='6'/>
  <enum name='toggleBit' value='5'/>
  <enum name='tsNextSelectMode' value='1'/>
  <enum name='tsNormalSelectMode' value='0'/>
  <enum name='tsPreviousSelectMode' value='-1'/>
  <enum name='typeATSFontRef' value='1635021670'/>
  <enum name='typeCFArrayRef' value='1667654002'/>
  <enum name='typeCFDictionaryRef' value='1667654755'/>
  <enum name='typeCFIndex' value='1667656056'/>
  <enum name='typeCFMutableArrayRef' value='1667657057'/>
  <enum name='typeCFMutableDictionaryRef' value='1667657060'/>
  <enum name='typeCFMutableStringRef' value='1667657075'/>
  <enum name='typeCFRange' value='1667658350'/>
  <enum name='typeCFStringRef' value='1667658612'/>
  <enum name='typeCFTypeRef' value='1667658873'/>
  <enum name='typeCGContextRef' value='1668183160'/>
  <enum name='typeClickActivationResult' value='1668047203'/>
  <enum name='typeCollection' value='1668052078'/>
  <enum name='typeControlActionUPP' value='1667331440'/>
  <enum name='typeControlFrameMetrics' value='1667853939'/>
  <enum name='typeControlPartCode' value='1668313716'/>
  <enum name='typeControlRef' value='1668575852'/>
  <enum name='typeDragRef' value='1685217639'/>
  <enum name='typeEventHotKeyID' value='1751869796'/>
  <enum name='typeEventTargetRef' value='1702130279'/>
  <enum name='typeFSVolumeRefNum' value='1987013742'/>
  <enum name='typeGDHandle' value='1734632822'/>
  <enum name='typeGWorldPtr' value='1735879780'/>
  <enum name='typeGlyphSelector' value='1735157363'/>
  <enum name='typeGrafPtr' value='1735549286'/>
  <enum name='typeHICommand' value='1751346532'/>
  <enum name='typeHIObjectRef' value='1751740258'/>
  <enum name='typeHIPoint' value='1751740532'/>
  <enum name='typeHIRect' value='1751741027'/>
  <enum name='typeHIShapeRef' value='1936220528'/>
  <enum name='typeHISize' value='1751741306'/>
  <enum name='typeHIToolbarDisplayMode' value='1952605293'/>
  <enum name='typeHIToolbarDisplaySize' value='1952605299'/>
  <enum name='typeHIToolbarItemRef' value='1952606580'/>
  <enum name='typeHIToolbarRef' value='1952604530'/>
  <enum name='typeHIViewTrackingAreaRef' value='1668575841'/>
  <enum name='typeIndicatorDragConstraint' value='1667851363'/>
  <enum name='typeMenuCommand' value='1835232612'/>
  <enum name='typeMenuDirection' value='1835297138'/>
  <enum name='typeMenuEventOptions' value='1835364208'/>
  <enum name='typeMenuItemIndex' value='1835623544'/>
  <enum name='typeMenuRef' value='1835363957'/>
  <enum name='typeMenuTrackingMode' value='1836346724'/>
  <enum name='typeModalClickResult' value='2003657586'/>
  <enum name='typeMouseButton' value='1835168878'/>
  <enum name='typeMouseTrackingRef' value='1836348006'/>
  <enum name='typeMouseWheelAxis' value='1836540280'/>
  <enum name='typeOSStatus' value='1869837172'/>
  <enum name='typePasteboardRef' value='1885500004'/>
  <enum name='typeQDRgnHandle' value='1919381096'/>
  <enum name='typeScrapRef' value='1935897200'/>
  <enum name='typeTabletPointRec' value='1952608867'/>
  <enum name='typeTabletPointerRec' value='1952608867'/>
  <enum name='typeTabletProximityRec' value='1952608376'/>
  <enum name='typeThemeMenuItemType' value='1953327476'/>
  <enum name='typeThemeMenuState' value='1953328755'/>
  <enum name='typeThemeMenuType' value='1953330297'/>
  <enum name='typeVoidPtr' value='1987012964'/>
  <enum name='typeWindowDefPartCode' value='2003071092'/>
  <enum name='typeWindowModality' value='2003660644'/>
  <enum name='typeWindowPartCode' value='2003853682'/>
  <enum name='typeWindowRef' value='2003398244'/>
  <enum name='typeWindowRegionCode' value='2004052080'/>
  <enum name='typeWindowTransitionAction' value='2004115811'/>
  <enum name='typeWindowTransitionEffect' value='2004116838'/>
  <enum name='updateEvt' value='6'/>
  <enum name='updateMask' value='64'/>
  <enum name='userItem' value='0'/>
  <enum name='userKind' value='8'/>
  <enum name='vAxisOnly' value='2'/>
  <enum name='wCalcRgns' value='2'/>
  <enum name='wContentColor' value='0'/>
  <enum name='wDispose' value='4'/>
  <enum name='wDraw' value='0'/>
  <enum name='wDrawGIcon' value='6'/>
  <enum name='wFrameColor' value='1'/>
  <enum name='wGrow' value='5'/>
  <enum name='wHiliteColor' value='3'/>
  <enum name='wHit' value='1'/>
  <enum name='wInCollapseBox' value='9'/>
  <enum name='wInContent' value='1'/>
  <enum name='wInDrag' value='2'/>
  <enum name='wInGoAway' value='4'/>
  <enum name='wInGrow' value='3'/>
  <enum name='wInProxyIcon' value='10'/>
  <enum name='wInStructure' value='13'/>
  <enum name='wInToolbarButton' value='11'/>
  <enum name='wInZoomIn' value='5'/>
  <enum name='wInZoomOut' value='6'/>
  <enum name='wNew' value='3'/>
  <enum name='wNoHit' value='0'/>
  <enum name='wTextColor' value='2'/>
  <enum name='wTitleBarColor' value='4'/>
  <enum name='zoomDocProc' value='8'/>
  <enum name='zoomNoGrow' value='12'/>
  <function name='AEGetInteractionAllowed'>
    <arg name='level' declared_type='AEInteractAllowed*' type='*'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='AEGetTheCurrentEvent'>
    <arg name='theAppleEvent' declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='AEInteractWithUser'>
    <arg name='timeOutInTicks' declared_type='long' type='l' type64='q'/>
    <arg name='nmReqPtr' declared_type='NMRecPtr' type='^{NMRec=^{QElem}sslss^*^**^?l}' type64='^{NMRec=^{QElem}ssqss^*^**^?q}'/>
    <arg name='idleProc' function_pointer='true' declared_type='AEIdleUPP' type='^?'>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='long*' type='^l' type64='^q'/>
      <arg declared_type='RgnHandle*' type='^^{OpaqueRgnHandle}'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='AEProcessAppleEvent'>
    <arg name='theEventRecord' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}' const='true'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='AEResetTimer'>
    <arg name='reply' declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='AEResumeTheCurrentEvent'>
    <arg name='theAppleEvent' declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
    <arg name='reply' declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
    <arg name='dispatcher' function_pointer='true' declared_type='AEEventHandlerUPP' type='^?'>
      <arg declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
      <arg declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
      <arg declared_type='long' type='l' type64='q'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <arg name='handlerRefcon' declared_type='long' type='l' type64='q'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='AESend'>
    <arg name='theAppleEvent' declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
    <arg name='reply' declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
    <arg name='sendMode' declared_type='AESendMode' type='l' type64='i'/>
    <arg name='sendPriority' declared_type='AESendPriority' type='s'/>
    <arg name='timeOutInTicks' declared_type='long' type='l' type64='q'/>
    <arg name='idleProc' function_pointer='true' declared_type='AEIdleUPP' type='^?'>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='long*' type='^l' type64='^q'/>
      <arg declared_type='RgnHandle*' type='^^{OpaqueRgnHandle}'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <arg name='filterProc' function_pointer='true' declared_type='AEFilterUPP' type='^?'>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='AEAddressDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='AESetInteractionAllowed'>
    <arg name='level' declared_type='AEInteractAllowed' type='c'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='AESetTheCurrentEvent'>
    <arg name='theAppleEvent' declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='AESuspendTheCurrentEvent'>
    <arg name='theAppleEvent' declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='AXNotificationHIObjectNotify'>
    <arg name='inNotification' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inHIObject' declared_type='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inIdentifier' declared_type='UInt64' type='Q'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='AXUIElementCreateWithDataBrowserAndItemInfo'>
    <arg name='inDataBrowser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inInfo' declared_type='DataBrowserAccessibilityItemInfo*' type='^{DataBrowserAccessibilityItemInfo=I(?={DataBrowserAccessibilityItemInfoV0=IIII}{DataBrowserAccessibilityItemInfoV1=IIIIII})}' const='true'/>
    <retval declared_type='AXUIElementRef' already_retained='true' type='^{__AXUIElement=}'/>
  </function>
  <function name='AXUIElementCreateWithHIObjectAndIdentifier'>
    <arg name='inHIObject' declared_type='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inIdentifier' declared_type='UInt64' type='Q'/>
    <retval declared_type='AXUIElementRef' already_retained='true' type='^{__AXUIElement=}'/>
  </function>
  <function name='AXUIElementGetDataBrowserItemInfo'>
    <arg name='inElement' declared_type='AXUIElementRef' type='^{__AXUIElement=}'/>
    <arg name='inDataBrowser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inDesiredInfoVersion' declared_type='UInt32' type='L' type64='I'/>
    <arg name='outInfo' declared_type='DataBrowserAccessibilityItemInfo*' type='^{DataBrowserAccessibilityItemInfo=I(?={DataBrowserAccessibilityItemInfoV0=IIII}{DataBrowserAccessibilityItemInfoV1=IIIIII})}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='AXUIElementGetHIObject'>
    <arg name='inUIElement' declared_type='AXUIElementRef' type='^{__AXUIElement=}'/>
    <retval declared_type='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
  </function>
  <function name='AXUIElementGetIdentifier'>
    <arg name='inUIElement' declared_type='AXUIElementRef' type='^{__AXUIElement=}'/>
    <arg name='outIdentifier' declared_type='UInt64*' type='^Q'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='AcquireFirstMatchingEventInQueue'>
    <arg name='inQueue' declared_type='EventQueueRef' type='^{OpaqueEventQueueRef=}'/>
    <arg name='inNumTypes' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inList' declared_type='EventTypeSpec*' type='^{EventTypeSpec=II}' const='true'/>
    <arg name='inOptions' declared_type='OptionBits' type='L' type64='I'/>
    <retval declared_type='EventRef' type='^{OpaqueEventRef=}'/>
  </function>
  <function name='AcquireRootMenu'>
    <retval declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
  </function>
  <function name='ActivateControl'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ActivateTSMDocument'>
    <arg name='idocID' declared_type='TSMDocumentID' type='^{OpaqueTSMDocumentID=}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ActivateTextService'>
    <arg name='ts' declared_type='ComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
    <retval declared_type='ComponentResult' type='l' type64='q'/>
  </function>
  <function name='ActivateWindow'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inActivate' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ActiveNonFloatingWindow'>
    <retval declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
  </function>
  <function name='AddDataBrowserItems'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='container' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='numItems' declared_type='UInt32' type='L' type64='I'/>
    <arg name='items' declared_type='DataBrowserItemID*' type='^I' const='true'/>
    <arg name='preSortProperty' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='AddDataBrowserListViewColumn'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='columnDesc' declared_type='DataBrowserListViewColumnDesc*' type='^{DataBrowserListViewColumnDesc={DataBrowserPropertyDesc=III}{DataBrowserListViewHeaderDesc=ISSs^{__CFString}S{ControlFontStyleRec=ssssss{RGBColor=SSS}{RGBColor=SSS}}{ControlButtonContentInfo=s(?=s^^{CIcon}^*^{OpaqueIconRef}^^{Picture}^*^{CGImage})}}}' type64='^{DataBrowserListViewColumnDesc={DataBrowserPropertyDesc=IIQ}{DataBrowserListViewHeaderDesc=ISSs^{__CFString}S{ControlFontStyleRec=ssssss{RGBColor=SSS}{RGBColor=SSS}}{ControlButtonContentInfo=s(?=s^^{CIcon}^*^{OpaqueIconRef}^^{Picture}^*^{CGImage})}}}'/>
    <arg name='position' declared_type='DataBrowserTableViewColumnIndex' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='AddDragItemFlavor'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='theItemRef' declared_type='DragItemRef' type='L' type64='I'/>
    <arg name='theType' declared_type='FlavorType' type='L' type64='I'/>
    <arg name='dataPtr' declared_type='void*' type='^v' const='true'/>
    <arg name='dataSize' declared_type='Size' type='l' type64='q'/>
    <arg name='theFlags' declared_type='FlavorFlags' type='L' type64='I'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='AddEventTypesToHandler'>
    <arg name='inHandlerRef' declared_type='EventHandlerRef' type='^{OpaqueEventHandlerRef=}'/>
    <arg name='inNumTypes' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inList' declared_type='EventTypeSpec*' type='^{EventTypeSpec=II}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='AdvanceKeyboardFocus'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='Alert'>
    <arg name='alertID' declared_type='SInt16' type='s'/>
    <arg name='modalFilter' function_pointer='true' declared_type='ModalFilterUPP' type='^?'>
      <arg declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='DialogItemIndex*' type='^s'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='DialogItemIndex' type='s'/>
  </function>
  <function name='AppendDITL'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='theHandle' declared_type='Handle' type='^*'/>
    <arg name='method' declared_type='DITLMethod' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='AppendDialogItemList'>
    <arg name='dialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='ditlID' declared_type='SInt16' type='s'/>
    <arg name='method' declared_type='DITLMethod' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='AppendMenuItemText'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inString' declared_type='ConstStr255Param' type='*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='AppendMenuItemTextWithCFString'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inAttributes' declared_type='MenuItemAttributes' type='L' type64='I'/>
    <arg name='inCommandID' declared_type='MenuCommand' type='L' type64='I'/>
    <arg name='outNewItem' declared_type='MenuItemIndex*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='AppendResMenu'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='theType' declared_type='ResType' type='L' type64='I'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='ApplyThemeBackground'>
    <arg name='inKind' declared_type='ThemeBackgroundKind' type='L' type64='I'/>
    <arg name='bounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inState' declared_type='ThemeDrawState' type='L' type64='I'/>
    <arg name='inDepth' declared_type='SInt16' type='s'/>
    <arg name='inColorDev' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='AreFloatingWindowsVisible'>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='AutoEmbedControl'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='AutoSizeDataBrowserListViewColumns'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='AutoSizeDialog'>
    <arg name='inDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='BeginAppModalStateForWindow'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='BeginCGContextForApplicationDockTile'>
    <retval declared_type='CGContextRef' type='^{CGContext=}'/>
  </function>
  <function name='BeginQDContextForApplicationDockTile'>
    <retval declared_type='CGrafPtr' type='^{OpaqueGrafPtr=}'/>
  </function>
  <function name='BeginThemeDragSound'>
    <arg name='kind' declared_type='ThemeDragSoundKind' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='BeginUpdate'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='BeginWindowProxyDrag'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outNewDrag' declared_type='DragReference*' type='^^{OpaqueDragRef}'/>
    <arg name='outDragOutlineRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='BringToFront'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='Button'>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='CMPluginExamineContext'>
    <arg name='thisInstance' declared_type='void*' type='^v'/>
    <arg name='inContext' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
    <arg name='outCommandPairs' declared_type='AEDescList*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CMPluginHandleSelection'>
    <arg name='thisInstance' declared_type='void*' type='^v'/>
    <arg name='inContext' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
    <arg name='inCommandID' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CMPluginPostMenuCleanup'>
    <arg name='thisInstance' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='CalcMenuSize'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='CalcVis'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='CalcVisBehind'>
    <arg name='startWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='clobberedRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='CallInScrapPromises'>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CallNextEventHandler'>
    <arg name='inCallRef' declared_type='EventHandlerCallRef' type='^{OpaqueEventHandlerCallRef=}'/>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CanDocBeOpened'>
    <arg name='targetDocument' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}' const='true'/>
    <arg name='appVRefNumHint' declared_type='short' type='s'/>
    <arg name='appSignature' declared_type='OSType' type='L' type64='I'/>
    <arg name='nativeTypes' declared_type='FileType*' type='^I' const='true'/>
    <arg name='onlyNative' declared_type='Boolean' type='B'/>
    <arg name='howToOpen' declared_type='DocOpenMethod*' type='^s'/>
    <arg name='howToTranslate' declared_type='FileTranslationSpec*' type='^{FileTranslationSpec=I^v{FileTypeSpec=IlIII}{FileTypeSpec=IlIII}}' type64='^{FileTranslationSpec=I^v{FileTypeSpec=IqIII}{FileTypeSpec=IqIII}}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='CancelMenuTracking'>
    <arg name='inRootMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inImmediate' declared_type='Boolean' type='B'/>
    <arg name='inDismissalReason' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CautionAlert'>
    <arg name='alertID' declared_type='SInt16' type='s'/>
    <arg name='modalFilter' function_pointer='true' declared_type='ModalFilterUPP' type='^?'>
      <arg declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='DialogItemIndex*' type='^s'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='DialogItemIndex' type='s'/>
  </function>
  <function name='ChangeControlPropertyAttributes'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='propertyCreator' declared_type='OSType' type='L' type64='I'/>
    <arg name='propertyTag' declared_type='OSType' type='L' type64='I'/>
    <arg name='attributesToSet' declared_type='UInt32' type='L' type64='I'/>
    <arg name='attributesToClear' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ChangeDragBehaviors'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='inBehaviorsToSet' declared_type='DragBehaviors' type='L' type64='I'/>
    <arg name='inBehaviorsToClear' declared_type='DragBehaviors' type='L' type64='I'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ChangeMenuAttributes'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='setTheseAttributes' declared_type='MenuAttributes' type='L' type64='I'/>
    <arg name='clearTheseAttributes' declared_type='MenuAttributes' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ChangeMenuItemAttributes'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <arg name='setTheseAttributes' declared_type='MenuItemAttributes' type='L' type64='I'/>
    <arg name='clearTheseAttributes' declared_type='MenuItemAttributes' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ChangeMenuItemPropertyAttributes'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <arg name='propertyCreator' declared_type='OSType' type='L' type64='I'/>
    <arg name='propertyTag' declared_type='OSType' type='L' type64='I'/>
    <arg name='attributesToSet' declared_type='UInt32' type='L' type64='I'/>
    <arg name='attributesToClear' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ChangeMouseTrackingRegion'>
    <arg name='inMouseRef' declared_type='MouseTrackingRef' type='^{OpaqueMouseTrackingRef=}'/>
    <arg name='inRegion' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='inClip' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ChangeWindowAttributes'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='setTheseAttributes' declared_type='WindowAttributes' type='L' type64='I'/>
    <arg name='clearTheseAttributes' declared_type='WindowAttributes' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ChangeWindowGroupAttributes'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <arg name='setTheseAttributes' declared_type='WindowGroupAttributes' type='L' type64='I'/>
    <arg name='clearTheseAttributes' declared_type='WindowGroupAttributes' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ChangeWindowPropertyAttributes'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='propertyCreator' declared_type='OSType' type='L' type64='I'/>
    <arg name='propertyTag' declared_type='OSType' type='L' type64='I'/>
    <arg name='attributesToSet' declared_type='UInt32' type='L' type64='I'/>
    <arg name='attributesToClear' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CheckEventQueueForUserCancel'>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='CheckUpdate'>
    <arg name='theEvent' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='ClearCurrentScrap'>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ClearKeyboardFocus'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ClearMenuBar'>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='ClearScrap'>
    <arg name='inOutScrap' declared_type='ScrapRef*' type='^^{OpaqueScrapRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ClipAbove'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='ClipMouseTrackingRegion'>
    <arg name='inMouseRef' declared_type='MouseTrackingRef' type='^{OpaqueMouseTrackingRef=}'/>
    <arg name='inRegion' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ClipWindowMouseTrackingRegions'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inSignature' declared_type='OSType' type='L' type64='I'/>
    <arg name='inClip' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CloneWindow'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CloseDataBrowserContainer'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='container' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CloseDrawer'>
    <arg name='inDrawerWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inAsync' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CloseStandardSheet'>
    <arg name='inSheet' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='inResultCommand' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CloseTextService'>
    <arg name='idocID' declared_type='TSMDocumentID' type='^{OpaqueTSMDocumentID=}'/>
    <arg name='aComponentInstance' declared_type='ComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='CollapseAllWindows'>
    <arg name='collapse' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CollapseWindow'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='collapse' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ConstrainWindowToScreen'>
    <arg name='inWindowRef' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inRegionCode' declared_type='WindowRegionCode' type='S'/>
    <arg name='inOptions' declared_type='WindowConstrainOptions' type='L' type64='I'/>
    <arg name='inScreenRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='outStructure' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ContextualMenuSelect'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inGlobalLocation' declared_type='Point' type='{Point=ss}'/>
    <arg name='inReserved' declared_type='Boolean' type='B'/>
    <arg name='inHelpType' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inHelpItemString' declared_type='ConstStr255Param' type='*'/>
    <arg name='inSelection' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
    <arg name='outUserSelectionType' declared_type='UInt32*' type='^I'/>
    <arg name='outMenuID' declared_type='MenuID*' type='^s'/>
    <arg name='outMenuItem' declared_type='MenuItemIndex*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ConvertEventRefToEventRecord'>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <arg name='outEvent' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='CopyControlTitleAsCFString'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='outString' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CopyDataBrowserEditText'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='text' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CopyEvent'>
    <arg name='inOther' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <retval declared_type='EventRef' already_retained='true' type='^{OpaqueEventRef=}'/>
  </function>
  <function name='CopyEventAs'>
    <arg name='inAllocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='inOther' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <arg name='inEventClass' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inEventKind' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='EventRef' already_retained='true' type='^{OpaqueEventRef=}'/>
  </function>
  <function name='CopyMenuItemData'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemID' type='L' type64='I'/>
    <arg name='inIsCommandID' declared_type='Boolean' type='B'/>
    <arg name='ioData' declared_type='MenuItemDataPtr' type='^{MenuItemDataRec=Q*SSIICBBCiI^*IIs^{OpaqueMenuRef}iII^{__CFString}^{OpaqueCollection}IS}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CopyMenuItemTextAsCFString'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='outString' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CopyMenuItems'>
    <arg name='inSourceMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inFirstItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='inNumItems' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='inDestMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inInsertAfter' declared_type='MenuItemIndex' type='S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CopyMenuTitleAsCFString'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='outString' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CopyServicesMenuCommandKeys'>
    <arg name='outCommandKeyArray' declared_type='CFArrayRef*' type='^^{__CFArray}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CopySymbolicHotKeys'>
    <arg name='outHotKeyArray' declared_type='CFArrayRef*' type='^^{__CFArray}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CopyTextServiceInputModeList'>
    <arg name='ts' declared_type='ComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
    <arg name='outInputModes' declared_type='CFDictionaryRef*' type='^^{__CFDictionary}'/>
    <retval declared_type='ComponentResult' type='l' type64='q'/>
  </function>
  <function name='CopyThemeIdentifier'>
    <arg name='outIdentifier' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CopyWindowAlternateTitle'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outTitle' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CopyWindowGroupName'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <arg name='outName' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CopyWindowTitleAsCFString'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outString' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CountDITL'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <retval declared_type='DialogItemIndex' type='s'/>
  </function>
  <function name='CountDragItemFlavors'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='theItemRef' declared_type='DragItemRef' type='L' type64='I'/>
    <arg name='numFlavors' declared_type='UInt16*' type='^S'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='CountDragItems'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='numItems' declared_type='UInt16*' type='^S'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='CountMenuItems'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='UInt16' type='S'/>
  </function>
  <function name='CountMenuItemsWithCommandID'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inCommandID' declared_type='MenuCommand' type='L' type64='I'/>
    <retval declared_type='ItemCount' type='L' type64='I'/>
  </function>
  <function name='CountSubControls'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='outNumChildren' declared_type='UInt16*' type='^S'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='CountWindowGroupContents'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <arg name='inOptions' declared_type='WindowGroupContentOptions' type='L' type64='I'/>
    <retval declared_type='ItemCount' type='L' type64='I'/>
  </function>
  <function name='CreateBevelButtonControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='title' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='thickness' declared_type='ControlBevelThickness' type='S'/>
    <arg name='behavior' declared_type='ControlBevelButtonBehavior' type='S'/>
    <arg name='info' declared_type='ControlButtonContentInfoPtr' type='^{ControlButtonContentInfo=s(?=s^^{CIcon}^*^{OpaqueIconRef}^^{Picture}^*^{CGImage})}'/>
    <arg name='menuID' declared_type='SInt16' type='s'/>
    <arg name='menuBehavior' declared_type='ControlBevelButtonMenuBehavior' type='S'/>
    <arg name='menuPlacement' declared_type='ControlBevelButtonMenuPlacement' type='S'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateCGImageFromPixMaps'>
    <arg name='inImage' declared_type='PixMapHandle' type='^^{PixMap}'/>
    <arg name='inMask' declared_type='PixMapHandle' type='^^{PixMap}'/>
    <arg name='outImage' declared_type='CGImageRef*' type='^^{CGImage}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateChasingArrowsControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateCheckBoxControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='title' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='initialValue' declared_type='SInt32' type='l' type64='i'/>
    <arg name='autoToggle' declared_type='Boolean' type='B'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateCheckGroupBoxControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='title' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='initialValue' declared_type='SInt32' type='l' type64='i'/>
    <arg name='primary' declared_type='Boolean' type='B'/>
    <arg name='autoToggle' declared_type='Boolean' type='B'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateClockControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='clockType' declared_type='ControlClockType' type='S'/>
    <arg name='clockFlags' declared_type='ControlClockFlags' type='L' type64='I'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateCustomControl'>
    <arg name='owningWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='contBounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='def' declared_type='ControlDefSpec*' type='^{ControlDefSpec=I(?=^?^v)}' const='true'/>
    <arg name='initData' declared_type='Collection' type='^{OpaqueCollection=}'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateCustomList'>
    <arg name='rView' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='dataBounds' declared_type='ListBounds*' type='^{Rect=ssss}' const='true'/>
    <arg name='cellSize' declared_type='Point' type='{Point=ss}'/>
    <arg name='theSpec' declared_type='ListDefSpec*' type='^{ListDefSpec=I(?=^?)}' const='true'/>
    <arg name='theWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='drawIt' declared_type='Boolean' type='B'/>
    <arg name='hasGrow' declared_type='Boolean' type='B'/>
    <arg name='scrollHoriz' declared_type='Boolean' type='B'/>
    <arg name='scrollVert' declared_type='Boolean' type='B'/>
    <arg name='outList' declared_type='ListHandle*' type='^^^{ListRec}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateCustomMenu'>
    <arg name='inDefSpec' declared_type='MenuDefSpec*' type='^{MenuDefSpec=I(?=^?{?=^{__CFString}^{OpaqueEventRef}})}' const='true'/>
    <arg name='inMenuID' declared_type='MenuID' type='s'/>
    <arg name='inMenuAttributes' declared_type='MenuAttributes' type='L' type64='I'/>
    <arg name='outMenuRef' declared_type='MenuRef*' type='^^{OpaqueMenuRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateCustomWindow'>
    <arg name='def' declared_type='WindowDefSpec*' type='^{WindowDefSpec=I(?=^?^vs^v)}' const='true'/>
    <arg name='windowClass' declared_type='WindowClass' type='L' type64='I'/>
    <arg name='attributes' declared_type='WindowAttributes' type='L' type64='I'/>
    <arg name='contentBounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='outWindow' declared_type='WindowRef*' type='^^{OpaqueWindowPtr}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateDataBrowserControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='style' declared_type='DataBrowserViewStyle' type='L' type64='I'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateDisclosureButtonControl'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inBoundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inValue' declared_type='SInt32' type='l' type64='i'/>
    <arg name='inAutoToggles' declared_type='Boolean' type='B'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateDisclosureTriangleControl'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inBoundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inOrientation' declared_type='ControlDisclosureTriangleOrientation' type='S'/>
    <arg name='inTitle' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inInitialValue' declared_type='SInt32' type='l' type64='i'/>
    <arg name='inDrawTitle' declared_type='Boolean' type='B'/>
    <arg name='inAutoToggles' declared_type='Boolean' type='B'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateEditTextControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='text' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='isPassword' declared_type='Boolean' type='B'/>
    <arg name='useInlineInput' declared_type='Boolean' type='B'/>
    <arg name='style' declared_type='ControlFontStyleRec*' type='^{ControlFontStyleRec=ssssss{RGBColor=SSS}{RGBColor=SSS}}' const='true'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateEditUnicodeTextControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='text' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='isPassword' declared_type='Boolean' type='B'/>
    <arg name='style' declared_type='ControlFontStyleRec*' type='^{ControlFontStyleRec=ssssss{RGBColor=SSS}{RGBColor=SSS}}' const='true'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateGroupBoxControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='title' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='primary' declared_type='Boolean' type='B'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateIconControl'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inBoundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inIconContent' declared_type='ControlButtonContentInfo*' type='^{ControlButtonContentInfo=s(?=s^^{CIcon}^*^{OpaqueIconRef}^^{Picture}^*^{CGImage})}' const='true'/>
    <arg name='inDontTrack' declared_type='Boolean' type='B'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateImageWellControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='info' declared_type='ControlButtonContentInfo*' type='^{ControlButtonContentInfo=s(?=s^^{CIcon}^*^{OpaqueIconRef}^^{Picture}^*^{CGImage})}' const='true'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateListBoxControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='autoSize' declared_type='Boolean' type='B'/>
    <arg name='numRows' declared_type='SInt16' type='s'/>
    <arg name='numColumns' declared_type='SInt16' type='s'/>
    <arg name='horizScroll' declared_type='Boolean' type='B'/>
    <arg name='vertScroll' declared_type='Boolean' type='B'/>
    <arg name='cellHeight' declared_type='SInt16' type='s'/>
    <arg name='cellWidth' declared_type='SInt16' type='s'/>
    <arg name='hasGrowSpace' declared_type='Boolean' type='B'/>
    <arg name='listDef' declared_type='ListDefSpec*' type='^{ListDefSpec=I(?=^?)}' const='true'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateLittleArrowsControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='value' declared_type='SInt32' type='l' type64='i'/>
    <arg name='minimum' declared_type='SInt32' type='l' type64='i'/>
    <arg name='maximum' declared_type='SInt32' type='l' type64='i'/>
    <arg name='increment' declared_type='SInt32' type='l' type64='i'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateMenuBarFromNib'>
    <arg name='inNibRef' declared_type='IBNibRef' type='^{OpaqueIBNibRef=}'/>
    <arg name='inName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='outMenuBar' declared_type='Handle*' type='^^*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateMenuFromNib'>
    <arg name='inNibRef' declared_type='IBNibRef' type='^{OpaqueIBNibRef=}'/>
    <arg name='inName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='outMenuRef' declared_type='MenuRef*' type='^^{OpaqueMenuRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateMouseTrackingRegion'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inRegion' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='inClip' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='inOptions' declared_type='MouseTrackingOptions' type='L' type64='I'/>
    <arg name='inID' declared_type='MouseTrackingRegionID' type='{MouseTrackingRegionID=Ii}'/>
    <arg name='inRefCon' declared_type='void*' type='^v'/>
    <arg name='inTargetToNotify' declared_type='EventTargetRef' type='^{OpaqueEventTargetRef=}'/>
    <arg name='outTrackingRef' declared_type='MouseTrackingRef*' type='^^{OpaqueMouseTrackingRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateNewMenu'>
    <arg name='inMenuID' declared_type='MenuID' type='s'/>
    <arg name='inMenuAttributes' declared_type='MenuAttributes' type='L' type64='I'/>
    <arg name='outMenuRef' declared_type='MenuRef*' type='^^{OpaqueMenuRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateNewWindow'>
    <arg name='windowClass' declared_type='WindowClass' type='L' type64='I'/>
    <arg name='attributes' declared_type='WindowAttributes' type='L' type64='I'/>
    <arg name='contentBounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='outWindow' declared_type='WindowRef*' type='^^{OpaqueWindowPtr}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateNibReference'>
    <arg name='inNibName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='outNibRef' declared_type='IBNibRef*' type='^^{OpaqueIBNibRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateNibReferenceWithCFBundle'>
    <arg name='inBundle' declared_type='CFBundleRef' type='^{__CFBundle=}'/>
    <arg name='inNibName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='outNibRef' declared_type='IBNibRef*' type='^^{OpaqueIBNibRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreatePictureControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='content' declared_type='ControlButtonContentInfo*' type='^{ControlButtonContentInfo=s(?=s^^{CIcon}^*^{OpaqueIconRef}^^{Picture}^*^{CGImage})}' const='true'/>
    <arg name='dontTrack' declared_type='Boolean' type='B'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreatePlacardControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreatePopupArrowControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='orientation' declared_type='ControlPopupArrowOrientation' type='S'/>
    <arg name='size' declared_type='ControlPopupArrowSize' type='S'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreatePopupButtonControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='title' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='menuID' declared_type='SInt16' type='s'/>
    <arg name='variableWidth' declared_type='Boolean' type='B'/>
    <arg name='titleWidth' declared_type='SInt16' type='s'/>
    <arg name='titleJustification' declared_type='SInt16' type='s'/>
    <arg name='titleStyle' declared_type='Style' type='C'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreatePopupGroupBoxControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='title' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='primary' declared_type='Boolean' type='B'/>
    <arg name='menuID' declared_type='SInt16' type='s'/>
    <arg name='variableWidth' declared_type='Boolean' type='B'/>
    <arg name='titleWidth' declared_type='SInt16' type='s'/>
    <arg name='titleJustification' declared_type='SInt16' type='s'/>
    <arg name='titleStyle' declared_type='Style' type='C'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateProgressBarControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='value' declared_type='SInt32' type='l' type64='i'/>
    <arg name='minimum' declared_type='SInt32' type='l' type64='i'/>
    <arg name='maximum' declared_type='SInt32' type='l' type64='i'/>
    <arg name='indeterminate' declared_type='Boolean' type='B'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreatePushButtonControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='title' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreatePushButtonWithIconControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='title' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='icon' declared_type='ControlButtonContentInfo*' type='^{ControlButtonContentInfo=s(?=s^^{CIcon}^*^{OpaqueIconRef}^^{Picture}^*^{CGImage})}'/>
    <arg name='iconAlignment' declared_type='ControlPushButtonIconAlignment' type='S'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateQDContextForCollapsedWindowDockTile'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outContext' declared_type='CGrafPtr*' type='^^{OpaqueGrafPtr}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateRadioButtonControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='title' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='initialValue' declared_type='SInt32' type='l' type64='i'/>
    <arg name='autoToggle' declared_type='Boolean' type='B'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateRadioGroupControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateRelevanceBarControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='value' declared_type='SInt32' type='l' type64='i'/>
    <arg name='minimum' declared_type='SInt32' type='l' type64='i'/>
    <arg name='maximum' declared_type='SInt32' type='l' type64='i'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateRootControl'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='CreateRoundButtonControl'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inBoundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inSize' declared_type='ControlRoundButtonSize' type='s'/>
    <arg name='inContent' declared_type='ControlButtonContentInfo*' type='^{ControlButtonContentInfo=s(?=s^^{CIcon}^*^{OpaqueIconRef}^^{Picture}^*^{CGImage})}'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateScrollBarControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='value' declared_type='SInt32' type='l' type64='i'/>
    <arg name='minimum' declared_type='SInt32' type='l' type64='i'/>
    <arg name='maximum' declared_type='SInt32' type='l' type64='i'/>
    <arg name='viewSize' declared_type='SInt32' type='l' type64='i'/>
    <arg name='liveTracking' declared_type='Boolean' type='B'/>
    <arg name='liveTrackingProc' function_pointer='true' declared_type='ControlActionUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlPartCode' type='s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateScrollingTextBoxControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='contentResID' declared_type='SInt16' type='s'/>
    <arg name='autoScroll' declared_type='Boolean' type='B'/>
    <arg name='delayBeforeAutoScroll' declared_type='UInt32' type='L' type64='I'/>
    <arg name='delayBetweenAutoScroll' declared_type='UInt32' type='L' type64='I'/>
    <arg name='autoScrollAmount' declared_type='UInt16' type='S'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateSeparatorControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateSliderControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='value' declared_type='SInt32' type='l' type64='i'/>
    <arg name='minimum' declared_type='SInt32' type='l' type64='i'/>
    <arg name='maximum' declared_type='SInt32' type='l' type64='i'/>
    <arg name='orientation' declared_type='ControlSliderOrientation' type='S'/>
    <arg name='numTickMarks' declared_type='UInt16' type='S'/>
    <arg name='liveTracking' declared_type='Boolean' type='B'/>
    <arg name='liveTrackingProc' function_pointer='true' declared_type='ControlActionUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlPartCode' type='s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateStandardAlert'>
    <arg name='alertType' declared_type='AlertType' type='s'/>
    <arg name='error' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='explanation' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='param' declared_type='AlertStdCFStringAlertParamRec*' type='^{AlertStdCFStringAlertParamRec=IBB^{__CFString}^{__CFString}^{__CFString}ssSI}' const='true'/>
    <arg name='outAlert' declared_type='DialogRef*' type='^^{OpaqueDialogPtr}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateStandardFontMenu'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='afterItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='firstHierMenuID' declared_type='MenuID' type='s'/>
    <arg name='options' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='outHierMenuCount' declared_type='ItemCount*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateStandardSheet'>
    <arg name='alertType' declared_type='AlertType' type='s'/>
    <arg name='error' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='explanation' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='param' declared_type='AlertStdCFStringAlertParamRec*' type='^{AlertStdCFStringAlertParamRec=IBB^{__CFString}^{__CFString}^{__CFString}ssSI}' const='true'/>
    <arg name='notifyTarget' declared_type='EventTargetRef' type='^{OpaqueEventTargetRef=}'/>
    <arg name='outSheet' declared_type='DialogRef*' type='^^{OpaqueDialogPtr}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateStandardWindowMenu'>
    <arg name='inOptions' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='outMenu' declared_type='MenuRef*' type='^^{OpaqueMenuRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateStaticTextControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='text' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='style' declared_type='ControlFontStyleRec*' type='^{ControlFontStyleRec=ssssss{RGBColor=SSS}{RGBColor=SSS}}' const='true'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateTabsControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='size' declared_type='ControlTabSize' type='S'/>
    <arg name='direction' declared_type='ControlTabDirection' type='S'/>
    <arg name='numTabs' declared_type='UInt16' type='S'/>
    <arg name='tabArray' declared_type='ControlTabEntry*' type='^{ControlTabEntry=^{ControlButtonContentInfo}^{__CFString}B}' const='true'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateTypeStringWithOSType'>
    <arg name='inType' declared_type='OSType' type='L' type64='I'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='CreateUserPaneControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='features' declared_type='UInt32' type='L' type64='I'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateWindowFromCollection'>
    <arg name='collection' declared_type='Collection' type='^{OpaqueCollection=}'/>
    <arg name='outWindow' declared_type='WindowRef*' type='^^{OpaqueWindowPtr}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateWindowFromNib'>
    <arg name='inNibRef' declared_type='IBNibRef' type='^{OpaqueIBNibRef=}'/>
    <arg name='inName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='outWindow' declared_type='WindowRef*' type='^^{OpaqueWindowPtr}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateWindowFromResource'>
    <arg name='resID' declared_type='SInt16' type='s'/>
    <arg name='outWindow' declared_type='WindowRef*' type='^^{OpaqueWindowPtr}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateWindowGroup'>
    <arg name='inAttributes' declared_type='WindowGroupAttributes' type='L' type64='I'/>
    <arg name='outGroup' declared_type='WindowGroupRef*' type='^^{OpaqueWindowGroupRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='CreateWindowHeaderControl'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='isListHeader' declared_type='Boolean' type='B'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DataBrowserChangeAttributes'>
    <arg name='inDataBrowser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inAttributesToSet' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='inAttributesToClear' declared_type='OptionBits' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DataBrowserGetAttributes'>
    <arg name='inDataBrowser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='outAttributes' declared_type='OptionBits*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DataBrowserGetMetric'>
    <arg name='inDataBrowser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inMetric' declared_type='DataBrowserMetric' type='L' type64='I'/>
    <arg name='outUsingDefaultValue' declared_type='Boolean*' type='^B'/>
    <arg name='outValue' declared_type='float*' type='^f'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DataBrowserSetMetric'>
    <arg name='inDataBrowser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inMetric' declared_type='DataBrowserMetric' type='L' type64='I'/>
    <arg name='inUseDefaultValue' declared_type='Boolean' type='B'/>
    <arg name='inValue' declared_type='float' type='f'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DeactivateControl'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='DeactivateTSMDocument'>
    <arg name='idocID' declared_type='TSMDocumentID' type='^{OpaqueTSMDocumentID=}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='DeactivateTextService'>
    <arg name='ts' declared_type='ComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
    <retval declared_type='ComponentResult' type='l' type64='q'/>
  </function>
  <function name='DebugPrintAllWindowGroups'>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DebugPrintWindowGroup'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DeleteMCEntries'>
    <arg name='menuID' declared_type='MenuID' type='s'/>
    <arg name='menuItem' declared_type='short' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DeleteMenuItem'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DeleteMenuItems'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inFirstItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='inNumItems' declared_type='ItemCount' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DeleteTSMDocument'>
    <arg name='idocID' declared_type='TSMDocumentID' type='^{OpaqueTSMDocumentID=}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='DeselectTextService'>
    <arg name='aComp' declared_type='Component' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DetachSheetWindow'>
    <arg name='inSheet' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DialogCopy'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DialogCut'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DialogDelete'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DialogPaste'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DialogSelect'>
    <arg name='theEvent' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}' const='true'/>
    <arg name='theDialog' declared_type='DialogRef*' type='^^{OpaqueDialogPtr}'/>
    <arg name='itemHit' declared_type='DialogItemIndex*' type='^s'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='DisableAllMenuItems'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisableControl'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DisableMenuCommand'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inCommandID' declared_type='MenuCommand' type='L' type64='I'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisableMenuItem'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisableMenuItemIcon'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisableScreenUpdates'>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DisableSecureEventInput'>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DisposeAEFilterUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='AEFilterUPP' type='^?'>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='AEAddressDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeAEIdleUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='AEIdleUPP' type='^?'>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='long*' type='^l' type64='^q'/>
      <arg declared_type='RgnHandle*' type='^^{OpaqueRgnHandle}'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeCaretHookUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='CaretHookUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeControl'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeControlActionUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ControlActionUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlPartCode' type='s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeControlCNTLToCollectionUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ControlCNTLToCollectionUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <arg declared_type='ConstStr255Param' type='*'/>
      <arg declared_type='Collection' type='^{OpaqueCollection=}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeControlColorUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ControlColorUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeControlDefUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ControlDefUPP' type='^?'>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlDefProcMessage' type='s'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <retval declared_type='SInt32' type='l' type64='i'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeControlEditTextValidationUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ControlEditTextValidationUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeControlKeyFilterUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ControlKeyFilterUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='SInt16*' type='^s'/>
      <arg declared_type='SInt16*' type='^s'/>
      <arg declared_type='EventModifiers*' type='^S'/>
      <retval declared_type='ControlKeyFilterResult' type='s'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeControlUserPaneActivateUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ControlUserPaneActivateUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeControlUserPaneBackgroundUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ControlUserPaneBackgroundUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlBackgroundPtr' type='^{ControlBackgroundRec=sB}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeControlUserPaneDrawUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ControlUserPaneDrawUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='SInt16' type='s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeControlUserPaneFocusUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ControlUserPaneFocusUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlFocusPart' type='s'/>
      <retval declared_type='ControlPartCode' type='s'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeControlUserPaneHitTestUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ControlUserPaneHitTestUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <retval declared_type='ControlPartCode' type='s'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeControlUserPaneIdleUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ControlUserPaneIdleUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeControlUserPaneKeyDownUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ControlUserPaneKeyDownUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <retval declared_type='ControlPartCode' type='s'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeControlUserPaneTrackingUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ControlUserPaneTrackingUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='ControlActionUPP' type='^?'/>
      <retval declared_type='ControlPartCode' type='s'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDataBrowserAcceptDragUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserAcceptDragUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDataBrowserAddDragItemUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserAddDragItemUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='ItemReference*' type='^I'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDataBrowserDrawItemUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserDrawItemUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemState' type='L' type64='I'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDataBrowserEditItemUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserEditItemUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}'/>
      <arg declared_type='Boolean*' type='^B'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDataBrowserGetContextualMenuUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserGetContextualMenuUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='MenuRef*' type='^^{OpaqueMenuRef}'/>
      <arg declared_type='UInt32*' type='^I'/>
      <arg declared_type='CFStringRef*' type='^^{__CFString}'/>
      <arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDataBrowserHitTestUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserHitTestUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDataBrowserItemAcceptDragUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserItemAcceptDragUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <retval declared_type='DataBrowserDragFlags' type='L' type64='Q'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDataBrowserItemCompareUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserItemCompareUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDataBrowserItemDataUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserItemDataUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemDataRef' type='@'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDataBrowserItemDragRgnUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserItemDragRgnUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDataBrowserItemHelpContentUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserItemHelpContentUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDataBrowserItemNotificationUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserItemNotificationUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemNotification' type='L' type64='I'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDataBrowserItemNotificationWithItemUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserItemNotificationWithItemUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemNotification' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemDataRef' type='@'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDataBrowserItemReceiveDragUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserItemReceiveDragUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='DataBrowserDragFlags' type='L' type64='Q'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDataBrowserItemUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserItemUPP' type='^?'>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemState' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDataBrowserPostProcessDragUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserPostProcessDragUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <arg declared_type='OSStatus' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDataBrowserReceiveDragUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserReceiveDragUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDataBrowserSelectContextualMenuUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserSelectContextualMenuUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='MenuItemIndex' type='S'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDataBrowserTrackingUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserTrackingUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='EventModifiers' type='S'/>
      <retval declared_type='DataBrowserTrackingResult' type='s'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDialog'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDrag'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='DisposeDragDrawingUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DragDrawingUPP' type='^?'>
      <arg declared_type='DragRegionMessage' type='s'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDragInputUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DragInputUPP' type='^?'>
      <arg declared_type='Point*' type='^{Point=ss}'/>
      <arg declared_type='SInt16*' type='^s'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDragReceiveHandlerUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DragReceiveHandlerUPP' type='^?'>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDragSendDataUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DragSendDataUPP' type='^?'>
      <arg declared_type='FlavorType' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragItemRef' type='L' type64='I'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDragTrackingHandlerUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DragTrackingHandlerUPP' type='^?'>
      <arg declared_type='DragTrackingMessage' type='s'/>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeDrawHookUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='DrawHookUPP' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeEOLHookUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='EOLHookUPP' type='^?'>
      <arg declared_type='char' type='c'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeEditUnicodePostUpdateUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='EditUnicodePostUpdateUPP' type='^?'>
      <arg declared_type='UniCharArrayHandle' type='^^S'/>
      <arg declared_type='UniCharCount' type='L' type64='I'/>
      <arg declared_type='UniCharArrayOffset' type='L' type64='I'/>
      <arg declared_type='UniCharArrayOffset' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeEventComparatorUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='EventComparatorUPP' type='^?'>
      <arg declared_type='EventRef' type='^{OpaqueEventRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeEventHandlerUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='EventHandlerUPP' type='^?'>
      <arg declared_type='EventHandlerCallRef' type='^{OpaqueEventHandlerCallRef=}'/>
      <arg declared_type='EventRef' type='^{OpaqueEventRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeEventLoopIdleTimerUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='EventLoopIdleTimerUPP' type='^?'>
      <arg declared_type='EventLoopTimerRef' type='^{__EventLoopTimer=}'/>
      <arg declared_type='EventLoopIdleTimerMessage' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeEventLoopTimerUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='EventLoopTimerUPP' type='^?'>
      <arg declared_type='EventLoopTimerRef' type='^{__EventLoopTimer=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeGetScrapDataUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='GetScrapDataUPP' type='^?'>
      <arg declared_type='ScrapType' type='L' type64='I'/>
      <arg declared_type='Handle' type='^*'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeHMControlContentUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='HMControlContentUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeHMMenuItemContentUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='HMMenuItemContentUPP' type='^?'>
      <arg declared_type='MenuTrackingData*' type='^{MenuTrackingData=^{OpaqueMenuRef}SS{Rect=ssss}ii}' const='true'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeHMMenuTitleContentUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='HMMenuTitleContentUPP' type='^?'>
      <arg declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeHMWindowContentUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='HMWindowContentUPP' type='^?'>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeHighHookUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='HighHookUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeHitTestHookUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='HitTestHookUPP' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='Boolean*' type='^B'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeIndexToStringUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='IndexToStringUPP' type='^?'>
      <arg declared_type='short' type='s'/>
      <arg declared_type='ScriptCode*' type='^s'/>
      <arg declared_type='StringPtr*' type='^*'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeListClickLoopUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ListClickLoopUPP' type='^?'>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeListDefUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ListDefUPP' type='^?'>
      <arg declared_type='short' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}'/>
      <arg declared_type='Cell' type='{Point=ss}'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='ListHandle' type='^^{ListRec}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeListSearchUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ListSearchUPP' type='^?'>
      <arg declared_type='Ptr' type='*'/>
      <arg declared_type='Ptr' type='*'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='short' type='s'/>
      <retval declared_type='short' type='s'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeMCInfo'>
    <arg name='menuCTbl' declared_type='MCTableHandle' type='^^{MCEntry}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeMenu'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeMenuBar'>
    <arg name='inMbar' declared_type='MenuBarHandle' type='^*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DisposeMenuDefUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='MenuDefUPP' type='^?'>
      <arg declared_type='short' type='s'/>
      <arg declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='short*' type='^s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeMenuItemDrawingUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='MenuItemDrawingUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeMenuTitleDrawingUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='MenuTitleDrawingUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeModalFilterUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ModalFilterUPP' type='^?'>
      <arg declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='DialogItemIndex*' type='^s'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeModalFilterYDUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ModalFilterYDUPP' type='^?'>
      <arg declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='short*' type='^s'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeNMUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='NMUPP' type='^?'>
      <arg declared_type='NMRecPtr' type='^{NMRec=^{QElem}sslss^*^**^?l}' type64='^{NMRec=^{QElem}ssqss^*^**^?q}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeNWidthHookUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='NWidthHookUPP' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='short*' type='^s'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <retval declared_type='unsigned short' type='S'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeNibReference'>
    <arg name='inNibRef' declared_type='IBNibRef' type='^{OpaqueIBNibRef=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeScrapPromiseKeeperUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ScrapPromiseKeeperUPP' type='^?'>
      <arg declared_type='ScrapRef' type='^{OpaqueScrapRef=}'/>
      <arg declared_type='ScrapFlavorType' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeTEClickLoopUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='TEClickLoopUPP' type='^?'>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeTEDoTextUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='TEDoTextUPP' type='^?'>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='GrafPtr*' type='^^{OpaqueGrafPtr}'/>
      <arg declared_type='short*' type='^s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeTEFindWordUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='TEFindWordUPP' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeTERecalcUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='TERecalcUPP' type='^?'>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeTSMTEPostUpdateUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='TSMTEPostUpdateUPP' type='^?'>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeTSMTEPreUpdateUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='TSMTEPreUpdateUPP' type='^?'>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <arg declared_type='long' type='l' type64='q'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeTXNActionKeyMapperUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='TXNActionKeyMapperUPP' type='^?'>
      <arg declared_type='TXNActionKey' type='L' type64='I'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='CFStringRef' type='^{__CFString=}'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeTXNActionNameMapperUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='TXNActionNameMapperUPP' type='^?'>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='CFStringRef' type='^{__CFString=}'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeTXNContextualMenuSetupUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='TXNContextualMenuSetupUPP' type='^?'>
      <arg declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
      <arg declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeTXNFindUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='TXNFindUPP' type='^?'>
      <arg declared_type='TXNMatchTextRecord*' type='^{TXNMatchTextRecord=^viI}' const='true'/>
      <arg declared_type='TXNDataType' type='L' type64='I'/>
      <arg declared_type='TXNMatchOptions' type='L' type64='I'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='TextEncoding' type='L' type64='I'/>
      <arg declared_type='TXNOffset' type='L' type64='I'/>
      <arg declared_type='ByteCount' type='L' type64='I'/>
      <arg declared_type='TXNOffset*' type='^I'/>
      <arg declared_type='TXNOffset*' type='^I'/>
      <arg declared_type='Boolean*' type='^B'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeTXNScrollInfoUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='TXNScrollInfoUPP' type='^?'>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <arg declared_type='TXNScrollBarOrientation' type='L' type64='I'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeTextWidthHookUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='TextWidthHookUPP' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <retval declared_type='unsigned short' type='S'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeThemeButtonDrawUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ThemeButtonDrawUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='ThemeButtonKind' type='S'/>
      <arg declared_type='ThemeButtonDrawInfo*' type='^{ThemeButtonDrawInfo=ISS}' const='true'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeThemeDrawingState'>
    <arg name='inState' declared_type='ThemeDrawingState' type='^{OpaqueThemeDrawingState=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DisposeThemeEraseUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ThemeEraseUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeThemeIteratorUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ThemeIteratorUPP' type='^?'>
      <arg declared_type='ConstStr255Param' type='*'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Collection' type='^{OpaqueCollection=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeThemeTabTitleDrawUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ThemeTabTitleDrawUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='ThemeTabStyle' type='S'/>
      <arg declared_type='ThemeTabDirection' type='S'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeUserItemUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='UserItemUPP' type='^?'>
      <arg declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
      <arg declared_type='DialogItemIndex' type='s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeWidthHookUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='WidthHookUPP' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <retval declared_type='unsigned short' type='S'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeWindow'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeWindowDefUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='WindowDefUPP' type='^?'>
      <arg declared_type='short' type='s'/>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='long' type='l' type64='q'/>
      <retval declared_type='long' type='l' type64='q'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeWindowPaintUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='WindowPaintUPP' type='^?'>
      <arg declared_type='GDHandle' type='^^{GDevice}'/>
      <arg declared_type='GrafPtr' type='^{OpaqueGrafPtr=}'/>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DisposeWindowTitleDrawingUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='WindowTitleDrawingUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DragControl'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='startPoint' declared_type='Point' type='{Point=ss}'/>
    <arg name='limitRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='slopRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='axis' declared_type='DragConstraint' type='S'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DragGrayRgn'>
    <arg name='theRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='startPt' declared_type='Point' type='{Point=ss}'/>
    <arg name='limitRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='slopRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='axis' declared_type='short' type='s'/>
    <arg name='actionProc' function_pointer='true' declared_type='DragGrayRgnUPP' type='^?'>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='long' type='l' type64='q'/>
  </function>
  <function name='DragPostScroll'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='DragPreScroll'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='dH' declared_type='SInt16' type='s'/>
    <arg name='dV' declared_type='SInt16' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='DragTheRgn'>
    <arg name='theRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='startPt' declared_type='Point' type='{Point=ss}'/>
    <arg name='limitRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='slopRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='axis' declared_type='short' type='s'/>
    <arg name='actionProc' function_pointer='true' declared_type='DragGrayRgnUPP' type='^?'>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='long' type='l' type64='q'/>
  </function>
  <function name='DragWindow'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='startPt' declared_type='Point' type='{Point=ss}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='Draw1Control'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DrawControlInCurrentPort'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DrawControls'>
    <arg name='theWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DrawDialog'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DrawGrowIcon'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='DrawThemeButton'>
    <arg name='inBounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inKind' declared_type='ThemeButtonKind' type='S'/>
    <arg name='inNewInfo' declared_type='ThemeButtonDrawInfo*' type='^{ThemeButtonDrawInfo=ISS}' const='true'/>
    <arg name='inPrevInfo' declared_type='ThemeButtonDrawInfo*' type='^{ThemeButtonDrawInfo=ISS}' const='true'/>
    <arg name='inEraseProc' function_pointer='true' declared_type='ThemeEraseUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inLabelProc' function_pointer='true' declared_type='ThemeButtonDrawUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='ThemeButtonKind' type='S'/>
      <arg declared_type='ThemeButtonDrawInfo*' type='^{ThemeButtonDrawInfo=ISS}' const='true'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserData' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeChasingArrows'>
    <arg name='bounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='index' declared_type='UInt32' type='L' type64='I'/>
    <arg name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <arg name='eraseProc' function_pointer='true' declared_type='ThemeEraseUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='eraseData' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeEditTextFrame'>
    <arg name='inRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inState' declared_type='ThemeDrawState' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeFocusRect'>
    <arg name='inRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inHasFocus' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeFocusRegion'>
    <arg name='inRegion' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='inHasFocus' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeGenericWell'>
    <arg name='inRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inState' declared_type='ThemeDrawState' type='L' type64='I'/>
    <arg name='inFillCenter' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeListBoxFrame'>
    <arg name='inRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inState' declared_type='ThemeDrawState' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeMenuBackground'>
    <arg name='inMenuRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inMenuType' declared_type='ThemeMenuType' type='S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeMenuBarBackground'>
    <arg name='inBounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inState' declared_type='ThemeMenuBarState' type='S'/>
    <arg name='inAttributes' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeMenuItem'>
    <arg name='inMenuRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inItemRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inVirtualMenuTop' declared_type='SInt16' type='s'/>
    <arg name='inVirtualMenuBottom' declared_type='SInt16' type='s'/>
    <arg name='inState' declared_type='ThemeMenuState' type='S'/>
    <arg name='inItemType' declared_type='ThemeMenuItemType' type='S'/>
    <arg name='inDrawProc' function_pointer='true' declared_type='MenuItemDrawingUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inUserData' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeMenuSeparator'>
    <arg name='inItemRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeMenuTitle'>
    <arg name='inMenuBarRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inTitleRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inState' declared_type='ThemeMenuState' type='S'/>
    <arg name='inAttributes' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inTitleProc' function_pointer='true' declared_type='MenuTitleDrawingUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inTitleData' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeModelessDialogFrame'>
    <arg name='inRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inState' declared_type='ThemeDrawState' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemePlacard'>
    <arg name='inRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inState' declared_type='ThemeDrawState' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemePopupArrow'>
    <arg name='bounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='orientation' declared_type='ThemeArrowOrientation' type='S'/>
    <arg name='size' declared_type='ThemePopupArrowSize' type='S'/>
    <arg name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <arg name='eraseProc' function_pointer='true' declared_type='ThemeEraseUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='eraseData' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemePrimaryGroup'>
    <arg name='inRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inState' declared_type='ThemeDrawState' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeScrollBarArrows'>
    <arg name='bounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='enableState' declared_type='ThemeTrackEnableState' type='C'/>
    <arg name='pressState' declared_type='ThemeTrackPressState' type='C'/>
    <arg name='isHoriz' declared_type='Boolean' type='B'/>
    <arg name='trackBounds' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeScrollBarDelimiters'>
    <arg name='flavor' declared_type='ThemeWindowType' type='S'/>
    <arg name='inContRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <arg name='attributes' declared_type='ThemeWindowAttributes' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeSecondaryGroup'>
    <arg name='inRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inState' declared_type='ThemeDrawState' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeSeparator'>
    <arg name='inRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inState' declared_type='ThemeDrawState' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeStandaloneGrowBox'>
    <arg name='origin' declared_type='Point' type='{Point=ss}'/>
    <arg name='growDirection' declared_type='ThemeGrowDirection' type='S'/>
    <arg name='isSmall' declared_type='Boolean' type='B'/>
    <arg name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeStandaloneNoGrowBox'>
    <arg name='origin' declared_type='Point' type='{Point=ss}'/>
    <arg name='growDirection' declared_type='ThemeGrowDirection' type='S'/>
    <arg name='isSmall' declared_type='Boolean' type='B'/>
    <arg name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeTab'>
    <arg name='inRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inStyle' declared_type='ThemeTabStyle' type='S'/>
    <arg name='inDirection' declared_type='ThemeTabDirection' type='S'/>
    <arg name='labelProc' function_pointer='true' declared_type='ThemeTabTitleDrawUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='ThemeTabStyle' type='S'/>
      <arg declared_type='ThemeTabDirection' type='S'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='userData' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeTabPane'>
    <arg name='inRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inState' declared_type='ThemeDrawState' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeTextBox'>
    <arg name='inString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inFontID' declared_type='ThemeFontID' type='S'/>
    <arg name='inState' declared_type='ThemeDrawState' type='L' type64='I'/>
    <arg name='inWrapToWidth' declared_type='Boolean' type='B'/>
    <arg name='inBoundingBox' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inJust' declared_type='SInt16' type='s'/>
    <arg name='inContext' declared_type='void*' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeTickMark'>
    <arg name='bounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeTitleBarWidget'>
    <arg name='flavor' declared_type='ThemeWindowType' type='S'/>
    <arg name='contRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <arg name='metrics' declared_type='ThemeWindowMetrics*' type='^{ThemeWindowMetrics=SssssS}' const='true'/>
    <arg name='attributes' declared_type='ThemeWindowAttributes' type='L' type64='I'/>
    <arg name='widget' declared_type='ThemeTitleBarWidget' type='S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeTrack'>
    <arg name='drawInfo' declared_type='ThemeTrackDrawInfo*' type='^{ThemeTrackDrawInfo=S{Rect=ssss}iiiISCC(?={ScrollBarTrackInfo=iC}{SliderTrackInfo=CC}{ProgressTrackInfo=C})}' const='true'/>
    <arg name='rgnGhost' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='eraseProc' function_pointer='true' declared_type='ThemeEraseUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='eraseData' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeTrackTickMarks'>
    <arg name='drawInfo' declared_type='ThemeTrackDrawInfo*' type='^{ThemeTrackDrawInfo=S{Rect=ssss}iiiISCC(?={ScrollBarTrackInfo=iC}{SliderTrackInfo=CC}{ProgressTrackInfo=C})}' const='true'/>
    <arg name='numTicks' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='eraseProc' function_pointer='true' declared_type='ThemeEraseUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='eraseData' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeWindowFrame'>
    <arg name='flavor' declared_type='ThemeWindowType' type='S'/>
    <arg name='contRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <arg name='metrics' declared_type='ThemeWindowMetrics*' type='^{ThemeWindowMetrics=SssssS}' const='true'/>
    <arg name='attributes' declared_type='ThemeWindowAttributes' type='L' type64='I'/>
    <arg name='titleProc' function_pointer='true' declared_type='WindowTitleDrawingUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='titleData' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeWindowHeader'>
    <arg name='inRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inState' declared_type='ThemeDrawState' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DrawThemeWindowListViewHeader'>
    <arg name='inRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inState' declared_type='ThemeDrawState' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DumpControlHierarchy'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inDumpFile' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}' const='true'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='DuplicateMenu'>
    <arg name='inSourceMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='outMenu' declared_type='MenuRef*' type='^^{OpaqueMenuRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='DuplicateMenuBar'>
    <arg name='inMbar' declared_type='MenuBarHandle' type='^*'/>
    <arg name='outMbar' declared_type='MenuBarHandle*' type='^^*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='EmbedControl'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inContainer' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='EnableAllMenuItems'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='EnableControl'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='EnableDataBrowserEditCommand'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='command' declared_type='DataBrowserEditCommand' type='L' type64='I'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='EnableMenuCommand'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inCommandID' declared_type='MenuCommand' type='L' type64='I'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='EnableMenuItemIcon'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='EnableScreenUpdates'>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='EnableSecureEventInput'>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='EndAppModalStateForWindow'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='EndCGContextForApplicationDockTile'>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='EndQDContextForApplicationDockTile'>
    <arg name='inContext' declared_type='CGrafPtr' type='^{OpaqueGrafPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='EndThemeDragSound'>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='EndUpdate'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='EndWindowProxyDrag'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='theDrag' declared_type='DragReference' type='^{OpaqueDragRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='EraseMenuBackground'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inEraseRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='EventAvail'>
    <arg name='eventMask' declared_type='EventMask' type='S'/>
    <arg name='theEvent' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='ExecuteDataBrowserEditCommand'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='command' declared_type='DataBrowserEditCommand' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ExtendFileTypeList'>
    <arg name='originalTypeList' declared_type='FileType*' type='^I' const='true'/>
    <arg name='numberOriginalTypes' declared_type='short' type='s'/>
    <arg name='extendedTypeList' declared_type='FileType*' type='^I'/>
    <arg name='numberExtendedTypes' declared_type='short*' type='^s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='FindControl'>
    <arg name='testPoint' declared_type='Point' type='{Point=ss}'/>
    <arg name='theWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='theControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='ControlPartCode' type='s'/>
  </function>
  <function name='FindControlUnderMouse'>
    <arg name='inWhere' declared_type='Point' type='{Point=ss}'/>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outPart' declared_type='ControlPartCode*' type='^s'/>
    <retval declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
  </function>
  <function name='FindDialogItem'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='thePt' declared_type='Point' type='{Point=ss}'/>
    <retval declared_type='DialogItemIndexZeroBased' type='s'/>
  </function>
  <function name='FindSpecificEventInQueue'>
    <arg name='inQueue' declared_type='EventQueueRef' type='^{OpaqueEventQueueRef=}'/>
    <arg name='inComparator' function_pointer='true' declared_type='EventComparatorUPP' type='^?'>
      <arg declared_type='EventRef' type='^{OpaqueEventRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <arg name='inCompareData' declared_type='void*' type='^v'/>
    <retval declared_type='EventRef' type='^{OpaqueEventRef=}'/>
  </function>
  <function name='FindWindowOfClass'>
    <arg name='where' declared_type='Point*' type='^{Point=ss}' const='true'/>
    <arg name='inWindowClass' declared_type='WindowClass' type='L' type64='I'/>
    <arg name='outWindow' declared_type='WindowRef*' type='^^{OpaqueWindowPtr}'/>
    <arg name='outWindowPart' declared_type='WindowPartCode*' type='^s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='FixTSMDocument'>
    <arg name='idocID' declared_type='TSMDocumentID' type='^{OpaqueTSMDocumentID=}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='FixTextService'>
    <arg name='ts' declared_type='ComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
    <retval declared_type='ComponentResult' type='l' type64='q'/>
  </function>
  <function name='FlashMenuBar'>
    <arg name='menuID' declared_type='MenuID' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='FlushEventQueue'>
    <arg name='inQueue' declared_type='EventQueueRef' type='^{OpaqueEventQueueRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='FlushEvents'>
    <arg name='whichMask' declared_type='EventMask' type='S'/>
    <arg name='stopMask' declared_type='EventMask' type='S'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='FlushEventsMatchingListFromQueue'>
    <arg name='inQueue' declared_type='EventQueueRef' type='^{OpaqueEventQueueRef=}'/>
    <arg name='inNumTypes' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inList' declared_type='EventTypeSpec*' type='^{EventTypeSpec=II}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='FlushSpecificEventsFromQueue'>
    <arg name='inQueue' declared_type='EventQueueRef' type='^{OpaqueEventQueueRef=}'/>
    <arg name='inComparator' function_pointer='true' declared_type='EventComparatorUPP' type='^?'>
      <arg declared_type='EventRef' type='^{OpaqueEventRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <arg name='inCompareData' declared_type='void*' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ForEachDataBrowserItem'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='container' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='recurse' declared_type='Boolean' type='B'/>
    <arg name='state' declared_type='DataBrowserItemState' type='L' type64='I'/>
    <arg name='callback' function_pointer='true' declared_type='DataBrowserItemUPP' type='^?'>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemState' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='clientData' declared_type='void*' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='FrontNonFloatingWindow'>
    <retval declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
  </function>
  <function name='FrontWindow'>
    <retval declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
  </function>
  <function name='GetAlertStage'>
    <retval declared_type='SInt16' type='s'/>
  </function>
  <function name='GetApplicationDockTileMenu'>
    <retval declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
  </function>
  <function name='GetApplicationEventTarget'>
    <retval declared_type='EventTargetRef' type='^{OpaqueEventTargetRef=}'/>
  </function>
  <function name='GetApplicationScript'>
    <retval declared_type='ScriptCode' type='s'/>
  </function>
  <function name='GetApplicationTextEncoding'>
    <retval declared_type='TextEncoding' type='L' type64='I'/>
  </function>
  <function name='GetAvailableWindowAttributes'>
    <arg name='inClass' declared_type='WindowClass' type='L' type64='I'/>
    <retval declared_type='WindowAttributes' type='L' type64='I'/>
  </function>
  <function name='GetAvailableWindowPositioningBounds'>
    <arg name='inDevice' declared_type='GDHandle' type='^^{GDevice}'/>
    <arg name='outAvailableRect' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetAvailableWindowPositioningRegion'>
    <arg name='inDevice' declared_type='GDHandle' type='^^{GDevice}'/>
    <arg name='ioRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetBestControlRect'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='outRect' declared_type='Rect*' type='^{Rect=ssss}'/>
    <arg name='outBaseLineOffset' declared_type='SInt16*' type='^s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetBevelButtonContentInfo'>
    <arg name='inButton' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='outContent' declared_type='ControlButtonContentInfoPtr' type='^{ControlButtonContentInfo=s(?=s^^{CIcon}^*^{OpaqueIconRef}^^{Picture}^*^{CGImage})}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetBevelButtonMenuHandle'>
    <arg name='inButton' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='outHandle' declared_type='MenuHandle*' type='^^{OpaqueMenuRef}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetBevelButtonMenuValue'>
    <arg name='inButton' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='outValue' declared_type='SInt16*' type='^s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetCFRunLoopFromEventLoop'>
    <arg name='inEventLoop' declared_type='EventLoopRef' type='^{OpaqueEventLoopRef=}'/>
    <retval declared_type='CFTypeRef' type='@'/>
  </function>
  <function name='GetCaretTime'>
    <retval declared_type='UInt32' type='L' type64='I'/>
  </function>
  <function name='GetControl32BitMaximum'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='SInt32' type='l' type64='i'/>
  </function>
  <function name='GetControl32BitMinimum'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='SInt32' type='l' type64='i'/>
  </function>
  <function name='GetControl32BitValue'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='SInt32' type='l' type64='i'/>
  </function>
  <function name='GetControlAction'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval function_pointer='true' declared_type='ControlActionUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlPartCode' type='s'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='GetControlBounds'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='bounds' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='Rect*' type='^{Rect=ssss}'/>
  </function>
  <function name='GetControlByID'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inID' declared_type='ControlID*' type='^{ControlID=Ii}' const='true'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetControlClickActivation'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inWhere' declared_type='Point' type='{Point=ss}'/>
    <arg name='inModifiers' declared_type='EventModifiers' type='S'/>
    <arg name='outResult' declared_type='ClickActivationResult*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetControlCommandID'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='outCommandID' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetControlData'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inPart' declared_type='ControlPartCode' type='s'/>
    <arg name='inTagName' declared_type='ResType' type='L' type64='I'/>
    <arg name='inBufferSize' declared_type='Size' type='l' type64='q'/>
    <arg name='inBuffer' declared_type='void*' type='^v'/>
    <arg name='outActualSize' declared_type='Size*' type='^i' type64='^q'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetControlDataHandle'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='Handle' type='^*'/>
  </function>
  <function name='GetControlDataSize'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inPart' declared_type='ControlPartCode' type='s'/>
    <arg name='inTagName' declared_type='ResType' type='L' type64='I'/>
    <arg name='outMaxSize' declared_type='Size*' type='^i' type64='^q'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetControlEventTarget'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='EventTargetRef' type='^{OpaqueEventTargetRef=}'/>
  </function>
  <function name='GetControlFeatures'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='outFeatures' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetControlHilite'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='UInt16' type='S'/>
  </function>
  <function name='GetControlID'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='outID' declared_type='ControlID*' type='^{ControlID=Ii}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetControlKind'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='outControlKind' declared_type='ControlKind*' type='^{ControlKind=II}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetControlMaximum'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='SInt16' type='s'/>
  </function>
  <function name='GetControlMinimum'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='SInt16' type='s'/>
  </function>
  <function name='GetControlOwner'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
  </function>
  <function name='GetControlPopupMenuHandle'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
  </function>
  <function name='GetControlPopupMenuID'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='short' type='s'/>
  </function>
  <function name='GetControlProperty'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='propertyCreator' declared_type='OSType' type='L' type64='I'/>
    <arg name='propertyTag' declared_type='OSType' type='L' type64='I'/>
    <arg name='bufferSize' declared_type='UInt32' type='L' type64='I'/>
    <arg name='actualSize' declared_type='UInt32*' type='^I'/>
    <arg name='propertyBuffer' declared_type='void*' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetControlPropertyAttributes'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='propertyCreator' declared_type='OSType' type='L' type64='I'/>
    <arg name='propertyTag' declared_type='OSType' type='L' type64='I'/>
    <arg name='attributes' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetControlPropertySize'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='propertyCreator' declared_type='OSType' type='L' type64='I'/>
    <arg name='propertyTag' declared_type='OSType' type='L' type64='I'/>
    <arg name='size' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetControlReference'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='SInt32' type='l' type64='i'/>
  </function>
  <function name='GetControlRegion'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inPart' declared_type='ControlPartCode' type='s'/>
    <arg name='outRegion' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetControlTitle'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='title' declared_type='unsigned char*' type='*'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='GetControlValue'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='SInt16' type='s'/>
  </function>
  <function name='GetControlVariant'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='ControlVariant' type='s'/>
  </function>
  <function name='GetControlViewSize'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='SInt32' type='l' type64='i'/>
  </function>
  <function name='GetCurrentButtonState'>
    <retval declared_type='UInt32' type='L' type64='I'/>
  </function>
  <function name='GetCurrentEvent'>
    <retval declared_type='EventRef' type='^{OpaqueEventRef=}'/>
  </function>
  <function name='GetCurrentEventButtonState'>
    <retval declared_type='UInt32' type='L' type64='I'/>
  </function>
  <function name='GetCurrentEventKeyModifiers'>
    <retval declared_type='UInt32' type='L' type64='I'/>
  </function>
  <function name='GetCurrentEventLoop'>
    <retval declared_type='EventLoopRef' type='^{OpaqueEventLoopRef=}'/>
  </function>
  <function name='GetCurrentEventQueue'>
    <retval declared_type='EventQueueRef' type='^{OpaqueEventQueueRef=}'/>
  </function>
  <function name='GetCurrentEventTime'>
    <retval declared_type='EventTime' type='d'/>
  </function>
  <function name='GetCurrentKeyModifiers'>
    <retval declared_type='UInt32' type='L' type64='I'/>
  </function>
  <function name='GetCurrentScrap'>
    <arg name='scrap' declared_type='ScrapRef*' type='^^{OpaqueScrapRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserActiveItems'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='active' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserCallbacks'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='callbacks' declared_type='DataBrowserCallbacks*' type='^{DataBrowserCallbacks=I(?={?=^?^?^?^?^?^?^?^?^?^?})}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserColumnViewDisplayType'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='propertyType' declared_type='DataBrowserPropertyType*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserColumnViewPath'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='path' declared_type='Handle' type='^*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserColumnViewPathLength'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='pathLength' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserCustomCallbacks'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='callbacks' declared_type='DataBrowserCustomCallbacks*' type='^{DataBrowserCustomCallbacks=I(?={?=^?^?^?^?^?^?^?})}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserEditItem'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='item' declared_type='DataBrowserItemID*' type='^I'/>
    <arg name='property' declared_type='DataBrowserPropertyID*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserEditText'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='text' declared_type='CFMutableStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserHasScrollBars'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='horiz' declared_type='Boolean*' type='^B'/>
    <arg name='vert' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserItemCount'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='container' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='recurse' declared_type='Boolean' type='B'/>
    <arg name='state' declared_type='DataBrowserItemState' type='L' type64='I'/>
    <arg name='numItems' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserItemDataBooleanValue'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserItemDataButtonValue'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='ThemeButtonValue*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserItemDataDateTime'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='long*' type='^l' type64='^q'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserItemDataDrawState'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='ThemeDrawState*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserItemDataIcon'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='IconRef*' type='^^{OpaqueIconRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserItemDataIconTransform'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='IconTransformType*' type='^s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserItemDataItemID'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='DataBrowserItemID*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserItemDataLongDateTime'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='LongDateTime*' type='^q'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserItemDataMaximum'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='SInt32*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserItemDataMenuRef'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='MenuRef*' type='^^{OpaqueMenuRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserItemDataMinimum'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='SInt32*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserItemDataProperty'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='DataBrowserPropertyID*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserItemDataRGBColor'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='RGBColor*' type='^{RGBColor=SSS}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserItemDataText'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserItemDataValue'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='SInt32*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserItemPartBounds'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='property' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <arg name='part' declared_type='DataBrowserPropertyPart' type='L' type64='I'/>
    <arg name='bounds' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserItemState'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='state' declared_type='DataBrowserItemState*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserItems'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='container' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='recurse' declared_type='Boolean' type='B'/>
    <arg name='state' declared_type='DataBrowserItemState' type='L' type64='I'/>
    <arg name='items' declared_type='Handle' type='^*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserListViewDisclosureColumn'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='column' declared_type='DataBrowserTableViewColumnID*' type='^I'/>
    <arg name='expandableRows' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserListViewHeaderBtnHeight'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='height' declared_type='UInt16*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserListViewHeaderDesc'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='column' declared_type='DataBrowserTableViewColumnID' type='L' type64='I'/>
    <arg name='desc' declared_type='DataBrowserListViewHeaderDesc*' type='^{DataBrowserListViewHeaderDesc=ISSs^{__CFString}S{ControlFontStyleRec=ssssss{RGBColor=SSS}{RGBColor=SSS}}{ControlButtonContentInfo=s(?=s^^{CIcon}^*^{OpaqueIconRef}^^{Picture}^*^{CGImage})}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserListViewUsePlainBackground'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='usePlainBackground' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserPropertyFlags'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='property' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <arg name='flags' declared_type='DataBrowserPropertyFlags*' type='^I' type64='^Q'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserScrollBarInset'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='insetRect' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserScrollPosition'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='top' declared_type='UInt32*' type='^I'/>
    <arg name='left' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserSelectionAnchor'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='first' declared_type='DataBrowserItemID*' type='^I'/>
    <arg name='last' declared_type='DataBrowserItemID*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserSelectionFlags'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='selectionFlags' declared_type='DataBrowserSelectionFlags*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserSortOrder'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='order' declared_type='DataBrowserSortOrder*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserSortProperty'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='property' declared_type='DataBrowserPropertyID*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserTableViewColumnCount'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='numColumns' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserTableViewColumnPosition'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='column' declared_type='DataBrowserTableViewColumnID' type='L' type64='I'/>
    <arg name='position' declared_type='DataBrowserTableViewColumnIndex*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserTableViewColumnProperty'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='column' declared_type='DataBrowserTableViewColumnIndex' type='L' type64='I'/>
    <arg name='property' declared_type='DataBrowserTableViewColumnID*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserTableViewColumnWidth'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='width' declared_type='UInt16*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserTableViewGeometry'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='variableWidthColumns' declared_type='Boolean*' type='^B'/>
    <arg name='variableHeightRows' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserTableViewHiliteStyle'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='hiliteStyle' declared_type='DataBrowserTableViewHiliteStyle*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserTableViewItemID'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='row' declared_type='DataBrowserTableViewRowIndex' type='L' type64='I'/>
    <arg name='item' declared_type='DataBrowserItemID*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserTableViewItemRow'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='row' declared_type='DataBrowserTableViewRowIndex*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserTableViewItemRowHeight'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='height' declared_type='UInt16*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserTableViewNamedColumnWidth'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='column' declared_type='DataBrowserTableViewColumnID' type='L' type64='I'/>
    <arg name='width' declared_type='UInt16*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserTableViewRowHeight'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='height' declared_type='UInt16*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserTarget'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='target' declared_type='DataBrowserItemID*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserUserState'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='stateInfo' declared_type='CFDictionaryRef*' type='^^{__CFDictionary}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDataBrowserViewStyle'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='style' declared_type='DataBrowserViewStyle*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDblTime'>
    <retval declared_type='UInt32' type='L' type64='I'/>
  </function>
  <function name='GetDefaultInputMethod'>
    <arg name='ts' declared_type='Component*' type='^^{ComponentRecord}'/>
    <arg name='slRecordPtr' declared_type='ScriptLanguageRecord*' type='^{ScriptLanguageRecord=ss}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetDefaultInputMethodOfClass'>
    <arg name='aComp' declared_type='Component*' type='^^{ComponentRecord}'/>
    <arg name='slRecPtr' declared_type='ScriptLanguageRecord*' type='^{ScriptLanguageRecord=ss}'/>
    <arg name='tsClass' declared_type='TextServiceClass' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDialogCancelItem'>
    <arg name='dialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <retval declared_type='SInt16' type='s'/>
  </function>
  <function name='GetDialogDefaultItem'>
    <arg name='dialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <retval declared_type='SInt16' type='s'/>
  </function>
  <function name='GetDialogFromWindow'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
  </function>
  <function name='GetDialogItem'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='itemNo' declared_type='DialogItemIndex' type='s'/>
    <arg name='itemType' declared_type='DialogItemType*' type='^s'/>
    <arg name='item' declared_type='Handle*' type='^^*'/>
    <arg name='box' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='GetDialogItemAsControl'>
    <arg name='inDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='inItemNo' declared_type='SInt16' type='s'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetDialogItemText'>
    <arg name='item' declared_type='Handle' type='^*'/>
    <arg name='text' declared_type='unsigned char*' type='*'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='GetDialogKeyboardFocusItem'>
    <arg name='dialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <retval declared_type='SInt16' type='s'/>
  </function>
  <function name='GetDialogPort'>
    <arg name='dialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <retval declared_type='CGrafPtr' type='^{OpaqueGrafPtr=}'/>
  </function>
  <function name='GetDialogTextEditHandle'>
    <arg name='dialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <retval declared_type='TEHandle' type='^^{TERec}'/>
  </function>
  <function name='GetDialogTimeout'>
    <arg name='inDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='outButtonToPress' declared_type='SInt16*' type='^s'/>
    <arg name='outSecondsToWait' declared_type='UInt32*' type='^I'/>
    <arg name='outSecondsRemaining' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDialogWindow'>
    <arg name='dialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <retval declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
  </function>
  <function name='GetDocumentKindString'>
    <arg name='docVRefNum' declared_type='short' type='s'/>
    <arg name='docType' declared_type='OSType' type='L' type64='I'/>
    <arg name='docCreator' declared_type='OSType' type='L' type64='I'/>
    <arg name='kindString' declared_type='unsigned char*' type='*'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetDragAllowableActions'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='outActions' declared_type='DragActions*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDragAttributes'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='flags' declared_type='DragAttributes*' type='^I'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetDragDropAction'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='outAction' declared_type='DragActions*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDragHiliteColor'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='color' declared_type='RGBColor*' type='^{RGBColor=SSS}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetDragItemBounds'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='theItemRef' declared_type='DragItemRef' type='L' type64='I'/>
    <arg name='itemBounds' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetDragItemReferenceNumber'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='index' declared_type='UInt16' type='S'/>
    <arg name='theItemRef' declared_type='DragItemRef*' type='^I'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetDragModifiers'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='modifiers' declared_type='SInt16*' type='^s'/>
    <arg name='mouseDownModifiers' declared_type='SInt16*' type='^s'/>
    <arg name='mouseUpModifiers' declared_type='SInt16*' type='^s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetDragMouse'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='mouse' declared_type='Point*' type='^{Point=ss}'/>
    <arg name='globalPinnedMouse' declared_type='Point*' type='^{Point=ss}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetDragOrigin'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='globalInitialMouse' declared_type='Point*' type='^{Point=ss}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetDragPasteboard'>
    <arg name='inDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='outPasteboard' declared_type='PasteboardRef*' type='^^{OpaquePasteboardRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDrawerCurrentEdge'>
    <arg name='inDrawerWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OptionBits' type='L' type64='I'/>
  </function>
  <function name='GetDrawerOffsets'>
    <arg name='inDrawerWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outLeadingOffset' declared_type='float*' type='^f'/>
    <arg name='outTrailingOffset' declared_type='float*' type='^f'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetDrawerParent'>
    <arg name='inDrawerWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
  </function>
  <function name='GetDrawerPreferredEdge'>
    <arg name='inDrawerWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OptionBits' type='L' type64='I'/>
  </function>
  <function name='GetDrawerState'>
    <arg name='inDrawerWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='WindowDrawerState' type='L' type64='I'/>
  </function>
  <function name='GetDropLocation'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='dropLocation' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetEventClass'>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <retval declared_type='UInt32' type='L' type64='I'/>
  </function>
  <function name='GetEventDispatcherTarget'>
    <retval declared_type='EventTargetRef' type='^{OpaqueEventTargetRef=}'/>
  </function>
  <function name='GetEventKind'>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <retval declared_type='UInt32' type='L' type64='I'/>
  </function>
  <function name='GetEventMonitorTarget'>
    <retval declared_type='EventTargetRef' type='^{OpaqueEventTargetRef=}'/>
  </function>
  <function name='GetEventParameter'>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <arg name='inName' declared_type='EventParamName' type='L' type64='I'/>
    <arg name='inDesiredType' declared_type='EventParamType' type='L' type64='I'/>
    <arg name='outActualType' declared_type='EventParamType*' type='^I'/>
    <arg name='inBufferSize' declared_type='UInt32' type='L' type64='I'/>
    <arg name='outActualSize' declared_type='UInt32*' type='^I'/>
    <arg name='outData' declared_type='void*' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetEventRetainCount'>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <retval declared_type='UInt32' type='L' type64='I'/>
  </function>
  <function name='GetEventTime'>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <retval declared_type='EventTime' type='d'/>
  </function>
  <function name='GetFileTranslationPaths'>
    <arg name='srcDocument' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}' const='true'/>
    <arg name='dstDocType' declared_type='FileType' type='L' type64='I'/>
    <arg name='maxResultCount' declared_type='unsigned short' type='S'/>
    <arg name='resultBuffer' declared_type='FileTranslationSpecArrayPtr' type='^{FileTranslationSpec=I^v{FileTypeSpec=IlIII}{FileTypeSpec=IlIII}}' type64='^{FileTranslationSpec=I^v{FileTypeSpec=IqIII}{FileTypeSpec=IqIII}}'/>
    <retval declared_type='short' type='s'/>
  </function>
  <function name='GetFileTypesThatAppCanNativelyOpen'>
    <arg name='appVRefNumHint' declared_type='short' type='s'/>
    <arg name='appSignature' declared_type='OSType' type='L' type64='I'/>
    <arg name='nativeTypes' declared_type='FileType*' type='^I'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetFlavorData'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='theItemRef' declared_type='DragItemRef' type='L' type64='I'/>
    <arg name='theType' declared_type='FlavorType' type='L' type64='I'/>
    <arg name='dataPtr' declared_type='void*' type='^v'/>
    <arg name='dataSize' declared_type='Size*' type='^i' type64='^q'/>
    <arg name='dataOffset' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetFlavorDataSize'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='theItemRef' declared_type='DragItemRef' type='L' type64='I'/>
    <arg name='theType' declared_type='FlavorType' type='L' type64='I'/>
    <arg name='dataSize' declared_type='Size*' type='^i' type64='^q'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetFlavorFlags'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='theItemRef' declared_type='DragItemRef' type='L' type64='I'/>
    <arg name='theType' declared_type='FlavorType' type='L' type64='I'/>
    <arg name='theFlags' declared_type='FlavorFlags*' type='^I'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetFlavorType'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='theItemRef' declared_type='DragItemRef' type='L' type64='I'/>
    <arg name='index' declared_type='UInt16' type='S'/>
    <arg name='theType' declared_type='FlavorType*' type='^I'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetFontFamilyFromMenuSelection'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <arg name='outFontFamily' declared_type='FMFontFamily*' type='^s'/>
    <arg name='outStyle' declared_type='FMFontStyle*' type='^s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetFrontWindowOfClass'>
    <arg name='inWindowClass' declared_type='WindowClass' type='L' type64='I'/>
    <arg name='mustBeVisible' declared_type='Boolean' type='B'/>
    <retval declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
  </function>
  <function name='GetGlobalMouse'>
    <arg name='globalMouse' declared_type='Point*' type='^{Point=ss}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='GetGrayRgn'>
    <retval declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
  </function>
  <function name='GetImageWellContentInfo'>
    <arg name='inButton' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='outContent' declared_type='ControlButtonContentInfoPtr' type='^{ControlButtonContentInfo=s(?=s^^{CIcon}^*^{OpaqueIconRef}^^{Picture}^*^{CGImage})}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetIndMenuItemWithCommandID'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inCommandID' declared_type='MenuCommand' type='L' type64='I'/>
    <arg name='inItemIndex' declared_type='UInt32' type='L' type64='I'/>
    <arg name='outMenu' declared_type='MenuRef*' type='^^{OpaqueMenuRef}'/>
    <arg name='outIndex' declared_type='MenuItemIndex*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetIndexedSubControl'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inIndex' declared_type='UInt16' type='S'/>
    <arg name='outSubControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetIndexedWindow'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <arg name='inIndex' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inOptions' declared_type='WindowGroupContentOptions' type='L' type64='I'/>
    <arg name='outWindow' declared_type='WindowRef*' type='^^{OpaqueWindowPtr}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetInputModePaletteMenu'>
    <arg name='inInstance' declared_type='ComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
    <arg name='inItemID' declared_type='UInt32' type='L' type64='I'/>
    <arg name='outMenuItemsArray' declared_type='CFArrayRef*' type='^^{__CFArray}'/>
    <retval declared_type='ComponentResult' type='l' type64='q'/>
  </function>
  <function name='GetItemCmd'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <arg name='cmdChar' declared_type='CharParameter*' type='^s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='GetItemIcon'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <arg name='iconIndex' declared_type='short*' type='^s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='GetItemMark'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <arg name='markChar' declared_type='CharParameter*' type='^s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='GetItemStyle'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <arg name='chStyle' declared_type='Style*' type='*'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='GetKeyboardFocus'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetKeys'>
    <arg name='theKeys' declared_type='BigEndianLong*' type='^{BigEndianLong=l}' type64='^{BigEndianLong=q}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='GetLastUserEventTime'>
    <retval declared_type='EventTime' type='d'/>
  </function>
  <function name='GetListActive'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='GetListCellIndent'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <arg name='indent' declared_type='Point*' type='^{Point=ss}'/>
    <retval declared_type='Point*' type='^{Point=ss}'/>
  </function>
  <function name='GetListCellSize'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <arg name='size' declared_type='Point*' type='^{Point=ss}'/>
    <retval declared_type='Point*' type='^{Point=ss}'/>
  </function>
  <function name='GetListClickLocation'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <arg name='click' declared_type='Point*' type='^{Point=ss}'/>
    <retval declared_type='Point*' type='^{Point=ss}'/>
  </function>
  <function name='GetListClickLoop'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval function_pointer='true' declared_type='ListClickLoopUPP' type='^?'>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='GetListClickTime'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='SInt32' type='l' type64='i'/>
  </function>
  <function name='GetListDataBounds'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <arg name='bounds' declared_type='ListBounds*' type='^{Rect=ssss}'/>
    <retval declared_type='ListBounds*' type='^{Rect=ssss}'/>
  </function>
  <function name='GetListDataHandle'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='DataHandle' type='^*'/>
  </function>
  <function name='GetListDefinition'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='Handle' type='^*'/>
  </function>
  <function name='GetListFlags'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='OptionBits' type='L' type64='I'/>
  </function>
  <function name='GetListHorizontalScrollBar'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
  </function>
  <function name='GetListMouseLocation'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <arg name='mouse' declared_type='Point*' type='^{Point=ss}'/>
    <retval declared_type='Point*' type='^{Point=ss}'/>
  </function>
  <function name='GetListPort'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='CGrafPtr' type='^{OpaqueGrafPtr=}'/>
  </function>
  <function name='GetListRefCon'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='SInt32' type='l' type64='i'/>
  </function>
  <function name='GetListSelectionFlags'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='OptionBits' type='L' type64='I'/>
  </function>
  <function name='GetListUserHandle'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='Handle' type='^*'/>
  </function>
  <function name='GetListVerticalScrollBar'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
  </function>
  <function name='GetListViewBounds'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <arg name='view' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='Rect*' type='^{Rect=ssss}'/>
  </function>
  <function name='GetListVisibleCells'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <arg name='visible' declared_type='ListBounds*' type='^{Rect=ssss}'/>
    <retval declared_type='ListBounds*' type='^{Rect=ssss}'/>
  </function>
  <function name='GetMBarHeight'>
    <retval declared_type='short' type='s'/>
  </function>
  <function name='GetMCEntry'>
    <arg name='menuID' declared_type='MenuID' type='s'/>
    <arg name='menuItem' declared_type='short' type='s'/>
    <retval declared_type='MCEntryPtr' type='^{MCEntry=ss{RGBColor=SSS}{RGBColor=SSS}{RGBColor=SSS}{RGBColor=SSS}s}'/>
  </function>
  <function name='GetMCInfo'>
    <retval declared_type='MCTableHandle' type='^^{MCEntry}'/>
  </function>
  <function name='GetMainEventLoop'>
    <retval declared_type='EventLoopRef' type='^{OpaqueEventLoopRef=}'/>
  </function>
  <function name='GetMainEventQueue'>
    <retval declared_type='EventQueueRef' type='^{OpaqueEventQueueRef=}'/>
  </function>
  <function name='GetMenuAttributes'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='outAttributes' declared_type='MenuAttributes*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetMenuBar'>
    <retval declared_type='MenuBarHandle' type='^*'/>
  </function>
  <function name='GetMenuCommandMark'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inCommandID' declared_type='MenuCommand' type='L' type64='I'/>
    <arg name='outMark' declared_type='UniChar*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetMenuCommandProperty'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inCommandID' declared_type='MenuCommand' type='L' type64='I'/>
    <arg name='inPropertyCreator' declared_type='OSType' type='L' type64='I'/>
    <arg name='inPropertyTag' declared_type='OSType' type='L' type64='I'/>
    <arg name='inBufferSize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='outActualSize' declared_type='ByteCount*' type='^I'/>
    <arg name='inPropertyBuffer' declared_type='void*' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetMenuCommandPropertySize'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inCommandID' declared_type='MenuCommand' type='L' type64='I'/>
    <arg name='inPropertyCreator' declared_type='OSType' type='L' type64='I'/>
    <arg name='inPropertyTag' declared_type='OSType' type='L' type64='I'/>
    <arg name='outSize' declared_type='ByteCount*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetMenuDefinition'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='outDefSpec' declared_type='MenuDefSpecPtr' type='^{MenuDefSpec=I(?=^?{?=^{__CFString}^{OpaqueEventRef}})}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetMenuEventTarget'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='EventTargetRef' type='^{OpaqueEventTargetRef=}'/>
  </function>
  <function name='GetMenuExcludesMarkColumn'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='GetMenuFont'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='outFontID' declared_type='SInt16*' type='^s'/>
    <arg name='outFontSize' declared_type='UInt16*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetMenuHandle'>
    <arg name='menuID' declared_type='MenuID' type='s'/>
    <retval declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
  </function>
  <function name='GetMenuHeight'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='SInt16' type='s'/>
  </function>
  <function name='GetMenuID'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='MenuID' type='s'/>
  </function>
  <function name='GetMenuItemAttributes'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <arg name='outAttributes' declared_type='MenuItemAttributes*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetMenuItemCommandID'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='outCommandID' declared_type='MenuCommand*' type='^I'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetMenuItemCommandKey'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='inGetVirtualKey' declared_type='Boolean' type='B'/>
    <arg name='outKey' declared_type='UInt16*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetMenuItemFontID'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='outFontID' declared_type='SInt16*' type='^s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetMenuItemHierarchicalID'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='outHierID' declared_type='MenuID*' type='^s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetMenuItemHierarchicalMenu'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='outHierMenu' declared_type='MenuRef*' type='^^{OpaqueMenuRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetMenuItemIconHandle'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='outIconType' declared_type='UInt8*' type='*'/>
    <arg name='outIconHandle' declared_type='Handle*' type='^^*'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetMenuItemIndent'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='outIndent' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetMenuItemKeyGlyph'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='outGlyph' declared_type='SInt16*' type='^s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetMenuItemModifiers'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='outModifiers' declared_type='UInt8*' type='*'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetMenuItemProperty'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <arg name='propertyCreator' declared_type='OSType' type='L' type64='I'/>
    <arg name='propertyTag' declared_type='OSType' type='L' type64='I'/>
    <arg name='bufferSize' declared_type='UInt32' type='L' type64='I'/>
    <arg name='actualSize' declared_type='UInt32*' type='^I'/>
    <arg name='propertyBuffer' declared_type='void*' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetMenuItemPropertyAttributes'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <arg name='propertyCreator' declared_type='OSType' type='L' type64='I'/>
    <arg name='propertyTag' declared_type='OSType' type='L' type64='I'/>
    <arg name='attributes' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetMenuItemPropertySize'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <arg name='propertyCreator' declared_type='OSType' type='L' type64='I'/>
    <arg name='propertyTag' declared_type='OSType' type='L' type64='I'/>
    <arg name='size' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetMenuItemRefCon'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='outRefCon' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetMenuItemText'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <arg name='itemString' declared_type='unsigned char*' type='*'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='GetMenuItemTextEncoding'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='outScriptID' declared_type='TextEncoding*' type='^I'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetMenuRetainCount'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='ItemCount' type='L' type64='I'/>
  </function>
  <function name='GetMenuTitle'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='title' declared_type='unsigned char*' type='*'/>
    <retval declared_type='StringPtr' type='*'/>
  </function>
  <function name='GetMenuTitleIcon'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='outType' declared_type='UInt32*' type='^I'/>
    <arg name='outIcon' declared_type='void**' type='^^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetMenuTrackingData'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='outData' declared_type='MenuTrackingData*' type='^{MenuTrackingData=^{OpaqueMenuRef}SS{Rect=ssss}ii}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetMenuType'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='outType' declared_type='UInt16*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetMenuWidth'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='SInt16' type='s'/>
  </function>
  <function name='GetModalDialogEventMask'>
    <arg name='inDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='outMask' declared_type='EventMask*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetMouse'>
    <arg name='mouseLoc' declared_type='Point*' type='^{Point=ss}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='GetMouseTrackingRegionID'>
    <arg name='inMouseRef' declared_type='MouseTrackingRef' type='^{OpaqueMouseTrackingRef=}'/>
    <arg name='outID' declared_type='MouseTrackingRegionID*' type='^{MouseTrackingRegionID=Ii}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetMouseTrackingRegionRefCon'>
    <arg name='inMouseRef' declared_type='MouseTrackingRef' type='^{OpaqueMouseTrackingRef=}'/>
    <arg name='outRefCon' declared_type='void**' type='^^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetNewCWindow'>
    <arg name='windowID' declared_type='short' type='s'/>
    <arg name='wStorage' declared_type='void*' type='^v'/>
    <arg name='behind' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
  </function>
  <function name='GetNewControl'>
    <arg name='resourceID' declared_type='SInt16' type='s'/>
    <arg name='owningWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
  </function>
  <function name='GetNewDialog'>
    <arg name='dialogID' declared_type='SInt16' type='s'/>
    <arg name='dStorage' declared_type='void*' type='^v'/>
    <arg name='behind' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
  </function>
  <function name='GetNewMBar'>
    <arg name='menuBarID' declared_type='short' type='s'/>
    <retval declared_type='MenuBarHandle' type='^*'/>
  </function>
  <function name='GetNewWindow'>
    <arg name='windowID' declared_type='short' type='s'/>
    <arg name='wStorage' declared_type='void*' type='^v'/>
    <arg name='behind' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
  </function>
  <function name='GetNextEvent'>
    <arg name='eventMask' declared_type='EventMask' type='S'/>
    <arg name='theEvent' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='GetNextWindowOfClass'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inWindowClass' declared_type='WindowClass' type='L' type64='I'/>
    <arg name='mustBeVisible' declared_type='Boolean' type='B'/>
    <retval declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
  </function>
  <function name='GetNumEventsInQueue'>
    <arg name='inQueue' declared_type='EventQueueRef' type='^{OpaqueEventQueueRef=}'/>
    <retval declared_type='UInt32' type='L' type64='I'/>
  </function>
  <function name='GetParamText'>
    <arg name='param0' declared_type='StringPtr' type='*'/>
    <arg name='param1' declared_type='StringPtr' type='*'/>
    <arg name='param2' declared_type='StringPtr' type='*'/>
    <arg name='param3' declared_type='StringPtr' type='*'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='GetPathFromTranslationDialog'>
    <arg name='theDocument' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}' const='true'/>
    <arg name='theApplication' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}' const='true'/>
    <arg name='typeList' declared_type='TypesBlockPtr' type='^I'/>
    <arg name='howToOpen' declared_type='DocOpenMethod*' type='^s'/>
    <arg name='howToTranslate' declared_type='FileTranslationSpec*' type='^{FileTranslationSpec=I^v{FileTypeSpec=IlIII}{FileTypeSpec=IlIII}}' type64='^{FileTranslationSpec=I^v{FileTypeSpec=IqIII}{FileTypeSpec=IqIII}}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetPreviousWindow'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
  </function>
  <function name='GetRootControl'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetScrapByName'>
    <arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='options' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='scrap' declared_type='ScrapRef*' type='^^{OpaqueScrapRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetScrapFlavorCount'>
    <arg name='scrap' declared_type='ScrapRef' type='^{OpaqueScrapRef=}'/>
    <arg name='infoCount' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetScrapFlavorData'>
    <arg name='scrap' declared_type='ScrapRef' type='^{OpaqueScrapRef=}'/>
    <arg name='flavorType' declared_type='ScrapFlavorType' type='L' type64='I'/>
    <arg name='byteCount' declared_type='Size*' type='^i' type64='^q'/>
    <arg name='destination' declared_type='void*' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetScrapFlavorFlags'>
    <arg name='scrap' declared_type='ScrapRef' type='^{OpaqueScrapRef=}'/>
    <arg name='flavorType' declared_type='ScrapFlavorType' type='L' type64='I'/>
    <arg name='flavorFlags' declared_type='ScrapFlavorFlags*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetScrapFlavorInfoList'>
    <arg name='scrap' declared_type='ScrapRef' type='^{OpaqueScrapRef=}'/>
    <arg name='infoCount' declared_type='UInt32*' type='^I'/>
    <arg name='info' declared_type='ScrapFlavorInfo*' type='^{ScrapFlavorInfo=II}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetScrapFlavorSize'>
    <arg name='scrap' declared_type='ScrapRef' type='^{OpaqueScrapRef=}'/>
    <arg name='flavorType' declared_type='ScrapFlavorType' type='L' type64='I'/>
    <arg name='byteCount' declared_type='Size*' type='^i' type64='^q'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetScriptLanguageSupport'>
    <arg name='ts' declared_type='ComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
    <arg name='scriptHdl' declared_type='ScriptLanguageSupportHandle*' type='^^^{ScriptLanguageSupport}'/>
    <retval declared_type='ComponentResult' type='l' type64='q'/>
  </function>
  <function name='GetServiceList'>
    <arg name='numOfInterface' declared_type='short' type='s'/>
    <arg name='supportedInterfaceTypes' declared_type='OSType*' type='^I' const='true'/>
    <arg name='serviceInfo' declared_type='TextServiceListHandle*' type='^^^{TextServiceList}'/>
    <arg name='seedValue' declared_type='long*' type='^l' type64='^q'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetSheetWindowParent'>
    <arg name='inSheet' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outParentWindow' declared_type='WindowRef*' type='^^{OpaqueWindowPtr}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetStandardAlertDefaultParams'>
    <arg name='param' declared_type='AlertStdCFStringAlertParamPtr' type='^{AlertStdCFStringAlertParamRec=IBB^{__CFString}^{__CFString}^{__CFString}ssSI}'/>
    <arg name='version' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetStandardDropLocation'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='outDropLocation' declared_type='StandardDropLocation*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetStdFilterProc'>
    <arg name='theProc' declared_type='ModalFilterUPP*' type='^^?'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetSuperControl'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='outParent' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetSymbolicHotKeyMode'>
    <retval declared_type='OptionBits' type='L' type64='I'/>
  </function>
  <function name='GetSystemUIMode'>
    <arg name='outMode' declared_type='SystemUIMode*' type='^I'/>
    <arg name='outOptions' declared_type='SystemUIOptions*' type='^I'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='GetTSMTEDialogDocumentID'>
    <arg name='dialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <retval declared_type='TSMDocumentID' type='^{OpaqueTSMDocumentID=}'/>
  </function>
  <function name='GetTSMTEDialogTSMTERecHandle'>
    <arg name='dialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <retval declared_type='TSMTERecHandle' type='^^{TSMTERec}'/>
  </function>
  <function name='GetTabContentRect'>
    <arg name='inTabControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='outContentRect' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetTextAndEncodingFromCFString'>
    <arg name='inString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='outText' declared_type='BytePtr' type='*'/>
    <arg name='inTextMaxLength' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='outTextLength' declared_type='ByteCount*' type='^I'/>
    <arg name='outEncoding' declared_type='TextEncoding*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetTextServiceLanguage'>
    <arg name='slRecordPtr' declared_type='ScriptLanguageRecord*' type='^{ScriptLanguageRecord=ss}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetTextServiceMenu'>
    <arg name='ts' declared_type='ComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
    <arg name='serviceMenu' declared_type='MenuRef*' type='^^{OpaqueMenuRef}'/>
    <retval declared_type='ComponentResult' type='l' type64='q'/>
  </function>
  <function name='GetTextServiceProperty'>
    <arg name='ts' declared_type='ComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
    <arg name='inPropertyTag' declared_type='TextServicePropertyTag' type='L' type64='I'/>
    <arg name='outPropertyValue' declared_type='TextServicePropertyValue*' type='^i'/>
    <retval declared_type='ComponentResult' type='l' type64='q'/>
  </function>
  <function name='GetTheme'>
    <arg name='ioCollection' declared_type='Collection' type='^{OpaqueCollection=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeAccentColors'>
    <arg name='outColors' declared_type='CTabHandle*' type='^^^{ColorTable}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeBrushAsColor'>
    <arg name='inBrush' declared_type='ThemeBrush' type='s'/>
    <arg name='inDepth' declared_type='SInt16' type='s'/>
    <arg name='inColorDev' declared_type='Boolean' type='B'/>
    <arg name='outColor' declared_type='RGBColor*' type='^{RGBColor=SSS}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeButtonBackgroundBounds'>
    <arg name='inBounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inKind' declared_type='ThemeButtonKind' type='S'/>
    <arg name='inDrawInfo' declared_type='ThemeButtonDrawInfo*' type='^{ThemeButtonDrawInfo=ISS}' const='true'/>
    <arg name='outBounds' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeButtonContentBounds'>
    <arg name='inBounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inKind' declared_type='ThemeButtonKind' type='S'/>
    <arg name='inDrawInfo' declared_type='ThemeButtonDrawInfo*' type='^{ThemeButtonDrawInfo=ISS}' const='true'/>
    <arg name='outBounds' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeButtonRegion'>
    <arg name='inBounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inKind' declared_type='ThemeButtonKind' type='S'/>
    <arg name='inNewInfo' declared_type='ThemeButtonDrawInfo*' type='^{ThemeButtonDrawInfo=ISS}' const='true'/>
    <arg name='outRegion' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeCheckBoxStyle'>
    <arg name='outStyle' declared_type='ThemeCheckBoxStyle*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeDrawingState'>
    <arg name='outState' declared_type='ThemeDrawingState*' type='^^{OpaqueThemeDrawingState}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeFont'>
    <arg name='inFontID' declared_type='ThemeFontID' type='S'/>
    <arg name='inScript' declared_type='ScriptCode' type='s'/>
    <arg name='outFontName' declared_type='unsigned char*' type='*'/>
    <arg name='outFontSize' declared_type='SInt16*' type='^s'/>
    <arg name='outStyle' declared_type='Style*' type='*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeMenuBackgroundRegion'>
    <arg name='inMenuRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='menuType' declared_type='ThemeMenuType' type='S'/>
    <arg name='region' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeMenuBarHeight'>
    <arg name='outHeight' declared_type='SInt16*' type='^s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeMenuItemExtra'>
    <arg name='inItemType' declared_type='ThemeMenuItemType' type='S'/>
    <arg name='outHeight' declared_type='SInt16*' type='^s'/>
    <arg name='outWidth' declared_type='SInt16*' type='^s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeMenuSeparatorHeight'>
    <arg name='outHeight' declared_type='SInt16*' type='^s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeMenuTitleExtra'>
    <arg name='outWidth' declared_type='SInt16*' type='^s'/>
    <arg name='inIsSquished' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeMetric'>
    <arg name='inMetric' declared_type='ThemeMetric' type='L' type64='I'/>
    <arg name='outMetric' declared_type='SInt32*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeScrollBarArrowStyle'>
    <arg name='outStyle' declared_type='ThemeScrollBarArrowStyle*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeScrollBarThumbStyle'>
    <arg name='outStyle' declared_type='ThemeScrollBarThumbStyle*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeScrollBarTrackRect'>
    <arg name='bounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='enableState' declared_type='ThemeTrackEnableState' type='C'/>
    <arg name='pressState' declared_type='ThemeTrackPressState' type='C'/>
    <arg name='isHoriz' declared_type='Boolean' type='B'/>
    <arg name='trackBounds' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeStandaloneGrowBoxBounds'>
    <arg name='origin' declared_type='Point' type='{Point=ss}'/>
    <arg name='growDirection' declared_type='ThemeGrowDirection' type='S'/>
    <arg name='isSmall' declared_type='Boolean' type='B'/>
    <arg name='bounds' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeTabRegion'>
    <arg name='inRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inStyle' declared_type='ThemeTabStyle' type='S'/>
    <arg name='inDirection' declared_type='ThemeTabDirection' type='S'/>
    <arg name='ioRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeTextColor'>
    <arg name='inColor' declared_type='ThemeTextColor' type='s'/>
    <arg name='inDepth' declared_type='SInt16' type='s'/>
    <arg name='inColorDev' declared_type='Boolean' type='B'/>
    <arg name='outColor' declared_type='RGBColor*' type='^{RGBColor=SSS}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeTextDimensions'>
    <arg name='inString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inFontID' declared_type='ThemeFontID' type='S'/>
    <arg name='inState' declared_type='ThemeDrawState' type='L' type64='I'/>
    <arg name='inWrapToWidth' declared_type='Boolean' type='B'/>
    <arg name='ioBounds' declared_type='Point*' type='^{Point=ss}'/>
    <arg name='outBaseline' declared_type='SInt16*' type='^s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeTextShadowOutset'>
    <arg name='inFontID' declared_type='ThemeFontID' type='S'/>
    <arg name='inState' declared_type='ThemeDrawState' type='L' type64='I'/>
    <arg name='outOutset' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeTrackBounds'>
    <arg name='drawInfo' declared_type='ThemeTrackDrawInfo*' type='^{ThemeTrackDrawInfo=S{Rect=ssss}iiiISCC(?={ScrollBarTrackInfo=iC}{SliderTrackInfo=CC}{ProgressTrackInfo=C})}' const='true'/>
    <arg name='bounds' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeTrackDragRect'>
    <arg name='drawInfo' declared_type='ThemeTrackDrawInfo*' type='^{ThemeTrackDrawInfo=S{Rect=ssss}iiiISCC(?={ScrollBarTrackInfo=iC}{SliderTrackInfo=CC}{ProgressTrackInfo=C})}' const='true'/>
    <arg name='dragRect' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeTrackLiveValue'>
    <arg name='drawInfo' declared_type='ThemeTrackDrawInfo*' type='^{ThemeTrackDrawInfo=S{Rect=ssss}iiiISCC(?={ScrollBarTrackInfo=iC}{SliderTrackInfo=CC}{ProgressTrackInfo=C})}' const='true'/>
    <arg name='relativePosition' declared_type='SInt32' type='l' type64='i'/>
    <arg name='value' declared_type='SInt32*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeTrackThumbPositionFromOffset'>
    <arg name='drawInfo' declared_type='ThemeTrackDrawInfo*' type='^{ThemeTrackDrawInfo=S{Rect=ssss}iiiISCC(?={ScrollBarTrackInfo=iC}{SliderTrackInfo=CC}{ProgressTrackInfo=C})}' const='true'/>
    <arg name='thumbOffset' declared_type='Point' type='{Point=ss}'/>
    <arg name='relativePosition' declared_type='SInt32*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeTrackThumbPositionFromRegion'>
    <arg name='drawInfo' declared_type='ThemeTrackDrawInfo*' type='^{ThemeTrackDrawInfo=S{Rect=ssss}iiiISCC(?={ScrollBarTrackInfo=iC}{SliderTrackInfo=CC}{ProgressTrackInfo=C})}' const='true'/>
    <arg name='thumbRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='relativePosition' declared_type='SInt32*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeTrackThumbRgn'>
    <arg name='drawInfo' declared_type='ThemeTrackDrawInfo*' type='^{ThemeTrackDrawInfo=S{Rect=ssss}iiiISCC(?={ScrollBarTrackInfo=iC}{SliderTrackInfo=CC}{ProgressTrackInfo=C})}' const='true'/>
    <arg name='thumbRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeWindowRegion'>
    <arg name='flavor' declared_type='ThemeWindowType' type='S'/>
    <arg name='contRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <arg name='metrics' declared_type='ThemeWindowMetrics*' type='^{ThemeWindowMetrics=SssssS}' const='true'/>
    <arg name='attributes' declared_type='ThemeWindowAttributes' type='L' type64='I'/>
    <arg name='winRegion' declared_type='AppearanceRegionCode' type='S'/>
    <arg name='rgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetThemeWindowRegionHit'>
    <arg name='flavor' declared_type='ThemeWindowType' type='S'/>
    <arg name='inContRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='state' declared_type='ThemeDrawState' type='L' type64='I'/>
    <arg name='metrics' declared_type='ThemeWindowMetrics*' type='^{ThemeWindowMetrics=SssssS}' const='true'/>
    <arg name='inAttributes' declared_type='ThemeWindowAttributes' type='L' type64='I'/>
    <arg name='inPoint' declared_type='Point' type='{Point=ss}'/>
    <arg name='outRegionHit' declared_type='AppearanceRegionCode*' type='^S'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='GetTranslationExtensionName'>
    <arg name='translationMethod' declared_type='FileTranslationSpec*' type='^{FileTranslationSpec=I^v{FileTypeSpec=IlIII}{FileTypeSpec=IlIII}}' type64='^{FileTranslationSpec=I^v{FileTypeSpec=IqIII}{FileTypeSpec=IqIII}}' const='true'/>
    <arg name='extensionName' declared_type='unsigned char*' type='*'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='GetUserFocusEventTarget'>
    <retval declared_type='EventTargetRef' type='^{OpaqueEventTargetRef=}'/>
  </function>
  <function name='GetUserFocusWindow'>
    <retval declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
  </function>
  <function name='GetWRefCon'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='long' type='l' type64='q'/>
  </function>
  <function name='GetWTitle'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='title' declared_type='unsigned char*' type='*'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='GetWVariant'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='short' type='s'/>
  </function>
  <function name='GetWindowActivationScope'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outScope' declared_type='WindowActivationScope*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowAlpha'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outAlpha' declared_type='float*' type='^f'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowAttributes'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outAttributes' declared_type='WindowAttributes*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowBounds'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='regionCode' declared_type='WindowRegionCode' type='S'/>
    <arg name='globalBounds' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowCancelButton'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowClass'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outClass' declared_type='WindowClass*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowContentColor'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='color' declared_type='RGBColor*' type='^{RGBColor=SSS}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowContentPattern'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outPixPat' declared_type='PixPatHandle' type='^^{PixPat}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowDefaultButton'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowDockTileMenu'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
  </function>
  <function name='GetWindowEventTarget'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='EventTargetRef' type='^{OpaqueEventTargetRef=}'/>
  </function>
  <function name='GetWindowFeatures'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outFeatures' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowFromPort'>
    <arg name='port' declared_type='CGrafPtr' type='^{OpaqueGrafPtr=}'/>
    <retval declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
  </function>
  <function name='GetWindowGreatestAreaDevice'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inRegion' declared_type='WindowRegionCode' type='S'/>
    <arg name='outGreatestDevice' declared_type='GDHandle*' type='^^^{GDevice}'/>
    <arg name='outGreatestDeviceRect' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowGroup'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
  </function>
  <function name='GetWindowGroupAttributes'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <arg name='outAttributes' declared_type='WindowGroupAttributes*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowGroupContents'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <arg name='inOptions' declared_type='WindowGroupContentOptions' type='L' type64='I'/>
    <arg name='inAllowedItems' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='outNumItems' declared_type='ItemCount*' type='^I'/>
    <arg name='outItems' declared_type='void**' type='^^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowGroupLevel'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <arg name='outLevel' declared_type='SInt32*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowGroupLevelOfType'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <arg name='inLevelType' declared_type='UInt32' type='L' type64='I'/>
    <arg name='outLevel' declared_type='CGWindowLevel*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowGroupOfClass'>
    <arg name='windowClass' declared_type='WindowClass' type='L' type64='I'/>
    <retval declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
  </function>
  <function name='GetWindowGroupOwner'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <retval declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
  </function>
  <function name='GetWindowGroupParent'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <retval declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
  </function>
  <function name='GetWindowGroupRetainCount'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <retval declared_type='ItemCount' type='L' type64='I'/>
  </function>
  <function name='GetWindowGroupSibling'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <arg name='inNextGroup' declared_type='Boolean' type='B'/>
    <retval declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
  </function>
  <function name='GetWindowIdealUserState'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outUserState' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowIndex'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inStartGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <arg name='inOptions' declared_type='WindowGroupContentOptions' type='L' type64='I'/>
    <arg name='outIndex' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowKind'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='short' type='s'/>
  </function>
  <function name='GetWindowList'>
    <retval declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
  </function>
  <function name='GetWindowModality'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outModalKind' declared_type='WindowModality*' type='^I'/>
    <arg name='outUnavailableWindow' declared_type='WindowRef*' type='^^{OpaqueWindowPtr}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowOwnerCount'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outCount' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowPic'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='PicHandle' type='^^{Picture}'/>
  </function>
  <function name='GetWindowPort'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='CGrafPtr' type='^{OpaqueGrafPtr=}'/>
  </function>
  <function name='GetWindowPortBounds'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='bounds' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='Rect*' type='^{Rect=ssss}'/>
  </function>
  <function name='GetWindowProperty'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='propertyCreator' declared_type='PropertyCreator' type='L' type64='I'/>
    <arg name='propertyTag' declared_type='PropertyTag' type='L' type64='I'/>
    <arg name='bufferSize' declared_type='UInt32' type='L' type64='I'/>
    <arg name='actualSize' declared_type='UInt32*' type='^I'/>
    <arg name='propertyBuffer' declared_type='void*' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowPropertyAttributes'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='propertyCreator' declared_type='OSType' type='L' type64='I'/>
    <arg name='propertyTag' declared_type='OSType' type='L' type64='I'/>
    <arg name='attributes' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowPropertySize'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='creator' declared_type='PropertyCreator' type='L' type64='I'/>
    <arg name='tag' declared_type='PropertyTag' type='L' type64='I'/>
    <arg name='size' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowProxyAlias'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='alias' declared_type='AliasHandle*' type='^^^{AliasRecord}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowProxyFSSpec'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outFile' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowProxyIcon'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outIcon' declared_type='IconRef*' type='^^{OpaqueIconRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowRegion'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inRegionCode' declared_type='WindowRegionCode' type='S'/>
    <arg name='ioWinRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowResizeLimits'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outMinLimits' declared_type='HISize*' type='^{CGSize=ff}'/>
    <arg name='outMaxLimits' declared_type='HISize*' type='^{CGSize=ff}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowRetainCount'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='ItemCount' type='L' type64='I'/>
  </function>
  <function name='GetWindowStandardState'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='rect' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='Rect*' type='^{Rect=ssss}'/>
  </function>
  <function name='GetWindowStructurePort'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='CGrafPtr' type='^{OpaqueGrafPtr=}'/>
  </function>
  <function name='GetWindowStructureWidths'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outRect' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowToolbar'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outToolbar' declared_type='HIToolbarRef*' type='^^{OpaqueHIObjectRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GetWindowUserState'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='rect' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='Rect*' type='^{Rect=ssss}'/>
  </function>
  <function name='GetWindowWidgetHilite'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outHilite' declared_type='WindowDefPartCode*' type='^s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='GrowWindow'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='startPt' declared_type='Point' type='{Point=ss}'/>
    <arg name='bBox' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <retval declared_type='long' type='l' type64='q'/>
  </function>
  <function name='HIAboutBox'>
    <arg name='inOptions' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIApplicationGetCurrent'>
    <retval declared_type='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
  </function>
  <function name='HIArchiveCopyDecodedCFType'>
    <arg name='inDecoder' declared_type='HIArchiveRef' type='^{OpaqueHIArchiveRef=}'/>
    <arg name='inKey' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='outCFType' declared_type='CFTypeRef*' type='^^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIArchiveCopyEncodedData'>
    <arg name='inEncoder' declared_type='HIArchiveRef' type='^{OpaqueHIArchiveRef=}'/>
    <arg name='outData' declared_type='CFDataRef*' type='^^{__CFData}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIArchiveCreateForDecoding'>
    <arg name='inData' declared_type='CFDataRef' type='^{__CFData=}'/>
    <arg name='inOptions' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='outDecoder' declared_type='HIArchiveRef*' type='^^{OpaqueHIArchiveRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIArchiveCreateForEncoding'>
    <arg name='outEncoder' declared_type='HIArchiveRef*' type='^^{OpaqueHIArchiveRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIArchiveDecodeBoolean'>
    <arg name='inDecoder' declared_type='HIArchiveRef' type='^{OpaqueHIArchiveRef=}'/>
    <arg name='inKey' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='outBoolean' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIArchiveDecodeNumber'>
    <arg name='inDecoder' declared_type='HIArchiveRef' type='^{OpaqueHIArchiveRef=}'/>
    <arg name='inKey' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inNumberType' declared_type='CFNumberType' type='i'/>
    <arg name='outNumberValue' declared_type='void*' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIArchiveEncodeBoolean'>
    <arg name='inEncoder' declared_type='HIArchiveRef' type='^{OpaqueHIArchiveRef=}'/>
    <arg name='inKey' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inBoolean' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIArchiveEncodeCFType'>
    <arg name='inEncoder' declared_type='HIArchiveRef' type='^{OpaqueHIArchiveRef=}'/>
    <arg name='inKey' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inCFType' declared_type='CFTypeRef' type='@'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIArchiveEncodeNumber'>
    <arg name='inEncoder' declared_type='HIArchiveRef' type='^{OpaqueHIArchiveRef=}'/>
    <arg name='inKey' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inNumberType' declared_type='CFNumberType' type='i'/>
    <arg name='inNumberValue' declared_type='void*' type='^v' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIArchiveGetTypeID'>
    <retval declared_type='CFTypeID' type='L' type64='I'/>
  </function>
  <function name='HIComboBoxAppendTextItem'>
    <arg name='inComboBox' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inText' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='outIndex' declared_type='CFIndex*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIComboBoxChangeAttributes'>
    <arg name='inComboBox' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inAttributesToSet' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='inAttributesToClear' declared_type='OptionBits' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIComboBoxCopyTextItemAtIndex'>
    <arg name='inComboBox' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inIndex' declared_type='CFIndex' type='l' type64='i'/>
    <arg name='outString' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIComboBoxCreate'>
    <arg name='boundsRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='text' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='style' declared_type='ControlFontStyleRec*' type='^{ControlFontStyleRec=ssssss{RGBColor=SSS}{RGBColor=SSS}}' const='true'/>
    <arg name='list' declared_type='CFArrayRef' type='^{__CFArray=}'/>
    <arg name='inAttributes' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='outComboBox' declared_type='HIViewRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIComboBoxGetAttributes'>
    <arg name='inComboBox' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='outAttributes' declared_type='OptionBits*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIComboBoxGetItemCount'>
    <arg name='inComboBox' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='ItemCount' type='L' type64='I'/>
  </function>
  <function name='HIComboBoxInsertTextItemAtIndex'>
    <arg name='inComboBox' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inIndex' declared_type='CFIndex' type='l' type64='i'/>
    <arg name='inText' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIComboBoxIsListVisible'>
    <arg name='inComboBox' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIComboBoxRemoveItemAtIndex'>
    <arg name='inComboBox' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inIndex' declared_type='CFIndex' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIComboBoxSetListVisible'>
    <arg name='inComboBox' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inVisible' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HICopyAccessibilityActionDescription'>
    <arg name='inAction' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='HICopyAccessibilityRoleDescription'>
    <arg name='inRole' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inSubrole' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='HICreateTransformedCGImage'>
    <arg name='inImage' declared_type='CGImageRef' type='^{CGImage=}'/>
    <arg name='inTransform' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='outImage' declared_type='CGImageRef*' type='^^{CGImage}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIGetScaleFactor'>
    <retval declared_type='float' type='f'/>
  </function>
  <function name='HIGrowBoxViewIsTransparent'>
    <arg name='inGrowBoxView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIGrowBoxViewSetTransparent'>
    <arg name='inGrowBoxView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inTransparent' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIImageViewCopyImage'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='CGImageRef' already_retained='true' type='^{CGImage=}'/>
  </function>
  <function name='HIImageViewCreate'>
    <arg name='inImage' declared_type='CGImageRef' type='^{CGImage=}'/>
    <arg name='outControl' declared_type='ControlRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIImageViewGetAlpha'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='float' type='f'/>
  </function>
  <function name='HIImageViewGetScaleToFit'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIImageViewIsOpaque'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIImageViewSetAlpha'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inAlpha' declared_type='float' type='f'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIImageViewSetImage'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inImage' declared_type='CGImageRef' type='^{CGImage=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIImageViewSetOpaque'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inOpaque' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIImageViewSetScaleToFit'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inScaleToFit' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIMenuGetContentView'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inMenuType' declared_type='ThemeMenuType' type='S'/>
    <arg name='outView' declared_type='HIViewRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIMenuViewGetMenu'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
  </function>
  <function name='HIMouseTrackingGetParameters'>
    <arg name='inSelector' declared_type='OSType' type='L' type64='I'/>
    <arg name='outTime' declared_type='EventTime*' type='^d'/>
    <arg name='outDistance' declared_type='HISize*' type='^{CGSize=ff}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIObjectCopyClassID'>
    <arg name='inObject' declared_type='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='HIObjectCopyCustomArchiveData'>
    <arg name='inObject' declared_type='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='outCustomData' declared_type='CFDictionaryRef*' type='^^{__CFDictionary}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIObjectCreate'>
    <arg name='inClassID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inConstructData' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <arg name='outObject' declared_type='HIObjectRef*' type='^^{OpaqueHIObjectRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIObjectCreateFromBundle'>
    <arg name='inBundle' declared_type='CFBundleRef' type='^{__CFBundle=}'/>
    <arg name='outObject' declared_type='HIObjectRef*' type='^^{OpaqueHIObjectRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIObjectDynamicCast'>
    <arg name='inObject' declared_type='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inClassID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='void*' type='^v'/>
  </function>
  <function name='HIObjectGetEventTarget'>
    <arg name='inObject' declared_type='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
    <retval declared_type='EventTargetRef' type='^{OpaqueEventTargetRef=}'/>
  </function>
  <function name='HIObjectIsAccessibilityIgnored'>
    <arg name='inObject' declared_type='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIObjectIsArchivingIgnored'>
    <arg name='inObject' declared_type='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIObjectIsOfClass'>
    <arg name='inObject' declared_type='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inObjectClassID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIObjectOverrideAccessibilityContainment'>
    <arg name='inHIObject' declared_type='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inDesiredParent' declared_type='AXUIElementRef' type='^{__AXUIElement=}'/>
    <arg name='inDesiredWindow' declared_type='AXUIElementRef' type='^{__AXUIElement=}'/>
    <arg name='inDesiredTopLevelUIElement' declared_type='AXUIElementRef' type='^{__AXUIElement=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIObjectPrintDebugInfo'>
    <arg name='inObject' declared_type='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HIObjectRegisterSubclass'>
    <arg name='inClassID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inBaseClassID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inOptions' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='inConstructProc' function_pointer='true' declared_type='EventHandlerUPP' type='^?'>
      <arg declared_type='EventHandlerCallRef' type='^{OpaqueEventHandlerCallRef=}'/>
      <arg declared_type='EventRef' type='^{OpaqueEventRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <arg name='inNumEvents' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inEventList' declared_type='EventTypeSpec*' type='^{EventTypeSpec=II}' const='true'/>
    <arg name='inConstructData' declared_type='void*' type='^v'/>
    <arg name='outClassRef' declared_type='HIObjectClassRef*' type='^^{OpaqueHIObjectClassRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIObjectSetAccessibilityIgnored'>
    <arg name='inObject' declared_type='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inIgnored' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIObjectSetArchivingIgnored'>
    <arg name='inObject' declared_type='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inIgnored' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIObjectSetAuxiliaryAccessibilityAttribute'>
    <arg name='inHIObject' declared_type='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inIdentifier' declared_type='UInt64' type='Q'/>
    <arg name='inAttributeName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inAttributeData' declared_type='CFTypeRef' type='@'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIObjectSetCustomArchiveData'>
    <arg name='inObject' declared_type='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inCustomData' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIObjectUnregisterClass'>
    <arg name='inClassRef' declared_type='HIObjectClassRef' type='^{OpaqueHIObjectClassRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIPointConvert'>
    <arg name='ioPoint' declared_type='HIPoint*' type='^{CGPoint=ff}'/>
    <arg name='inSourceSpace' declared_type='HICoordinateSpace' type='L' type64='I'/>
    <arg name='inSourceObject' declared_type='void*' type='^v'/>
    <arg name='inDestinationSpace' declared_type='HICoordinateSpace' type='L' type64='I'/>
    <arg name='inDestinationObject' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HIRectConvert'>
    <arg name='ioRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <arg name='inSourceSpace' declared_type='HICoordinateSpace' type='L' type64='I'/>
    <arg name='inSourceObject' declared_type='void*' type='^v'/>
    <arg name='inDestinationSpace' declared_type='HICoordinateSpace' type='L' type64='I'/>
    <arg name='inDestinationObject' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HIScrollViewCanNavigate'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inAction' declared_type='HIScrollViewAction' type='L' type64='I'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIScrollViewCreate'>
    <arg name='inOptions' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='outView' declared_type='HIViewRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIScrollViewGetScrollBarAutoHide'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIScrollViewNavigate'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inAction' declared_type='HIScrollViewAction' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIScrollViewSetScrollBarAutoHide'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inAutoHide' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISearchFieldChangeAttributes'>
    <arg name='inSearchField' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inAttributesToSet' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='inAttributesToClear' declared_type='OptionBits' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISearchFieldCopyDescriptiveText'>
    <arg name='inSearchField' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='outDescription' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISearchFieldCreate'>
    <arg name='inBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inAttributes' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='inSearchMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inDescriptiveText' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='outRef' declared_type='HIViewRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISearchFieldGetAttributes'>
    <arg name='inSearchField' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='outAttributes' declared_type='OptionBits*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISearchFieldGetSearchMenu'>
    <arg name='inSearchField' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='outSearchMenu' declared_type='MenuRef*' type='^^{OpaqueMenuRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISearchFieldSetDescriptiveText'>
    <arg name='inSearchField' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inDescription' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISearchFieldSetSearchMenu'>
    <arg name='inSearchField' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSearchMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISearchWindowShow'>
    <arg name='inSearchString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inFlags' declared_type='OptionBits' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISegmentedViewChangeSegmentAttributes'>
    <arg name='inSegmentedView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSegmentIndexOneBased' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inAttributesToSet' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='inAttributesToClear' declared_type='OptionBits' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISegmentedViewCopySegmentImage'>
    <arg name='inSegmentedView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSegmentIndexOneBased' declared_type='UInt32' type='L' type64='I'/>
    <arg name='ioImage' declared_type='HIViewImageContentInfo*' type='^{ControlButtonContentInfo=s(?=s^^{CIcon}^*^{OpaqueIconRef}^^{Picture}^*^{CGImage})}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISegmentedViewCopySegmentLabel'>
    <arg name='inSegmentedView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSegmentIndexOneBased' declared_type='UInt32' type='L' type64='I'/>
    <arg name='outLabel' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISegmentedViewCreate'>
    <arg name='inBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='outRef' declared_type='HIViewRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISegmentedViewGetSegmentAttributes'>
    <arg name='inSegmentedView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSegmentIndexOneBased' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OptionBits' type='L' type64='I'/>
  </function>
  <function name='HISegmentedViewGetSegmentBehavior'>
    <arg name='inSegmentedView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSegmentIndexOneBased' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='HISegmentBehavior' type='L' type64='I'/>
  </function>
  <function name='HISegmentedViewGetSegmentCommand'>
    <arg name='inSegmentedView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSegmentIndexOneBased' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='UInt32' type='L' type64='I'/>
  </function>
  <function name='HISegmentedViewGetSegmentContentWidth'>
    <arg name='inSegmentedView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSegmentIndexOneBased' declared_type='UInt32' type='L' type64='I'/>
    <arg name='outAutoCalculated' declared_type='Boolean*' type='^B'/>
    <retval declared_type='float' type='f'/>
  </function>
  <function name='HISegmentedViewGetSegmentCount'>
    <arg name='inSegmentedView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='UInt32' type='L' type64='I'/>
  </function>
  <function name='HISegmentedViewGetSegmentImageContentType'>
    <arg name='inSegmentedView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSegmentIndexOneBased' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='HIViewImageContentType' type='s'/>
  </function>
  <function name='HISegmentedViewGetSegmentValue'>
    <arg name='inSegmentedView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSegmentIndexOneBased' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='SInt32' type='l' type64='i'/>
  </function>
  <function name='HISegmentedViewIsSegmentEnabled'>
    <arg name='inSegmentedView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSegmentIndexOneBased' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HISegmentedViewSetSegmentBehavior'>
    <arg name='inSegmentedView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSegmentIndexOneBased' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inBehavior' declared_type='HISegmentBehavior' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISegmentedViewSetSegmentCommand'>
    <arg name='inSegmentedView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSegmentIndexOneBased' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inCommand' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISegmentedViewSetSegmentContentWidth'>
    <arg name='inSegmentedView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSegmentIndexOneBased' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inAutoCalculateWidth' declared_type='Boolean' type='B'/>
    <arg name='inWidth' declared_type='float' type='f'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISegmentedViewSetSegmentCount'>
    <arg name='inSegmentedView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSegmentCount' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISegmentedViewSetSegmentEnabled'>
    <arg name='inSegmentedView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSegmentIndexOneBased' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inEnabled' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISegmentedViewSetSegmentImage'>
    <arg name='inSegmentedView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSegmentIndexOneBased' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inImage' declared_type='HIViewImageContentInfo*' type='^{ControlButtonContentInfo=s(?=s^^{CIcon}^*^{OpaqueIconRef}^^{Picture}^*^{CGImage})}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISegmentedViewSetSegmentLabel'>
    <arg name='inSegmentedView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSegmentIndexOneBased' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inLabel' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISegmentedViewSetSegmentValue'>
    <arg name='inSegmentedView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSegmentIndexOneBased' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inValue' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIShapeContainsPoint'>
    <arg name='inShape' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <arg name='inPoint' declared_type='HIPoint*' type='^{CGPoint=ff}' const='true'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIShapeCreateCopy'>
    <arg name='inShape' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <retval declared_type='HIShapeRef' already_retained='true' type='^{__HIShape=}'/>
  </function>
  <function name='HIShapeCreateDifference'>
    <arg name='inShape1' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <arg name='inShape2' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <retval declared_type='HIShapeRef' already_retained='true' type='^{__HIShape=}'/>
  </function>
  <function name='HIShapeCreateEmpty'>
    <retval declared_type='HIShapeRef' already_retained='true' type='^{__HIShape=}'/>
  </function>
  <function name='HIShapeCreateIntersection'>
    <arg name='inShape1' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <arg name='inShape2' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <retval declared_type='HIShapeRef' already_retained='true' type='^{__HIShape=}'/>
  </function>
  <function name='HIShapeCreateMutable'>
    <retval declared_type='HIMutableShapeRef' already_retained='true' type='^{__HIShape=}'/>
  </function>
  <function name='HIShapeCreateMutableCopy'>
    <arg name='inOrig' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <retval declared_type='HIMutableShapeRef' already_retained='true' type='^{__HIShape=}'/>
  </function>
  <function name='HIShapeCreateUnion'>
    <arg name='inShape1' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <arg name='inShape2' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <retval declared_type='HIShapeRef' already_retained='true' type='^{__HIShape=}'/>
  </function>
  <function name='HIShapeCreateWithQDRgn'>
    <arg name='inRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='HIShapeRef' already_retained='true' type='^{__HIShape=}'/>
  </function>
  <function name='HIShapeCreateWithRect'>
    <arg name='inRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <retval declared_type='HIShapeRef' already_retained='true' type='^{__HIShape=}'/>
  </function>
  <function name='HIShapeDifference'>
    <arg name='inShape1' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <arg name='inShape2' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <arg name='outResult' declared_type='HIMutableShapeRef' type='^{__HIShape=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIShapeGetAsQDRgn'>
    <arg name='inShape' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <arg name='outRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIShapeGetBounds'>
    <arg name='inShape' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <arg name='outRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <retval declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
  </function>
  <function name='HIShapeGetTypeID'>
    <retval declared_type='CFTypeID' type='L' type64='I'/>
  </function>
  <function name='HIShapeIntersect'>
    <arg name='inShape1' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <arg name='inShape2' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <arg name='outResult' declared_type='HIMutableShapeRef' type='^{__HIShape=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIShapeIntersectsRect'>
    <arg name='inShape' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <arg name='inRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIShapeIsEmpty'>
    <arg name='inShape' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIShapeIsRectangular'>
    <arg name='inShape' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIShapeOffset'>
    <arg name='inShape' declared_type='HIMutableShapeRef' type='^{__HIShape=}'/>
    <arg name='inDX' declared_type='float' type='f'/>
    <arg name='inDY' declared_type='float' type='f'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIShapeReplacePathInCGContext'>
    <arg name='inShape' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIShapeSetEmpty'>
    <arg name='inShape' declared_type='HIMutableShapeRef' type='^{__HIShape=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIShapeSetQDClip'>
    <arg name='inShape' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <arg name='inPort' declared_type='CGrafPtr' type='^{OpaqueGrafPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIShapeUnion'>
    <arg name='inShape1' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <arg name='inShape2' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <arg name='outResult' declared_type='HIMutableShapeRef' type='^{__HIShape=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HISizeConvert'>
    <arg name='ioSize' declared_type='HISize*' type='^{CGSize=ff}'/>
    <arg name='inSourceSpace' declared_type='HICoordinateSpace' type='L' type64='I'/>
    <arg name='inSourceObject' declared_type='void*' type='^v'/>
    <arg name='inDestinationSpace' declared_type='HICoordinateSpace' type='L' type64='I'/>
    <arg name='inDestinationObject' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HITextViewCopyBackgroundColor'>
    <arg name='inTextView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='outColor' declared_type='CGColorRef*' type='^^{CGColor}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HITextViewCreate'>
    <arg name='inBoundsRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inOptions' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='inTXNFrameOptions' declared_type='TXNFrameOptions' type='L' type64='I'/>
    <arg name='outTextView' declared_type='HIViewRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HITextViewGetTXNObject'>
    <arg name='inTextView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
  </function>
  <function name='HITextViewSetBackgroundColor'>
    <arg name='inTextView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inColor' declared_type='CGColorRef' type='^{CGColor=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeApplyBackground'>
    <arg name='inBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeBackgroundDrawInfo*' type='^{HIThemeBackgroundDrawInfo=III}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeBrushCreateCGColor'>
    <arg name='inBrush' declared_type='ThemeBrush' type='s'/>
    <arg name='outColor' declared_type='CGColorRef*' type='^^{CGColor}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawBackground'>
    <arg name='inBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeBackgroundDrawInfo*' type='^{HIThemeBackgroundDrawInfo=III}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawButton'>
    <arg name='inBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeButtonDrawInfo*' type='^{HIThemeButtonDrawInfo=IISSS(?={HIThemeAnimationTimeInfo=dd}{HIThemeAnimationFrameInfo=I})}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <arg name='outLabelRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawChasingArrows'>
    <arg name='inBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeChasingArrowsDrawInfo*' type='^{HIThemeChasingArrowsDrawInfo=III}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawFocusRect'>
    <arg name='inRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inHasFocus' declared_type='Boolean' type='B'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawFrame'>
    <arg name='inRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeFrameDrawInfo*' type='^{HIThemeFrameDrawInfo=IIIB}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawGenericWell'>
    <arg name='inRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeButtonDrawInfo*' type='^{HIThemeButtonDrawInfo=IISSS(?={HIThemeAnimationTimeInfo=dd}{HIThemeAnimationFrameInfo=I})}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawGrabber'>
    <arg name='inRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeGrabberDrawInfo*' type='^{HIThemeGrabberDrawInfo=II}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawGroupBox'>
    <arg name='inRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeGroupBoxDrawInfo*' type='^{HIThemeGroupBoxDrawInfo=III}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawGrowBox'>
    <arg name='inOrigin' declared_type='HIPoint*' type='^{CGPoint=ff}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeGrowBoxDrawInfo*' type='^{HIThemeGrowBoxDrawInfo=IIISI}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawHeader'>
    <arg name='inRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeHeaderDrawInfo*' type='^{HIThemeHeaderDrawInfo=III}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawMenuBackground'>
    <arg name='inMenuRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inMenuDrawInfo' declared_type='HIThemeMenuDrawInfo*' type='^{HIThemeMenuDrawInfo=IS}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawMenuBarBackground'>
    <arg name='inBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeMenuBarDrawInfo*' type='^{HIThemeMenuBarDrawInfo=ISI}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawMenuItem'>
    <arg name='inMenuRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inItemRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inItemDrawInfo' declared_type='HIThemeMenuItemDrawInfo*' type='^{HIThemeMenuItemDrawInfo=ISS}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <arg name='outContentRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawMenuSeparator'>
    <arg name='inMenuRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inItemRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inItemDrawInfo' declared_type='HIThemeMenuItemDrawInfo*' type='^{HIThemeMenuItemDrawInfo=ISS}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawMenuTitle'>
    <arg name='inMenuBarRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inTitleRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeMenuTitleDrawInfo*' type='^{HIThemeMenuTitleDrawInfo=ISIf}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <arg name='outLabelRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawPaneSplitter'>
    <arg name='inRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeSplitterDrawInfo*' type='^{HIThemeSplitterDrawInfo=III}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawPlacard'>
    <arg name='inRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemePlacardDrawInfo*' type='^{HIThemePlacardDrawInfo=II}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawPopupArrow'>
    <arg name='inBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemePopupArrowDrawInfo*' type='^{HIThemePopupArrowDrawInfo=IISS}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawScrollBarDelimiters'>
    <arg name='inContRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeScrollBarDelimitersDrawInfo*' type='^{HIThemeScrollBarDelimitersDrawInfo=IISI}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawSegment'>
    <arg name='inBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeSegmentDrawInfo*' type='^{HIThemeSegmentDrawInfo=IISIIII}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawSeparator'>
    <arg name='inRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeSeparatorDrawInfo*' type='^{HIThemeSeparatorDrawInfo=II}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawTab'>
    <arg name='inRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeTabDrawInfo*' type='^{HIThemeTabDrawInfo=ISSIIII}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <arg name='outLabelRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawTabPane'>
    <arg name='inRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeTabPaneDrawInfo*' type='^{HIThemeTabPaneDrawInfo=IISIII}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawTextBox'>
    <arg name='inString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inTextInfo' declared_type='HIThemeTextInfo*' type='^{HIThemeTextInfo=IISIIIIIB}'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawTickMark'>
    <arg name='inBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeTickMarkDrawInfo*' type='^{HIThemeTickMarkDrawInfo=II}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawTitleBarWidget'>
    <arg name='inContRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeWindowWidgetDrawInfo*' type='^{HIThemeWindowWidgetDrawInfo=IISISIff}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawTrack'>
    <arg name='inDrawInfo' declared_type='HIThemeTrackDrawInfo*' type='^{HIThemeTrackDrawInfo=IS{CGRect={CGPoint=ff}{CGSize=ff}}iiiISCC(?={ScrollBarTrackInfo=iC}{SliderTrackInfo=CC}{ProgressTrackInfo=C})}' const='true'/>
    <arg name='inGhostRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawTrackTickMarks'>
    <arg name='inDrawInfo' declared_type='HIThemeTrackDrawInfo*' type='^{HIThemeTrackDrawInfo=IS{CGRect={CGPoint=ff}{CGSize=ff}}iiiISCC(?={ScrollBarTrackInfo=iC}{SliderTrackInfo=CC}{ProgressTrackInfo=C})}' const='true'/>
    <arg name='inNumTicks' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeDrawWindowFrame'>
    <arg name='inContRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeWindowDrawInfo*' type='^{HIThemeWindowDrawInfo=IISIff}' const='true'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <arg name='outTitleRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeGetButtonBackgroundBounds'>
    <arg name='inBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeButtonDrawInfo*' type='^{HIThemeButtonDrawInfo=IISSS(?={HIThemeAnimationTimeInfo=dd}{HIThemeAnimationFrameInfo=I})}' const='true'/>
    <arg name='outBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeGetButtonContentBounds'>
    <arg name='inBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeButtonDrawInfo*' type='^{HIThemeButtonDrawInfo=IISSS(?={HIThemeAnimationTimeInfo=dd}{HIThemeAnimationFrameInfo=I})}' const='true'/>
    <arg name='outBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeGetButtonShape'>
    <arg name='inBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeButtonDrawInfo*' type='^{HIThemeButtonDrawInfo=IISSS(?={HIThemeAnimationTimeInfo=dd}{HIThemeAnimationFrameInfo=I})}' const='true'/>
    <arg name='outShape' declared_type='HIShapeRef*' type='^^{__HIShape}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeGetGrowBoxBounds'>
    <arg name='inOrigin' declared_type='HIPoint*' type='^{CGPoint=ff}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeGrowBoxDrawInfo*' type='^{HIThemeGrowBoxDrawInfo=IIISI}' const='true'/>
    <arg name='outBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeGetMenuBackgroundShape'>
    <arg name='inMenuRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inMenuDrawInfo' declared_type='HIThemeMenuDrawInfo*' type='^{HIThemeMenuDrawInfo=IS}' const='true'/>
    <arg name='outShape' declared_type='HIShapeRef*' type='^^{__HIShape}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeGetScrollBarTrackRect'>
    <arg name='inBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inTrackInfo' declared_type='HIScrollBarTrackInfo*' type='^{HIScrollBarTrackInfo=ICCf}' const='true'/>
    <arg name='inIsHoriz' declared_type='Boolean' type='B'/>
    <arg name='outTrackBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeGetTabDrawShape'>
    <arg name='inRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeTabDrawInfo*' type='^{HIThemeTabDrawInfo=ISSIIII}' const='true'/>
    <arg name='outShape' declared_type='HIShapeRef*' type='^^{__HIShape}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeGetTabPaneContentShape'>
    <arg name='inRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDirection' declared_type='ThemeTabDirection' type='S'/>
    <arg name='inTabSize' declared_type='HIThemeTabSize' type='L' type64='I'/>
    <arg name='outShape' declared_type='HIShapeRef*' type='^^{__HIShape}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeGetTabPaneDrawShape'>
    <arg name='inRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDirection' declared_type='ThemeTabDirection' type='S'/>
    <arg name='inTabSize' declared_type='HIThemeTabSize' type='L' type64='I'/>
    <arg name='outShape' declared_type='HIShapeRef*' type='^^{__HIShape}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeGetTabShape'>
    <arg name='inRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeTabDrawInfo*' type='^{HIThemeTabDrawInfo=ISSIIII}' const='true'/>
    <arg name='outShape' declared_type='HIShapeRef*' type='^^{__HIShape}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeGetTextDimensions'>
    <arg name='inString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inWidth' declared_type='float' type='f'/>
    <arg name='inTextInfo' declared_type='HIThemeTextInfo*' type='^{HIThemeTextInfo=IISIIIIIB}'/>
    <arg name='outWidth' declared_type='float*' type='^f'/>
    <arg name='outHeight' declared_type='float*' type='^f'/>
    <arg name='outBaseline' declared_type='float*' type='^f'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeGetTrackBounds'>
    <arg name='inDrawInfo' declared_type='HIThemeTrackDrawInfo*' type='^{HIThemeTrackDrawInfo=IS{CGRect={CGPoint=ff}{CGSize=ff}}iiiISCC(?={ScrollBarTrackInfo=iC}{SliderTrackInfo=CC}{ProgressTrackInfo=C})}' const='true'/>
    <arg name='outBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeGetTrackDragRect'>
    <arg name='inDrawInfo' declared_type='HIThemeTrackDrawInfo*' type='^{HIThemeTrackDrawInfo=IS{CGRect={CGPoint=ff}{CGSize=ff}}iiiISCC(?={ScrollBarTrackInfo=iC}{SliderTrackInfo=CC}{ProgressTrackInfo=C})}' const='true'/>
    <arg name='outDragRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeGetTrackLiveValue'>
    <arg name='inDrawInfo' declared_type='HIThemeTrackDrawInfo*' type='^{HIThemeTrackDrawInfo=IS{CGRect={CGPoint=ff}{CGSize=ff}}iiiISCC(?={ScrollBarTrackInfo=iC}{SliderTrackInfo=CC}{ProgressTrackInfo=C})}' const='true'/>
    <arg name='inRelativePosition' declared_type='float' type='f'/>
    <arg name='outValue' declared_type='SInt32*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeGetTrackPartBounds'>
    <arg name='inDrawInfo' declared_type='HIThemeTrackDrawInfo*' type='^{HIThemeTrackDrawInfo=IS{CGRect={CGPoint=ff}{CGSize=ff}}iiiISCC(?={ScrollBarTrackInfo=iC}{SliderTrackInfo=CC}{ProgressTrackInfo=C})}' const='true'/>
    <arg name='inPartCode' declared_type='ControlPartCode' type='s'/>
    <arg name='outPartBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeGetTrackParts'>
    <arg name='inDrawInfo' declared_type='HIThemeTrackDrawInfo*' type='^{HIThemeTrackDrawInfo=IS{CGRect={CGPoint=ff}{CGSize=ff}}iiiISCC(?={ScrollBarTrackInfo=iC}{SliderTrackInfo=CC}{ProgressTrackInfo=C})}' const='true'/>
    <arg name='outNumberOfParts' declared_type='UInt32*' type='^I'/>
    <arg name='inMaxParts' declared_type='UInt32' type='L' type64='I'/>
    <arg name='ioPartsBuffer' declared_type='ControlPartCode*' type='^s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeGetTrackThumbPositionFromBounds'>
    <arg name='inDrawInfo' declared_type='HIThemeTrackDrawInfo*' type='^{HIThemeTrackDrawInfo=IS{CGRect={CGPoint=ff}{CGSize=ff}}iiiISCC(?={ScrollBarTrackInfo=iC}{SliderTrackInfo=CC}{ProgressTrackInfo=C})}' const='true'/>
    <arg name='inThumbBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='outRelativePosition' declared_type='float*' type='^f'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeGetTrackThumbPositionFromOffset'>
    <arg name='inDrawInfo' declared_type='HIThemeTrackDrawInfo*' type='^{HIThemeTrackDrawInfo=IS{CGRect={CGPoint=ff}{CGSize=ff}}iiiISCC(?={ScrollBarTrackInfo=iC}{SliderTrackInfo=CC}{ProgressTrackInfo=C})}' const='true'/>
    <arg name='inThumbOffset' declared_type='HIPoint*' type='^{CGPoint=ff}' const='true'/>
    <arg name='outRelativePosition' declared_type='float*' type='^f'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeGetTrackThumbShape'>
    <arg name='inDrawInfo' declared_type='HIThemeTrackDrawInfo*' type='^{HIThemeTrackDrawInfo=IS{CGRect={CGPoint=ff}{CGSize=ff}}iiiISCC(?={ScrollBarTrackInfo=iC}{SliderTrackInfo=CC}{ProgressTrackInfo=C})}' const='true'/>
    <arg name='outThumbShape' declared_type='HIShapeRef*' type='^^{__HIShape}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeGetWindowRegionHit'>
    <arg name='inContRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeWindowDrawInfo*' type='^{HIThemeWindowDrawInfo=IISIff}' const='true'/>
    <arg name='inPoint' declared_type='HIPoint*' type='^{CGPoint=ff}' const='true'/>
    <arg name='outRegionHit' declared_type='WindowRegionCode*' type='^S'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIThemeGetWindowShape'>
    <arg name='inContRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDrawInfo' declared_type='HIThemeWindowDrawInfo*' type='^{HIThemeWindowDrawInfo=IISIff}' const='true'/>
    <arg name='inWinRegion' declared_type='WindowRegionCode' type='S'/>
    <arg name='outShape' declared_type='HIShapeRef*' type='^^{__HIShape}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeHitTestScrollBarArrows'>
    <arg name='inScrollBarBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inTrackInfo' declared_type='HIScrollBarTrackInfo*' type='^{HIScrollBarTrackInfo=ICCf}' const='true'/>
    <arg name='inIsHoriz' declared_type='Boolean' type='B'/>
    <arg name='inPtHit' declared_type='HIPoint*' type='^{CGPoint=ff}' const='true'/>
    <arg name='outTrackBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <arg name='outPartCode' declared_type='ControlPartCode*' type='^s'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIThemeHitTestTrack'>
    <arg name='inDrawInfo' declared_type='HIThemeTrackDrawInfo*' type='^{HIThemeTrackDrawInfo=IS{CGRect={CGPoint=ff}{CGSize=ff}}iiiISCC(?={ScrollBarTrackInfo=iC}{SliderTrackInfo=CC}{ProgressTrackInfo=C})}' const='true'/>
    <arg name='inMousePoint' declared_type='HIPoint*' type='^{CGPoint=ff}' const='true'/>
    <arg name='outPartHit' declared_type='ControlPartCode*' type='^s'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIThemeSetFill'>
    <arg name='inBrush' declared_type='ThemeBrush' type='s'/>
    <arg name='inInfo' declared_type='void*' type='^v'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeSetStroke'>
    <arg name='inBrush' declared_type='ThemeBrush' type='s'/>
    <arg name='inInfo' declared_type='void*' type='^v'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIThemeSetTextFill'>
    <arg name='inColor' declared_type='ThemeTextColor' type='s'/>
    <arg name='inInfo' declared_type='void*' type='^v'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inOrientation' declared_type='HIThemeOrientation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarAppendItem'>
    <arg name='inToolbar' declared_type='HIToolbarRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarChangeAttributes'>
    <arg name='inToolbar' declared_type='HIToolbarRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inAttrsToSet' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='inAttrsToClear' declared_type='OptionBits' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarCopyIdentifier'>
    <arg name='inToolbar' declared_type='HIToolbarRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='outIdentifier' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarCopyItems'>
    <arg name='inToolbar' declared_type='HIToolbarRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='outItems' declared_type='CFArrayRef*' type='^^{__CFArray}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarCreate'>
    <arg name='inIdentifier' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inAttributes' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='outToolbar' declared_type='HIToolbarRef*' type='^^{OpaqueHIObjectRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarCreateItemWithIdentifier'>
    <arg name='inToolbar' declared_type='HIToolbarRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inIdentifier' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inConfigData' declared_type='CFTypeRef' type='@'/>
    <arg name='outItem' declared_type='HIToolbarItemRef*' type='^^{OpaqueHIObjectRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarGetAttributes'>
    <arg name='inToolbar' declared_type='HIToolbarRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='outAttributes' declared_type='OptionBits*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarGetDelegate'>
    <arg name='inToolbar' declared_type='HIToolbarRef' type='^{OpaqueHIObjectRef=}'/>
    <retval declared_type='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
  </function>
  <function name='HIToolbarGetDisplayMode'>
    <arg name='inToolbar' declared_type='HIToolbarRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='outDisplayMode' declared_type='HIToolbarDisplayMode*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarGetDisplaySize'>
    <arg name='inToolbar' declared_type='HIToolbarRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='outSize' declared_type='HIToolbarDisplaySize*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarGetSelectedItemInWindow'>
    <arg name='inToolbar' declared_type='HIToolbarRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outItem' declared_type='HIToolbarItemRef*' type='^^{OpaqueHIObjectRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarInsertItemAtIndex'>
    <arg name='inToolbar' declared_type='HIToolbarRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inIndex' declared_type='CFIndex' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarItemChangeAttributes'>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inAttrsToSet' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='inAttrsToClear' declared_type='OptionBits' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarItemChangeAttributesInWindow'>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inAttrsToSet' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='inAttrsToClear' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='inAttrsToNoLongerOverride' declared_type='OptionBits' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarItemConfigDataChanged'>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarItemCopyHelpText'>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='outShortText' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <arg name='outLongText' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarItemCopyIdentifier'>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='outIdentifier' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarItemCopyImage'>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='outImage' declared_type='CGImageRef*' type='^^{CGImage}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarItemCopyLabel'>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='outLabel' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarItemCopyMenu'>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='outMenu' declared_type='MenuRef*' type='^^{OpaqueMenuRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarItemCreate'>
    <arg name='inIdentifier' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inOptions' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='outItem' declared_type='HIToolbarItemRef*' type='^^{OpaqueHIObjectRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarItemGetAttributes'>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='outAttributes' declared_type='OptionBits*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarItemGetAttributesInWindow'>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outOverriddenAttributes' declared_type='OptionBits*' type='^I'/>
    <arg name='outCombinedAttributes' declared_type='OptionBits*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarItemGetCommandID'>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='outCommandID' declared_type='MenuCommand*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarItemGetToolbar'>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <retval declared_type='HIToolbarRef' type='^{OpaqueHIObjectRef=}'/>
  </function>
  <function name='HIToolbarItemIsEnabled'>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIToolbarItemSetCommandID'>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inCommandID' declared_type='MenuCommand' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarItemSetEnabled'>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inEnabled' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarItemSetHelpText'>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inShortText' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inLongText' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarItemSetIconRef'>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inIcon' declared_type='IconRef' type='^{OpaqueIconRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarItemSetImage'>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inImage' declared_type='CGImageRef' type='^{CGImage=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarItemSetLabel'>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inLabel' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarItemSetMenu'>
    <arg name='inItem' declared_type='HIToolbarItemRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarRemoveItemAtIndex'>
    <arg name='inToolbar' declared_type='HIToolbarRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inIndex' declared_type='CFIndex' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarSetDelegate'>
    <arg name='inToolbar' declared_type='HIToolbarRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inDelegate' declared_type='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarSetDisplayMode'>
    <arg name='inToolbar' declared_type='HIToolbarRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inDisplayMode' declared_type='HIToolbarDisplayMode' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarSetDisplaySize'>
    <arg name='inToolbar' declared_type='HIToolbarRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inSize' declared_type='HIToolbarDisplaySize' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIToolbarSetItemsWithIdentifiers'>
    <arg name='inToolbar' declared_type='HIToolbarRef' type='^{OpaqueHIObjectRef=}'/>
    <arg name='inArray' declared_type='CFArrayRef' type='^{__CFArray=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewAddSubview'>
    <arg name='inParent' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inNewChild' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewAdvanceFocus'>
    <arg name='inRootForFocus' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inModifiers' declared_type='EventModifiers' type='S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewApplyLayout'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewChangeAttributes'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inAttrsToSet' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='inAttrsToClear' declared_type='OptionBits' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewChangeFeatures'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inFeaturesToSet' declared_type='HIViewFeatures' type='Q'/>
    <arg name='inFeaturesToClear' declared_type='HIViewFeatures' type='Q'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewChangeTrackingArea'>
    <arg name='inArea' declared_type='HIViewTrackingAreaRef' type='^{OpaqueHIViewTrackingAreaRef=}'/>
    <arg name='inShape' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewClick'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewConvertPoint'>
    <arg name='ioPoint' declared_type='HIPoint*' type='^{CGPoint=ff}'/>
    <arg name='inSourceView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inDestView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewConvertRect'>
    <arg name='ioRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <arg name='inSourceView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inDestView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewConvertRegion'>
    <arg name='ioRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='inSourceView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inDestView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewCopyShape'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inPart' declared_type='HIViewPartCode' type='s'/>
    <arg name='outShape' declared_type='HIShapeRef*' type='^^{__HIShape}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewCopyText'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='CFStringRef' already_retained='true' type='^{__CFString=}'/>
  </function>
  <function name='HIViewCountSubviews'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='CFIndex' type='l' type64='i'/>
  </function>
  <function name='HIViewCreateOffscreenImage'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inOptions' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='outFrame' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <arg name='outImage' declared_type='CGImageRef*' type='^^{CGImage}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewDisposeTrackingArea'>
    <arg name='inArea' declared_type='HIViewTrackingAreaRef' type='^{OpaqueHIViewTrackingAreaRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewDrawCGImage'>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <arg name='inBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inImage' declared_type='CGImageRef' type='^{CGImage=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewFindByID'>
    <arg name='inStartView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inID' declared_type='HIViewID' type='{ControlID=Ii}'/>
    <arg name='outControl' declared_type='HIViewRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewFlashDirtyArea'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewGetAttributes'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='outAttrs' declared_type='OptionBits*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewGetBounds'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='outRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewGetCommandID'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='outCommandID' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewGetEventTarget'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='EventTargetRef' type='^{OpaqueEventTargetRef=}'/>
  </function>
  <function name='HIViewGetFeatures'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='outFeatures' declared_type='HIViewFeatures*' type='^Q'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewGetFirstSubview'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
  </function>
  <function name='HIViewGetFocusPart'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='outFocusPart' declared_type='HIViewPartCode*' type='^s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewGetFrame'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='outRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewGetID'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='outID' declared_type='HIViewID*' type='^{ControlID=Ii}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewGetIndexedSubview'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSubviewIndex' declared_type='CFIndex' type='l' type64='i'/>
    <arg name='outSubview' declared_type='HIViewRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewGetKind'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='outViewKind' declared_type='HIViewKind*' type='^{HIViewKind=II}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewGetLastSubview'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
  </function>
  <function name='HIViewGetLayoutInfo'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='outLayoutInfo' declared_type='HILayoutInfo*' type='^{HILayoutInfo=I{HIBinding={HISideBinding=^{OpaqueControlRef}Sf}{HISideBinding=^{OpaqueControlRef}Sf}{HISideBinding=^{OpaqueControlRef}Sf}{HISideBinding=^{OpaqueControlRef}Sf}}{HIScaling={HIAxisScale=^{OpaqueControlRef}Sf}{HIAxisScale=^{OpaqueControlRef}Sf}}{HIPositioning={HIAxisPosition=^{OpaqueControlRef}Sf}{HIAxisPosition=^{OpaqueControlRef}Sf}}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewGetMaximum'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='SInt32' type='l' type64='i'/>
  </function>
  <function name='HIViewGetMinimum'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='SInt32' type='l' type64='i'/>
  </function>
  <function name='HIViewGetNeedsDisplay'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIViewGetNextView'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
  </function>
  <function name='HIViewGetOptimalBounds'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='outBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <arg name='outBaseLineOffset' declared_type='float*' type='^f'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewGetPartHit'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inPoint' declared_type='HIPoint*' type='^{CGPoint=ff}' const='true'/>
    <arg name='outPart' declared_type='HIViewPartCode*' type='^s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewGetPreviousView'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
  </function>
  <function name='HIViewGetRoot'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
  </function>
  <function name='HIViewGetSizeConstraints'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='outMinSize' declared_type='HISize*' type='^{CGSize=ff}'/>
    <arg name='outMaxSize' declared_type='HISize*' type='^{CGSize=ff}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewGetSubviewHit'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inPoint' declared_type='HIPoint*' type='^{CGPoint=ff}' const='true'/>
    <arg name='inDeep' declared_type='Boolean' type='B'/>
    <arg name='outView' declared_type='HIViewRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewGetSuperview'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
  </function>
  <function name='HIViewGetTrackingAreaID'>
    <arg name='inArea' declared_type='HIViewTrackingAreaRef' type='^{OpaqueHIViewTrackingAreaRef=}'/>
    <arg name='outID' declared_type='HIViewTrackingAreaID*' type='^Q'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewGetValue'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='SInt32' type='l' type64='i'/>
  </function>
  <function name='HIViewGetViewForMouseEvent'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <arg name='outView' declared_type='HIViewRef*' type='^^{OpaqueControlRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewGetViewSize'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='SInt32' type='l' type64='i'/>
  </function>
  <function name='HIViewGetWindow'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
  </function>
  <function name='HIViewIsActive'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='outIsLatentActive' declared_type='Boolean*' type='^B'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIViewIsCompositingEnabled'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIViewIsDrawingEnabled'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIViewIsEnabled'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='outIsLatentEnabled' declared_type='Boolean*' type='^B'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIViewIsLatentlyVisible'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIViewIsLayoutActive'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIViewIsLayoutLatentlyActive'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIViewIsValid'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIViewIsVisible'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIViewMoveBy'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inDX' declared_type='float' type='f'/>
    <arg name='inDY' declared_type='float' type='f'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewNewTrackingArea'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inShape' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <arg name='inID' declared_type='HIViewTrackingAreaID' type='Q'/>
    <arg name='outRef' declared_type='HIViewTrackingAreaRef*' type='^^{OpaqueHIViewTrackingAreaRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewPlaceInSuperviewAt'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inX' declared_type='float' type='f'/>
    <arg name='inY' declared_type='float' type='f'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewRegionChanged'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inRegionCode' declared_type='HIViewPartCode' type='s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewRemoveFromSuperview'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewRender'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewReshapeStructure'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewResumeLayout'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewScrollRect'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inDX' declared_type='float' type='f'/>
    <arg name='inDY' declared_type='float' type='f'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetActivated'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSetActivated' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetBoundsOrigin'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inX' declared_type='float' type='f'/>
    <arg name='inY' declared_type='float' type='f'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetCommandID'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inCommandID' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetDrawingEnabled'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inEnabled' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetEnabled'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSetEnabled' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetFirstSubViewFocus'>
    <arg name='inParent' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inSubView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetFrame'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetHilite'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inHilitePart' declared_type='HIViewPartCode' type='s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetID'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inID' declared_type='HIViewID' type='{ControlID=Ii}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetLayoutInfo'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inLayoutInfo' declared_type='HILayoutInfo*' type='^{HILayoutInfo=I{HIBinding={HISideBinding=^{OpaqueControlRef}Sf}{HISideBinding=^{OpaqueControlRef}Sf}{HISideBinding=^{OpaqueControlRef}Sf}{HISideBinding=^{OpaqueControlRef}Sf}}{HIScaling={HIAxisScale=^{OpaqueControlRef}Sf}{HIAxisScale=^{OpaqueControlRef}Sf}}{HIPositioning={HIAxisPosition=^{OpaqueControlRef}Sf}{HIAxisPosition=^{OpaqueControlRef}Sf}}}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetMaximum'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inMaximum' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetMinimum'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inMinimum' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetNeedsDisplay'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inNeedsDisplay' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetNeedsDisplayInRect'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inNeedsDisplay' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetNeedsDisplayInRegion'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='inNeedsDisplay' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetNeedsDisplayInShape'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inArea' declared_type='HIShapeRef' type='^{__HIShape=}'/>
    <arg name='inNeedsDisplay' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetNextFocus'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inNextFocus' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetText'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inText' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetValue'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inValue' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetViewSize'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inViewSize' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetVisible'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inVisible' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSetZOrder'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inOp' declared_type='HIViewZOrderOp' type='L' type64='I'/>
    <arg name='inOther' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSimulateClick'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <arg name='inPartToClick' declared_type='HIViewPartCode' type='s'/>
    <arg name='inModifiers' declared_type='UInt32' type='L' type64='I'/>
    <arg name='outPartClicked' declared_type='HIViewPartCode*' type='^s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIViewSubtreeContainsFocus'>
    <arg name='inSubtreeStart' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIViewSuspendLayout'>
    <arg name='inView' declared_type='HIViewRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIWindowChangeAvailability'>
    <arg name='inWindow' declared_type='HIWindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inSetAvailability' declared_type='HIWindowAvailability' type='L' type64='I'/>
    <arg name='inClearAvailability' declared_type='HIWindowAvailability' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIWindowChangeClass'>
    <arg name='inWindow' declared_type='HIWindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inWindowClass' declared_type='WindowClass' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIWindowChangeFeatures'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inSetThese' declared_type='UInt64' type='Q'/>
    <arg name='inClearThese' declared_type='UInt64' type='Q'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIWindowFlush'>
    <arg name='inWindow' declared_type='HIWindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIWindowGetAvailability'>
    <arg name='inWindow' declared_type='HIWindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outAvailability' declared_type='HIWindowAvailability*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIWindowGetProxyFSRef'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outRef' declared_type='FSRef*' type='^{FSRef=[80C]}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIWindowGetScaleMode'>
    <arg name='inWindow' declared_type='HIWindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outMode' declared_type='HIWindowScaleMode*' type='^I'/>
    <arg name='outScaleFactor' declared_type='float*' type='^f'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIWindowInvalidateShadow'>
    <arg name='inWindow' declared_type='HIWindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIWindowIsDocumentModalTarget'>
    <arg name='inWindow' declared_type='HIWindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outOwner' declared_type='HIWindowRef*' type='^^{OpaqueWindowPtr}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HIWindowSetProxyFSRef'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inRef' declared_type='FSRef*' type='^{FSRef=[80C]}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HIWindowSetToolbarView'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inView' declared_type='void*' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMAreHelpTagsDisplayed'>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HMDisplayTag'>
    <arg name='inContent' declared_type='HMHelpContentRec*' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMGetControlContentCallback'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='outContentUPP' declared_type='HMControlContentUPP*' type='^^?'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMGetControlHelpContent'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='outContent' declared_type='HMHelpContentRec*' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMGetHelpMenu'>
    <arg name='outHelpMenu' declared_type='MenuRef*' type='^^{OpaqueMenuRef}'/>
    <arg name='outFirstCustomItemIndex' declared_type='MenuItemIndex*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMGetMenuItemContentCallback'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='outContentUPP' declared_type='HMMenuItemContentUPP*' type='^^?'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMGetMenuItemHelpContent'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='outContent' declared_type='HMHelpContentRec*' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMGetMenuTitleContentCallback'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='outContentUPP' declared_type='HMMenuTitleContentUPP*' type='^^?'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMGetTagDelay'>
    <arg name='outDelay' declared_type='Duration*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMGetWindowContentCallback'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outContentUPP' declared_type='HMWindowContentUPP*' type='^^?'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMGetWindowHelpContent'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outContent' declared_type='HMHelpContentRec*' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMHideTag'>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMHideTagWithOptions'>
    <arg name='inOptions' declared_type='OptionBits' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMInstallControlContentCallback'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inContentUPP' function_pointer='true' declared_type='HMControlContentUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMInstallMenuItemContentCallback'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inContentUPP' function_pointer='true' declared_type='HMMenuItemContentUPP' type='^?'>
      <arg declared_type='MenuTrackingData*' type='^{MenuTrackingData=^{OpaqueMenuRef}SS{Rect=ssss}ii}' const='true'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMInstallMenuTitleContentCallback'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inContentUPP' function_pointer='true' declared_type='HMMenuTitleContentUPP' type='^?'>
      <arg declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMInstallWindowContentCallback'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inContentUPP' function_pointer='true' declared_type='HMWindowContentUPP' type='^?'>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMSetControlHelpContent'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inContent' declared_type='HMHelpContentRec*' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMSetDialogHelpFromBalloonRsrc'>
    <arg name='inDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='inHdlgRsrcID' declared_type='SInt16' type='s'/>
    <arg name='inItemStart' declared_type='SInt16' type='s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMSetHelpTagsDisplayed'>
    <arg name='inDisplayTags' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMSetMenuHelpFromBalloonRsrc'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inHmnuRsrcID' declared_type='SInt16' type='s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMSetMenuItemHelpContent'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='inContent' declared_type='HMHelpContentRec*' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMSetTagDelay'>
    <arg name='inDelay' declared_type='Duration' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HMSetWindowHelpContent'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inContent' declared_type='HMHelpContentRec*' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HandleControlClick'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inWhere' declared_type='Point' type='{Point=ss}'/>
    <arg name='inModifiers' declared_type='EventModifiers' type='S'/>
    <arg name='inAction' function_pointer='true' declared_type='ControlActionUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlPartCode' type='s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='ControlPartCode' type='s'/>
  </function>
  <function name='HandleControlContextualMenuClick'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inWhere' declared_type='Point' type='{Point=ss}'/>
    <arg name='menuDisplayed' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HandleControlDragReceive'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inDrag' declared_type='DragReference' type='^{OpaqueDragRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HandleControlDragTracking'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inMessage' declared_type='DragTrackingMessage' type='s'/>
    <arg name='inDrag' declared_type='DragReference' type='^{OpaqueDragRef=}'/>
    <arg name='outLikesDrag' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HandleControlKey'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inKeyCode' declared_type='SInt16' type='s'/>
    <arg name='inCharCode' declared_type='SInt16' type='s'/>
    <arg name='inModifiers' declared_type='EventModifiers' type='S'/>
    <retval declared_type='ControlPartCode' type='s'/>
  </function>
  <function name='HandleControlSetCursor'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='localPoint' declared_type='Point' type='{Point=ss}'/>
    <arg name='modifiers' declared_type='EventModifiers' type='S'/>
    <arg name='cursorWasSet' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HideControl'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HideDialogItem'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='itemNo' declared_type='DialogItemIndex' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HideDragHilite'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='HideFloatingWindows'>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HideMenuBar'>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HidePaletteWindows'>
    <arg name='ts' declared_type='ComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
    <retval declared_type='ComponentResult' type='l' type64='q'/>
  </function>
  <function name='HideSheetWindow'>
    <arg name='inSheet' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HideWindow'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HiliteControl'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='hiliteState' declared_type='ControlPartCode' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HiliteMenu'>
    <arg name='menuID' declared_type='MenuID' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HiliteWindow'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='fHilite' declared_type='Boolean' type='B'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='HiliteWindowFrameForDrag'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='hilited' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='HitTestThemeScrollBarArrows'>
    <arg name='scrollBarBounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='enableState' declared_type='ThemeTrackEnableState' type='C'/>
    <arg name='pressState' declared_type='ThemeTrackPressState' type='C'/>
    <arg name='isHoriz' declared_type='Boolean' type='B'/>
    <arg name='ptHit' declared_type='Point' type='{Point=ss}'/>
    <arg name='trackBounds' declared_type='Rect*' type='^{Rect=ssss}'/>
    <arg name='partcode' declared_type='AppearancePartCode*' type='^s'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='HitTestThemeTrack'>
    <arg name='drawInfo' declared_type='ThemeTrackDrawInfo*' type='^{ThemeTrackDrawInfo=S{Rect=ssss}iiiISCC(?={ScrollBarTrackInfo=iC}{SliderTrackInfo=CC}{ProgressTrackInfo=C})}' const='true'/>
    <arg name='mousePoint' declared_type='Point' type='{Point=ss}'/>
    <arg name='partHit' declared_type='AppearancePartCode*' type='^s'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IdleControls'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InitContextualMenus'>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InitDataBrowserCallbacks'>
    <arg name='callbacks' declared_type='DataBrowserCallbacks*' type='^{DataBrowserCallbacks=I(?={?=^?^?^?^?^?^?^?^?^?^?})}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InitDataBrowserCustomCallbacks'>
    <arg name='callbacks' declared_type='DataBrowserCustomCallbacks*' type='^{DataBrowserCustomCallbacks=I(?={?=^?^?^?^?^?^?^?})}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InitiateTextService'>
    <arg name='ts' declared_type='ComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
    <retval declared_type='ComponentResult' type='l' type64='q'/>
  </function>
  <function name='InputModePaletteItemHit'>
    <arg name='inInstance' declared_type='ComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
    <arg name='inItemID' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inItemState' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='ComponentResult' type='l' type64='q'/>
  </function>
  <function name='InsertDialogItem'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='afterItem' declared_type='DialogItemIndex' type='s'/>
    <arg name='itemType' declared_type='DialogItemType' type='s'/>
    <arg name='itemHandle' declared_type='Handle' type='^*'/>
    <arg name='box' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InsertFontResMenu'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='afterItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='scriptFilter' declared_type='short' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InsertIntlResMenu'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='theType' declared_type='ResType' type='L' type64='I'/>
    <arg name='afterItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='scriptFilter' declared_type='short' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InsertMenuItemText'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inString' declared_type='ConstStr255Param' type='*'/>
    <arg name='afterItem' declared_type='MenuItemIndex' type='S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InsertMenuItemTextWithCFString'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inAfterItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='inAttributes' declared_type='MenuItemAttributes' type='L' type64='I'/>
    <arg name='inCommandID' declared_type='MenuCommand' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InsertResMenu'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='theType' declared_type='ResType' type='L' type64='I'/>
    <arg name='afterItem' declared_type='MenuItemIndex' type='S'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InstallEventHandler'>
    <arg name='inTarget' declared_type='EventTargetRef' type='^{OpaqueEventTargetRef=}'/>
    <arg name='inHandler' function_pointer='true' declared_type='EventHandlerUPP' type='^?'>
      <arg declared_type='EventHandlerCallRef' type='^{OpaqueEventHandlerCallRef=}'/>
      <arg declared_type='EventRef' type='^{OpaqueEventRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <arg name='inNumTypes' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inList' declared_type='EventTypeSpec*' type='^{EventTypeSpec=II}' const='true'/>
    <arg name='inUserData' declared_type='void*' type='^v'/>
    <arg name='outRef' declared_type='EventHandlerRef*' type='^^{OpaqueEventHandlerRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InstallEventLoopIdleTimer'>
    <arg name='inEventLoop' declared_type='EventLoopRef' type='^{OpaqueEventLoopRef=}'/>
    <arg name='inDelay' declared_type='EventTimerInterval' type='d'/>
    <arg name='inInterval' declared_type='EventTimerInterval' type='d'/>
    <arg name='inTimerProc' function_pointer='true' declared_type='EventLoopIdleTimerUPP' type='^?'>
      <arg declared_type='EventLoopTimerRef' type='^{__EventLoopTimer=}'/>
      <arg declared_type='EventLoopIdleTimerMessage' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inTimerData' declared_type='void*' type='^v'/>
    <arg name='outTimer' declared_type='EventLoopTimerRef*' type='^^{__EventLoopTimer}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InstallEventLoopTimer'>
    <arg name='inEventLoop' declared_type='EventLoopRef' type='^{OpaqueEventLoopRef=}'/>
    <arg name='inFireDelay' declared_type='EventTimerInterval' type='d'/>
    <arg name='inInterval' declared_type='EventTimerInterval' type='d'/>
    <arg name='inTimerProc' function_pointer='true' declared_type='EventLoopTimerUPP' type='^?'>
      <arg declared_type='EventLoopTimerRef' type='^{__EventLoopTimer=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='inTimerData' declared_type='void*' type='^v'/>
    <arg name='outTimer' declared_type='EventLoopTimerRef*' type='^^{__EventLoopTimer}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InstallReceiveHandler'>
    <arg name='receiveHandler' function_pointer='true' declared_type='DragReceiveHandlerUPP' type='^?'>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <arg name='theWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='handlerRefCon' declared_type='void*' type='^v'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='InstallStandardEventHandler'>
    <arg name='inTarget' declared_type='EventTargetRef' type='^{OpaqueEventTargetRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InstallTrackingHandler'>
    <arg name='trackingHandler' function_pointer='true' declared_type='DragTrackingHandlerUPP' type='^?'>
      <arg declared_type='DragTrackingMessage' type='s'/>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <arg name='theWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='handlerRefCon' declared_type='void*' type='^v'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='InstallWindowContentPaintProc'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='paintProc' function_pointer='true' declared_type='WindowPaintUPP' type='^?'>
      <arg declared_type='GDHandle' type='^^{GDevice}'/>
      <arg declared_type='GrafPtr' type='^{OpaqueGrafPtr=}'/>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <arg name='options' declared_type='WindowPaintProcOptions' type='L' type64='I'/>
    <arg name='refCon' declared_type='void*' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvalMenuBar'>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvalWindowRect'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='bounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvalWindowRgn'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='region' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvalidateMenuEnabling'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvalidateMenuItems'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inFirstItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='inNumItems' declared_type='ItemCount' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvalidateMenuSize'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvokeAEFilterUPP'>
    <arg name='theEvent' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
    <arg name='returnID' declared_type='long' type='l' type64='q'/>
    <arg name='transactionID' declared_type='long' type='l' type64='q'/>
    <arg name='sender' declared_type='AEAddressDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
    <arg name='userUPP' function_pointer='true' declared_type='AEFilterUPP' type='^?'>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='AEAddressDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='InvokeAEIdleUPP'>
    <arg name='theEvent' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
    <arg name='sleepTime' declared_type='long*' type='^l' type64='^q'/>
    <arg name='mouseRgn' declared_type='RgnHandle*' type='^^{OpaqueRgnHandle}'/>
    <arg name='userUPP' function_pointer='true' declared_type='AEIdleUPP' type='^?'>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='long*' type='^l' type64='^q'/>
      <arg declared_type='RgnHandle*' type='^^{OpaqueRgnHandle}'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='InvokeCaretHookUPP'>
    <arg name='r' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='pTE' declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
    <arg name='userUPP' function_pointer='true' declared_type='CaretHookUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeControlActionUPP'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='partCode' declared_type='ControlPartCode' type='s'/>
    <arg name='userUPP' function_pointer='true' declared_type='ControlActionUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlPartCode' type='s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeControlCNTLToCollectionUPP'>
    <arg name='bounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='value' declared_type='SInt16' type='s'/>
    <arg name='visible' declared_type='Boolean' type='B'/>
    <arg name='max' declared_type='SInt16' type='s'/>
    <arg name='min' declared_type='SInt16' type='s'/>
    <arg name='procID' declared_type='SInt16' type='s'/>
    <arg name='refCon' declared_type='SInt32' type='l' type64='i'/>
    <arg name='title' declared_type='ConstStr255Param' type='*'/>
    <arg name='collection' declared_type='Collection' type='^{OpaqueCollection=}'/>
    <arg name='userUPP' function_pointer='true' declared_type='ControlCNTLToCollectionUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <arg declared_type='ConstStr255Param' type='*'/>
      <arg declared_type='Collection' type='^{OpaqueCollection=}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvokeControlColorUPP'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inMessage' declared_type='SInt16' type='s'/>
    <arg name='inDrawDepth' declared_type='SInt16' type='s'/>
    <arg name='inDrawInColor' declared_type='Boolean' type='B'/>
    <arg name='userUPP' function_pointer='true' declared_type='ControlColorUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvokeControlDefUPP'>
    <arg name='varCode' declared_type='SInt16' type='s'/>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='message' declared_type='ControlDefProcMessage' type='s'/>
    <arg name='param' declared_type='SInt32' type='l' type64='i'/>
    <arg name='userUPP' function_pointer='true' declared_type='ControlDefUPP' type='^?'>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlDefProcMessage' type='s'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <retval declared_type='SInt32' type='l' type64='i'/>
    </arg>
    <retval declared_type='SInt32' type='l' type64='i'/>
  </function>
  <function name='InvokeControlEditTextValidationUPP'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='userUPP' function_pointer='true' declared_type='ControlEditTextValidationUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeControlKeyFilterUPP'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='keyCode' declared_type='SInt16*' type='^s'/>
    <arg name='charCode' declared_type='SInt16*' type='^s'/>
    <arg name='modifiers' declared_type='EventModifiers*' type='^S'/>
    <arg name='userUPP' function_pointer='true' declared_type='ControlKeyFilterUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='SInt16*' type='^s'/>
      <arg declared_type='SInt16*' type='^s'/>
      <arg declared_type='EventModifiers*' type='^S'/>
      <retval declared_type='ControlKeyFilterResult' type='s'/>
    </arg>
    <retval declared_type='ControlKeyFilterResult' type='s'/>
  </function>
  <function name='InvokeControlUserPaneActivateUPP'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='activating' declared_type='Boolean' type='B'/>
    <arg name='userUPP' function_pointer='true' declared_type='ControlUserPaneActivateUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeControlUserPaneBackgroundUPP'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='info' declared_type='ControlBackgroundPtr' type='^{ControlBackgroundRec=sB}'/>
    <arg name='userUPP' function_pointer='true' declared_type='ControlUserPaneBackgroundUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlBackgroundPtr' type='^{ControlBackgroundRec=sB}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeControlUserPaneDrawUPP'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='part' declared_type='SInt16' type='s'/>
    <arg name='userUPP' function_pointer='true' declared_type='ControlUserPaneDrawUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='SInt16' type='s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeControlUserPaneFocusUPP'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='action' declared_type='ControlFocusPart' type='s'/>
    <arg name='userUPP' function_pointer='true' declared_type='ControlUserPaneFocusUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlFocusPart' type='s'/>
      <retval declared_type='ControlPartCode' type='s'/>
    </arg>
    <retval declared_type='ControlPartCode' type='s'/>
  </function>
  <function name='InvokeControlUserPaneHitTestUPP'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='where' declared_type='Point' type='{Point=ss}'/>
    <arg name='userUPP' function_pointer='true' declared_type='ControlUserPaneHitTestUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <retval declared_type='ControlPartCode' type='s'/>
    </arg>
    <retval declared_type='ControlPartCode' type='s'/>
  </function>
  <function name='InvokeControlUserPaneIdleUPP'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='userUPP' function_pointer='true' declared_type='ControlUserPaneIdleUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeControlUserPaneKeyDownUPP'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='keyCode' declared_type='SInt16' type='s'/>
    <arg name='charCode' declared_type='SInt16' type='s'/>
    <arg name='modifiers' declared_type='SInt16' type='s'/>
    <arg name='userUPP' function_pointer='true' declared_type='ControlUserPaneKeyDownUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <retval declared_type='ControlPartCode' type='s'/>
    </arg>
    <retval declared_type='ControlPartCode' type='s'/>
  </function>
  <function name='InvokeControlUserPaneTrackingUPP'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='startPt' declared_type='Point' type='{Point=ss}'/>
    <arg name='actionProc' function_pointer='true' declared_type='ControlActionUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlPartCode' type='s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='userUPP' function_pointer='true' declared_type='ControlUserPaneTrackingUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='ControlActionUPP' type='^?'/>
      <retval declared_type='ControlPartCode' type='s'/>
    </arg>
    <retval declared_type='ControlPartCode' type='s'/>
  </function>
  <function name='InvokeDataBrowserAcceptDragUPP'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='theDrag' declared_type='DragReference' type='^{OpaqueDragRef=}'/>
    <arg name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserAcceptDragUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='InvokeDataBrowserAddDragItemUPP'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='theDrag' declared_type='DragReference' type='^{OpaqueDragRef=}'/>
    <arg name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='itemRef' declared_type='ItemReference*' type='^I'/>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserAddDragItemUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='ItemReference*' type='^I'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='InvokeDataBrowserDrawItemUPP'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='property' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <arg name='itemState' declared_type='DataBrowserItemState' type='L' type64='I'/>
    <arg name='theRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='gdDepth' declared_type='SInt16' type='s'/>
    <arg name='colorDevice' declared_type='Boolean' type='B'/>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserDrawItemUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemState' type='L' type64='I'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeDataBrowserEditItemUPP'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='property' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <arg name='theString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='maxEditTextRect' declared_type='Rect*' type='^{Rect=ssss}'/>
    <arg name='shrinkToFit' declared_type='Boolean*' type='^B'/>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserEditItemUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}'/>
      <arg declared_type='Boolean*' type='^B'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='InvokeDataBrowserGetContextualMenuUPP'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='menu' declared_type='MenuRef*' type='^^{OpaqueMenuRef}'/>
    <arg name='helpType' declared_type='UInt32*' type='^I'/>
    <arg name='helpItemString' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <arg name='selection' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserGetContextualMenuUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='MenuRef*' type='^^{OpaqueMenuRef}'/>
      <arg declared_type='UInt32*' type='^I'/>
      <arg declared_type='CFStringRef*' type='^^{__CFString}'/>
      <arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeDataBrowserHitTestUPP'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='itemID' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='property' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <arg name='theRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='mouseRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserHitTestUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='InvokeDataBrowserItemAcceptDragUPP'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='itemID' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='property' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <arg name='theRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='theDrag' declared_type='DragReference' type='^{OpaqueDragRef=}'/>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserItemAcceptDragUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <retval declared_type='DataBrowserDragFlags' type='L' type64='Q'/>
    </arg>
    <retval declared_type='DataBrowserDragFlags' type='L' type64='Q'/>
  </function>
  <function name='InvokeDataBrowserItemCompareUPP'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='itemOne' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='itemTwo' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='sortProperty' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserItemCompareUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='InvokeDataBrowserItemDataUPP'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='property' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='setValue' declared_type='Boolean' type='B'/>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserItemDataUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemDataRef' type='@'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvokeDataBrowserItemDragRgnUPP'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='itemID' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='property' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <arg name='theRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='dragRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserItemDragRgnUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeDataBrowserItemHelpContentUPP'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='property' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <arg name='inRequest' declared_type='HMContentRequest' type='s'/>
    <arg name='outContentProvided' declared_type='HMContentProvidedType*' type='^s'/>
    <arg name='ioHelpContent' declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserItemHelpContentUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeDataBrowserItemNotificationUPP'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='message' declared_type='DataBrowserItemNotification' type='L' type64='I'/>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserItemNotificationUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemNotification' type='L' type64='I'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeDataBrowserItemNotificationWithItemUPP'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='message' declared_type='DataBrowserItemNotification' type='L' type64='I'/>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserItemNotificationWithItemUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemNotification' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemDataRef' type='@'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeDataBrowserItemReceiveDragUPP'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='itemID' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='property' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <arg name='dragFlags' declared_type='DataBrowserDragFlags' type='L' type64='Q'/>
    <arg name='theDrag' declared_type='DragReference' type='^{OpaqueDragRef=}'/>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserItemReceiveDragUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='DataBrowserDragFlags' type='L' type64='Q'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='InvokeDataBrowserItemUPP'>
    <arg name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='state' declared_type='DataBrowserItemState' type='L' type64='I'/>
    <arg name='clientData' declared_type='void*' type='^v'/>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserItemUPP' type='^?'>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemState' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeDataBrowserPostProcessDragUPP'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='theDrag' declared_type='DragReference' type='^{OpaqueDragRef=}'/>
    <arg name='trackDragResult' declared_type='OSStatus' type='l' type64='i'/>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserPostProcessDragUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <arg declared_type='OSStatus' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeDataBrowserReceiveDragUPP'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='theDrag' declared_type='DragReference' type='^{OpaqueDragRef=}'/>
    <arg name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserReceiveDragUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='InvokeDataBrowserSelectContextualMenuUPP'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='selectionType' declared_type='UInt32' type='L' type64='I'/>
    <arg name='menuID' declared_type='SInt16' type='s'/>
    <arg name='menuItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserSelectContextualMenuUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='MenuItemIndex' type='S'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeDataBrowserTrackingUPP'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='itemID' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='property' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <arg name='theRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='startPt' declared_type='Point' type='{Point=ss}'/>
    <arg name='modifiers' declared_type='EventModifiers' type='S'/>
    <arg name='userUPP' function_pointer='true' declared_type='DataBrowserTrackingUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='EventModifiers' type='S'/>
      <retval declared_type='DataBrowserTrackingResult' type='s'/>
    </arg>
    <retval declared_type='DataBrowserTrackingResult' type='s'/>
  </function>
  <function name='InvokeDragDrawingUPP'>
    <arg name='message' declared_type='DragRegionMessage' type='s'/>
    <arg name='showRegion' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='showOrigin' declared_type='Point' type='{Point=ss}'/>
    <arg name='hideRegion' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='hideOrigin' declared_type='Point' type='{Point=ss}'/>
    <arg name='dragDrawingRefCon' declared_type='void*' type='^v'/>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='userUPP' function_pointer='true' declared_type='DragDrawingUPP' type='^?'>
      <arg declared_type='DragRegionMessage' type='s'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='InvokeDragInputUPP'>
    <arg name='mouse' declared_type='Point*' type='^{Point=ss}'/>
    <arg name='modifiers' declared_type='SInt16*' type='^s'/>
    <arg name='dragInputRefCon' declared_type='void*' type='^v'/>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='userUPP' function_pointer='true' declared_type='DragInputUPP' type='^?'>
      <arg declared_type='Point*' type='^{Point=ss}'/>
      <arg declared_type='SInt16*' type='^s'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='InvokeDragReceiveHandlerUPP'>
    <arg name='theWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='handlerRefCon' declared_type='void*' type='^v'/>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='userUPP' function_pointer='true' declared_type='DragReceiveHandlerUPP' type='^?'>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='InvokeDragSendDataUPP'>
    <arg name='theType' declared_type='FlavorType' type='L' type64='I'/>
    <arg name='dragSendRefCon' declared_type='void*' type='^v'/>
    <arg name='theItemRef' declared_type='DragItemRef' type='L' type64='I'/>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='userUPP' function_pointer='true' declared_type='DragSendDataUPP' type='^?'>
      <arg declared_type='FlavorType' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragItemRef' type='L' type64='I'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='InvokeDragTrackingHandlerUPP'>
    <arg name='message' declared_type='DragTrackingMessage' type='s'/>
    <arg name='theWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='handlerRefCon' declared_type='void*' type='^v'/>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='userUPP' function_pointer='true' declared_type='DragTrackingHandlerUPP' type='^?'>
      <arg declared_type='DragTrackingMessage' type='s'/>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='InvokeDrawHookUPP'>
    <arg name='textOffset' declared_type='unsigned short' type='S'/>
    <arg name='drawLen' declared_type='unsigned short' type='S'/>
    <arg name='textBufferPtr' declared_type='void*' type='^v'/>
    <arg name='pTE' declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <arg name='userUPP' function_pointer='true' declared_type='DrawHookUPP' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeEOLHookUPP'>
    <arg name='theChar' declared_type='char' type='c'/>
    <arg name='pTE' declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <arg name='userUPP' function_pointer='true' declared_type='EOLHookUPP' type='^?'>
      <arg declared_type='char' type='c'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='InvokeEditUnicodePostUpdateUPP'>
    <arg name='uniText' declared_type='UniCharArrayHandle' type='^^S'/>
    <arg name='uniTextLength' declared_type='UniCharCount' type='L' type64='I'/>
    <arg name='iStartOffset' declared_type='UniCharArrayOffset' type='L' type64='I'/>
    <arg name='iEndOffset' declared_type='UniCharArrayOffset' type='L' type64='I'/>
    <arg name='refcon' declared_type='void*' type='^v'/>
    <arg name='userUPP' function_pointer='true' declared_type='EditUnicodePostUpdateUPP' type='^?'>
      <arg declared_type='UniCharArrayHandle' type='^^S'/>
      <arg declared_type='UniCharCount' type='L' type64='I'/>
      <arg declared_type='UniCharArrayOffset' type='L' type64='I'/>
      <arg declared_type='UniCharArrayOffset' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='InvokeEventComparatorUPP'>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <arg name='inCompareData' declared_type='void*' type='^v'/>
    <arg name='userUPP' function_pointer='true' declared_type='EventComparatorUPP' type='^?'>
      <arg declared_type='EventRef' type='^{OpaqueEventRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='InvokeEventHandlerUPP'>
    <arg name='inHandlerCallRef' declared_type='EventHandlerCallRef' type='^{OpaqueEventHandlerCallRef=}'/>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <arg name='inUserData' declared_type='void*' type='^v'/>
    <arg name='userUPP' function_pointer='true' declared_type='EventHandlerUPP' type='^?'>
      <arg declared_type='EventHandlerCallRef' type='^{OpaqueEventHandlerCallRef=}'/>
      <arg declared_type='EventRef' type='^{OpaqueEventRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvokeEventLoopIdleTimerUPP'>
    <arg name='inTimer' declared_type='EventLoopTimerRef' type='^{__EventLoopTimer=}'/>
    <arg name='inState' declared_type='EventLoopIdleTimerMessage' type='S'/>
    <arg name='inUserData' declared_type='void*' type='^v'/>
    <arg name='userUPP' function_pointer='true' declared_type='EventLoopIdleTimerUPP' type='^?'>
      <arg declared_type='EventLoopTimerRef' type='^{__EventLoopTimer=}'/>
      <arg declared_type='EventLoopIdleTimerMessage' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeEventLoopTimerUPP'>
    <arg name='inTimer' declared_type='EventLoopTimerRef' type='^{__EventLoopTimer=}'/>
    <arg name='inUserData' declared_type='void*' type='^v'/>
    <arg name='userUPP' function_pointer='true' declared_type='EventLoopTimerUPP' type='^?'>
      <arg declared_type='EventLoopTimerRef' type='^{__EventLoopTimer=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeGetScrapDataUPP'>
    <arg name='requestedFormat' declared_type='ScrapType' type='L' type64='I'/>
    <arg name='dataH' declared_type='Handle' type='^*'/>
    <arg name='srcDataGetterRefCon' declared_type='void*' type='^v'/>
    <arg name='userUPP' function_pointer='true' declared_type='GetScrapDataUPP' type='^?'>
      <arg declared_type='ScrapType' type='L' type64='I'/>
      <arg declared_type='Handle' type='^*'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='InvokeHMControlContentUPP'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inGlobalMouse' declared_type='Point' type='{Point=ss}'/>
    <arg name='inRequest' declared_type='HMContentRequest' type='s'/>
    <arg name='outContentProvided' declared_type='HMContentProvidedType*' type='^s'/>
    <arg name='ioHelpContent' declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
    <arg name='userUPP' function_pointer='true' declared_type='HMControlContentUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvokeHMMenuItemContentUPP'>
    <arg name='inTrackingData' declared_type='MenuTrackingData*' type='^{MenuTrackingData=^{OpaqueMenuRef}SS{Rect=ssss}ii}' const='true'/>
    <arg name='inRequest' declared_type='HMContentRequest' type='s'/>
    <arg name='outContentProvided' declared_type='HMContentProvidedType*' type='^s'/>
    <arg name='ioHelpContent' declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
    <arg name='userUPP' function_pointer='true' declared_type='HMMenuItemContentUPP' type='^?'>
      <arg declared_type='MenuTrackingData*' type='^{MenuTrackingData=^{OpaqueMenuRef}SS{Rect=ssss}ii}' const='true'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvokeHMMenuTitleContentUPP'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inRequest' declared_type='HMContentRequest' type='s'/>
    <arg name='outContentProvided' declared_type='HMContentProvidedType*' type='^s'/>
    <arg name='ioHelpContent' declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
    <arg name='userUPP' function_pointer='true' declared_type='HMMenuTitleContentUPP' type='^?'>
      <arg declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvokeHMWindowContentUPP'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inGlobalMouse' declared_type='Point' type='{Point=ss}'/>
    <arg name='inRequest' declared_type='HMContentRequest' type='s'/>
    <arg name='outContentProvided' declared_type='HMContentProvidedType*' type='^s'/>
    <arg name='ioHelpContent' declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
    <arg name='userUPP' function_pointer='true' declared_type='HMWindowContentUPP' type='^?'>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvokeHighHookUPP'>
    <arg name='r' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='pTE' declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
    <arg name='userUPP' function_pointer='true' declared_type='HighHookUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeHitTestHookUPP'>
    <arg name='styleRunLen' declared_type='unsigned short' type='S'/>
    <arg name='styleRunOffset' declared_type='unsigned short' type='S'/>
    <arg name='slop' declared_type='unsigned short' type='S'/>
    <arg name='textBufferPtr' declared_type='void*' type='^v'/>
    <arg name='pTE' declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <arg name='pixelWidth' declared_type='unsigned short*' type='^S'/>
    <arg name='charOffset' declared_type='unsigned short*' type='^S'/>
    <arg name='pixelInChar' declared_type='Boolean*' type='^B'/>
    <arg name='userUPP' function_pointer='true' declared_type='HitTestHookUPP' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='Boolean*' type='^B'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='InvokeIndexToStringUPP'>
    <arg name='item' declared_type='short' type='s'/>
    <arg name='itemsScript' declared_type='ScriptCode*' type='^s'/>
    <arg name='itemsStringPtr' declared_type='StringPtr*' type='^*'/>
    <arg name='yourDataPtr' declared_type='void*' type='^v'/>
    <arg name='userUPP' function_pointer='true' declared_type='IndexToStringUPP' type='^?'>
      <arg declared_type='short' type='s'/>
      <arg declared_type='ScriptCode*' type='^s'/>
      <arg declared_type='StringPtr*' type='^*'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='InvokeListClickLoopUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='ListClickLoopUPP' type='^?'>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='InvokeListDefUPP'>
    <arg name='lMessage' declared_type='short' type='s'/>
    <arg name='lSelect' declared_type='Boolean' type='B'/>
    <arg name='lRect' declared_type='Rect*' type='^{Rect=ssss}'/>
    <arg name='lCell' declared_type='Cell' type='{Point=ss}'/>
    <arg name='lDataOffset' declared_type='short' type='s'/>
    <arg name='lDataLen' declared_type='short' type='s'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <arg name='userUPP' function_pointer='true' declared_type='ListDefUPP' type='^?'>
      <arg declared_type='short' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}'/>
      <arg declared_type='Cell' type='{Point=ss}'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='ListHandle' type='^^{ListRec}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeListSearchUPP'>
    <arg name='aPtr' declared_type='Ptr' type='*'/>
    <arg name='bPtr' declared_type='Ptr' type='*'/>
    <arg name='aLen' declared_type='short' type='s'/>
    <arg name='bLen' declared_type='short' type='s'/>
    <arg name='userUPP' function_pointer='true' declared_type='ListSearchUPP' type='^?'>
      <arg declared_type='Ptr' type='*'/>
      <arg declared_type='Ptr' type='*'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='short' type='s'/>
      <retval declared_type='short' type='s'/>
    </arg>
    <retval declared_type='short' type='s'/>
  </function>
  <function name='InvokeMenuDefUPP'>
    <arg name='message' declared_type='short' type='s'/>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='menuRect' declared_type='Rect*' type='^{Rect=ssss}'/>
    <arg name='hitPt' declared_type='Point' type='{Point=ss}'/>
    <arg name='whichItem' declared_type='short*' type='^s'/>
    <arg name='userUPP' function_pointer='true' declared_type='MenuDefUPP' type='^?'>
      <arg declared_type='short' type='s'/>
      <arg declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='short*' type='^s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeMenuItemDrawingUPP'>
    <arg name='inBounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inDepth' declared_type='SInt16' type='s'/>
    <arg name='inIsColorDevice' declared_type='Boolean' type='B'/>
    <arg name='inUserData' declared_type='SInt32' type='l' type64='i'/>
    <arg name='userUPP' function_pointer='true' declared_type='MenuItemDrawingUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeMenuTitleDrawingUPP'>
    <arg name='inBounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inDepth' declared_type='SInt16' type='s'/>
    <arg name='inIsColorDevice' declared_type='Boolean' type='B'/>
    <arg name='inUserData' declared_type='SInt32' type='l' type64='i'/>
    <arg name='userUPP' function_pointer='true' declared_type='MenuTitleDrawingUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeModalFilterUPP'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='theEvent' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
    <arg name='itemHit' declared_type='DialogItemIndex*' type='^s'/>
    <arg name='userUPP' function_pointer='true' declared_type='ModalFilterUPP' type='^?'>
      <arg declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='DialogItemIndex*' type='^s'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='InvokeModalFilterYDUPP'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='theEvent' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
    <arg name='itemHit' declared_type='short*' type='^s'/>
    <arg name='yourDataPtr' declared_type='void*' type='^v'/>
    <arg name='userUPP' function_pointer='true' declared_type='ModalFilterYDUPP' type='^?'>
      <arg declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='short*' type='^s'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='InvokeNMUPP'>
    <arg name='nmReqPtr' declared_type='NMRecPtr' type='^{NMRec=^{QElem}sslss^*^**^?l}' type64='^{NMRec=^{QElem}ssqss^*^**^?q}'/>
    <arg name='userUPP' function_pointer='true' declared_type='NMUPP' type='^?'>
      <arg declared_type='NMRecPtr' type='^{NMRec=^{QElem}sslss^*^**^?l}' type64='^{NMRec=^{QElem}ssqss^*^**^?q}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeNWidthHookUPP'>
    <arg name='styleRunLen' declared_type='unsigned short' type='S'/>
    <arg name='styleRunOffset' declared_type='unsigned short' type='S'/>
    <arg name='slop' declared_type='short' type='s'/>
    <arg name='direction' declared_type='short' type='s'/>
    <arg name='textBufferPtr' declared_type='void*' type='^v'/>
    <arg name='lineStart' declared_type='short*' type='^s'/>
    <arg name='pTE' declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <arg name='userUPP' function_pointer='true' declared_type='NWidthHookUPP' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='short*' type='^s'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <retval declared_type='unsigned short' type='S'/>
    </arg>
    <retval declared_type='unsigned short' type='S'/>
  </function>
  <function name='InvokeScrapPromiseKeeperUPP'>
    <arg name='scrap' declared_type='ScrapRef' type='^{OpaqueScrapRef=}'/>
    <arg name='flavorType' declared_type='ScrapFlavorType' type='L' type64='I'/>
    <arg name='userData' declared_type='void*' type='^v'/>
    <arg name='userUPP' function_pointer='true' declared_type='ScrapPromiseKeeperUPP' type='^?'>
      <arg declared_type='ScrapRef' type='^{OpaqueScrapRef=}'/>
      <arg declared_type='ScrapFlavorType' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvokeTEClickLoopUPP'>
    <arg name='pTE' declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
    <arg name='userUPP' function_pointer='true' declared_type='TEClickLoopUPP' type='^?'>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='InvokeTEDoTextUPP'>
    <arg name='pTE' declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
    <arg name='firstChar' declared_type='unsigned short' type='S'/>
    <arg name='lastChar' declared_type='unsigned short' type='S'/>
    <arg name='selector' declared_type='short' type='s'/>
    <arg name='currentGrafPort' declared_type='GrafPtr*' type='^^{OpaqueGrafPtr}'/>
    <arg name='charPosition' declared_type='short*' type='^s'/>
    <arg name='userUPP' function_pointer='true' declared_type='TEDoTextUPP' type='^?'>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='GrafPtr*' type='^^{OpaqueGrafPtr}'/>
      <arg declared_type='short*' type='^s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeTEFindWordUPP'>
    <arg name='currentPos' declared_type='unsigned short' type='S'/>
    <arg name='caller' declared_type='short' type='s'/>
    <arg name='pTE' declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <arg name='wordStart' declared_type='unsigned short*' type='^S'/>
    <arg name='wordEnd' declared_type='unsigned short*' type='^S'/>
    <arg name='userUPP' function_pointer='true' declared_type='TEFindWordUPP' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeTERecalcUPP'>
    <arg name='pTE' declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
    <arg name='changeLength' declared_type='unsigned short' type='S'/>
    <arg name='lineStart' declared_type='unsigned short*' type='^S'/>
    <arg name='firstChar' declared_type='unsigned short*' type='^S'/>
    <arg name='lastChar' declared_type='unsigned short*' type='^S'/>
    <arg name='userUPP' function_pointer='true' declared_type='TERecalcUPP' type='^?'>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeTSMTEPostUpdateUPP'>
    <arg name='textH' declared_type='TEHandle' type='^^{TERec}'/>
    <arg name='fixLen' declared_type='long' type='l' type64='q'/>
    <arg name='inputAreaStart' declared_type='long' type='l' type64='q'/>
    <arg name='inputAreaEnd' declared_type='long' type='l' type64='q'/>
    <arg name='pinStart' declared_type='long' type='l' type64='q'/>
    <arg name='pinEnd' declared_type='long' type='l' type64='q'/>
    <arg name='refCon' declared_type='long' type='l' type64='q'/>
    <arg name='userUPP' function_pointer='true' declared_type='TSMTEPostUpdateUPP' type='^?'>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeTSMTEPreUpdateUPP'>
    <arg name='textH' declared_type='TEHandle' type='^^{TERec}'/>
    <arg name='refCon' declared_type='long' type='l' type64='q'/>
    <arg name='userUPP' function_pointer='true' declared_type='TSMTEPreUpdateUPP' type='^?'>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <arg declared_type='long' type='l' type64='q'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeTXNActionKeyMapperUPP'>
    <arg name='actionKey' declared_type='TXNActionKey' type='L' type64='I'/>
    <arg name='commandID' declared_type='UInt32' type='L' type64='I'/>
    <arg name='userUPP' function_pointer='true' declared_type='TXNActionKeyMapperUPP' type='^?'>
      <arg declared_type='TXNActionKey' type='L' type64='I'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='CFStringRef' type='^{__CFString=}'/>
    </arg>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='InvokeTXNActionNameMapperUPP'>
    <arg name='actionName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='commandID' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inUserData' declared_type='void*' type='^v'/>
    <arg name='userUPP' function_pointer='true' declared_type='TXNActionNameMapperUPP' type='^?'>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='CFStringRef' type='^{__CFString=}'/>
    </arg>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='InvokeTXNContextualMenuSetupUPP'>
    <arg name='iContextualMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='object' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='inUserData' declared_type='void*' type='^v'/>
    <arg name='userUPP' function_pointer='true' declared_type='TXNContextualMenuSetupUPP' type='^?'>
      <arg declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
      <arg declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeTXNFindUPP'>
    <arg name='matchData' declared_type='TXNMatchTextRecord*' type='^{TXNMatchTextRecord=^viI}' const='true'/>
    <arg name='iDataType' declared_type='TXNDataType' type='L' type64='I'/>
    <arg name='iMatchOptions' declared_type='TXNMatchOptions' type='L' type64='I'/>
    <arg name='iSearchTextPtr' declared_type='void*' type='^v' const='true'/>
    <arg name='encoding' declared_type='TextEncoding' type='L' type64='I'/>
    <arg name='absStartOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='searchTextLength' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='oStartMatch' declared_type='TXNOffset*' type='^I'/>
    <arg name='oEndMatch' declared_type='TXNOffset*' type='^I'/>
    <arg name='ofound' declared_type='Boolean*' type='^B'/>
    <arg name='refCon' declared_type='UInt32' type='L' type64='I'/>
    <arg name='userUPP' function_pointer='true' declared_type='TXNFindUPP' type='^?'>
      <arg declared_type='TXNMatchTextRecord*' type='^{TXNMatchTextRecord=^viI}' const='true'/>
      <arg declared_type='TXNDataType' type='L' type64='I'/>
      <arg declared_type='TXNMatchOptions' type='L' type64='I'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='TextEncoding' type='L' type64='I'/>
      <arg declared_type='TXNOffset' type='L' type64='I'/>
      <arg declared_type='ByteCount' type='L' type64='I'/>
      <arg declared_type='TXNOffset*' type='^I'/>
      <arg declared_type='TXNOffset*' type='^I'/>
      <arg declared_type='Boolean*' type='^B'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvokeTXNScrollInfoUPP'>
    <arg name='iValue' declared_type='SInt32' type='l' type64='i'/>
    <arg name='iMaximumValue' declared_type='SInt32' type='l' type64='i'/>
    <arg name='iScrollBarOrientation' declared_type='TXNScrollBarOrientation' type='L' type64='I'/>
    <arg name='iRefCon' declared_type='SInt32' type='l' type64='i'/>
    <arg name='userUPP' function_pointer='true' declared_type='TXNScrollInfoUPP' type='^?'>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <arg declared_type='TXNScrollBarOrientation' type='L' type64='I'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeTextWidthHookUPP'>
    <arg name='textLen' declared_type='unsigned short' type='S'/>
    <arg name='textOffset' declared_type='unsigned short' type='S'/>
    <arg name='textBufferPtr' declared_type='void*' type='^v'/>
    <arg name='pTE' declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <arg name='userUPP' function_pointer='true' declared_type='TextWidthHookUPP' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <retval declared_type='unsigned short' type='S'/>
    </arg>
    <retval declared_type='unsigned short' type='S'/>
  </function>
  <function name='InvokeThemeButtonDrawUPP'>
    <arg name='bounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='kind' declared_type='ThemeButtonKind' type='S'/>
    <arg name='info' declared_type='ThemeButtonDrawInfo*' type='^{ThemeButtonDrawInfo=ISS}' const='true'/>
    <arg name='userData' declared_type='UInt32' type='L' type64='I'/>
    <arg name='depth' declared_type='SInt16' type='s'/>
    <arg name='isColorDev' declared_type='Boolean' type='B'/>
    <arg name='userUPP' function_pointer='true' declared_type='ThemeButtonDrawUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='ThemeButtonKind' type='S'/>
      <arg declared_type='ThemeButtonDrawInfo*' type='^{ThemeButtonDrawInfo=ISS}' const='true'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeThemeEraseUPP'>
    <arg name='bounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='eraseData' declared_type='UInt32' type='L' type64='I'/>
    <arg name='depth' declared_type='SInt16' type='s'/>
    <arg name='isColorDev' declared_type='Boolean' type='B'/>
    <arg name='userUPP' function_pointer='true' declared_type='ThemeEraseUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeThemeIteratorUPP'>
    <arg name='inFileName' declared_type='ConstStr255Param' type='*'/>
    <arg name='resID' declared_type='SInt16' type='s'/>
    <arg name='inThemeSettings' declared_type='Collection' type='^{OpaqueCollection=}'/>
    <arg name='inUserData' declared_type='void*' type='^v'/>
    <arg name='userUPP' function_pointer='true' declared_type='ThemeIteratorUPP' type='^?'>
      <arg declared_type='ConstStr255Param' type='*'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Collection' type='^{OpaqueCollection=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='InvokeThemeTabTitleDrawUPP'>
    <arg name='bounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='style' declared_type='ThemeTabStyle' type='S'/>
    <arg name='direction' declared_type='ThemeTabDirection' type='S'/>
    <arg name='depth' declared_type='SInt16' type='s'/>
    <arg name='isColorDev' declared_type='Boolean' type='B'/>
    <arg name='userData' declared_type='UInt32' type='L' type64='I'/>
    <arg name='userUPP' function_pointer='true' declared_type='ThemeTabTitleDrawUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='ThemeTabStyle' type='S'/>
      <arg declared_type='ThemeTabDirection' type='S'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeUserItemUPP'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='itemNo' declared_type='DialogItemIndex' type='s'/>
    <arg name='userUPP' function_pointer='true' declared_type='UserItemUPP' type='^?'>
      <arg declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
      <arg declared_type='DialogItemIndex' type='s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokeWidthHookUPP'>
    <arg name='textLen' declared_type='unsigned short' type='S'/>
    <arg name='textOffset' declared_type='unsigned short' type='S'/>
    <arg name='textBufferPtr' declared_type='void*' type='^v'/>
    <arg name='pTE' declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <arg name='userUPP' function_pointer='true' declared_type='WidthHookUPP' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <retval declared_type='unsigned short' type='S'/>
    </arg>
    <retval declared_type='unsigned short' type='S'/>
  </function>
  <function name='InvokeWindowDefUPP'>
    <arg name='varCode' declared_type='short' type='s'/>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='message' declared_type='short' type='s'/>
    <arg name='param' declared_type='long' type='l' type64='q'/>
    <arg name='userUPP' function_pointer='true' declared_type='WindowDefUPP' type='^?'>
      <arg declared_type='short' type='s'/>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='long' type='l' type64='q'/>
      <retval declared_type='long' type='l' type64='q'/>
    </arg>
    <retval declared_type='long' type='l' type64='q'/>
  </function>
  <function name='InvokeWindowPaintUPP'>
    <arg name='device' declared_type='GDHandle' type='^^{GDevice}'/>
    <arg name='qdContext' declared_type='GrafPtr' type='^{OpaqueGrafPtr=}'/>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inClientPaintRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='outSystemPaintRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='refCon' declared_type='void*' type='^v'/>
    <arg name='userUPP' function_pointer='true' declared_type='WindowPaintUPP' type='^?'>
      <arg declared_type='GDHandle' type='^^{GDevice}'/>
      <arg declared_type='GrafPtr' type='^{OpaqueGrafPtr=}'/>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='InvokeWindowTitleDrawingUPP'>
    <arg name='bounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='depth' declared_type='SInt16' type='s'/>
    <arg name='colorDevice' declared_type='Boolean' type='B'/>
    <arg name='userData' declared_type='UInt32' type='L' type64='I'/>
    <arg name='userUPP' function_pointer='true' declared_type='WindowTitleDrawingUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='IsAppearanceClient'>
    <arg name='process' declared_type='ProcessSerialNumber*' type='^{ProcessSerialNumber=II}' const='true'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsAutomaticControlDragTrackingEnabledForWindow'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outTracks' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='IsCmdChar'>
    <arg name='event' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}' const='true'/>
    <arg name='test' declared_type='short' type='s'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsControlActive'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsControlDragTrackingEnabled'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='outTracks' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='IsControlEnabled'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsControlHilited'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsControlVisible'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsDataBrowserItemSelected'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsDialogEvent'>
    <arg name='theEvent' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}' const='true'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsEventInMask'>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <arg name='inMask' declared_type='EventMask' type='S'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsEventInQueue'>
    <arg name='inQueue' declared_type='EventQueueRef' type='^{OpaqueEventQueueRef=}'/>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsMenuBarInvalid'>
    <arg name='rootMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsMenuBarVisible'>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsMenuCommandEnabled'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inCommandID' declared_type='MenuCommand' type='L' type64='I'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsMenuItemEnabled'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsMenuItemIconEnabled'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsMenuItemInvalid'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsMenuKeyEvent'>
    <arg name='inStartMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <arg name='inOptions' declared_type='MenuEventOptions' type='L' type64='I'/>
    <arg name='outMenu' declared_type='MenuRef*' type='^^{OpaqueMenuRef}'/>
    <arg name='outMenuItem' declared_type='MenuItemIndex*' type='^S'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsMenuSizeInvalid'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsMouseCoalescingEnabled'>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsSecureEventInputEnabled'>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsShowContextualMenuClick'>
    <arg name='inEvent' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}' const='true'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsShowContextualMenuEvent'>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsTSMTEDialog'>
    <arg name='dialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsTextServiceSelected'>
    <arg name='aComp' declared_type='Component' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsThemeInColor'>
    <arg name='inDepth' declared_type='SInt16' type='s'/>
    <arg name='inIsColorDevice' declared_type='Boolean' type='B'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsUserCancelEventRef'>
    <arg name='event' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsValidAppearanceFileType'>
    <arg name='fileType' declared_type='OSType' type='L' type64='I'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsValidControlHandle'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsValidMenu'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsValidWindowClass'>
    <arg name='inClass' declared_type='WindowClass' type='L' type64='I'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsValidWindowPtr'>
    <arg name='possibleWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsWindowActive'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsWindowCollapsable'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsWindowCollapsed'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsWindowContainedInGroup'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsWindowHilited'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsWindowInStandardState'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inIdealSize' declared_type='Point*' type='^{Point=ss}' const='true'/>
    <arg name='outIdealStandardState' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsWindowLatentVisible'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='outLatentVisible' declared_type='WindowLatentVisibility*' type='^I'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsWindowModified'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsWindowPathSelectClick'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='event' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}' const='true'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsWindowPathSelectEvent'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsWindowToolbarVisible'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IsWindowUpdatePending'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='IterateThemes'>
    <arg name='inProc' function_pointer='true' declared_type='ThemeIteratorUPP' type='^?'>
      <arg declared_type='ConstStr255Param' type='*'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Collection' type='^{OpaqueCollection=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <arg name='inUserData' declared_type='void*' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='KBGetLayoutType'>
    <arg name='iKeyboardType' declared_type='SInt16' type='s'/>
    <retval declared_type='PhysicalKeyboardLayoutType' type='L' type64='I'/>
  </function>
  <function name='KLGetCurrentKeyboardLayout'>
    <arg name='oKeyboardLayout' declared_type='KeyboardLayoutRef*' type='^^{OpaqueKeyboardLayoutRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='KLGetKeyboardLayoutAtIndex'>
    <arg name='iIndex' declared_type='CFIndex' type='l' type64='i'/>
    <arg name='oKeyboardLayout' declared_type='KeyboardLayoutRef*' type='^^{OpaqueKeyboardLayoutRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='KLGetKeyboardLayoutCount'>
    <arg name='oCount' declared_type='CFIndex*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='KLGetKeyboardLayoutProperty'>
    <arg name='iKeyboardLayout' declared_type='KeyboardLayoutRef' type='^{OpaqueKeyboardLayoutRef=}'/>
    <arg name='iPropertyTag' declared_type='KeyboardLayoutPropertyTag' type='L' type64='I'/>
    <arg name='oValue' declared_type='void**' type='^^v' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='KLGetKeyboardLayoutWithIdentifier'>
    <arg name='iIdentifier' declared_type='KeyboardLayoutIdentifier' type='l' type64='i'/>
    <arg name='oKeyboardLayout' declared_type='KeyboardLayoutRef*' type='^^{OpaqueKeyboardLayoutRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='KLGetKeyboardLayoutWithName'>
    <arg name='iName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='oKeyboardLayout' declared_type='KeyboardLayoutRef*' type='^^{OpaqueKeyboardLayoutRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='KLSetCurrentKeyboardLayout'>
    <arg name='iKeyboardLayout' declared_type='KeyboardLayoutRef' type='^{OpaqueKeyboardLayoutRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='KeyScript'>
    <arg name='code' declared_type='short' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='KeyTranslate'>
    <arg name='transData' declared_type='void*' type='^v' const='true'/>
    <arg name='keycode' declared_type='UInt16' type='S'/>
    <arg name='state' declared_type='UInt32*' type='^I'/>
    <retval declared_type='UInt32' type='L' type64='I'/>
  </function>
  <function name='KillControls'>
    <arg name='theWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LActivate'>
    <arg name='act' declared_type='Boolean' type='B'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LAddColumn'>
    <arg name='count' declared_type='short' type='s'/>
    <arg name='colNum' declared_type='short' type='s'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='short' type='s'/>
  </function>
  <function name='LAddRow'>
    <arg name='count' declared_type='short' type='s'/>
    <arg name='rowNum' declared_type='short' type='s'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='short' type='s'/>
  </function>
  <function name='LAddToCell'>
    <arg name='dataPtr' declared_type='void*' type='^v' const='true'/>
    <arg name='dataLen' declared_type='short' type='s'/>
    <arg name='theCell' declared_type='Cell' type='{Point=ss}'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LAutoScroll'>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LCellSize'>
    <arg name='cSize' declared_type='Point' type='{Point=ss}'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LClick'>
    <arg name='pt' declared_type='Point' type='{Point=ss}'/>
    <arg name='modifiers' declared_type='EventModifiers' type='S'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='LClrCell'>
    <arg name='theCell' declared_type='Cell' type='{Point=ss}'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LDelColumn'>
    <arg name='count' declared_type='short' type='s'/>
    <arg name='colNum' declared_type='short' type='s'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LDelRow'>
    <arg name='count' declared_type='short' type='s'/>
    <arg name='rowNum' declared_type='short' type='s'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LDispose'>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LDraw'>
    <arg name='theCell' declared_type='Cell' type='{Point=ss}'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LGetCell'>
    <arg name='dataPtr' declared_type='void*' type='^v'/>
    <arg name='dataLen' declared_type='short*' type='^s'/>
    <arg name='theCell' declared_type='Cell' type='{Point=ss}'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LGetCellDataLocation'>
    <arg name='offset' declared_type='short*' type='^s'/>
    <arg name='len' declared_type='short*' type='^s'/>
    <arg name='theCell' declared_type='Cell' type='{Point=ss}'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LGetSelect'>
    <arg name='next' declared_type='Boolean' type='B'/>
    <arg name='theCell' declared_type='Cell*' type='^{Point=ss}'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='LLastClick'>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='Cell' type='{Point=ss}'/>
  </function>
  <function name='LMGetKbdLast'>
    <retval declared_type='UInt8' type='C'/>
  </function>
  <function name='LMGetKbdType'>
    <retval declared_type='UInt8' type='C'/>
  </function>
  <function name='LMGetKeyRepThresh'>
    <retval declared_type='SInt16' type='s'/>
  </function>
  <function name='LMGetKeyThresh'>
    <retval declared_type='SInt16' type='s'/>
  </function>
  <function name='LMGetTheMenu'>
    <retval declared_type='MenuID' type='s'/>
  </function>
  <function name='LMGetWordRedraw'>
    <retval declared_type='UInt8' type='C'/>
  </function>
  <function name='LMSetKbdLast'>
    <arg name='value' declared_type='UInt8' type='C'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LMSetKbdType'>
    <arg name='value' declared_type='UInt8' type='C'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LMSetKeyRepThresh'>
    <arg name='value' declared_type='SInt16' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LMSetKeyThresh'>
    <arg name='value' declared_type='SInt16' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LMSetWordRedraw'>
    <arg name='value' declared_type='UInt8' type='C'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LNew'>
    <arg name='rView' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='dataBounds' declared_type='ListBounds*' type='^{Rect=ssss}' const='true'/>
    <arg name='cSize' declared_type='Point' type='{Point=ss}'/>
    <arg name='theProc' declared_type='short' type='s'/>
    <arg name='theWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='drawIt' declared_type='Boolean' type='B'/>
    <arg name='hasGrow' declared_type='Boolean' type='B'/>
    <arg name='scrollHoriz' declared_type='Boolean' type='B'/>
    <arg name='scrollVert' declared_type='Boolean' type='B'/>
    <retval declared_type='ListHandle' type='^^{ListRec}'/>
  </function>
  <function name='LNextCell'>
    <arg name='hNext' declared_type='Boolean' type='B'/>
    <arg name='vNext' declared_type='Boolean' type='B'/>
    <arg name='theCell' declared_type='Cell*' type='^{Point=ss}'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='LRect'>
    <arg name='cellRect' declared_type='Rect*' type='^{Rect=ssss}'/>
    <arg name='theCell' declared_type='Cell' type='{Point=ss}'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LScroll'>
    <arg name='dCols' declared_type='short' type='s'/>
    <arg name='dRows' declared_type='short' type='s'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LSearch'>
    <arg name='dataPtr' declared_type='void*' type='^v' const='true'/>
    <arg name='dataLen' declared_type='short' type='s'/>
    <arg name='searchProc' function_pointer='true' declared_type='ListSearchUPP' type='^?'>
      <arg declared_type='Ptr' type='*'/>
      <arg declared_type='Ptr' type='*'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='short' type='s'/>
      <retval declared_type='short' type='s'/>
    </arg>
    <arg name='theCell' declared_type='Cell*' type='^{Point=ss}'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='LSetCell'>
    <arg name='dataPtr' declared_type='void*' type='^v' const='true'/>
    <arg name='dataLen' declared_type='short' type='s'/>
    <arg name='theCell' declared_type='Cell' type='{Point=ss}'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LSetDrawingMode'>
    <arg name='drawIt' declared_type='Boolean' type='B'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LSetSelect'>
    <arg name='setIt' declared_type='Boolean' type='B'/>
    <arg name='theCell' declared_type='Cell' type='{Point=ss}'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LSize'>
    <arg name='listWidth' declared_type='short' type='s'/>
    <arg name='listHeight' declared_type='short' type='s'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LUpdate'>
    <arg name='theRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='lHandle' declared_type='ListHandle' type='^^{ListRec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='LoadScrap'>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='MenuChoice'>
    <retval declared_type='long' type='l' type64='q'/>
  </function>
  <function name='MenuEvent'>
    <arg name='inEvent' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}' const='true'/>
    <retval declared_type='UInt32' type='L' type64='I'/>
  </function>
  <function name='MenuHasEnabledItems'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='MenuKey'>
    <arg name='ch' declared_type='CharParameter' type='s'/>
    <retval declared_type='long' type='l' type64='q'/>
  </function>
  <function name='MenuSelect'>
    <arg name='startPt' declared_type='Point' type='{Point=ss}'/>
    <retval declared_type='long' type='l' type64='q'/>
  </function>
  <function name='ModalDialog'>
    <arg name='modalFilter' function_pointer='true' declared_type='ModalFilterUPP' type='^?'>
      <arg declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='DialogItemIndex*' type='^s'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <arg name='itemHit' declared_type='DialogItemIndex*' type='^s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='MoveControl'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='h' declared_type='SInt16' type='s'/>
    <arg name='v' declared_type='SInt16' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='MoveDataBrowserSelectionAnchor'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='direction' declared_type='DataBrowserSelectionAnchorDirection' type='L' type64='I'/>
    <arg name='extendSelection' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='MoveDialogItem'>
    <arg name='inDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='inItemNo' declared_type='SInt16' type='s'/>
    <arg name='inHoriz' declared_type='SInt16' type='s'/>
    <arg name='inVert' declared_type='SInt16' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='MoveMouseTrackingRegion'>
    <arg name='inMouseRef' declared_type='MouseTrackingRef' type='^{OpaqueMouseTrackingRef=}'/>
    <arg name='deltaH' declared_type='SInt16' type='s'/>
    <arg name='deltaV' declared_type='SInt16' type='s'/>
    <arg name='inClip' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='MoveWindowMouseTrackingRegions'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inSignature' declared_type='OSType' type='L' type64='I'/>
    <arg name='deltaH' declared_type='SInt16' type='s'/>
    <arg name='deltaV' declared_type='SInt16' type='s'/>
    <arg name='inClip' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='MoveWindowStructure'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='hGlobal' declared_type='short' type='s'/>
    <arg name='vGlobal' declared_type='short' type='s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='NMInstall'>
    <arg name='nmReqPtr' declared_type='NMRecPtr' type='^{NMRec=^{QElem}sslss^*^**^?l}' type64='^{NMRec=^{QElem}ssqss^*^**^?q}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='NMRemove'>
    <arg name='nmReqPtr' declared_type='NMRecPtr' type='^{NMRec=^{QElem}sslss^*^**^?l}' type64='^{NMRec=^{QElem}ssqss^*^**^?q}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='NewAEFilterUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='AEFilterProcPtr' type='^?'>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='AEAddressDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='AEFilterUPP' type='^?'>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='AEAddressDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='NewAEIdleUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='AEIdleProcPtr' type='^?'>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='long*' type='^l' type64='^q'/>
      <arg declared_type='RgnHandle*' type='^^{OpaqueRgnHandle}'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='AEIdleUPP' type='^?'>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='long*' type='^l' type64='^q'/>
      <arg declared_type='RgnHandle*' type='^^{OpaqueRgnHandle}'/>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='NewCWindow'>
    <arg name='wStorage' declared_type='void*' type='^v'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='title' declared_type='ConstStr255Param' type='*'/>
    <arg name='visible' declared_type='Boolean' type='B'/>
    <arg name='procID' declared_type='short' type='s'/>
    <arg name='behind' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='goAwayFlag' declared_type='Boolean' type='B'/>
    <arg name='refCon' declared_type='long' type='l' type64='q'/>
    <retval declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
  </function>
  <function name='NewCaretHookUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='CaretHookProcPtr' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='CaretHookUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewColorDialog'>
    <arg name='dStorage' declared_type='void*' type='^v'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='title' declared_type='ConstStr255Param' type='*'/>
    <arg name='visible' declared_type='Boolean' type='B'/>
    <arg name='procID' declared_type='SInt16' type='s'/>
    <arg name='behind' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='goAwayFlag' declared_type='Boolean' type='B'/>
    <arg name='refCon' declared_type='SInt32' type='l' type64='i'/>
    <arg name='items' declared_type='Handle' type='^*'/>
    <retval declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
  </function>
  <function name='NewControl'>
    <arg name='owningWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='controlTitle' declared_type='ConstStr255Param' type='*'/>
    <arg name='initiallyVisible' declared_type='Boolean' type='B'/>
    <arg name='initialValue' declared_type='SInt16' type='s'/>
    <arg name='minimumValue' declared_type='SInt16' type='s'/>
    <arg name='maximumValue' declared_type='SInt16' type='s'/>
    <arg name='procID' declared_type='SInt16' type='s'/>
    <arg name='controlReference' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
  </function>
  <function name='NewControlActionUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ControlActionProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlPartCode' type='s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='ControlActionUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlPartCode' type='s'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewControlCNTLToCollectionUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ControlCNTLToCollectionProcPtr' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <arg declared_type='ConstStr255Param' type='*'/>
      <arg declared_type='Collection' type='^{OpaqueCollection=}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval function_pointer='true' declared_type='ControlCNTLToCollectionUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <arg declared_type='ConstStr255Param' type='*'/>
      <arg declared_type='Collection' type='^{OpaqueCollection=}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </retval>
  </function>
  <function name='NewControlColorUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ControlColorProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval function_pointer='true' declared_type='ControlColorUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </retval>
  </function>
  <function name='NewControlDefUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ControlDefProcPtr' type='^?'>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlDefProcMessage' type='s'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <retval declared_type='SInt32' type='l' type64='i'/>
    </arg>
    <retval function_pointer='true' declared_type='ControlDefUPP' type='^?'>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlDefProcMessage' type='s'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <retval declared_type='SInt32' type='l' type64='i'/>
    </retval>
  </function>
  <function name='NewControlEditTextValidationUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ControlEditTextValidationProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='ControlEditTextValidationUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewControlKeyFilterUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ControlKeyFilterProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='SInt16*' type='^s'/>
      <arg declared_type='SInt16*' type='^s'/>
      <arg declared_type='EventModifiers*' type='^S'/>
      <retval declared_type='ControlKeyFilterResult' type='s'/>
    </arg>
    <retval function_pointer='true' declared_type='ControlKeyFilterUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='SInt16*' type='^s'/>
      <arg declared_type='SInt16*' type='^s'/>
      <arg declared_type='EventModifiers*' type='^S'/>
      <retval declared_type='ControlKeyFilterResult' type='s'/>
    </retval>
  </function>
  <function name='NewControlUserPaneActivateUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ControlUserPaneActivateProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='ControlUserPaneActivateUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewControlUserPaneBackgroundUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ControlUserPaneBackgroundProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlBackgroundPtr' type='^{ControlBackgroundRec=sB}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='ControlUserPaneBackgroundUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlBackgroundPtr' type='^{ControlBackgroundRec=sB}'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewControlUserPaneDrawUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ControlUserPaneDrawProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='SInt16' type='s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='ControlUserPaneDrawUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='SInt16' type='s'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewControlUserPaneFocusUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ControlUserPaneFocusProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlFocusPart' type='s'/>
      <retval declared_type='ControlPartCode' type='s'/>
    </arg>
    <retval function_pointer='true' declared_type='ControlUserPaneFocusUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlFocusPart' type='s'/>
      <retval declared_type='ControlPartCode' type='s'/>
    </retval>
  </function>
  <function name='NewControlUserPaneHitTestUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ControlUserPaneHitTestProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <retval declared_type='ControlPartCode' type='s'/>
    </arg>
    <retval function_pointer='true' declared_type='ControlUserPaneHitTestUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <retval declared_type='ControlPartCode' type='s'/>
    </retval>
  </function>
  <function name='NewControlUserPaneIdleUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ControlUserPaneIdleProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='ControlUserPaneIdleUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewControlUserPaneKeyDownUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ControlUserPaneKeyDownProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <retval declared_type='ControlPartCode' type='s'/>
    </arg>
    <retval function_pointer='true' declared_type='ControlUserPaneKeyDownUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <retval declared_type='ControlPartCode' type='s'/>
    </retval>
  </function>
  <function name='NewControlUserPaneTrackingUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ControlUserPaneTrackingProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='ControlActionUPP' type='^?'/>
      <retval declared_type='ControlPartCode' type='s'/>
    </arg>
    <retval function_pointer='true' declared_type='ControlUserPaneTrackingUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='ControlActionUPP' type='^?'/>
      <retval declared_type='ControlPartCode' type='s'/>
    </retval>
  </function>
  <function name='NewDataBrowserAcceptDragUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DataBrowserAcceptDragProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='DataBrowserAcceptDragUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='NewDataBrowserAddDragItemUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DataBrowserAddDragItemProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='ItemReference*' type='^I'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='DataBrowserAddDragItemUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='ItemReference*' type='^I'/>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='NewDataBrowserDrawItemUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DataBrowserDrawItemProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemState' type='L' type64='I'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='DataBrowserDrawItemUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemState' type='L' type64='I'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewDataBrowserEditItemUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DataBrowserEditItemProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}'/>
      <arg declared_type='Boolean*' type='^B'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='DataBrowserEditItemUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}'/>
      <arg declared_type='Boolean*' type='^B'/>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='NewDataBrowserGetContextualMenuUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DataBrowserGetContextualMenuProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='MenuRef*' type='^^{OpaqueMenuRef}'/>
      <arg declared_type='UInt32*' type='^I'/>
      <arg declared_type='CFStringRef*' type='^^{__CFString}'/>
      <arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='DataBrowserGetContextualMenuUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='MenuRef*' type='^^{OpaqueMenuRef}'/>
      <arg declared_type='UInt32*' type='^I'/>
      <arg declared_type='CFStringRef*' type='^^{__CFString}'/>
      <arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewDataBrowserHitTestUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DataBrowserHitTestProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='DataBrowserHitTestUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='NewDataBrowserItemAcceptDragUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DataBrowserItemAcceptDragProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <retval declared_type='DataBrowserDragFlags' type='L' type64='Q'/>
    </arg>
    <retval function_pointer='true' declared_type='DataBrowserItemAcceptDragUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <retval declared_type='DataBrowserDragFlags' type='L' type64='Q'/>
    </retval>
  </function>
  <function name='NewDataBrowserItemCompareUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DataBrowserItemCompareProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='DataBrowserItemCompareUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='NewDataBrowserItemDataUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DataBrowserItemDataProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemDataRef' type='@'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval function_pointer='true' declared_type='DataBrowserItemDataUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemDataRef' type='@'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </retval>
  </function>
  <function name='NewDataBrowserItemDragRgnUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DataBrowserItemDragRgnProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='DataBrowserItemDragRgnUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewDataBrowserItemHelpContentUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DataBrowserItemHelpContentProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='DataBrowserItemHelpContentUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewDataBrowserItemNotificationUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DataBrowserItemNotificationProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemNotification' type='L' type64='I'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='DataBrowserItemNotificationUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemNotification' type='L' type64='I'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewDataBrowserItemNotificationWithItemUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DataBrowserItemNotificationWithItemProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemNotification' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemDataRef' type='@'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='DataBrowserItemNotificationWithItemUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemNotification' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemDataRef' type='@'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewDataBrowserItemReceiveDragUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DataBrowserItemReceiveDragProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='DataBrowserDragFlags' type='L' type64='Q'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='DataBrowserItemReceiveDragUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='DataBrowserDragFlags' type='L' type64='Q'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='NewDataBrowserItemUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DataBrowserItemProcPtr' type='^?'>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemState' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='DataBrowserItemUPP' type='^?'>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserItemState' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewDataBrowserPostProcessDragUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DataBrowserPostProcessDragProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <arg declared_type='OSStatus' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='DataBrowserPostProcessDragUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <arg declared_type='OSStatus' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewDataBrowserReceiveDragUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DataBrowserReceiveDragProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='DataBrowserReceiveDragUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DragReference' type='^{OpaqueDragRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='NewDataBrowserSelectContextualMenuUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DataBrowserSelectContextualMenuProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='MenuItemIndex' type='S'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='DataBrowserSelectContextualMenuUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='MenuItemIndex' type='S'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewDataBrowserTrackingUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DataBrowserTrackingProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='EventModifiers' type='S'/>
      <retval declared_type='DataBrowserTrackingResult' type='s'/>
    </arg>
    <retval function_pointer='true' declared_type='DataBrowserTrackingUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='DataBrowserItemID' type='L' type64='I'/>
      <arg declared_type='DataBrowserPropertyID' type='L' type64='I'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='EventModifiers' type='S'/>
      <retval declared_type='DataBrowserTrackingResult' type='s'/>
    </retval>
  </function>
  <function name='NewDialog'>
    <arg name='dStorage' declared_type='void*' type='^v'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='title' declared_type='ConstStr255Param' type='*'/>
    <arg name='visible' declared_type='Boolean' type='B'/>
    <arg name='procID' declared_type='SInt16' type='s'/>
    <arg name='behind' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='goAwayFlag' declared_type='Boolean' type='B'/>
    <arg name='refCon' declared_type='SInt32' type='l' type64='i'/>
    <arg name='items' declared_type='Handle' type='^*'/>
    <retval declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
  </function>
  <function name='NewDrag'>
    <arg name='theDrag' declared_type='DragRef*' type='^^{OpaqueDragRef}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='NewDragDrawingUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DragDrawingProcPtr' type='^?'>
      <arg declared_type='DragRegionMessage' type='s'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <retval function_pointer='true' declared_type='DragDrawingUPP' type='^?'>
      <arg declared_type='DragRegionMessage' type='s'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </retval>
  </function>
  <function name='NewDragInputUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DragInputProcPtr' type='^?'>
      <arg declared_type='Point*' type='^{Point=ss}'/>
      <arg declared_type='SInt16*' type='^s'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <retval function_pointer='true' declared_type='DragInputUPP' type='^?'>
      <arg declared_type='Point*' type='^{Point=ss}'/>
      <arg declared_type='SInt16*' type='^s'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </retval>
  </function>
  <function name='NewDragReceiveHandlerUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DragReceiveHandlerProcPtr' type='^?'>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <retval function_pointer='true' declared_type='DragReceiveHandlerUPP' type='^?'>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </retval>
  </function>
  <function name='NewDragSendDataUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DragSendDataProcPtr' type='^?'>
      <arg declared_type='FlavorType' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragItemRef' type='L' type64='I'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <retval function_pointer='true' declared_type='DragSendDataUPP' type='^?'>
      <arg declared_type='FlavorType' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragItemRef' type='L' type64='I'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </retval>
  </function>
  <function name='NewDragTrackingHandlerUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DragTrackingHandlerProcPtr' type='^?'>
      <arg declared_type='DragTrackingMessage' type='s'/>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <retval function_pointer='true' declared_type='DragTrackingHandlerUPP' type='^?'>
      <arg declared_type='DragTrackingMessage' type='s'/>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </retval>
  </function>
  <function name='NewDragWithPasteboard'>
    <arg name='inPasteboard' declared_type='PasteboardRef' type='^{OpaquePasteboardRef=}'/>
    <arg name='outDrag' declared_type='DragRef*' type='^^{OpaqueDragRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='NewDrawHookUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='DrawHookProcPtr' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='DrawHookUPP' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewEOLHookUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='EOLHookProcPtr' type='^?'>
      <arg declared_type='char' type='c'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='EOLHookUPP' type='^?'>
      <arg declared_type='char' type='c'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='NewEditUnicodePostUpdateUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='EditUnicodePostUpdateProcPtr' type='^?'>
      <arg declared_type='UniCharArrayHandle' type='^^S'/>
      <arg declared_type='UniCharCount' type='L' type64='I'/>
      <arg declared_type='UniCharArrayOffset' type='L' type64='I'/>
      <arg declared_type='UniCharArrayOffset' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='EditUnicodePostUpdateUPP' type='^?'>
      <arg declared_type='UniCharArrayHandle' type='^^S'/>
      <arg declared_type='UniCharCount' type='L' type64='I'/>
      <arg declared_type='UniCharArrayOffset' type='L' type64='I'/>
      <arg declared_type='UniCharArrayOffset' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='NewEventComparatorUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='EventComparatorProcPtr' type='^?'>
      <arg declared_type='EventRef' type='^{OpaqueEventRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='EventComparatorUPP' type='^?'>
      <arg declared_type='EventRef' type='^{OpaqueEventRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='NewEventHandlerUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='EventHandlerProcPtr' type='^?'>
      <arg declared_type='EventHandlerCallRef' type='^{OpaqueEventHandlerCallRef=}'/>
      <arg declared_type='EventRef' type='^{OpaqueEventRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval function_pointer='true' declared_type='EventHandlerUPP' type='^?'>
      <arg declared_type='EventHandlerCallRef' type='^{OpaqueEventHandlerCallRef=}'/>
      <arg declared_type='EventRef' type='^{OpaqueEventRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </retval>
  </function>
  <function name='NewEventLoopIdleTimerUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='EventLoopIdleTimerProcPtr' type='^?'>
      <arg declared_type='EventLoopTimerRef' type='^{__EventLoopTimer=}'/>
      <arg declared_type='EventLoopIdleTimerMessage' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='EventLoopIdleTimerUPP' type='^?'>
      <arg declared_type='EventLoopTimerRef' type='^{__EventLoopTimer=}'/>
      <arg declared_type='EventLoopIdleTimerMessage' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewEventLoopTimerUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='EventLoopTimerProcPtr' type='^?'>
      <arg declared_type='EventLoopTimerRef' type='^{__EventLoopTimer=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='EventLoopTimerUPP' type='^?'>
      <arg declared_type='EventLoopTimerRef' type='^{__EventLoopTimer=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewFeaturesDialog'>
    <arg name='inStorage' declared_type='void*' type='^v'/>
    <arg name='inBoundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inTitle' declared_type='ConstStr255Param' type='*'/>
    <arg name='inIsVisible' declared_type='Boolean' type='B'/>
    <arg name='inProcID' declared_type='SInt16' type='s'/>
    <arg name='inBehind' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inGoAwayFlag' declared_type='Boolean' type='B'/>
    <arg name='inRefCon' declared_type='SInt32' type='l' type64='i'/>
    <arg name='inItemListHandle' declared_type='Handle' type='^*'/>
    <arg name='inFlags' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
  </function>
  <function name='NewGetScrapDataUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='GetScrapDataProcPtr' type='^?'>
      <arg declared_type='ScrapType' type='L' type64='I'/>
      <arg declared_type='Handle' type='^*'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <retval function_pointer='true' declared_type='GetScrapDataUPP' type='^?'>
      <arg declared_type='ScrapType' type='L' type64='I'/>
      <arg declared_type='Handle' type='^*'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSErr' type='s'/>
    </retval>
  </function>
  <function name='NewHMControlContentUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='HMControlContentProcPtr' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval function_pointer='true' declared_type='HMControlContentUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </retval>
  </function>
  <function name='NewHMMenuItemContentUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='HMMenuItemContentProcPtr' type='^?'>
      <arg declared_type='MenuTrackingData*' type='^{MenuTrackingData=^{OpaqueMenuRef}SS{Rect=ssss}ii}' const='true'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval function_pointer='true' declared_type='HMMenuItemContentUPP' type='^?'>
      <arg declared_type='MenuTrackingData*' type='^{MenuTrackingData=^{OpaqueMenuRef}SS{Rect=ssss}ii}' const='true'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </retval>
  </function>
  <function name='NewHMMenuTitleContentUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='HMMenuTitleContentProcPtr' type='^?'>
      <arg declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval function_pointer='true' declared_type='HMMenuTitleContentUPP' type='^?'>
      <arg declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </retval>
  </function>
  <function name='NewHMWindowContentUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='HMWindowContentProcPtr' type='^?'>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval function_pointer='true' declared_type='HMWindowContentUPP' type='^?'>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='HMContentRequest' type='s'/>
      <arg declared_type='HMContentProvidedType*' type='^s'/>
      <arg declared_type='HMHelpContentPtr' type='^{HMHelpContentRec=i{Rect=ssss}s[2{HMHelpContent=I(?=^{__CFString}[256C]{HMStringResType=ss}^^{TERec}ss)}]}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </retval>
  </function>
  <function name='NewHighHookUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='HighHookProcPtr' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='HighHookUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewHitTestHookUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='HitTestHookProcPtr' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='Boolean*' type='^B'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='HitTestHookUPP' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='Boolean*' type='^B'/>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='NewIndexToStringUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='IndexToStringProcPtr' type='^?'>
      <arg declared_type='short' type='s'/>
      <arg declared_type='ScriptCode*' type='^s'/>
      <arg declared_type='StringPtr*' type='^*'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='IndexToStringUPP' type='^?'>
      <arg declared_type='short' type='s'/>
      <arg declared_type='ScriptCode*' type='^s'/>
      <arg declared_type='StringPtr*' type='^*'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='NewListClickLoopUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ListClickLoopProcPtr' type='^?'>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='ListClickLoopUPP' type='^?'>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='NewListDefUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ListDefProcPtr' type='^?'>
      <arg declared_type='short' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}'/>
      <arg declared_type='Cell' type='{Point=ss}'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='ListHandle' type='^^{ListRec}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='ListDefUPP' type='^?'>
      <arg declared_type='short' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}'/>
      <arg declared_type='Cell' type='{Point=ss}'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='ListHandle' type='^^{ListRec}'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewListSearchUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ListSearchProcPtr' type='^?'>
      <arg declared_type='Ptr' type='*'/>
      <arg declared_type='Ptr' type='*'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='short' type='s'/>
      <retval declared_type='short' type='s'/>
    </arg>
    <retval function_pointer='true' declared_type='ListSearchUPP' type='^?'>
      <arg declared_type='Ptr' type='*'/>
      <arg declared_type='Ptr' type='*'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='short' type='s'/>
      <retval declared_type='short' type='s'/>
    </retval>
  </function>
  <function name='NewMenu'>
    <arg name='menuID' declared_type='MenuID' type='s'/>
    <arg name='menuTitle' declared_type='ConstStr255Param' type='*'/>
    <retval declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
  </function>
  <function name='NewMenuDefUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='MenuDefProcPtr' type='^?'>
      <arg declared_type='short' type='s'/>
      <arg declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='short*' type='^s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='MenuDefUPP' type='^?'>
      <arg declared_type='short' type='s'/>
      <arg declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
      <arg declared_type='Rect*' type='^{Rect=ssss}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='short*' type='^s'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewMenuItemDrawingUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='MenuItemDrawingProcPtr' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='MenuItemDrawingUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewMenuTitleDrawingUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='MenuTitleDrawingProcPtr' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='MenuTitleDrawingUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewModalFilterUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ModalFilterProcPtr' type='^?'>
      <arg declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='DialogItemIndex*' type='^s'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='ModalFilterUPP' type='^?'>
      <arg declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='DialogItemIndex*' type='^s'/>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='NewModalFilterYDUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ModalFilterYDProcPtr' type='^?'>
      <arg declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='short*' type='^s'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='ModalFilterYDUPP' type='^?'>
      <arg declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='short*' type='^s'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='NewNMUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='NMProcPtr' type='^?'>
      <arg declared_type='NMRecPtr' type='^{NMRec=^{QElem}sslss^*^**^?l}' type64='^{NMRec=^{QElem}ssqss^*^**^?q}'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='NMUPP' type='^?'>
      <arg declared_type='NMRecPtr' type='^{NMRec=^{QElem}sslss^*^**^?l}' type64='^{NMRec=^{QElem}ssqss^*^**^?q}'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewNWidthHookUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='NWidthHookProcPtr' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='short*' type='^s'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <retval declared_type='unsigned short' type='S'/>
    </arg>
    <retval function_pointer='true' declared_type='NWidthHookUPP' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='short*' type='^s'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <retval declared_type='unsigned short' type='S'/>
    </retval>
  </function>
  <function name='NewScrapPromiseKeeperUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ScrapPromiseKeeperProcPtr' type='^?'>
      <arg declared_type='ScrapRef' type='^{OpaqueScrapRef=}'/>
      <arg declared_type='ScrapFlavorType' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval function_pointer='true' declared_type='ScrapPromiseKeeperUPP' type='^?'>
      <arg declared_type='ScrapRef' type='^{OpaqueScrapRef=}'/>
      <arg declared_type='ScrapFlavorType' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </retval>
  </function>
  <function name='NewTEClickLoopUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='TEClickLoopProcPtr' type='^?'>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='TEClickLoopUPP' type='^?'>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='NewTEDoTextUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='TEDoTextProcPtr' type='^?'>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='GrafPtr*' type='^^{OpaqueGrafPtr}'/>
      <arg declared_type='short*' type='^s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='TEDoTextUPP' type='^?'>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='GrafPtr*' type='^^{OpaqueGrafPtr}'/>
      <arg declared_type='short*' type='^s'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewTEFindWordUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='TEFindWordProcPtr' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='TEFindWordUPP' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewTERecalcUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='TERecalcProcPtr' type='^?'>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='TERecalcUPP' type='^?'>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewTSMDocument'>
    <arg name='numOfInterface' declared_type='short' type='s'/>
    <arg name='supportedInterfaceTypes' declared_type='OSType*' type='^I'/>
    <arg name='idocID' declared_type='TSMDocumentID*' type='^^{OpaqueTSMDocumentID}'/>
    <arg name='refcon' declared_type='long' type='l' type64='q'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='NewTSMTEPostUpdateUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='TSMTEPostUpdateProcPtr' type='^?'>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='TSMTEPostUpdateUPP' type='^?'>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewTSMTEPreUpdateUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='TSMTEPreUpdateProcPtr' type='^?'>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <arg declared_type='long' type='l' type64='q'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='TSMTEPreUpdateUPP' type='^?'>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <arg declared_type='long' type='l' type64='q'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewTXNActionKeyMapperUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='TXNActionKeyMapperProcPtr' type='^?'>
      <arg declared_type='TXNActionKey' type='L' type64='I'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='CFStringRef' type='^{__CFString=}'/>
    </arg>
    <retval function_pointer='true' declared_type='TXNActionKeyMapperUPP' type='^?'>
      <arg declared_type='TXNActionKey' type='L' type64='I'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='CFStringRef' type='^{__CFString=}'/>
    </retval>
  </function>
  <function name='NewTXNActionNameMapperUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='TXNActionNameMapperProcPtr' type='^?'>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='CFStringRef' type='^{__CFString=}'/>
    </arg>
    <retval function_pointer='true' declared_type='TXNActionNameMapperUPP' type='^?'>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='CFStringRef' type='^{__CFString=}'/>
    </retval>
  </function>
  <function name='NewTXNContextualMenuSetupUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='TXNContextualMenuSetupProcPtr' type='^?'>
      <arg declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
      <arg declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='TXNContextualMenuSetupUPP' type='^?'>
      <arg declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
      <arg declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewTXNFindUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='TXNFindProcPtr' type='^?'>
      <arg declared_type='TXNMatchTextRecord*' type='^{TXNMatchTextRecord=^viI}' const='true'/>
      <arg declared_type='TXNDataType' type='L' type64='I'/>
      <arg declared_type='TXNMatchOptions' type='L' type64='I'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='TextEncoding' type='L' type64='I'/>
      <arg declared_type='TXNOffset' type='L' type64='I'/>
      <arg declared_type='ByteCount' type='L' type64='I'/>
      <arg declared_type='TXNOffset*' type='^I'/>
      <arg declared_type='TXNOffset*' type='^I'/>
      <arg declared_type='Boolean*' type='^B'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval function_pointer='true' declared_type='TXNFindUPP' type='^?'>
      <arg declared_type='TXNMatchTextRecord*' type='^{TXNMatchTextRecord=^viI}' const='true'/>
      <arg declared_type='TXNDataType' type='L' type64='I'/>
      <arg declared_type='TXNMatchOptions' type='L' type64='I'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='TextEncoding' type='L' type64='I'/>
      <arg declared_type='TXNOffset' type='L' type64='I'/>
      <arg declared_type='ByteCount' type='L' type64='I'/>
      <arg declared_type='TXNOffset*' type='^I'/>
      <arg declared_type='TXNOffset*' type='^I'/>
      <arg declared_type='Boolean*' type='^B'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </retval>
  </function>
  <function name='NewTXNScrollInfoUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='TXNScrollInfoProcPtr' type='^?'>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <arg declared_type='TXNScrollBarOrientation' type='L' type64='I'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='TXNScrollInfoUPP' type='^?'>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <arg declared_type='TXNScrollBarOrientation' type='L' type64='I'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewTextWidthHookUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='TextWidthHookProcPtr' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <retval declared_type='unsigned short' type='S'/>
    </arg>
    <retval function_pointer='true' declared_type='TextWidthHookUPP' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <retval declared_type='unsigned short' type='S'/>
    </retval>
  </function>
  <function name='NewThemeButtonDrawUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ThemeButtonDrawProcPtr' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='ThemeButtonKind' type='S'/>
      <arg declared_type='ThemeButtonDrawInfo*' type='^{ThemeButtonDrawInfo=ISS}' const='true'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='ThemeButtonDrawUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='ThemeButtonKind' type='S'/>
      <arg declared_type='ThemeButtonDrawInfo*' type='^{ThemeButtonDrawInfo=ISS}' const='true'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewThemeEraseUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ThemeEraseProcPtr' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='ThemeEraseUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewThemeIteratorUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ThemeIteratorProcPtr' type='^?'>
      <arg declared_type='ConstStr255Param' type='*'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Collection' type='^{OpaqueCollection=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval function_pointer='true' declared_type='ThemeIteratorUPP' type='^?'>
      <arg declared_type='ConstStr255Param' type='*'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Collection' type='^{OpaqueCollection=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </retval>
  </function>
  <function name='NewThemeTabTitleDrawUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='ThemeTabTitleDrawProcPtr' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='ThemeTabStyle' type='S'/>
      <arg declared_type='ThemeTabDirection' type='S'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='ThemeTabTitleDrawUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='ThemeTabStyle' type='S'/>
      <arg declared_type='ThemeTabDirection' type='S'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewUserItemUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='UserItemProcPtr' type='^?'>
      <arg declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
      <arg declared_type='DialogItemIndex' type='s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='UserItemUPP' type='^?'>
      <arg declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
      <arg declared_type='DialogItemIndex' type='s'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NewWidthHookUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='WidthHookProcPtr' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <retval declared_type='unsigned short' type='S'/>
    </arg>
    <retval function_pointer='true' declared_type='WidthHookUPP' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <retval declared_type='unsigned short' type='S'/>
    </retval>
  </function>
  <function name='NewWindow'>
    <arg name='wStorage' declared_type='void*' type='^v'/>
    <arg name='boundsRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='title' declared_type='ConstStr255Param' type='*'/>
    <arg name='visible' declared_type='Boolean' type='B'/>
    <arg name='theProc' declared_type='short' type='s'/>
    <arg name='behind' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='goAwayFlag' declared_type='Boolean' type='B'/>
    <arg name='refCon' declared_type='long' type='l' type64='q'/>
    <retval declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
  </function>
  <function name='NewWindowDefUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='WindowDefProcPtr' type='^?'>
      <arg declared_type='short' type='s'/>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='long' type='l' type64='q'/>
      <retval declared_type='long' type='l' type64='q'/>
    </arg>
    <retval function_pointer='true' declared_type='WindowDefUPP' type='^?'>
      <arg declared_type='short' type='s'/>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='long' type='l' type64='q'/>
      <retval declared_type='long' type='l' type64='q'/>
    </retval>
  </function>
  <function name='NewWindowPaintUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='WindowPaintProcPtr' type='^?'>
      <arg declared_type='GDHandle' type='^^{GDevice}'/>
      <arg declared_type='GrafPtr' type='^{OpaqueGrafPtr=}'/>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval function_pointer='true' declared_type='WindowPaintUPP' type='^?'>
      <arg declared_type='GDHandle' type='^^{GDevice}'/>
      <arg declared_type='GrafPtr' type='^{OpaqueGrafPtr=}'/>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </retval>
  </function>
  <function name='NewWindowTitleDrawingUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='WindowTitleDrawingProcPtr' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='WindowTitleDrawingUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='NormalizeThemeDrawingState'>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='NoteAlert'>
    <arg name='alertID' declared_type='SInt16' type='s'/>
    <arg name='modalFilter' function_pointer='true' declared_type='ModalFilterUPP' type='^?'>
      <arg declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='DialogItemIndex*' type='^s'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='DialogItemIndex' type='s'/>
  </function>
  <function name='OpenDataBrowserContainer'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='container' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='OpenDrawer'>
    <arg name='inDrawerWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inEdge' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='inAsync' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='OpenTextService'>
    <arg name='idocID' declared_type='TSMDocumentID' type='^{OpaqueTSMDocumentID=}'/>
    <arg name='aComponent' declared_type='Component' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
    <arg name='aComponentInstance' declared_type='ComponentInstance*' type='^^{ComponentInstanceRecord}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='OverlayApplicationDockTileImage'>
    <arg name='inImage' declared_type='CGImageRef' type='^{CGImage=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PaintBehind'>
    <arg name='startWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='clobberedRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='PaintOne'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='clobberedRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='ParamText'>
    <arg name='param0' declared_type='ConstStr255Param' type='*'/>
    <arg name='param1' declared_type='ConstStr255Param' type='*'/>
    <arg name='param2' declared_type='ConstStr255Param' type='*'/>
    <arg name='param3' declared_type='ConstStr255Param' type='*'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='PinRect'>
    <arg name='theRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='thePt' declared_type='Point' type='{Point=ss}'/>
    <retval declared_type='long' type='l' type64='q'/>
  </function>
  <function name='PlayThemeSound'>
    <arg name='kind' declared_type='ThemeSoundKind' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PopSymbolicHotKeyMode'>
    <arg name='inToken' declared_type='void*' type='^v'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='PopUpMenuSelect'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='top' declared_type='short' type='s'/>
    <arg name='left' declared_type='short' type='s'/>
    <arg name='popUpItem' declared_type='MenuItemIndex' type='S'/>
    <retval declared_type='long' type='l' type64='q'/>
  </function>
  <function name='PostEvent'>
    <arg name='eventNum' declared_type='EventKind' type='S'/>
    <arg name='eventMsg' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='PostEventToQueue'>
    <arg name='inQueue' declared_type='EventQueueRef' type='^{OpaqueEventQueueRef=}'/>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <arg name='inPriority' declared_type='EventPriority' type='s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ProcessHICommand'>
    <arg name='inCommand' declared_type='HICommand*' type='^{HICommand=II{?=^{OpaqueMenuRef}S}}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ProcessIsContextualMenuClient'>
    <arg name='inPSN' declared_type='ProcessSerialNumber*' type='^{ProcessSerialNumber=II}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='PushSymbolicHotKeyMode'>
    <arg name='inOptions' declared_type='OptionBits' type='L' type64='I'/>
    <retval declared_type='void*' type='^v'/>
  </function>
  <function name='PutScrapFlavor'>
    <arg name='scrap' declared_type='ScrapRef' type='^{OpaqueScrapRef=}'/>
    <arg name='flavorType' declared_type='ScrapFlavorType' type='L' type64='I'/>
    <arg name='flavorFlags' declared_type='ScrapFlavorFlags' type='L' type64='I'/>
    <arg name='flavorSize' declared_type='Size' type='l' type64='q'/>
    <arg name='flavorData' declared_type='void*' type='^v' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='QuitAppModalLoopForWindow'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='QuitApplicationEventLoop'>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='QuitEventLoop'>
    <arg name='inEventLoop' declared_type='EventLoopRef' type='^{OpaqueEventLoopRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ReceiveNextEvent'>
    <arg name='inNumTypes' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inList' declared_type='EventTypeSpec*' type='^{EventTypeSpec=II}' const='true'/>
    <arg name='inTimeout' declared_type='EventTimeout' type='d'/>
    <arg name='inPullEvent' declared_type='Boolean' type='B'/>
    <arg name='outEvent' declared_type='EventRef*' type='^^{OpaqueEventRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RegisterAppearanceClient'>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RegisterControlDefinition'>
    <arg name='inCDEFResID' declared_type='SInt16' type='s'/>
    <arg name='inControlDef' declared_type='ControlDefSpec*' type='^{ControlDefSpec=I(?=^?^v)}' const='true'/>
    <arg name='inConversionProc' function_pointer='true' declared_type='ControlCNTLToCollectionUPP' type='^?'>
      <arg declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <arg declared_type='ConstStr255Param' type='*'/>
      <arg declared_type='Collection' type='^{OpaqueCollection=}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RegisterEventHotKey'>
    <arg name='inHotKeyCode' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inHotKeyModifiers' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inHotKeyID' declared_type='EventHotKeyID' type='{EventHotKeyID=II}'/>
    <arg name='inTarget' declared_type='EventTargetRef' type='^{OpaqueEventTargetRef=}'/>
    <arg name='inOptions' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='outRef' declared_type='EventHotKeyRef*' type='^^{OpaqueEventHotKeyRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RegisterListDefinition'>
    <arg name='inResID' declared_type='SInt16' type='s'/>
    <arg name='inDefSpec' declared_type='ListDefSpecPtr' type='^{ListDefSpec=I(?=^?)}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RegisterMenuDefinition'>
    <arg name='inResID' declared_type='SInt16' type='s'/>
    <arg name='inDefSpec' declared_type='MenuDefSpecPtr' type='^{MenuDefSpec=I(?=^?{?=^{__CFString}^{OpaqueEventRef}})}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RegisterToolboxObjectClass'>
    <arg name='inClassID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='inBaseClass' declared_type='ToolboxObjectClassRef' type='^{OpaqueToolboxObjectClassRef=}'/>
    <arg name='inNumEvents' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inEventList' declared_type='EventTypeSpec*' type='^{EventTypeSpec=II}' const='true'/>
    <arg name='inEventHandler' function_pointer='true' declared_type='EventHandlerUPP' type='^?'>
      <arg declared_type='EventHandlerCallRef' type='^{OpaqueEventHandlerCallRef=}'/>
      <arg declared_type='EventRef' type='^{OpaqueEventRef=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <arg name='inEventHandlerData' declared_type='void*' type='^v'/>
    <arg name='outClassRef' declared_type='ToolboxObjectClassRef*' type='^^{OpaqueToolboxObjectClassRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RegisterWindowDefinition'>
    <arg name='inResID' declared_type='SInt16' type='s'/>
    <arg name='inDefSpec' declared_type='WindowDefSpec*' type='^{WindowDefSpec=I(?=^?^vs^v)}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ReleaseEvent'>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='ReleaseMenu'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ReleaseMouseTrackingRegion'>
    <arg name='inMouseRef' declared_type='MouseTrackingRef' type='^{OpaqueMouseTrackingRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ReleaseQDContextForCollapsedWindowDockTile'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inContext' declared_type='CGrafPtr' type='^{OpaqueGrafPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ReleaseWindow'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ReleaseWindowGroup'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ReleaseWindowMouseTrackingRegions'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inSignature' declared_type='OSType' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RemoveControlProperty'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='propertyCreator' declared_type='OSType' type='L' type64='I'/>
    <arg name='propertyTag' declared_type='OSType' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RemoveDataBrowserItems'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='container' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='numItems' declared_type='UInt32' type='L' type64='I'/>
    <arg name='items' declared_type='DataBrowserItemID*' type='^I' const='true'/>
    <arg name='preSortProperty' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RemoveDataBrowserTableViewColumn'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='column' declared_type='DataBrowserTableViewColumnID' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RemoveDialogItems'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='itemNo' declared_type='DialogItemIndex' type='s'/>
    <arg name='amountToRemove' declared_type='DialogItemIndex' type='s'/>
    <arg name='disposeItemData' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RemoveEventFromQueue'>
    <arg name='inQueue' declared_type='EventQueueRef' type='^{OpaqueEventQueueRef=}'/>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RemoveEventHandler'>
    <arg name='inHandlerRef' declared_type='EventHandlerRef' type='^{OpaqueEventHandlerRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RemoveEventLoopTimer'>
    <arg name='inTimer' declared_type='EventLoopTimerRef' type='^{__EventLoopTimer=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RemoveEventTypesFromHandler'>
    <arg name='inHandlerRef' declared_type='EventHandlerRef' type='^{OpaqueEventHandlerRef=}'/>
    <arg name='inNumTypes' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inList' declared_type='EventTypeSpec*' type='^{EventTypeSpec=II}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RemoveMenuCommandProperty'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inCommandID' declared_type='MenuCommand' type='L' type64='I'/>
    <arg name='inPropertyCreator' declared_type='OSType' type='L' type64='I'/>
    <arg name='inPropertyTag' declared_type='OSType' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RemoveMenuItemProperty'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <arg name='propertyCreator' declared_type='OSType' type='L' type64='I'/>
    <arg name='propertyTag' declared_type='OSType' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RemoveReceiveHandler'>
    <arg name='receiveHandler' function_pointer='true' declared_type='DragReceiveHandlerUPP' type='^?'>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <arg name='theWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='RemoveTrackingHandler'>
    <arg name='trackingHandler' function_pointer='true' declared_type='DragTrackingHandlerUPP' type='^?'>
      <arg declared_type='DragTrackingMessage' type='s'/>
      <arg declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <arg name='theWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='RemoveWindowProperty'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='propertyCreator' declared_type='PropertyCreator' type='L' type64='I'/>
    <arg name='propertyTag' declared_type='PropertyTag' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RemoveWindowProxy'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RepositionWindow'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='parentWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='method' declared_type='WindowPositionMethod' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ResetAlertStage'>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='ReshapeCustomWindow'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ResizeWindow'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inStartPoint' declared_type='Point' type='{Point=ss}'/>
    <arg name='inSizeConstraints' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='outNewContentRect' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='RestoreApplicationDockTileImage'>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RetainEvent'>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <retval declared_type='EventRef' type='^{OpaqueEventRef=}'/>
  </function>
  <function name='RetainMenu'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RetainMouseTrackingRegion'>
    <arg name='inMouseRef' declared_type='MouseTrackingRef' type='^{OpaqueMouseTrackingRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RetainWindow'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RetainWindowGroup'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RevealDataBrowserItem'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='propertyID' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <arg name='options' declared_type='DataBrowserRevealOptions' type='C'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ReverseKeyboardFocus'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='RunAppModalLoopForWindow'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RunApplicationEventLoop'>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='RunCurrentEventLoop'>
    <arg name='inTimeout' declared_type='EventTimeout' type='d'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='RunStandardAlert'>
    <arg name='inAlert' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='filterProc' function_pointer='true' declared_type='ModalFilterUPP' type='^?'>
      <arg declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='DialogItemIndex*' type='^s'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <arg name='outItemHit' declared_type='DialogItemIndex*' type='^s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ScrollMenuImage'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inScrollRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inHScroll' declared_type='int' type='i'/>
    <arg name='inVScroll' declared_type='int' type='i'/>
    <arg name='inContext' declared_type='CGContextRef' type='^{CGContext=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ScrollWindowRect'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inScrollRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='inHPixels' declared_type='SInt16' type='s'/>
    <arg name='inVPixels' declared_type='SInt16' type='s'/>
    <arg name='inOptions' declared_type='ScrollWindowOptions' type='L' type64='I'/>
    <arg name='outExposedRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ScrollWindowRegion'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inScrollRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='inHPixels' declared_type='SInt16' type='s'/>
    <arg name='inVPixels' declared_type='SInt16' type='s'/>
    <arg name='inOptions' declared_type='ScrollWindowOptions' type='L' type64='I'/>
    <arg name='outExposedRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SelectDialogItemText'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='itemNo' declared_type='DialogItemIndex' type='s'/>
    <arg name='strtSel' declared_type='SInt16' type='s'/>
    <arg name='endSel' declared_type='SInt16' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SelectTextService'>
    <arg name='aComp' declared_type='Component' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SelectWindow'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SendAEFromTSMComponent'>
    <arg name='theAppleEvent' declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
    <arg name='reply' declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
    <arg name='sendMode' declared_type='AESendMode' type='l' type64='i'/>
    <arg name='sendPriority' declared_type='AESendPriority' type='s'/>
    <arg name='timeOutInTicks' declared_type='long' type='l' type64='q'/>
    <arg name='idleProc' function_pointer='true' declared_type='AEIdleUPP' type='^?'>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='long*' type='^l' type64='^q'/>
      <arg declared_type='RgnHandle*' type='^^{OpaqueRgnHandle}'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <arg name='filterProc' function_pointer='true' declared_type='AEFilterUPP' type='^?'>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='long' type='l' type64='q'/>
      <arg declared_type='AEAddressDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SendBehind'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='behindWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SendControlMessage'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inMessage' declared_type='SInt16' type='s'/>
    <arg name='inParam' declared_type='void*' type='^v'/>
    <retval declared_type='SInt32' type='l' type64='i'/>
  </function>
  <function name='SendEventToEventTarget'>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <arg name='inTarget' declared_type='EventTargetRef' type='^{OpaqueEventTargetRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SendEventToEventTargetWithOptions'>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <arg name='inTarget' declared_type='EventTargetRef' type='^{OpaqueEventTargetRef=}'/>
    <arg name='inOptions' declared_type='OptionBits' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SendTextInputEvent'>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SendWindowGroupBehind'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <arg name='behindGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetAnimatedThemeCursor'>
    <arg name='inCursor' declared_type='ThemeCursor' type='L' type64='I'/>
    <arg name='inAnimationStep' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetApplicationDockTileImage'>
    <arg name='inImage' declared_type='CGImageRef' type='^{CGImage=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetApplicationDockTileMenu'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetAutomaticControlDragTrackingEnabledForWindow'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inTracks' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetBevelButtonContentInfo'>
    <arg name='inButton' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inContent' declared_type='ControlButtonContentInfoPtr' type='^{ControlButtonContentInfo=s(?=s^^{CIcon}^*^{OpaqueIconRef}^^{Picture}^*^{CGImage})}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetBevelButtonGraphicAlignment'>
    <arg name='inButton' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inAlign' declared_type='ControlButtonGraphicAlignment' type='s'/>
    <arg name='inHOffset' declared_type='SInt16' type='s'/>
    <arg name='inVOffset' declared_type='SInt16' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetBevelButtonMenuValue'>
    <arg name='inButton' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inValue' declared_type='SInt16' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetBevelButtonTextAlignment'>
    <arg name='inButton' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inAlign' declared_type='ControlButtonTextAlignment' type='s'/>
    <arg name='inHOffset' declared_type='SInt16' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetBevelButtonTextPlacement'>
    <arg name='inButton' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inWhere' declared_type='ControlButtonTextPlacement' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetBevelButtonTransform'>
    <arg name='inButton' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='transform' declared_type='IconTransformType' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetControl32BitMaximum'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='newMaximum' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetControl32BitMinimum'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='newMinimum' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetControl32BitValue'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='newValue' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetControlAction'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='actionProc' function_pointer='true' declared_type='ControlActionUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlPartCode' type='s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetControlBounds'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='bounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetControlColorProc'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inProc' function_pointer='true' declared_type='ControlColorUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetControlCommandID'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inCommandID' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetControlData'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inPart' declared_type='ControlPartCode' type='s'/>
    <arg name='inTagName' declared_type='ResType' type='L' type64='I'/>
    <arg name='inSize' declared_type='Size' type='l' type64='q'/>
    <arg name='inData' declared_type='void*' type='^v' const='true'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetControlDataHandle'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='dataHandle' declared_type='Handle' type='^*'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetControlDragTrackingEnabled'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inTracks' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetControlFontStyle'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inStyle' declared_type='ControlFontStyleRec*' type='^{ControlFontStyleRec=ssssss{RGBColor=SSS}{RGBColor=SSS}}' const='true'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetControlID'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inID' declared_type='ControlID*' type='^{ControlID=Ii}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetControlMaximum'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='newMaximum' declared_type='SInt16' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetControlMinimum'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='newMinimum' declared_type='SInt16' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetControlPopupMenuHandle'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='popupMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetControlPopupMenuID'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='menuID' declared_type='short' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetControlProperty'>
    <arg name='control' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='propertyCreator' declared_type='OSType' type='L' type64='I'/>
    <arg name='propertyTag' declared_type='OSType' type='L' type64='I'/>
    <arg name='propertySize' declared_type='UInt32' type='L' type64='I'/>
    <arg name='propertyData' declared_type='void*' type='^v' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetControlReference'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='data' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetControlSupervisor'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inBoss' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetControlTitle'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='title' declared_type='ConstStr255Param' type='*'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetControlTitleWithCFString'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetControlValue'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='newValue' declared_type='SInt16' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetControlViewSize'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='newViewSize' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetControlVisibility'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inIsVisible' declared_type='Boolean' type='B'/>
    <arg name='inDoDraw' declared_type='Boolean' type='B'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetDataBrowserActiveItems'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='active' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserCallbacks'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='callbacks' declared_type='DataBrowserCallbacks*' type='^{DataBrowserCallbacks=I(?={?=^?^?^?^?^?^?^?^?^?^?})}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserColumnViewDisplayType'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='propertyType' declared_type='DataBrowserPropertyType' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserColumnViewPath'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='length' declared_type='UInt32' type='L' type64='I'/>
    <arg name='path' declared_type='DataBrowserItemID*' type='^I' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserCustomCallbacks'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='callbacks' declared_type='DataBrowserCustomCallbacks*' type='^{DataBrowserCustomCallbacks=I(?={?=^?^?^?^?^?^?^?})}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserEditItem'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='property' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserEditText'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='text' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserHasScrollBars'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='horiz' declared_type='Boolean' type='B'/>
    <arg name='vert' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserItemDataBooleanValue'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserItemDataButtonValue'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='ThemeButtonValue' type='S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserItemDataDateTime'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='long' type='l' type64='q'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserItemDataDrawState'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='ThemeDrawState' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserItemDataIcon'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='IconRef' type='^{OpaqueIconRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserItemDataIconTransform'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='IconTransformType' type='s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserItemDataItemID'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserItemDataLongDateTime'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='LongDateTime*' type='^q' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserItemDataMaximum'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserItemDataMenuRef'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserItemDataMinimum'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserItemDataRGBColor'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='RGBColor*' type='^{RGBColor=SSS}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserItemDataText'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserItemDataValue'>
    <arg name='itemData' declared_type='DataBrowserItemDataRef' type='@'/>
    <arg name='theData' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserListViewDisclosureColumn'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='column' declared_type='DataBrowserTableViewColumnID' type='L' type64='I'/>
    <arg name='expandableRows' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserListViewHeaderBtnHeight'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='height' declared_type='UInt16' type='S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserListViewHeaderDesc'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='column' declared_type='DataBrowserTableViewColumnID' type='L' type64='I'/>
    <arg name='desc' declared_type='DataBrowserListViewHeaderDesc*' type='^{DataBrowserListViewHeaderDesc=ISSs^{__CFString}S{ControlFontStyleRec=ssssss{RGBColor=SSS}{RGBColor=SSS}}{ControlButtonContentInfo=s(?=s^^{CIcon}^*^{OpaqueIconRef}^^{Picture}^*^{CGImage})}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserListViewUsePlainBackground'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='usePlainBackground' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserPropertyFlags'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='property' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <arg name='flags' declared_type='DataBrowserPropertyFlags' type='L' type64='Q'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserScrollBarInset'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='insetRect' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserScrollPosition'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='top' declared_type='UInt32' type='L' type64='I'/>
    <arg name='left' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserSelectedItems'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='numItems' declared_type='UInt32' type='L' type64='I'/>
    <arg name='items' declared_type='DataBrowserItemID*' type='^I' const='true'/>
    <arg name='operation' declared_type='DataBrowserSetOption' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserSelectionFlags'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='selectionFlags' declared_type='DataBrowserSelectionFlags' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserSortOrder'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='order' declared_type='DataBrowserSortOrder' type='S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserSortProperty'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='property' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserTableViewColumnPosition'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='column' declared_type='DataBrowserTableViewColumnID' type='L' type64='I'/>
    <arg name='position' declared_type='DataBrowserTableViewColumnIndex' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserTableViewColumnWidth'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='width' declared_type='UInt16' type='S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserTableViewGeometry'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='variableWidthColumns' declared_type='Boolean' type='B'/>
    <arg name='variableHeightRows' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserTableViewHiliteStyle'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='hiliteStyle' declared_type='DataBrowserTableViewHiliteStyle' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserTableViewItemRow'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='row' declared_type='DataBrowserTableViewRowIndex' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserTableViewItemRowHeight'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='item' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='height' declared_type='UInt16' type='S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserTableViewNamedColumnWidth'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='column' declared_type='DataBrowserTableViewColumnID' type='L' type64='I'/>
    <arg name='width' declared_type='UInt16' type='S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserTableViewRowHeight'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='height' declared_type='UInt16' type='S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserTarget'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='target' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserUserState'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='stateInfo' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDataBrowserViewStyle'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='style' declared_type='DataBrowserViewStyle' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDefaultInputMethod'>
    <arg name='ts' declared_type='Component' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
    <arg name='slRecordPtr' declared_type='ScriptLanguageRecord*' type='^{ScriptLanguageRecord=ss}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetDefaultInputMethodOfClass'>
    <arg name='aComp' declared_type='Component' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
    <arg name='slRecPtr' declared_type='ScriptLanguageRecord*' type='^{ScriptLanguageRecord=ss}'/>
    <arg name='tsClass' declared_type='TextServiceClass' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDialogCancelItem'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='newItem' declared_type='DialogItemIndex' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetDialogDefaultItem'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='newItem' declared_type='DialogItemIndex' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetDialogFont'>
    <arg name='fontNum' declared_type='SInt16' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetDialogItem'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='itemNo' declared_type='DialogItemIndex' type='s'/>
    <arg name='itemType' declared_type='DialogItemType' type='s'/>
    <arg name='item' declared_type='Handle' type='^*'/>
    <arg name='box' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetDialogItemText'>
    <arg name='item' declared_type='Handle' type='^*'/>
    <arg name='text' declared_type='ConstStr255Param' type='*'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetDialogTimeout'>
    <arg name='inDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='inButtonToPress' declared_type='SInt16' type='s'/>
    <arg name='inSecondsToWait' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDialogTracksCursor'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='tracks' declared_type='Boolean' type='B'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetDisclosureTriangleLastValue'>
    <arg name='inTabControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inValue' declared_type='SInt16' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetDragAllowableActions'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='inActions' declared_type='DragActions' type='L' type64='I'/>
    <arg name='isLocal' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDragDrawingProc'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='drawingProc' function_pointer='true' declared_type='DragDrawingUPP' type='^?'>
      <arg declared_type='DragRegionMessage' type='s'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
      <arg declared_type='Point' type='{Point=ss}'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <arg name='dragDrawingRefCon' declared_type='void*' type='^v'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetDragDropAction'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='inAction' declared_type='DragActions' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDragImage'>
    <arg name='inDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='inImagePixMap' declared_type='PixMapHandle' type='^^{PixMap}'/>
    <arg name='inImageRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='inImageOffsetPt' declared_type='Point' type='{Point=ss}'/>
    <arg name='inImageFlags' declared_type='DragImageFlags' type='L' type64='I'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetDragImageWithCGImage'>
    <arg name='inDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='inCGImage' declared_type='CGImageRef' type='^{CGImage=}'/>
    <arg name='inImageOffsetPt' declared_type='HIPoint*' type='^{CGPoint=ff}' const='true'/>
    <arg name='inImageFlags' declared_type='DragImageFlags' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDragInputProc'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='inputProc' function_pointer='true' declared_type='DragInputUPP' type='^?'>
      <arg declared_type='Point*' type='^{Point=ss}'/>
      <arg declared_type='SInt16*' type='^s'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <arg name='dragInputRefCon' declared_type='void*' type='^v'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetDragItemBounds'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='theItemRef' declared_type='DragItemRef' type='L' type64='I'/>
    <arg name='itemBounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetDragItemFlavorData'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='theItemRef' declared_type='DragItemRef' type='L' type64='I'/>
    <arg name='theType' declared_type='FlavorType' type='L' type64='I'/>
    <arg name='dataPtr' declared_type='void*' type='^v' const='true'/>
    <arg name='dataSize' declared_type='Size' type='l' type64='q'/>
    <arg name='dataOffset' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetDragMouse'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='globalPinnedMouse' declared_type='Point' type='{Point=ss}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetDragSendProc'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='sendProc' function_pointer='true' declared_type='DragSendDataUPP' type='^?'>
      <arg declared_type='FlavorType' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='DragItemRef' type='L' type64='I'/>
      <arg declared_type='DragRef' type='^{OpaqueDragRef=}'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <arg name='dragSendRefCon' declared_type='void*' type='^v'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetDrawerOffsets'>
    <arg name='inDrawerWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inLeadingOffset' declared_type='float' type='f'/>
    <arg name='inTrailingOffset' declared_type='float' type='f'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDrawerParent'>
    <arg name='inDrawerWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inParent' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDrawerPreferredEdge'>
    <arg name='inDrawerWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inEdge' declared_type='OptionBits' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetDropLocation'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='dropLocation' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetEventLoopTimerNextFireTime'>
    <arg name='inTimer' declared_type='EventLoopTimerRef' type='^{__EventLoopTimer=}'/>
    <arg name='inNextFire' declared_type='EventTimerInterval' type='d'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetEventMask'>
    <arg name='value' declared_type='EventMask' type='S'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetEventParameter'>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <arg name='inName' declared_type='EventParamName' type='L' type64='I'/>
    <arg name='inType' declared_type='EventParamType' type='L' type64='I'/>
    <arg name='inSize' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inDataPtr' declared_type='void*' type='^v' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetEventTime'>
    <arg name='inEvent' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <arg name='inTime' declared_type='EventTime' type='d'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetImageWellContentInfo'>
    <arg name='inButton' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inContent' declared_type='ControlButtonContentInfoPtr' type='^{ControlButtonContentInfo=s(?=s^^{CIcon}^*^{OpaqueIconRef}^^{Picture}^*^{CGImage})}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetImageWellTransform'>
    <arg name='inButton' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inTransform' declared_type='IconTransformType' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetItemCmd'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <arg name='cmdChar' declared_type='CharParameter' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetItemIcon'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <arg name='iconIndex' declared_type='short' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetItemMark'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <arg name='markChar' declared_type='CharParameter' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetItemStyle'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <arg name='chStyle' declared_type='StyleParameter' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetKeyboardFocus'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inPart' declared_type='ControlFocusPart' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetListCellIndent'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <arg name='indent' declared_type='Point*' type='^{Point=ss}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetListClickLoop'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <arg name='clickLoop' function_pointer='true' declared_type='ListClickLoopUPP' type='^?'>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetListClickTime'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <arg name='time' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetListFlags'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <arg name='listFlags' declared_type='OptionBits' type='L' type64='I'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetListLastClick'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <arg name='lastClick' declared_type='Cell*' type='^{Point=ss}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetListPort'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <arg name='port' declared_type='CGrafPtr' type='^{OpaqueGrafPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetListRefCon'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <arg name='refCon' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetListSelectionFlags'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <arg name='selectionFlags' declared_type='OptionBits' type='L' type64='I'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetListUserHandle'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <arg name='userHandle' declared_type='Handle' type='^*'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetListViewBounds'>
    <arg name='list' declared_type='ListHandle' type='^^{ListRec}'/>
    <arg name='view' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetMCEntries'>
    <arg name='numEntries' declared_type='short' type='s'/>
    <arg name='menuCEntries' declared_type='MCTablePtr' type='^{MCEntry=ss{RGBColor=SSS}{RGBColor=SSS}{RGBColor=SSS}{RGBColor=SSS}s}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetMCInfo'>
    <arg name='menuCTbl' declared_type='MCTableHandle' type='^^{MCEntry}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetMenuBar'>
    <arg name='mbar' declared_type='MenuBarHandle' type='^*'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetMenuBarFromNib'>
    <arg name='inNibRef' declared_type='IBNibRef' type='^{OpaqueIBNibRef=}'/>
    <arg name='inName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetMenuCommandMark'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inCommandID' declared_type='MenuCommand' type='L' type64='I'/>
    <arg name='inMark' declared_type='UniChar' type='S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetMenuCommandProperty'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inCommandID' declared_type='MenuCommand' type='L' type64='I'/>
    <arg name='inPropertyCreator' declared_type='OSType' type='L' type64='I'/>
    <arg name='inPropertyTag' declared_type='OSType' type='L' type64='I'/>
    <arg name='inPropertySize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='inPropertyData' declared_type='void*' type='^v' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetMenuDefinition'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='defSpec' declared_type='MenuDefSpec*' type='^{MenuDefSpec=I(?=^?{?=^{__CFString}^{OpaqueEventRef}})}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetMenuExcludesMarkColumn'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='excludesMark' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetMenuFlashCount'>
    <arg name='count' declared_type='short' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetMenuFont'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inFontID' declared_type='SInt16' type='s'/>
    <arg name='inFontSize' declared_type='UInt16' type='S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetMenuHeight'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='height' declared_type='SInt16' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetMenuID'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='menuID' declared_type='MenuID' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetMenuItemCommandID'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='inCommandID' declared_type='MenuCommand' type='L' type64='I'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetMenuItemCommandKey'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='inSetVirtualKey' declared_type='Boolean' type='B'/>
    <arg name='inKey' declared_type='UInt16' type='S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetMenuItemData'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemID' type='L' type64='I'/>
    <arg name='inIsCommandID' declared_type='Boolean' type='B'/>
    <arg name='inData' declared_type='MenuItemDataRec*' type='^{MenuItemDataRec=Q*SSIICBBCiI^*IIs^{OpaqueMenuRef}iII^{__CFString}^{OpaqueCollection}IS}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetMenuItemFontID'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='inFontID' declared_type='SInt16' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetMenuItemHierarchicalID'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='inHierID' declared_type='MenuID' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetMenuItemHierarchicalMenu'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='inHierMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetMenuItemIconHandle'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='inIconType' declared_type='UInt8' type='C'/>
    <arg name='inIconHandle' declared_type='Handle' type='^*'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetMenuItemIndent'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='inIndent' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetMenuItemKeyGlyph'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='inGlyph' declared_type='SInt16' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetMenuItemModifiers'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='inModifiers' declared_type='UInt8' type='C'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetMenuItemProperty'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <arg name='propertyCreator' declared_type='OSType' type='L' type64='I'/>
    <arg name='propertyTag' declared_type='OSType' type='L' type64='I'/>
    <arg name='propertySize' declared_type='UInt32' type='L' type64='I'/>
    <arg name='propertyData' declared_type='void*' type='^v' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetMenuItemRefCon'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='inRefCon' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetMenuItemText'>
    <arg name='theMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='item' declared_type='MenuItemIndex' type='S'/>
    <arg name='itemString' declared_type='ConstStr255Param' type='*'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetMenuItemTextEncoding'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='inScriptID' declared_type='TextEncoding' type='L' type64='I'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetMenuItemTextWithCFString'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inItem' declared_type='MenuItemIndex' type='S'/>
    <arg name='inString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetMenuTitle'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='title' declared_type='ConstStr255Param' type='*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetMenuTitleIcon'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inType' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inIcon' declared_type='void*' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetMenuTitleWithCFString'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='inString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetMenuWidth'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='width' declared_type='SInt16' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetModalDialogEventMask'>
    <arg name='inDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='inMask' declared_type='EventMask' type='S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetMouseCoalescingEnabled'>
    <arg name='inNewState' declared_type='Boolean' type='B'/>
    <arg name='outOldState' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetMouseTrackingRegionEnabled'>
    <arg name='inMouseRef' declared_type='MouseTrackingRef' type='^{OpaqueMouseTrackingRef=}'/>
    <arg name='inEnabled' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetPortDialogPort'>
    <arg name='dialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetPortWindowPort'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetRootMenu'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetScrapPromiseKeeper'>
    <arg name='scrap' declared_type='ScrapRef' type='^{OpaqueScrapRef=}'/>
    <arg name='upp' function_pointer='true' declared_type='ScrapPromiseKeeperUPP' type='^?'>
      <arg declared_type='ScrapRef' type='^{OpaqueScrapRef=}'/>
      <arg declared_type='ScrapFlavorType' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <arg name='userData' declared_type='void*' type='^v' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetStandardDropLocation'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='dropLocation' declared_type='StandardDropLocation' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetSystemUIMode'>
    <arg name='inMode' declared_type='SystemUIMode' type='L' type64='I'/>
    <arg name='inOptions' declared_type='SystemUIOptions' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetTSMTEDialogDocumentID'>
    <arg name='dialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='documentID' declared_type='TSMDocumentID' type='^{OpaqueTSMDocumentID=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetTSMTEDialogTSMTERecHandle'>
    <arg name='dialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='tsmteRecHandle' declared_type='TSMTERecHandle' type='^^{TSMTERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetTabEnabled'>
    <arg name='inTabControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inTabToHilite' declared_type='SInt16' type='s'/>
    <arg name='inEnabled' declared_type='Boolean' type='B'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetTextServiceLanguage'>
    <arg name='slRecordPtr' declared_type='ScriptLanguageRecord*' type='^{ScriptLanguageRecord=ss}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetTextServiceProperty'>
    <arg name='ts' declared_type='ComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
    <arg name='inPropertyTag' declared_type='TextServicePropertyTag' type='L' type64='I'/>
    <arg name='inPropertyValue' declared_type='TextServicePropertyValue' type='l' type64='i'/>
    <retval declared_type='ComponentResult' type='l' type64='q'/>
  </function>
  <function name='SetTheme'>
    <arg name='ioCollection' declared_type='Collection' type='^{OpaqueCollection=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetThemeBackground'>
    <arg name='inBrush' declared_type='ThemeBrush' type='s'/>
    <arg name='inDepth' declared_type='SInt16' type='s'/>
    <arg name='inIsColorDevice' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetThemeCursor'>
    <arg name='inCursor' declared_type='ThemeCursor' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetThemeDrawingState'>
    <arg name='inState' declared_type='ThemeDrawingState' type='^{OpaqueThemeDrawingState=}'/>
    <arg name='inDisposeNow' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetThemePen'>
    <arg name='inBrush' declared_type='ThemeBrush' type='s'/>
    <arg name='inDepth' declared_type='SInt16' type='s'/>
    <arg name='inIsColorDevice' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetThemeTextColor'>
    <arg name='inColor' declared_type='ThemeTextColor' type='s'/>
    <arg name='inDepth' declared_type='SInt16' type='s'/>
    <arg name='inIsColorDevice' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetThemeTextColorForWindow'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inActive' declared_type='Boolean' type='B'/>
    <arg name='inDepth' declared_type='SInt16' type='s'/>
    <arg name='inColorDev' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetThemeWindowBackground'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inBrush' declared_type='ThemeBrush' type='s'/>
    <arg name='inUpdate' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetTranslationAdvertisement'>
    <arg name='refNum' declared_type='TranslationRefNum' type='l' type64='q'/>
    <arg name='advertisement' declared_type='PicHandle' type='^^{Picture}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetUpControlBackground'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inDepth' declared_type='SInt16' type='s'/>
    <arg name='inIsColorDevice' declared_type='Boolean' type='B'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetUpControlTextColor'>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='inDepth' declared_type='SInt16' type='s'/>
    <arg name='inIsColorDevice' declared_type='Boolean' type='B'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SetUserFocusWindow'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWRefCon'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='data' declared_type='long' type='l' type64='q'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetWTitle'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='title' declared_type='ConstStr255Param' type='*'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetWindowActivationScope'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inScope' declared_type='WindowActivationScope' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowAlpha'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inAlpha' declared_type='float' type='f'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowAlternateTitle'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inTitle' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowBounds'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='regionCode' declared_type='WindowRegionCode' type='S'/>
    <arg name='globalBounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowCancelButton'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowClass'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inWindowClass' declared_type='WindowClass' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowContentColor'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='color' declared_type='RGBColor*' type='^{RGBColor=SSS}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowContentPattern'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='pixPat' declared_type='PixPatHandle' type='^^{PixPat}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowDefaultButton'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowDockTileMenu'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowGroup'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inNewGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowGroupLevel'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <arg name='inLevel' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowGroupLevelOfType'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <arg name='inLevelType' declared_type='UInt32' type='L' type64='I'/>
    <arg name='inLevel' declared_type='CGWindowLevel' type='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowGroupName'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <arg name='inName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowGroupOwner'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowGroupParent'>
    <arg name='inGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <arg name='inNewGroup' declared_type='WindowGroupRef' type='^{OpaqueWindowGroupRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowIdealUserState'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inUserState' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowKind'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='kind' declared_type='short' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetWindowModality'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inModalKind' declared_type='WindowModality' type='L' type64='I'/>
    <arg name='inUnavailableWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowModified'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='modified' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowMouseTrackingRegionsEnabled'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inSignature' declared_type='OSType' type='L' type64='I'/>
    <arg name='inEnabled' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowPic'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='pic' declared_type='PicHandle' type='^^{Picture}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetWindowProperty'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='propertyCreator' declared_type='PropertyCreator' type='L' type64='I'/>
    <arg name='propertyTag' declared_type='PropertyTag' type='L' type64='I'/>
    <arg name='propertySize' declared_type='UInt32' type='L' type64='I'/>
    <arg name='propertyBuffer' declared_type='void*' type='^v' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowProxyAlias'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inAlias' declared_type='AliasHandle' type='^^{AliasRecord}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowProxyCreatorAndType'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='fileCreator' declared_type='OSType' type='L' type64='I'/>
    <arg name='fileType' declared_type='OSType' type='L' type64='I'/>
    <arg name='vRefNum' declared_type='SInt16' type='s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowProxyFSSpec'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inFile' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowProxyIcon'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='icon' declared_type='IconRef' type='^{OpaqueIconRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowResizeLimits'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inMinLimits' declared_type='HISize*' type='^{CGSize=ff}' const='true'/>
    <arg name='inMaxLimits' declared_type='HISize*' type='^{CGSize=ff}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowStandardState'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='rect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SetWindowTitleWithCFString'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inString' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowToolbar'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inToolbar' declared_type='HIToolbarRef' type='^{OpaqueHIObjectRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SetWindowUserState'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='rect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='ShortenDITL'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='numberItems' declared_type='DialogItemIndex' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='ShowControl'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='ShowDialogItem'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='itemNo' declared_type='DialogItemIndex' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='ShowDragHilite'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='hiliteFrame' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='inside' declared_type='Boolean' type='B'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ShowFloatingWindows'>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ShowHide'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='showFlag' declared_type='Boolean' type='B'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='ShowHideWindowToolbar'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inShow' declared_type='Boolean' type='B'/>
    <arg name='inAnimate' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ShowMenuBar'>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='ShowSheetWindow'>
    <arg name='inSheet' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inParentWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='SizeControl'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='w' declared_type='SInt16' type='s'/>
    <arg name='h' declared_type='SInt16' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SizeDialogItem'>
    <arg name='inDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='inItemNo' declared_type='SInt16' type='s'/>
    <arg name='inWidth' declared_type='SInt16' type='s'/>
    <arg name='inHeight' declared_type='SInt16' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='SizeWindow'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='w' declared_type='short' type='s'/>
    <arg name='h' declared_type='short' type='s'/>
    <arg name='fUpdate' declared_type='Boolean' type='B'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='SortDataBrowserContainer'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='container' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='sortChildren' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='StandardAlert'>
    <arg name='inAlertType' declared_type='AlertType' type='s'/>
    <arg name='inError' declared_type='ConstStr255Param' type='*'/>
    <arg name='inExplanation' declared_type='ConstStr255Param' type='*'/>
    <arg name='inAlertParam' declared_type='AlertStdAlertParamRec*' type='^{AlertStdAlertParamRec=BB^?***ssS}' const='true'/>
    <arg name='outItemHit' declared_type='SInt16*' type='^s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='StdFilterProc'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='event' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
    <arg name='itemHit' declared_type='DialogItemIndex*' type='^s'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='StillDown'>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='StopAlert'>
    <arg name='alertID' declared_type='SInt16' type='s'/>
    <arg name='modalFilter' function_pointer='true' declared_type='ModalFilterUPP' type='^?'>
      <arg declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
      <arg declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
      <arg declared_type='DialogItemIndex*' type='^s'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <retval declared_type='DialogItemIndex' type='s'/>
  </function>
  <function name='StoreWindowIntoCollection'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='collection' declared_type='Collection' type='^{OpaqueCollection=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TEActivate'>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TEAutoView'>
    <arg name='fAuto' declared_type='Boolean' type='B'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TECalText'>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TEClick'>
    <arg name='pt' declared_type='Point' type='{Point=ss}'/>
    <arg name='fExtend' declared_type='Boolean' type='B'/>
    <arg name='h' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TEContinuousStyle'>
    <arg name='mode' declared_type='short*' type='^s'/>
    <arg name='aStyle' declared_type='TextStyle*' type='^{TextStyle=sCs{RGBColor=SSS}}'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='TECopy'>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TECustomHook'>
    <arg name='which' declared_type='TEIntHook' type='s'/>
    <arg name='addr' declared_type='UniversalProcPtr*' type='^^?'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TECut'>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TEDeactivate'>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TEDelete'>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TEDispose'>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TEFeatureFlag'>
    <arg name='feature' declared_type='short' type='s'/>
    <arg name='action' declared_type='short' type='s'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='short' type='s'/>
  </function>
  <function name='TEFromScrap'>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='TEGetDoTextHook'>
    <retval function_pointer='true' declared_type='TEDoTextUPP' type='^?'>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='GrafPtr*' type='^^{OpaqueGrafPtr}'/>
      <arg declared_type='short*' type='^s'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='TEGetFindWordHook'>
    <retval function_pointer='true' declared_type='TEFindWordUPP' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='TEGetHeight'>
    <arg name='endLine' declared_type='long' type='l' type64='q'/>
    <arg name='startLine' declared_type='long' type='l' type64='q'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='long' type='l' type64='q'/>
  </function>
  <function name='TEGetHiliteRgn'>
    <arg name='region' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='TEGetOffset'>
    <arg name='pt' declared_type='Point' type='{Point=ss}'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='short' type='s'/>
  </function>
  <function name='TEGetPoint'>
    <arg name='offset' declared_type='short' type='s'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='Point' type='{Point=ss}'/>
  </function>
  <function name='TEGetRecalcHook'>
    <retval function_pointer='true' declared_type='TERecalcUPP' type='^?'>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='TEGetScrapHandle'>
    <retval declared_type='Handle' type='^*'/>
  </function>
  <function name='TEGetScrapLength'>
    <retval declared_type='long' type='l' type64='q'/>
  </function>
  <function name='TEGetStyle'>
    <arg name='offset' declared_type='short' type='s'/>
    <arg name='theStyle' declared_type='TextStyle*' type='^{TextStyle=sCs{RGBColor=SSS}}'/>
    <arg name='lineHeight' declared_type='short*' type='^s'/>
    <arg name='fontAscent' declared_type='short*' type='^s'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TEGetStyleHandle'>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='TEStyleHandle' type='^^{TEStyleRec}'/>
  </function>
  <function name='TEGetStyleScrapHandle'>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='StScrpHandle' type='^^{StScrpRec}'/>
  </function>
  <function name='TEGetText'>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='CharsHandle' type='^*'/>
  </function>
  <function name='TEIdle'>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TEInsert'>
    <arg name='text' declared_type='void*' type='^v' const='true'/>
    <arg name='length' declared_type='long' type='l' type64='q'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TEKey'>
    <arg name='key' declared_type='CharParameter' type='s'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TENew'>
    <arg name='destRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='viewRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <retval declared_type='TEHandle' type='^^{TERec}'/>
  </function>
  <function name='TENumStyles'>
    <arg name='rangeStart' declared_type='long' type='l' type64='q'/>
    <arg name='rangeEnd' declared_type='long' type='l' type64='q'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='long' type='l' type64='q'/>
  </function>
  <function name='TEPaste'>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TEPinScroll'>
    <arg name='dh' declared_type='short' type='s'/>
    <arg name='dv' declared_type='short' type='s'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TEReplaceStyle'>
    <arg name='mode' declared_type='short' type='s'/>
    <arg name='oldStyle' declared_type='TextStyle*' type='^{TextStyle=sCs{RGBColor=SSS}}' const='true'/>
    <arg name='newStyle' declared_type='TextStyle*' type='^{TextStyle=sCs{RGBColor=SSS}}' const='true'/>
    <arg name='fRedraw' declared_type='Boolean' type='B'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TEScrapHandle'>
    <retval declared_type='Handle' type='^*'/>
  </function>
  <function name='TEScroll'>
    <arg name='dh' declared_type='short' type='s'/>
    <arg name='dv' declared_type='short' type='s'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TESelView'>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TESetAlignment'>
    <arg name='just' declared_type='short' type='s'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TESetClickLoop'>
    <arg name='clikProc' function_pointer='true' declared_type='TEClickLoopUPP' type='^?'>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TESetDoTextHook'>
    <arg name='value' function_pointer='true' declared_type='TEDoTextUPP' type='^?'>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='GrafPtr*' type='^^{OpaqueGrafPtr}'/>
      <arg declared_type='short*' type='^s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TESetFindWordHook'>
    <arg name='value' function_pointer='true' declared_type='TEFindWordUPP' type='^?'>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='short' type='s'/>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='TEHandle' type='^^{TERec}'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TESetRecalcHook'>
    <arg name='value' function_pointer='true' declared_type='TERecalcUPP' type='^?'>
      <arg declared_type='TEPtr' type='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?lslsss^*lsssCss^{OpaqueGrafPtr}^?^?s[16001s]}' type64='^{TERec={Rect=ssss}{Rect=ssss}{Rect=ssss}ss{Point=ss}sss^?^?qsqsss^*qsssCss^{OpaqueGrafPtr}^?^?s[16001s]}'/>
      <arg declared_type='unsigned short' type='S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <arg declared_type='unsigned short*' type='^S'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TESetScrapHandle'>
    <arg name='value' declared_type='Handle' type='^*'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TESetScrapLength'>
    <arg name='length' declared_type='long' type='l' type64='q'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TESetSelect'>
    <arg name='selStart' declared_type='long' type='l' type64='q'/>
    <arg name='selEnd' declared_type='long' type='l' type64='q'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TESetStyle'>
    <arg name='mode' declared_type='short' type='s'/>
    <arg name='newStyle' declared_type='TextStyle*' type='^{TextStyle=sCs{RGBColor=SSS}}' const='true'/>
    <arg name='fRedraw' declared_type='Boolean' type='B'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TESetStyleHandle'>
    <arg name='theHandle' declared_type='TEStyleHandle' type='^^{TEStyleRec}'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TESetText'>
    <arg name='text' declared_type='void*' type='^v' const='true'/>
    <arg name='length' declared_type='long' type='l' type64='q'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TEStyleInsert'>
    <arg name='text' declared_type='void*' type='^v' const='true'/>
    <arg name='length' declared_type='long' type='l' type64='q'/>
    <arg name='hST' declared_type='StScrpHandle' type='^^{StScrpRec}'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TEStyleNew'>
    <arg name='destRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='viewRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <retval declared_type='TEHandle' type='^^{TERec}'/>
  </function>
  <function name='TEStylePaste'>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TETextBox'>
    <arg name='text' declared_type='void*' type='^v' const='true'/>
    <arg name='length' declared_type='long' type='l' type64='q'/>
    <arg name='box' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='just' declared_type='short' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TEToScrap'>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='TEUpdate'>
    <arg name='rUpdate' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TEUseStyleScrap'>
    <arg name='rangeStart' declared_type='long' type='l' type64='q'/>
    <arg name='rangeEnd' declared_type='long' type='l' type64='q'/>
    <arg name='newStyles' declared_type='StScrpHandle' type='^^{StScrpRec}'/>
    <arg name='fRedraw' declared_type='Boolean' type='B'/>
    <arg name='hTE' declared_type='TEHandle' type='^^{TERec}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TSMCopyInputMethodEnabledInputModes'>
    <arg name='inComponent' declared_type='Component' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
    <arg name='outInputModeArray' declared_type='CFArrayRef*' type='^^{__CFArray}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='TSMGetActiveDocument'>
    <retval declared_type='TSMDocumentID' type='^{OpaqueTSMDocumentID=}'/>
  </function>
  <function name='TSMGetDocumentProperty'>
    <arg name='docID' declared_type='TSMDocumentID' type='^{OpaqueTSMDocumentID=}'/>
    <arg name='propertyTag' declared_type='TSMDocumentPropertyTag' type='L' type64='I'/>
    <arg name='bufferSize' declared_type='UInt32' type='L' type64='I'/>
    <arg name='actualSize' declared_type='UInt32*' type='^I'/>
    <arg name='propertyBuffer' declared_type='void*' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TSMInputModePaletteLoadButtons'>
    <arg name='paletteButtonsArray' declared_type='CFArrayRef' type='^{__CFArray=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TSMInputModePaletteUpdateButtons'>
    <arg name='paletteButtonsArray' declared_type='CFArrayRef' type='^{__CFArray=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TSMRemoveDocumentProperty'>
    <arg name='docID' declared_type='TSMDocumentID' type='^{OpaqueTSMDocumentID=}'/>
    <arg name='propertyTag' declared_type='TSMDocumentPropertyTag' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TSMSelectInputMode'>
    <arg name='inComponent' declared_type='Component' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
    <arg name='inInputMode' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TSMSetDocumentProperty'>
    <arg name='docID' declared_type='TSMDocumentID' type='^{OpaqueTSMDocumentID=}'/>
    <arg name='propertyTag' declared_type='TSMDocumentPropertyTag' type='L' type64='I'/>
    <arg name='propertySize' declared_type='UInt32' type='L' type64='I'/>
    <arg name='propertyData' declared_type='void*' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TSMSetInlineInputRegion'>
    <arg name='inTSMDocument' declared_type='TSMDocumentID' type='^{OpaqueTSMDocumentID=}'/>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inRegion' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNActivate'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iTXNFrameID' declared_type='TXNFrameID' type='L' type64='I'/>
    <arg name='iActiveState' declared_type='TXNScrollBarState' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNAdjustCursor'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='ioCursorRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNAttachObjectToWindow'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iWindow' declared_type='GWorldPtr' type='^{OpaqueGrafPtr=}'/>
    <arg name='iIsActualWindow' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNAttachObjectToWindowRef'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iWindowRef' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNBeginActionGroup'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iActionGroupName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNCanRedo'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='oTXNActionKey' declared_type='TXNActionKey*' type='^I'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='TXNCanRedoAction'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='oActionName' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='TXNCanUndo'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='oTXNActionKey' declared_type='TXNActionKey*' type='^I'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='TXNCanUndoAction'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='oActionName' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='TXNClear'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNClearActionChangeCount'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iOptions' declared_type='TXNCountOptions' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNClearCountForActionType'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iActionTypeName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNClearUndo'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNClick'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iEvent' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}' const='true'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNConvertFromPublicScrap'>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNConvertToPublicScrap'>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNCopy'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNCopyTypeIdentifiersForRange'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iStartOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='iEndOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='oTypeIdentifiersForRange' declared_type='CFArrayRef*' type='^^{__CFArray}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNCountRunsInRange'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iStartOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='iEndOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='oRunCount' declared_type='ItemCount*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNCreateObject'>
    <arg name='iFrameRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='iFrameOptions' declared_type='TXNFrameOptions' type='L' type64='I'/>
    <arg name='oTXNObject' declared_type='TXNObject*' type='^^{OpaqueTXNObject}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNCut'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNDataSize'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='ByteCount' type='L' type64='I'/>
  </function>
  <function name='TXNDeleteObject'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNDisposeFontMenuObject'>
    <arg name='iTXNFontMenuObject' declared_type='TXNFontMenuObject' type='^{OpaqueTXNFontMenuObject=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNDoFontMenuSelection'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iTXNFontMenuObject' declared_type='TXNFontMenuObject' type='^{OpaqueTXNFontMenuObject=}'/>
    <arg name='iMenuID' declared_type='SInt16' type='s'/>
    <arg name='iMenuItem' declared_type='SInt16' type='s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNDragReceiver'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iTXNFrameID' declared_type='TXNFrameID' type='L' type64='I'/>
    <arg name='iWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='iDragReference' declared_type='DragReference' type='^{OpaqueDragRef=}'/>
    <arg name='iDifferentObjectSameWindow' declared_type='Boolean' type='B'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='TXNDragTracker'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iTXNFrameID' declared_type='TXNFrameID' type='L' type64='I'/>
    <arg name='iMessage' declared_type='DragTrackingMessage' type='s'/>
    <arg name='iWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='iDragReference' declared_type='DragReference' type='^{OpaqueDragRef=}'/>
    <arg name='iDifferentObjectSameWindow' declared_type='Boolean' type='B'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='TXNDraw'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iDrawPort' declared_type='GWorldPtr' type='^{OpaqueGrafPtr=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNDrawCFStringTextBox'>
    <arg name='iText' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='ioBox' declared_type='Rect*' type='^{Rect=ssss}'/>
    <arg name='iStyle' declared_type='ATSUStyle' type='^{OpaqueATSUStyle=}'/>
    <arg name='iOptions' declared_type='TXNTextBoxOptionsData*' type='^{TXNTextBoxOptionsData=Iiii^v}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNDrawObject'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iClipRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='iDrawItems' declared_type='TXNDrawItems' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNDrawUnicodeTextBox'>
    <arg name='iText' declared_type='UniChar*' type='^S' const='true'/>
    <arg name='iLen' declared_type='UniCharCount' type='L' type64='I'/>
    <arg name='ioBox' declared_type='Rect*' type='^{Rect=ssss}'/>
    <arg name='iStyle' declared_type='ATSUStyle' type='^{OpaqueATSUStyle=}'/>
    <arg name='iOptions' declared_type='TXNTextBoxOptionsData*' type='^{TXNTextBoxOptionsData=Iiii^v}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNEchoMode'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iEchoCharacter' declared_type='UniChar' type='S'/>
    <arg name='iEncoding' declared_type='TextEncoding' type='L' type64='I'/>
    <arg name='iOn' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNEndActionGroup'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNFind'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iMatchTextDataPtr' declared_type='TXNMatchTextRecord*' type='^{TXNMatchTextRecord=^viI}' const='true'/>
    <arg name='iDataType' declared_type='TXNDataType' type='L' type64='I'/>
    <arg name='iMatchOptions' declared_type='TXNMatchOptions' type='L' type64='I'/>
    <arg name='iStartSearchOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='iEndSearchOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='iFindProc' function_pointer='true' declared_type='TXNFindUPP' type='^?'>
      <arg declared_type='TXNMatchTextRecord*' type='^{TXNMatchTextRecord=^viI}' const='true'/>
      <arg declared_type='TXNDataType' type='L' type64='I'/>
      <arg declared_type='TXNMatchOptions' type='L' type64='I'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='TextEncoding' type='L' type64='I'/>
      <arg declared_type='TXNOffset' type='L' type64='I'/>
      <arg declared_type='ByteCount' type='L' type64='I'/>
      <arg declared_type='TXNOffset*' type='^I'/>
      <arg declared_type='TXNOffset*' type='^I'/>
      <arg declared_type='Boolean*' type='^B'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </arg>
    <arg name='iRefCon' declared_type='SInt32' type='l' type64='i'/>
    <arg name='oStartMatchOffset' declared_type='TXNOffset*' type='^I'/>
    <arg name='oEndMatchOffset' declared_type='TXNOffset*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNFlattenObjectToCFDataRef'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iTXNDataType' declared_type='TXNDataType' type='L' type64='I'/>
    <arg name='oDataRef' declared_type='CFDataRef*' type='^^{__CFData}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNFocus'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iBecomingFocused' declared_type='Boolean' type='B'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNForceUpdate'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNGetAccessibilityHIObject'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='oHIObjectRef' declared_type='HIObjectRef*' type='^^{OpaqueHIObjectRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNGetActionChangeCount'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iOptions' declared_type='TXNCountOptions' type='L' type64='I'/>
    <arg name='oCount' declared_type='ItemCount*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNGetChangeCount'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='ItemCount' type='L' type64='I'/>
  </function>
  <function name='TXNGetCommandEventSupport'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='oOptions' declared_type='TXNCommandEventSupportOptions*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNGetContinuousTypeAttributes'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='oContinuousFlags' declared_type='TXNContinuousFlags*' type='^I'/>
    <arg name='iCount' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='ioTypeAttributes' declared_type='TXNTypeAttributes*' type='^{TXNTypeAttributes=II(TXNAttributeData=^vI^{TXNATSUIFeatures}^{TXNATSUIVariations}^{__CFURL})}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNGetCountForActionType'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iActionTypeName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='oCount' declared_type='ItemCount*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNGetData'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iStartOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='iEndOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='oDataHandle' declared_type='Handle*' type='^^*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNGetDataEncoded'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iStartOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='iEndOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='oDataHandle' declared_type='Handle*' type='^^*'/>
    <arg name='iEncoding' declared_type='TXNDataType' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNGetEventTarget'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='oEventTarget' declared_type='HIObjectRef*' type='^^{OpaqueHIObjectRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNGetFontDefaults'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='ioCount' declared_type='ItemCount*' type='^I'/>
    <arg name='oFontDefaults' declared_type='TXNMacOSPreferredFontDescription*' type='^{TXNMacOSPreferredFontDescription=IiIC}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNGetFontMenuHandle'>
    <arg name='iTXNFontMenuObject' declared_type='TXNFontMenuObject' type='^{OpaqueTXNFontMenuObject=}'/>
    <arg name='oFontMenuHandle' declared_type='MenuRef*' type='^^{OpaqueMenuRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNGetHIRect'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iTXNRectKey' declared_type='TXNRectKey' type='L' type64='I'/>
    <arg name='oRectangle' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNGetIndexedRunInfoFromRange'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iIndex' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='iStartOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='iEndOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='oRunStartOffset' declared_type='TXNOffset*' type='^I'/>
    <arg name='oRunEndOffset' declared_type='TXNOffset*' type='^I'/>
    <arg name='oRunDataType' declared_type='TXNDataType*' type='^I'/>
    <arg name='iTypeAttributeCount' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='ioTypeAttributes' declared_type='TXNTypeAttributes*' type='^{TXNTypeAttributes=II(TXNAttributeData=^vI^{TXNATSUIFeatures}^{TXNATSUIVariations}^{__CFURL})}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNGetLineCount'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='oLineTotal' declared_type='ItemCount*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNGetLineMetrics'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iLineNumber' declared_type='UInt32' type='L' type64='I'/>
    <arg name='oLineWidth' declared_type='Fixed*' type='^i'/>
    <arg name='oLineHeight' declared_type='Fixed*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNGetRectBounds'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='oViewRect' declared_type='Rect*' type='^{Rect=ssss}'/>
    <arg name='oDestinationRect' declared_type='TXNLongRect*' type='^{TXNLongRect=iiii}'/>
    <arg name='oTextRect' declared_type='TXNLongRect*' type='^{TXNLongRect=iiii}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNGetSelection'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='oStartOffset' declared_type='TXNOffset*' type='^I'/>
    <arg name='oEndOffset' declared_type='TXNOffset*' type='^I'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNGetSleepTicks'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='UInt32' type='L' type64='I'/>
  </function>
  <function name='TXNGetSpellCheckAsYouType'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='TXNGetTXNObjectControls'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iControlCount' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='iControlTags' declared_type='TXNControlTag*' type='^I' const='true'/>
    <arg name='oControlData' declared_type='TXNControlData*' type='^(TXNControlData=Ii{TXNTab=scC}^{TXNMargins})'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNGetViewRect'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='oViewRect' declared_type='Rect*' type='^{Rect=ssss}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNGetWindowRef'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
  </function>
  <function name='TXNGrowWindow'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iEvent' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}' const='true'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNHIPointToOffset'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iHIPoint' declared_type='HIPoint*' type='^{CGPoint=ff}' const='true'/>
    <arg name='oOffset' declared_type='TXNOffset*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNIdle'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNInitTextension'>
    <arg name='iDefaultFonts' declared_type='TXNMacOSPreferredFontDescription*' type='^{TXNMacOSPreferredFontDescription=IiIC}' const='true'/>
    <arg name='iCountDefaultFonts' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='iUsageFlags' declared_type='TXNInitOptions' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNIsObjectAttachedToSpecificWindow'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='oAttached' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNIsObjectAttachedToWindow'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='TXNIsScrapPastable'>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='TXNIsSelectionEmpty'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='TXNKeyDown'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iEvent' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}' const='true'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNNewFontMenuObject'>
    <arg name='iFontMenuHandle' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='iMenuID' declared_type='SInt16' type='s'/>
    <arg name='iStartHierMenuID' declared_type='SInt16' type='s'/>
    <arg name='oTXNFontMenuObject' declared_type='TXNFontMenuObject*' type='^^{OpaqueTXNFontMenuObject}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNNewObject'>
    <arg name='iFileSpec' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}' const='true'/>
    <arg name='iWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='iFrame' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='iFrameOptions' declared_type='TXNFrameOptions' type='L' type64='I'/>
    <arg name='iFrameType' declared_type='TXNFrameType' type='L' type64='I'/>
    <arg name='iFileType' declared_type='TXNFileType' type='L' type64='I'/>
    <arg name='iPermanentEncoding' declared_type='TXNPermanentTextEncodingType' type='L' type64='I'/>
    <arg name='oTXNObject' declared_type='TXNObject*' type='^^{OpaqueTXNObject}'/>
    <arg name='oTXNFrameID' declared_type='TXNFrameID*' type='^I'/>
    <arg name='iRefCon' declared_type='TXNObjectRefcon' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNOffsetToHIPoint'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='oHIPoint' declared_type='HIPoint*' type='^{CGPoint=ff}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNOffsetToPoint'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='oPoint' declared_type='Point*' type='^{Point=ss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNPageSetup'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNPaste'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNPointToOffset'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iPoint' declared_type='Point' type='{Point=ss}'/>
    <arg name='oOffset' declared_type='TXNOffset*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNPrepareFontMenu'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iTXNFontMenuObject' declared_type='TXNFontMenuObject' type='^{OpaqueTXNFontMenuObject=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNPrint'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNReadFromCFURL'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iStartOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='iEndOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='iDataOptions' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <arg name='iFileURL' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <arg name='oDocumentAttributes' declared_type='CFDictionaryRef*' type='^^{__CFDictionary}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNRecalcTextLayout'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNRedo'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNRegisterScrollInfoProc'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iTXNScrollInfoUPP' function_pointer='true' declared_type='TXNScrollInfoUPP' type='^?'>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <arg declared_type='TXNScrollBarOrientation' type='L' type64='I'/>
      <arg declared_type='SInt32' type='l' type64='i'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='iRefCon' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNResizeFrame'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iWidth' declared_type='UInt32' type='L' type64='I'/>
    <arg name='iHeight' declared_type='UInt32' type='L' type64='I'/>
    <arg name='iTXNFrameID' declared_type='TXNFrameID' type='L' type64='I'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNRevert'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNSave'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iType' declared_type='TXNFileType' type='L' type64='I'/>
    <arg name='iResType' declared_type='OSType' type='L' type64='I'/>
    <arg name='iPermanentEncoding' declared_type='TXNPermanentTextEncodingType' type='L' type64='I'/>
    <arg name='iFileSpecification' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}' const='true'/>
    <arg name='iDataReference' declared_type='SInt16' type='s'/>
    <arg name='iResourceReference' declared_type='SInt16' type='s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNScroll'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iVerticalScrollUnit' declared_type='TXNScrollUnit' type='L' type64='I'/>
    <arg name='iHorizontalScrollUnit' declared_type='TXNScrollUnit' type='L' type64='I'/>
    <arg name='ioVerticalDelta' declared_type='SInt32*' type='^i'/>
    <arg name='ioHorizontalDelta' declared_type='SInt32*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNSelectAll'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNSetActionNameMapper'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iStringForKeyProc' function_pointer='true' declared_type='TXNActionNameMapperUPP' type='^?'>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='CFStringRef' type='^{__CFString=}'/>
    </arg>
    <arg name='iUserData' declared_type='void*' type='^v' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNSetBackground'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iBackgroundInfo' declared_type='TXNBackground*' type='^{TXNBackground=I(TXNBackgroundData={RGBColor=SSS})}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNSetCommandEventSupport'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iOptions' declared_type='TXNCommandEventSupportOptions' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNSetContextualMenuSetup'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iMenuSetupProc' function_pointer='true' declared_type='TXNContextualMenuSetupUPP' type='^?'>
      <arg declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
      <arg declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <arg name='iUserData' declared_type='void*' type='^v' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNSetData'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iDataType' declared_type='TXNDataType' type='L' type64='I'/>
    <arg name='iDataPtr' declared_type='void*' type='^v' const='true'/>
    <arg name='iDataSize' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='iStartOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='iEndOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNSetDataFromCFURLRef'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iURL' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <arg name='iStartOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='iEndOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNSetDataFromFile'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iFileRefNum' declared_type='SInt16' type='s'/>
    <arg name='iFileType' declared_type='OSType' type='L' type64='I'/>
    <arg name='iFileLength' declared_type='ByteCount' type='L' type64='I'/>
    <arg name='iStartOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='iEndOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNSetEventTarget'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iEventTarget' declared_type='HIObjectRef' type='^{OpaqueHIObjectRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNSetFontDefaults'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iCount' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='iFontDefaults' declared_type='TXNMacOSPreferredFontDescription*' type='^{TXNMacOSPreferredFontDescription=IiIC}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNSetFrameBounds'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iTop' declared_type='SInt32' type='l' type64='i'/>
    <arg name='iLeft' declared_type='SInt32' type='l' type64='i'/>
    <arg name='iBottom' declared_type='SInt32' type='l' type64='i'/>
    <arg name='iRight' declared_type='SInt32' type='l' type64='i'/>
    <arg name='iTXNFrameID' declared_type='TXNFrameID' type='L' type64='I'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNSetHIRectBounds'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iViewRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='iDestinationRect' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='iUpdate' declared_type='Boolean' type='B'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNSetRectBounds'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iViewRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='iDestinationRect' declared_type='TXNLongRect*' type='^{TXNLongRect=iiii}' const='true'/>
    <arg name='iUpdate' declared_type='Boolean' type='B'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNSetScrollbarState'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iActiveState' declared_type='TXNScrollBarState' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNSetSelection'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iStartOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='iEndOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNSetSpellCheckAsYouType'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iActivate' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNSetTXNObjectControls'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iClearAll' declared_type='Boolean' type='B'/>
    <arg name='iControlCount' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='iControlTags' declared_type='TXNControlTag*' type='^I' const='true'/>
    <arg name='iControlData' declared_type='TXNControlData*' type='^(TXNControlData=Ii{TXNTab=scC}^{TXNMargins})' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNSetTypeAttributes'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iAttrCount' declared_type='ItemCount' type='L' type64='I'/>
    <arg name='iAttributes' declared_type='TXNTypeAttributes*' type='^{TXNTypeAttributes=II(TXNAttributeData=^vI^{TXNATSUIFeatures}^{TXNATSUIVariations}^{__CFURL})}' const='true'/>
    <arg name='iStartOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='iEndOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNSetViewRect'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iViewRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNShowSelection'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iShowEnd' declared_type='Boolean' type='B'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNTerminateTextension'>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNUndo'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNUpdate'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TXNVersionInformation'>
    <arg name='oFeatureFlags' declared_type='TXNFeatureBits*' type='^I'/>
    <retval declared_type='TXNVersionValue' type='L' type64='I'/>
  </function>
  <function name='TXNWriteRangeToCFURL'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iStartOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='iEndOffset' declared_type='TXNOffset' type='L' type64='I'/>
    <arg name='iDataOptions' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <arg name='iDocumentAttributes' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <arg name='iFileURL' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TXNZoomWindow'>
    <arg name='iTXNObject' declared_type='TXNObject' type='^{OpaqueTXNObject=}'/>
    <arg name='iPart' declared_type='SInt16' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TerminateTextService'>
    <arg name='ts' declared_type='ComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
    <retval declared_type='ComponentResult' type='l' type64='q'/>
  </function>
  <function name='TestControl'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='testPoint' declared_type='Point' type='{Point=ss}'/>
    <retval declared_type='ControlPartCode' type='s'/>
  </function>
  <function name='TextServiceEventRef'>
    <arg name='ts' declared_type='ComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
    <arg name='event' declared_type='EventRef' type='^{OpaqueEventRef=}'/>
    <retval declared_type='ComponentResult' type='l' type64='q'/>
  </function>
  <function name='ToggleDrawer'>
    <arg name='inDrawerWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TrackBox'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='thePt' declared_type='Point' type='{Point=ss}'/>
    <arg name='partCode' declared_type='WindowPartCode' type='s'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='TrackControl'>
    <arg name='theControl' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='startPoint' declared_type='Point' type='{Point=ss}'/>
    <arg name='actionProc' function_pointer='true' declared_type='ControlActionUPP' type='^?'>
      <arg declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
      <arg declared_type='ControlPartCode' type='s'/>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='ControlPartCode' type='s'/>
  </function>
  <function name='TrackDrag'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='theEvent' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}' const='true'/>
    <arg name='theRegion' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='TrackGoAway'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='thePt' declared_type='Point' type='{Point=ss}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='TrackMouseLocation'>
    <arg name='inPort' declared_type='GrafPtr' type='^{OpaqueGrafPtr=}'/>
    <arg name='outPt' declared_type='Point*' type='^{Point=ss}'/>
    <arg name='outResult' declared_type='MouseTrackingResult*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TrackMouseLocationWithOptions'>
    <arg name='inPort' declared_type='GrafPtr' type='^{OpaqueGrafPtr=}'/>
    <arg name='inOptions' declared_type='OptionBits' type='L' type64='I'/>
    <arg name='inTimeout' declared_type='EventTimeout' type='d'/>
    <arg name='outPt' declared_type='Point*' type='^{Point=ss}'/>
    <arg name='outModifiers' declared_type='UInt32*' type='^I'/>
    <arg name='outResult' declared_type='MouseTrackingResult*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TrackMouseRegion'>
    <arg name='inPort' declared_type='GrafPtr' type='^{OpaqueGrafPtr=}'/>
    <arg name='inRegion' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='ioWasInRgn' declared_type='Boolean*' type='^B'/>
    <arg name='outResult' declared_type='MouseTrackingResult*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TrackWindowProxyDrag'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='startPt' declared_type='Point' type='{Point=ss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TrackWindowProxyFromExistingDrag'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='startPt' declared_type='Point' type='{Point=ss}'/>
    <arg name='drag' declared_type='DragReference' type='^{OpaqueDragRef=}'/>
    <arg name='inDragOutlineRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TransitionWindow'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inEffect' declared_type='WindowTransitionEffect' type='L' type64='I'/>
    <arg name='inAction' declared_type='WindowTransitionAction' type='L' type64='I'/>
    <arg name='inRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TransitionWindowAndParent'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inParentWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inEffect' declared_type='WindowTransitionEffect' type='L' type64='I'/>
    <arg name='inAction' declared_type='WindowTransitionAction' type='L' type64='I'/>
    <arg name='inRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TransitionWindowWithOptions'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inEffect' declared_type='WindowTransitionEffect' type='L' type64='I'/>
    <arg name='inAction' declared_type='WindowTransitionAction' type='L' type64='I'/>
    <arg name='inBounds' declared_type='HIRect*' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' const='true'/>
    <arg name='inAsync' declared_type='Boolean' type='B'/>
    <arg name='inOptions' declared_type='TransitionWindowOptions*' type='^{TransitionWindowOptions=Id^{OpaqueWindowPtr}^v}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TranslateFile'>
    <arg name='sourceDocument' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}' const='true'/>
    <arg name='destinationDocument' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}' const='true'/>
    <arg name='howToTranslate' declared_type='FileTranslationSpec*' type='^{FileTranslationSpec=I^v{FileTypeSpec=IlIII}{FileTypeSpec=IlIII}}' type64='^{FileTranslationSpec=I^v{FileTypeSpec=IqIII}{FileTypeSpec=IqIII}}' const='true'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='TranslateScrap'>
    <arg name='sourceDataGetter' function_pointer='true' declared_type='GetScrapDataUPP' type='^?'>
      <arg declared_type='ScrapType' type='L' type64='I'/>
      <arg declared_type='Handle' type='^*'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <arg name='sourceDataGetterRefCon' declared_type='void*' type='^v'/>
    <arg name='destinationFormat' declared_type='ScrapType' type='L' type64='I'/>
    <arg name='destinationData' declared_type='Handle' type='^*'/>
    <arg name='progressDialogID' declared_type='short' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='TruncateThemeText'>
    <arg name='inString' declared_type='CFMutableStringRef' type='^{__CFString=}'/>
    <arg name='inFontID' declared_type='ThemeFontID' type='S'/>
    <arg name='inState' declared_type='ThemeDrawState' type='L' type64='I'/>
    <arg name='inPixelWidthLimit' declared_type='SInt16' type='s'/>
    <arg name='inTruncWhere' declared_type='TruncCode' type='s'/>
    <arg name='outTruncated' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='TypeSelectClear'>
    <arg name='tsr' declared_type='TypeSelectRecord*' type='^{TypeSelectRecord=Ls[64C]}' type64='^{TypeSelectRecord=Qs[64C]}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='TypeSelectCompare'>
    <arg name='tsr' declared_type='TypeSelectRecord*' type='^{TypeSelectRecord=Ls[64C]}' type64='^{TypeSelectRecord=Qs[64C]}' const='true'/>
    <arg name='testStringScript' declared_type='ScriptCode' type='s'/>
    <arg name='testStringPtr' declared_type='StringPtr' type='*'/>
    <retval declared_type='short' type='s'/>
  </function>
  <function name='TypeSelectFindItem'>
    <arg name='tsr' declared_type='TypeSelectRecord*' type='^{TypeSelectRecord=Ls[64C]}' type64='^{TypeSelectRecord=Qs[64C]}' const='true'/>
    <arg name='listSize' declared_type='short' type='s'/>
    <arg name='selectMode' declared_type='TSCode' type='s'/>
    <arg name='getStringProc' function_pointer='true' declared_type='IndexToStringUPP' type='^?'>
      <arg declared_type='short' type='s'/>
      <arg declared_type='ScriptCode*' type='^s'/>
      <arg declared_type='StringPtr*' type='^*'/>
      <arg declared_type='void*' type='^v'/>
      <retval declared_type='Boolean' type='B'/>
    </arg>
    <arg name='yourDataPtr' declared_type='void*' type='^v'/>
    <retval declared_type='short' type='s'/>
  </function>
  <function name='TypeSelectNewKey'>
    <arg name='theEvent' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}' const='true'/>
    <arg name='tsr' declared_type='TypeSelectRecord*' type='^{TypeSelectRecord=Ls[64C]}' type64='^{TypeSelectRecord=Qs[64C]}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='UnloadScrap'>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='UnregisterAppearanceClient'>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='UnregisterEventHotKey'>
    <arg name='inHotKey' declared_type='EventHotKeyRef' type='^{OpaqueEventHotKeyRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='UnregisterToolboxObjectClass'>
    <arg name='inClassRef' declared_type='ToolboxObjectClassRef' type='^{OpaqueToolboxObjectClassRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='UpdateCollapsedWindowDockTile'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='UpdateControls'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inUpdateRegion' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='UpdateDataBrowserItems'>
    <arg name='browser' declared_type='ControlRef' type='^{OpaqueControlRef=}'/>
    <arg name='container' declared_type='DataBrowserItemID' type='L' type64='I'/>
    <arg name='numItems' declared_type='UInt32' type='L' type64='I'/>
    <arg name='items' declared_type='DataBrowserItemID*' type='^I' const='true'/>
    <arg name='preSortProperty' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <arg name='propertyID' declared_type='DataBrowserPropertyID' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='UpdateDialog'>
    <arg name='theDialog' declared_type='DialogRef' type='^{OpaqueDialogPtr=}'/>
    <arg name='updateRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='UpdateDragHilite'>
    <arg name='theDrag' declared_type='DragRef' type='^{OpaqueDragRef=}'/>
    <arg name='updateRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='UpdateInvalidMenuItems'>
    <arg name='inMenu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='UpdateStandardFontMenu'>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='outHierMenuCount' declared_type='ItemCount*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='UpdateTranslationProgress'>
    <arg name='refNum' declared_type='TranslationRefNum' type='l' type64='q'/>
    <arg name='percentDone' declared_type='short' type='s'/>
    <arg name='canceled' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='UseInputWindow'>
    <arg name='idocID' declared_type='TSMDocumentID' type='^{OpaqueTSMDocumentID=}'/>
    <arg name='useWindow' declared_type='Boolean' type='B'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='UseThemeFont'>
    <arg name='inFontID' declared_type='ThemeFontID' type='S'/>
    <arg name='inScript' declared_type='ScriptCode' type='s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ValidWindowRect'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='bounds' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ValidWindowRgn'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='region' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='WaitMouseMoved'>
    <arg name='initialGlobalMouse' declared_type='Point' type='{Point=ss}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='WaitMouseUp'>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='WaitNextEvent'>
    <arg name='eventMask' declared_type='EventMask' type='S'/>
    <arg name='theEvent' declared_type='EventRecord*' type='^{EventRecord=SII{Point=ss}S}'/>
    <arg name='sleep' declared_type='UInt32' type='L' type64='I'/>
    <arg name='mouseRgn' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='WindowPathSelect'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='menu' declared_type='MenuRef' type='^{OpaqueMenuRef=}'/>
    <arg name='outMenuResult' declared_type='SInt32*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ZoomRects'>
    <arg name='fromRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='toRect' declared_type='Rect*' type='^{Rect=ssss}' const='true'/>
    <arg name='zoomSteps' declared_type='SInt16' type='s'/>
    <arg name='acceleration' declared_type='ZoomAcceleration' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ZoomRegion'>
    <arg name='region' declared_type='RgnHandle' type='^{OpaqueRgnHandle=}'/>
    <arg name='zoomDistance' declared_type='Point' type='{Point=ss}'/>
    <arg name='zoomSteps' declared_type='SInt16' type='s'/>
    <arg name='acceleration' declared_type='ZoomAcceleration' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ZoomWindow'>
    <arg name='window' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='partCode' declared_type='WindowPartCode' type='s'/>
    <arg name='front' declared_type='Boolean' type='B'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='ZoomWindowIdeal'>
    <arg name='inWindow' declared_type='WindowRef' type='^{OpaqueWindowPtr=}'/>
    <arg name='inPartCode' declared_type='WindowPartCode' type='s'/>
    <arg name='ioIdealSize' declared_type='Point*' type='^{Point=ss}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function_alias name='GetBevelButtonMenuRef' original='GetBevelButtonMenuHandle'/>
  <function_alias name='GetControlPopupMenuRef' original='GetControlPopupMenuHandle'/>
  <function_alias name='GetMenuRef' original='GetMenuHandle'/>
  <function_alias name='IsValidWindowRef' original='IsValidWindowPtr'/>
  <function_alias name='MacAppendMenu' original='AppendMenu'/>
  <function_alias name='MacCheckMenuItem' original='CheckMenuItem'/>
  <function_alias name='MacCreateEvent' original='CreateEvent'/>
  <function_alias name='MacDeleteMenu' original='DeleteMenu'/>
  <function_alias name='MacDrawMenuBar' original='DrawMenuBar'/>
  <function_alias name='MacEnableMenuItem' original='EnableMenuItem'/>
  <function_alias name='MacFindWindow' original='FindWindow'/>
  <function_alias name='MacGetMenu' original='GetMenu'/>
  <function_alias name='MacGetNextWindow' original='GetNextWindow'/>
  <function_alias name='MacInsertMenu' original='InsertMenu'/>
  <function_alias name='MacInsertMenuItem' original='InsertMenuItem'/>
  <function_alias name='MacIsWindowVisible' original='IsWindowVisible'/>
  <function_alias name='MacMoveWindow' original='MoveWindow'/>
  <function_alias name='MacShowWindow' original='ShowWindow'/>
  <function_alias name='SetControlPopupMenuRef' original='SetControlPopupMenuHandle'/>
  <function_alias name='TXNGetFontMenuRef' original='TXNGetFontMenuHandle'/>
  <function_alias name='_GetWindowToolbar' original='GetWindowToolbar'/>
  <function_alias name='_HIToolbarItemCopyIdentifier' original='HIToolbarItemCopyIdentifier'/>
  <function_alias name='_IsWindowToolbarVisible' original='IsWindowToolbarVisible'/>
  <function_alias name='_SetWindowToolbar' original='SetWindowToolbar'/>
  <function_alias name='_ShowHideWindowToolbar' original='ShowHideWindowToolbar'/>
</signatures>
