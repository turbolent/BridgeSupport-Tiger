<?xml version='1.0'?>
<signatures version='1.0'>
  <depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
  <depends_on path='/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LaunchServices.framework'/>
  <depends_on path='/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework'/>
  <depends_on path='/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework'/>
  <depends_on path='/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework'/>
  <depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
  <depends_on path='/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/AE.framework'/>
  <depends_on path='/System/Library/Frameworks/Security.framework'/>
  <struct name='CStrList' type='{CStrList=&quot;count&quot;i&quot;strArray&quot;^*}'>
    <field name='count' declared_type='SInt32' type='l' type64='i'/>
    <field name='strArray' declared_type='char**' type='^*' const='true'/>
  </struct>
  <struct name='ConstCStrList' type='{CStrList=&quot;count&quot;i&quot;strArray&quot;^*}'>
    <field name='count' declared_type='SInt32' type='l' type64='i'/>
    <field name='strArray' declared_type='char**' type='^*' const='true'/>
  </struct>
  <struct name='ConstPMRectList' type='{PMRectList=&quot;count&quot;i&quot;pmRectArray&quot;^^{PMRect}}'>
    <field name='count' declared_type='SInt32' type='l' type64='i'/>
    <field name='pmRectArray' declared_type='PMRect**' type='^^{PMRect}' const='true'/>
  </struct>
  <struct name='ConstSInt32List' type='{SInt32List=&quot;count&quot;i&quot;sInt32Array&quot;^i}'>
    <field name='count' declared_type='SInt32' type='l' type64='i'/>
    <field name='sInt32Array' declared_type='SInt32*' type='^i' const='true'/>
  </struct>
  <struct name='IOMInterface' type='{_IOMInterface=&quot;vtable&quot;^{IOMProcs}}'>
    <field name='vtable' declared_type='IOMProcs*' type='^{IOMProcs={PMPlugInHeader=^?^?^?}^?^?^?^?^?^?^?^?^?^?}' const='true'/>
  </struct>
  <struct name='IOMProcs' type='{IOMProcs=&quot;pluginHeader&quot;{PMPlugInHeader=&quot;Retain&quot;^?&quot;Release&quot;^?&quot;GetAPIVersion&quot;^?}&quot;GetConnectionInfo&quot;^?&quot;Initialize&quot;^?&quot;Open&quot;^?&quot;Read&quot;^?&quot;Write&quot;^?&quot;Status&quot;^?&quot;GetAttribute&quot;^?&quot;SetAttribute&quot;^?&quot;Close&quot;^?&quot;Terminate&quot;^?}'>
    <field name='pluginHeader' declared_type='PMPlugInHeader' type='{PMPlugInHeader=&quot;Retain&quot;^?&quot;Release&quot;^?&quot;GetAPIVersion&quot;^?}'/>
    <field name='GetConnectionInfo' function_pointer='true' declared_type='OSStatus (*)(CFStringRef *, CFStringRef *)' type='^?'>
      <arg declared_type='CFStringRef*' type='^^{__CFString}'/>
      <arg declared_type='CFStringRef*' type='^^{__CFString}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='Initialize' function_pointer='true' declared_type='OSStatus (*)(CFDataRef , IOMContext *)' type='^?'>
      <arg declared_type='CFDataRef' type='^{__CFData=}' const='true'/>
      <arg declared_type='IOMContext*' type='^^{OpaqueIOMContext}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='Open' function_pointer='true' declared_type='OSStatus (*)(IOMContext, PMTicketRef, UInt32 *)' type='^?'>
      <arg declared_type='IOMContext' type='^{OpaqueIOMContext=}'/>
      <arg declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
      <arg declared_type='UInt32*' type='^I'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='Read' function_pointer='true' declared_type='OSStatus (*)(IOMContext, Ptr, UInt32 *, Boolean *)' type='^?'>
      <arg declared_type='IOMContext' type='^{OpaqueIOMContext=}'/>
      <arg declared_type='Ptr' type='*'/>
      <arg declared_type='UInt32*' type='^I'/>
      <arg declared_type='Boolean*' type='^B'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='Write' function_pointer='true' declared_type='OSStatus (*)(IOMContext, Ptr, UInt32 *, Boolean)' type='^?'>
      <arg declared_type='IOMContext' type='^{OpaqueIOMContext=}'/>
      <arg declared_type='Ptr' type='*'/>
      <arg declared_type='UInt32*' type='^I'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='Status' function_pointer='true' declared_type='OSStatus (*)(IOMContext, CFStringRef *)' type='^?'>
      <arg declared_type='IOMContext' type='^{OpaqueIOMContext=}'/>
      <arg declared_type='CFStringRef*' type='^^{__CFString}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='GetAttribute' function_pointer='true' declared_type='OSStatus (*)(IOMContext, CFStringRef, CFTypeRef *)' type='^?'>
      <arg declared_type='IOMContext' type='^{OpaqueIOMContext=}'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='CFTypeRef*' type='^^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='SetAttribute' function_pointer='true' declared_type='OSStatus (*)(IOMContext, CFStringRef, CFTypeRef)' type='^?'>
      <arg declared_type='IOMContext' type='^{OpaqueIOMContext=}'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='CFTypeRef' type='@'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='Close' function_pointer='true' declared_type='OSStatus (*)(IOMContext, Boolean)' type='^?'>
      <arg declared_type='IOMContext' type='^{OpaqueIOMContext=}'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='Terminate' function_pointer='true' declared_type='OSStatus (*)(IOMContext *)' type='^?'>
      <arg declared_type='IOMContext*' type='^^{OpaqueIOMContext}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
  </struct>
  <struct name='InvocationLocator' type='{InvocationLocator=&quot;order&quot;i&quot;orderSection&quot;s&quot;invocationType&quot;s&quot;invocationLoc&quot;l&quot;invocationSize&quot;l}' type64='{InvocationLocator=&quot;order&quot;i&quot;orderSection&quot;s&quot;invocationType&quot;s&quot;invocationLoc&quot;q&quot;invocationSize&quot;q}'>
    <field name='order' declared_type='Fixed' type='l' type64='i'/>
    <field name='orderSection' declared_type='Oindex' type='s'/>
    <field name='invocationType' declared_type='short' type='s'/>
    <field name='invocationLoc' declared_type='long' type='l' type64='q'/>
    <field name='invocationSize' declared_type='long' type='l' type64='q'/>
  </struct>
  <struct name='LAxis' type='{LAxis=&quot;llx&quot;i&quot;lly&quot;i&quot;urx&quot;i&quot;ury&quot;i}'>
    <field name='llx' declared_type='Fixed' type='l' type64='i'/>
    <field name='lly' declared_type='Fixed' type='l' type64='i'/>
    <field name='urx' declared_type='Fixed' type='l' type64='i'/>
    <field name='ury' declared_type='Fixed' type='l' type64='i'/>
  </struct>
  <struct name='LPaper' type='{LPaper=&quot;width&quot;i&quot;height&quot;i}'>
    <field name='width' declared_type='Fixed' type='l' type64='i'/>
    <field name='height' declared_type='Fixed' type='l' type64='i'/>
  </struct>
  <struct name='PMIOProcs' type='{PMIOProcs=&quot;version&quot;i&quot;GetConnInfoProc&quot;^?&quot;PMIOOpenProc&quot;^?&quot;PMIOReadProc&quot;^?&quot;PMIOWriteProc&quot;^?&quot;PMIOStatusProc&quot;^?&quot;PMIOGetAttributeProc&quot;^?&quot;PMIOSetAttributeProc&quot;^?&quot;PMIOCloseProc&quot;^?}'>
    <field name='version' declared_type='CFIndex' type='l' type64='i'/>
    <field name='GetConnInfoProc' function_pointer='true' declared_type='GetConnInfoProcPtr' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='CFStringRef*' type='^^{__CFString}'/>
      <arg declared_type='CFStringRef*' type='^^{__CFString}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='PMIOOpenProc' function_pointer='true' declared_type='PMIOOpenProcPtr' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='PMIOReadProc' function_pointer='true' declared_type='PMIOReadProcPtr' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='Ptr' type='*'/>
      <arg declared_type='UInt32*' type='^I'/>
      <arg declared_type='Boolean*' type='^B'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='PMIOWriteProc' function_pointer='true' declared_type='PMIOWriteProcPtr' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='Ptr' type='*'/>
      <arg declared_type='UInt32*' type='^I'/>
      <arg declared_type='Boolean' type='B'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='PMIOStatusProc' function_pointer='true' declared_type='PMIOStatusProcPtr' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='CFStringRef*' type='^^{__CFString}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='PMIOGetAttributeProc' function_pointer='true' declared_type='PMIOGetAttributeProcPtr' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='CFTypeRef*' type='^^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='PMIOSetAttributeProc' function_pointer='true' declared_type='PMIOSetAttributeProcPtr' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='CFTypeRef' type='@'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='PMIOCloseProc' function_pointer='true' declared_type='PMIOCloseProcPtr' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
  </struct>
  <struct name='PMInterface' type='{PMInterface=&quot;vtable&quot;^{PMProcs}}'>
    <field name='vtable' declared_type='PMProcs*' type='^{PMProcs={PMPlugInHeader=^?^?^?}^?^?^?^?^?^?^?^?^?^?^?}' const='true'/>
  </struct>
  <struct name='PMJobStreamProcs' type='{PMJobStreamProcs=&quot;version&quot;i&quot;PMJobStreamOpenProc&quot;^?&quot;PMJobStreamReadProc&quot;^?&quot;PMJobStreamWriteProc&quot;^?&quot;PMJobStreamGetPosProc&quot;^?&quot;PMJobStreamSetPosProc&quot;^?&quot;PMJobStreamGetEOFProc&quot;^?}'>
    <field name='version' declared_type='CFIndex' type='l' type64='i'/>
    <field name='PMJobStreamOpenProc' function_pointer='true' declared_type='PMJobStreamOpenProcPtr' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='PMJobStreamReadProc' function_pointer='true' declared_type='PMJobStreamReadWriteProcPtr' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='UInt32*' type='^I'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='PMJobStreamWriteProc' function_pointer='true' declared_type='PMJobStreamReadWriteProcPtr' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='void*' type='^v'/>
      <arg declared_type='UInt32*' type='^I'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='PMJobStreamGetPosProc' function_pointer='true' declared_type='PMJobStreamGetPosProcPtr' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='UInt32*' type='^I'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='PMJobStreamSetPosProc' function_pointer='true' declared_type='PMJobStreamSetPosProcPtr' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='SInt16' type='s'/>
      <arg declared_type='UInt32' type='L' type64='I'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='PMJobStreamGetEOFProc' function_pointer='true' declared_type='PMJobStreamGetPosProcPtr' type='^?'>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='UInt32*' type='^I'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
  </struct>
  <struct name='PMLanguageInfo' type='{PMLanguageInfo=&quot;level&quot;[33C]&quot;version&quot;[33C]&quot;release&quot;[33C]}'>
    <field name='level' declared_type='Str32' type='[33C]'/>
    <field name='version' declared_type='Str32' type='[33C]'/>
    <field name='release' declared_type='Str32' type='[33C]'/>
  </struct>
  <struct name='PMPaperMargins' type='{PMRect=&quot;top&quot;d&quot;left&quot;d&quot;bottom&quot;d&quot;right&quot;d}'>
    <field name='top' declared_type='double' type='d'/>
    <field name='left' declared_type='double' type='d'/>
    <field name='bottom' declared_type='double' type='d'/>
    <field name='right' declared_type='double' type='d'/>
  </struct>
  <struct name='PMPlugInAPIVersion' type='{PMPlugInAPIVersion=&quot;buildVersionMajor&quot;I&quot;buildVersionMinor&quot;I&quot;baseVersionMajor&quot;I&quot;baseVersionMinor&quot;I}'>
    <field name='buildVersionMajor' declared_type='UInt32' type='L' type64='I'/>
    <field name='buildVersionMinor' declared_type='UInt32' type='L' type64='I'/>
    <field name='baseVersionMajor' declared_type='UInt32' type='L' type64='I'/>
    <field name='baseVersionMinor' declared_type='UInt32' type='L' type64='I'/>
  </struct>
  <struct name='PMPlugInHeader' type='{PMPlugInHeader=&quot;Retain&quot;^?&quot;Release&quot;^?&quot;GetAPIVersion&quot;^?}'>
    <field name='Retain' function_pointer='true' declared_type='OSStatus (*)(PMPlugInHeaderInterface *)' type='^?'>
      <arg declared_type='PMPlugInHeaderInterface*' type='^{PMPlugInHeaderInterface=^{PMPlugInHeader}}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='Release' function_pointer='true' declared_type='OSStatus (*)(PMPlugInHeaderInterface **)' type='^?'>
      <arg declared_type='PMPlugInHeaderInterface**' type='^^{PMPlugInHeaderInterface}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='GetAPIVersion' function_pointer='true' declared_type='OSStatus (*)(PMPlugInHeaderInterface *, PMPlugInAPIVersion *)' type='^?'>
      <arg declared_type='PMPlugInHeaderInterface*' type='^{PMPlugInHeaderInterface=^{PMPlugInHeader}}'/>
      <arg declared_type='PMPlugInAPIVersion*' type='^{PMPlugInAPIVersion=IIII}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
  </struct>
  <struct name='PMPlugInHeaderInterface' type='{PMPlugInHeaderInterface=&quot;vtable&quot;^{PMPlugInHeader}}'>
    <field name='vtable' declared_type='PMPlugInHeader*' type='^{PMPlugInHeader=^?^?^?}' const='true'/>
  </struct>
  <struct name='PMProcs' type='{PMProcs=&quot;pluginHeader&quot;{PMPlugInHeader=&quot;Retain&quot;^?&quot;Release&quot;^?&quot;GetAPIVersion&quot;^?}&quot;CreatePrinterBrowserModuleInfo&quot;^?&quot;Initialize&quot;^?&quot;CreatePrintingDialogExtensionsPaths&quot;^?&quot;CreatePrinterTickets&quot;^?&quot;BeginJob&quot;^?&quot;PrintJob&quot;^?&quot;PrintPage&quot;^?&quot;ImageAccess&quot;^?&quot;CancelJob&quot;^?&quot;EndJob&quot;^?&quot;Terminate&quot;^?}'>
    <field name='pluginHeader' declared_type='PMPlugInHeader' type='{PMPlugInHeader=&quot;Retain&quot;^?&quot;Release&quot;^?&quot;GetAPIVersion&quot;^?}'/>
    <field name='CreatePrinterBrowserModuleInfo' function_pointer='true' declared_type='OSStatus (*)(CFStringRef, CFArrayRef *)' type='^?'>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='CFArrayRef*' type='^^{__CFArray}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='Initialize' function_pointer='true' declared_type='OSStatus (*)(CFDataRef , void *, PMIOProcs *, PMNotificationProcPtr , PMContext *)' type='^?'>
      <arg declared_type='CFDataRef' type='^{__CFData=}' const='true'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='PMIOProcs*' type='^{PMIOProcs=i^?^?^?^?^?^?^?^?}' const='true'/>
      <arg declared_type='PMNotificationProcPtr' type='^?' const='true'/>
      <arg declared_type='PMContext*' type='^^{OpaquePMContext}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='CreatePrintingDialogExtensionsPaths' function_pointer='true' declared_type='OSStatus (*)(PMContext, CFArrayRef *)' type='^?'>
      <arg declared_type='PMContext' type='^{OpaquePMContext=}'/>
      <arg declared_type='CFArrayRef*' type='^^{__CFArray}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='CreatePrinterTickets' function_pointer='true' declared_type='OSStatus (*)(PMContext, PMTicketRef *, PMTemplateRef *)' type='^?'>
      <arg declared_type='PMContext' type='^{OpaquePMContext=}'/>
      <arg declared_type='PMTicketRef*' type='^^{OpaquePMTicketRef}'/>
      <arg declared_type='PMTemplateRef*' type='^^{OpaquePMTemplateRef}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='BeginJob' function_pointer='true' declared_type='OSStatus (*)(PMContext, void *, PMTicketRef, PMTicketRef *)' type='^?'>
      <arg declared_type='PMContext' type='^{OpaquePMContext=}'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
      <arg declared_type='PMTicketRef*' type='^^{OpaquePMTicketRef}'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='PrintJob' function_pointer='true' declared_type='OSStatus (*)(PMContext, void *, PMTicketRef, PMJobStreamProcs *)' type='^?'>
      <arg declared_type='PMContext' type='^{OpaquePMContext=}'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
      <arg declared_type='PMJobStreamProcs*' type='^{PMJobStreamProcs=i^?^?^?^?^?^?}' const='true'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='PrintPage' function_pointer='true' declared_type='OSStatus (*)(PMContext, void *, PMTicketRef, PMJobStreamGetNextBandProcPtr )' type='^?'>
      <arg declared_type='PMContext' type='^{OpaquePMContext=}'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
      <arg declared_type='PMJobStreamGetNextBandProcPtr' type='^?' const='true'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='ImageAccess' function_pointer='true' declared_type='OSStatus (*)(PMContext, void *, CFStringRef, PMDrawingCtx, PMImageRef, PMImageRef *)' type='^?'>
      <arg declared_type='PMContext' type='^{OpaquePMContext=}'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <arg declared_type='CFStringRef' type='^{__CFString=}'/>
      <arg declared_type='PMDrawingCtx' type='^v'/>
      <arg declared_type='PMImageRef' type='@'/>
      <arg declared_type='PMImageRef*' type='^^v'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='CancelJob' function_pointer='true' declared_type='OSStatus (*)(PMContext, void *)' type='^?'>
      <arg declared_type='PMContext' type='^{OpaquePMContext=}'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='EndJob' function_pointer='true' declared_type='OSStatus (*)(PMContext, void *)' type='^?'>
      <arg declared_type='PMContext' type='^{OpaquePMContext=}'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
    <field name='Terminate' function_pointer='true' declared_type='OSStatus (*)(PMContext *, void *)' type='^?'>
      <arg declared_type='PMContext*' type='^^{OpaquePMContext}'/>
      <arg declared_type='void*' type='^v' const='true'/>
      <retval declared_type='OSStatus' type='l' type64='i'/>
    </field>
  </struct>
  <struct name='PMRasterBand' type='{PMRasterBand=&quot;baseAddress&quot;*&quot;size&quot;I&quot;yOffset&quot;I&quot;height&quot;I&quot;depth&quot;I&quot;order&quot;I}'>
    <field name='baseAddress' declared_type='Ptr' type='*'/>
    <field name='size' declared_type='UInt32' type='L' type64='I'/>
    <field name='yOffset' declared_type='UInt32' type='L' type64='I'/>
    <field name='height' declared_type='UInt32' type='L' type64='I'/>
    <field name='depth' declared_type='UInt32' type='L' type64='I'/>
    <field name='order' declared_type='PMBandOrder' type='L' type64='I'/>
  </struct>
  <struct name='PMRect' type='{PMRect=&quot;top&quot;d&quot;left&quot;d&quot;bottom&quot;d&quot;right&quot;d}'>
    <field name='top' declared_type='double' type='d'/>
    <field name='left' declared_type='double' type='d'/>
    <field name='bottom' declared_type='double' type='d'/>
    <field name='right' declared_type='double' type='d'/>
  </struct>
  <struct name='PMRectList' type='{PMRectList=&quot;count&quot;i&quot;pmRectArray&quot;^^{PMRect}}'>
    <field name='count' declared_type='SInt32' type='l' type64='i'/>
    <field name='pmRectArray' declared_type='PMRect**' type='^^{PMRect}' const='true'/>
  </struct>
  <struct name='PMResolution' type='{PMResolution=&quot;hRes&quot;d&quot;vRes&quot;d}'>
    <field name='hRes' declared_type='double' type='d'/>
    <field name='vRes' declared_type='double' type='d'/>
  </struct>
  <struct name='PMTicketItemStruct' type='{PMTicketItemStruct=&quot;key&quot;*&quot;itemType&quot;S&quot;locked&quot;B&quot;value&quot;(?=&quot;GenericData&quot;^v&quot;cString&quot;*&quot;sInt32&quot;i&quot;boolean&quot;I&quot;cStrlist&quot;^{CStrList}&quot;rect&quot;^{PMRect}&quot;sInt32List&quot;^{SInt32List}&quot;pmRectList&quot;^{PMRectList})}'>
    <field name='key' declared_type='char*' type='*'/>
    <field name='itemType' declared_type='PMTicketItemType' type='S'/>
    <field name='locked' declared_type='Boolean' type='B'/>
    <field name='value' declared_type='union PMTicketItemStruct::' type='(?=&quot;GenericData&quot;^v&quot;cString&quot;*&quot;sInt32&quot;i&quot;boolean&quot;I&quot;cStrlist&quot;^{CStrList}&quot;rect&quot;^{PMRect}&quot;sInt32List&quot;^{SInt32List}&quot;pmRectList&quot;^{PMRectList})'/>
  </struct>
  <struct name='PPDFileSpec' type='{PPDFileSpec=&quot;fs&quot;{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;l&quot;name&quot;[64C]}&quot;refNum&quot;s&quot;lastModDate&quot;l&quot;volumeName&quot;[64C]&quot;alias&quot;^^{AliasRecord}}' type64='{PPDFileSpec=&quot;fs&quot;{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;q&quot;name&quot;[64C]}&quot;refNum&quot;s&quot;lastModDate&quot;q&quot;volumeName&quot;[64C]&quot;alias&quot;^^{AliasRecord}}'>
    <field name='fs' declared_type='FSSpec' type='{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;l&quot;name&quot;[64C]}' type64='{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;q&quot;name&quot;[64C]}'/>
    <field name='refNum' declared_type='short' type='s'/>
    <field name='lastModDate' declared_type='long' type='l' type64='q'/>
    <field name='volumeName' declared_type='Str63' type='[64C]'/>
    <field name='alias' declared_type='AliasHandle' type='^^{AliasRecord}'/>
  </struct>
  <struct name='PPDMatch' type='{_PPDMatch=&quot;count&quot;S&quot;file&quot;[1{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;l&quot;name&quot;[64C]}]}' type64='{_PPDMatch=&quot;count&quot;S&quot;file&quot;[1{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;q&quot;name&quot;[64C]}]}'>
    <field name='count' declared_type='unsigned short' type='S'/>
    <field name='file' declared_type='FSSpec*' type='[1{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;l&quot;name&quot;[64C]}]' type64='[1{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;q&quot;name&quot;[64C]}]'/>
  </struct>
  <struct name='PPDMatchPtr' type='{_PPDMatchPtr=&quot;count&quot;S&quot;file&quot;[1{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;l&quot;name&quot;[64C]}]}' type64='{_PPDMatchPtr=&quot;count&quot;S&quot;file&quot;[1{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;q&quot;name&quot;[64C]}]}'>
    <field name='count' declared_type='unsigned short' type='S'/>
    <field name='file' declared_type='FSSpec*' type='[1{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;l&quot;name&quot;[64C]}]' type64='[1{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;q&quot;name&quot;[64C]}]'/>
  </struct>
  <struct name='PPDParseErr' type='{_PPDParseErr=&quot;msg&quot;[256C]&quot;file&quot;[256C]&quot;line&quot;l}' type64='{_PPDParseErr=&quot;msg&quot;[256C]&quot;file&quot;[256C]&quot;line&quot;q}'>
    <field name='msg' declared_type='Str255' type='[256C]'/>
    <field name='file' declared_type='Str255' type='[256C]'/>
    <field name='line' declared_type='long' type='l' type64='q'/>
  </struct>
  <struct name='PPDPrinterDesc' type='{PPDPrinterDesc=&quot;product&quot;*&quot;version&quot;*&quot;revision&quot;*&quot;matchModel&quot;B}'>
    <field name='product' declared_type='StringPtr' type='*'/>
    <field name='version' declared_type='StringPtr' type='*'/>
    <field name='revision' declared_type='StringPtr' type='*'/>
    <field name='matchModel' declared_type='Boolean' type='B'/>
  </struct>
  <struct name='SInt32List' type='{SInt32List=&quot;count&quot;i&quot;sInt32Array&quot;^i}'>
    <field name='count' declared_type='SInt32' type='l' type64='i'/>
    <field name='sInt32Array' declared_type='SInt32*' type='^i' const='true'/>
  </struct>
  <struct name='StrList' type='{StrList=&quot;numStrings&quot;s&quot;str&quot;[1C]}'>
    <field name='numStrings' declared_type='short' type='s'/>
    <field name='str' declared_type='unsigned char*' type='[1C]'/>
  </struct>
  <struct name='StrListPtr' type='{StrList=&quot;numStrings&quot;s&quot;str&quot;[1C]}'>
    <field name='numStrings' declared_type='short' type='s'/>
    <field name='str' declared_type='unsigned char*' type='[1C]'/>
  </struct>
  <struct name='UIConstraint' type='{UIConstraint=&quot;mainKeyIndex&quot;s&quot;optionKeyIndex&quot;s&quot;invalMainKeyIndex&quot;s&quot;invalOptionKeyIndex&quot;s}'>
    <field name='mainKeyIndex' declared_type='Mindex' type='s'/>
    <field name='optionKeyIndex' declared_type='Oindex' type='s'/>
    <field name='invalMainKeyIndex' declared_type='Mindex' type='s'/>
    <field name='invalOptionKeyIndex' declared_type='Oindex' type='s'/>
  </struct>
  <struct name='UIConstraintList' type='{UIConstraintList=&quot;numConstraints&quot;s&quot;constraint&quot;[1{UIConstraint=&quot;mainKeyIndex&quot;s&quot;optionKeyIndex&quot;s&quot;invalMainKeyIndex&quot;s&quot;invalOptionKeyIndex&quot;s}]}'>
    <field name='numConstraints' declared_type='short' type='s'/>
    <field name='constraint' declared_type='UIConstraint*' type='[1{UIConstraint=&quot;mainKeyIndex&quot;s&quot;optionKeyIndex&quot;s&quot;invalMainKeyIndex&quot;s&quot;invalOptionKeyIndex&quot;s}]'/>
  </struct>
  <struct name='UIConstraintListP' type='{UIConstraintList=&quot;numConstraints&quot;s&quot;constraint&quot;[1{UIConstraint=&quot;mainKeyIndex&quot;s&quot;optionKeyIndex&quot;s&quot;invalMainKeyIndex&quot;s&quot;invalOptionKeyIndex&quot;s}]}'>
    <field name='numConstraints' declared_type='short' type='s'/>
    <field name='constraint' declared_type='UIConstraint*' type='[1{UIConstraint=&quot;mainKeyIndex&quot;s&quot;optionKeyIndex&quot;s&quot;invalMainKeyIndex&quot;s&quot;invalOptionKeyIndex&quot;s}]'/>
  </struct>
  <struct name='UIConstraintP' type='{UIConstraint=&quot;mainKeyIndex&quot;s&quot;optionKeyIndex&quot;s&quot;invalMainKeyIndex&quot;s&quot;invalOptionKeyIndex&quot;s}'>
    <field name='mainKeyIndex' declared_type='Mindex' type='s'/>
    <field name='optionKeyIndex' declared_type='Oindex' type='s'/>
    <field name='invalMainKeyIndex' declared_type='Mindex' type='s'/>
    <field name='invalOptionKeyIndex' declared_type='Oindex' type='s'/>
  </struct>
  <struct name='xUIHeader' type='{xUIHeader=&quot;version&quot;l&quot;mainKeyIndex&quot;s&quot;mainKeyTranslation&quot;s&quot;groupKeyIndex&quot;s&quot;queryInvocation&quot;s&quot;defaultOption&quot;s&quot;pickConstraint&quot;s&quot;numOptions&quot;s}' type64='{xUIHeader=&quot;version&quot;q&quot;mainKeyIndex&quot;s&quot;mainKeyTranslation&quot;s&quot;groupKeyIndex&quot;s&quot;queryInvocation&quot;s&quot;defaultOption&quot;s&quot;pickConstraint&quot;s&quot;numOptions&quot;s}'>
    <field name='version' declared_type='long' type='l' type64='q'/>
    <field name='mainKeyIndex' declared_type='Mindex' type='s'/>
    <field name='mainKeyTranslation' declared_type='Tindex' type='s'/>
    <field name='groupKeyIndex' declared_type='Oindex' type='s'/>
    <field name='queryInvocation' declared_type='Pindex' type='s'/>
    <field name='defaultOption' declared_type='Oindex' type='s'/>
    <field name='pickConstraint' declared_type='Oindex' type='s'/>
    <field name='numOptions' declared_type='short' type='s'/>
  </struct>
  <struct name='xUIHeaderP' type='{xUIHeader=&quot;version&quot;l&quot;mainKeyIndex&quot;s&quot;mainKeyTranslation&quot;s&quot;groupKeyIndex&quot;s&quot;queryInvocation&quot;s&quot;defaultOption&quot;s&quot;pickConstraint&quot;s&quot;numOptions&quot;s}' type64='{xUIHeader=&quot;version&quot;q&quot;mainKeyIndex&quot;s&quot;mainKeyTranslation&quot;s&quot;groupKeyIndex&quot;s&quot;queryInvocation&quot;s&quot;defaultOption&quot;s&quot;pickConstraint&quot;s&quot;numOptions&quot;s}'>
    <field name='version' declared_type='long' type='l' type64='q'/>
    <field name='mainKeyIndex' declared_type='Mindex' type='s'/>
    <field name='mainKeyTranslation' declared_type='Tindex' type='s'/>
    <field name='groupKeyIndex' declared_type='Oindex' type='s'/>
    <field name='queryInvocation' declared_type='Pindex' type='s'/>
    <field name='defaultOption' declared_type='Oindex' type='s'/>
    <field name='pickConstraint' declared_type='Oindex' type='s'/>
    <field name='numOptions' declared_type='short' type='s'/>
  </struct>
  <struct name='xUIOption' type='{xUIOption=&quot;version&quot;l&quot;optionKeyIndex&quot;s&quot;optionTranslation&quot;s&quot;forbidden&quot;B&quot;chosen&quot;B&quot;invocation&quot;{InvocationLocator=&quot;order&quot;i&quot;orderSection&quot;s&quot;invocationType&quot;s&quot;invocationLoc&quot;l&quot;invocationSize&quot;l}}' type64='{xUIOption=&quot;version&quot;q&quot;optionKeyIndex&quot;s&quot;optionTranslation&quot;s&quot;forbidden&quot;B&quot;chosen&quot;B&quot;invocation&quot;{InvocationLocator=&quot;order&quot;i&quot;orderSection&quot;s&quot;invocationType&quot;s&quot;invocationLoc&quot;q&quot;invocationSize&quot;q}}'>
    <field name='version' declared_type='long' type='l' type64='q'/>
    <field name='optionKeyIndex' declared_type='Oindex' type='s'/>
    <field name='optionTranslation' declared_type='Tindex' type='s'/>
    <field name='forbidden' declared_type='Boolean' type='B'/>
    <field name='chosen' declared_type='Boolean' type='B'/>
    <field name='invocation' declared_type='InvocationLocator' type='{InvocationLocator=&quot;order&quot;i&quot;orderSection&quot;s&quot;invocationType&quot;s&quot;invocationLoc&quot;l&quot;invocationSize&quot;l}' type64='{InvocationLocator=&quot;order&quot;i&quot;orderSection&quot;s&quot;invocationType&quot;s&quot;invocationLoc&quot;q&quot;invocationSize&quot;q}'/>
  </struct>
  <struct name='xUIOptionP' type='{xUIOption=&quot;version&quot;l&quot;optionKeyIndex&quot;s&quot;optionTranslation&quot;s&quot;forbidden&quot;B&quot;chosen&quot;B&quot;invocation&quot;{InvocationLocator=&quot;order&quot;i&quot;orderSection&quot;s&quot;invocationType&quot;s&quot;invocationLoc&quot;l&quot;invocationSize&quot;l}}' type64='{xUIOption=&quot;version&quot;q&quot;optionKeyIndex&quot;s&quot;optionTranslation&quot;s&quot;forbidden&quot;B&quot;chosen&quot;B&quot;invocation&quot;{InvocationLocator=&quot;order&quot;i&quot;orderSection&quot;s&quot;invocationType&quot;s&quot;invocationLoc&quot;q&quot;invocationSize&quot;q}}'>
    <field name='version' declared_type='long' type='l' type64='q'/>
    <field name='optionKeyIndex' declared_type='Oindex' type='s'/>
    <field name='optionTranslation' declared_type='Tindex' type='s'/>
    <field name='forbidden' declared_type='Boolean' type='B'/>
    <field name='chosen' declared_type='Boolean' type='B'/>
    <field name='invocation' declared_type='InvocationLocator' type='{InvocationLocator=&quot;order&quot;i&quot;orderSection&quot;s&quot;invocationType&quot;s&quot;invocationLoc&quot;l&quot;invocationSize&quot;l}' type64='{InvocationLocator=&quot;order&quot;i&quot;orderSection&quot;s&quot;invocationType&quot;s&quot;invocationLoc&quot;q&quot;invocationSize&quot;q}'/>
  </struct>
  <cftype name='IOMInterfaceRef' type='^{?=^{IOMProcs}}'/>
  <cftype name='PMImageRef' type='^v'/>
  <cftype name='PMInterfaceRef' type='^{PMInterface=^{PMProcs}}'/>
  <cftype name='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
  <cftype name='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
  <opaque name='IOMContext' type='^{OpaqueIOMContext=}'/>
  <opaque name='PMContext' type='^{OpaquePMContext=}'/>
  <opaque name='PMDialog' type='^{OpaquePMDialog=}'/>
  <opaque name='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
  <opaque name='PMPaper' type='^{OpaquePMPaper=}'/>
  <opaque name='PMPreset' type='^{OpaquePMPreset=}'/>
  <opaque name='PMPrintContext' type='^{OpaquePMPrintContext=}'/>
  <opaque name='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
  <opaque name='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
  <opaque name='PMPrinter' type='^{OpaquePMPrinter=}'/>
  <opaque name='PMServer' type='^{OpaquePMServer=}'/>
  <opaque name='PPDContext' type='^{PPDContextViel=}'/>
  <string_constant name='A0' nsstring='true' value='iso-a0'/>
  <string_constant name='A1' nsstring='true' value='iso-a1'/>
  <string_constant name='A2' nsstring='true' value='iso-a2'/>
  <string_constant name='A3' nsstring='true' value='iso-a3'/>
  <string_constant name='A4' nsstring='true' value='iso-a4'/>
  <string_constant name='A5' nsstring='true' value='iso-a5'/>
  <string_constant name='A6' nsstring='true' value='iso-a6'/>
  <string_constant name='A7' nsstring='true' value='iso-a7'/>
  <string_constant name='A8' nsstring='true' value='iso-a8'/>
  <string_constant name='A9' nsstring='true' value='iso-a9'/>
  <string_constant name='ASize' nsstring='true' value='a'/>
  <string_constant name='B0' nsstring='true' value='iso-b0'/>
  <string_constant name='B1' nsstring='true' value='iso-b1'/>
  <string_constant name='B10' nsstring='true' value='iso-b10'/>
  <string_constant name='B2' nsstring='true' value='iso-b2'/>
  <string_constant name='B3' nsstring='true' value='iso-b3'/>
  <string_constant name='B4' nsstring='true' value='iso-b4'/>
  <string_constant name='B5' nsstring='true' value='iso-b5'/>
  <string_constant name='B6' nsstring='true' value='iso-b6'/>
  <string_constant name='B7' nsstring='true' value='iso-b7'/>
  <string_constant name='B8' nsstring='true' value='iso-b8'/>
  <string_constant name='B9' nsstring='true' value='iso-b9'/>
  <string_constant name='BSize' nsstring='true' value='b'/>
  <string_constant name='CSize' nsstring='true' value='c'/>
  <string_constant name='DSize' nsstring='true' value='d'/>
  <string_constant name='DefaultPaper' nsstring='true' value='DefaultPaperSize'/>
  <string_constant name='ESize' nsstring='true' value='e'/>
  <string_constant name='Envelope10' nsstring='true' value='na-number-10-envelope'/>
  <string_constant name='Envelope10x13' nsstring='true' value='na-10x13-envelope'/>
  <string_constant name='Envelope10x14' nsstring='true' value='na-10x14-envelope'/>
  <string_constant name='Envelope10x15' nsstring='true' value='na-10x15-envelope'/>
  <string_constant name='Envelope6x9' nsstring='true' value='na-6x9-envelope'/>
  <string_constant name='Envelope7x9' nsstring='true' value='na-7x9-envelope'/>
  <string_constant name='Envelope9' nsstring='true' value='na-number-9-envelope'/>
  <string_constant name='Envelope9x11' nsstring='true' value='na-9x11-envelope'/>
  <string_constant name='Envelope9x12' nsstring='true' value='na-9x12-envelope'/>
  <string_constant name='EnvelopeB4' nsstring='true' value='iso-b4-envelope'/>
  <string_constant name='EnvelopeB5' nsstring='true' value='iso-b5-envelope'/>
  <string_constant name='EnvelopeC3' nsstring='true' value='iso-c3-envelope'/>
  <string_constant name='EnvelopeC4' nsstring='true' value='iso-c4-envelope'/>
  <string_constant name='EnvelopeC5' nsstring='true' value='iso-c5-envelope'/>
  <string_constant name='EnvelopeC6' nsstring='true' value='iso-c6-envelope'/>
  <string_constant name='EnvelopeLong' nsstring='true' value='iso-designated-long-envelope'/>
  <string_constant name='EnvelopeMonarch' nsstring='true' value='monarch-envelope'/>
  <string_constant name='Folio' nsstring='true' value='folio'/>
  <string_constant name='Invoice' nsstring='true' value='invoice'/>
  <string_constant name='JISB0' nsstring='true' value='jis-b0'/>
  <string_constant name='JISB1' nsstring='true' value='jis-b1'/>
  <string_constant name='JISB10' nsstring='true' value='jis-b10'/>
  <string_constant name='JISB2' nsstring='true' value='jis-b2'/>
  <string_constant name='JISB3' nsstring='true' value='jis-b3'/>
  <string_constant name='JISB4' nsstring='true' value='jis-b4'/>
  <string_constant name='JISB5' nsstring='true' value='jis-b5'/>
  <string_constant name='JISB7' nsstring='true' value='jis-b7'/>
  <string_constant name='JISB8' nsstring='true' value='jis-b8'/>
  <string_constant name='JISB9' nsstring='true' value='jis-b9'/>
  <string_constant name='Ledger' nsstring='true' value='ledger'/>
  <string_constant name='Quarto' nsstring='true' value='quarto'/>
  <string_constant name='Tabloid' nsstring='true' value='tabloid'/>
  <string_constant name='USExecutiveEnvelope' nsstring='true' value='Executive'/>
  <string_constant name='USLegal' nsstring='true' value='na-legal'/>
  <string_constant name='USLetter' nsstring='true' value='na-letter'/>
  <string_constant name='iso10' nsstring='true' value='iso-10'/>
  <string_constant name='kIOModuleIntfIDStr' value='F4F7510C-C2DD-11D3-93A5-00050209D9C1'/>
  <string_constant name='kIOModuleTypeIDStr' value='EE5A5E5C-C2DD-11D3-84B5-00050209D9C1'/>
  <string_constant name='kPDFWorkFlowItemURLKey' nsstring='true' value='itemURL'/>
  <string_constant name='kPDFWorkflowDisplayNameKey' nsstring='true' value='displayName'/>
  <string_constant name='kPDFWorkflowForlderURLKey' nsstring='true' value='folderURL'/>
  <string_constant name='kPDFWorkflowItemsKey' nsstring='true' value='items'/>
  <string_constant name='kPM8BitChannelAttr' nsstring='true' value='Supports 8-bit Channel'/>
  <string_constant name='kPM8BitCommKey' nsstring='true' value='com.apple.print.PrinterInfo.PM8BitComm'/>
  <string_constant name='kPM8BitCommStr' value='com.apple.print.PrinterInfo.PM8BitComm'/>
  <string_constant name='kPMAdjustedPageRectKey' nsstring='true' value='com.apple.print.PageFormat.PMAdjustedPageRect'/>
  <string_constant name='kPMAdjustedPageRectStr' value='com.apple.print.PageFormat.PMAdjustedPageRect'/>
  <string_constant name='kPMAdjustedPaperRectKey' nsstring='true' value='com.apple.print.PageFormat.PMAdjustedPaperRect'/>
  <string_constant name='kPMAdjustedPaperRectStr' value='com.apple.print.PageFormat.PMAdjustedPaperRect'/>
  <string_constant name='kPMAppleTalkConnection' nsstring='true' value='AppleTalk'/>
  <string_constant name='kPMApplicationColorMatching' nsstring='true' value='AP_ApplicationColorMatching'/>
  <string_constant name='kPMApplicationColorMatchingStr' value='AP_ApplicationColorMatching'/>
  <string_constant name='kPMApplicationNameKey' nsstring='true' value='com.apple.print.JobInfo.PMApplicationName'/>
  <string_constant name='kPMApplicationNameStr' value='com.apple.print.JobInfo.PMApplicationName'/>
  <string_constant name='kPMBandingRequestedKey' nsstring='true' value='com.apple.print.ConverterSetup.PMBandingRequested'/>
  <string_constant name='kPMBandingRequestedStr' value='com.apple.print.ConverterSetup.PMBandingRequested'/>
  <string_constant name='kPMBiDiAttr' nsstring='true' value='Supports BiDirectional Communication'/>
  <string_constant name='kPMBluetoothConnection' nsstring='true' value='Bluetooth'/>
  <string_constant name='kPMBorderKey' nsstring='true' value='com.apple.print.PrintSettings.PMBorder'/>
  <string_constant name='kPMBorderStr' value='com.apple.print.PrintSettings.PMBorder'/>
  <string_constant name='kPMBorderTypeKey' nsstring='true' value='com.apple.print.PrintSettings.PMBorderType'/>
  <string_constant name='kPMBorderTypeStr' value='com.apple.print.PrintSettings.PMBorderType'/>
  <string_constant name='kPMCVColorSyncProfileIDKey' nsstring='true' value='com.apple.print.ConverterSetup.PMProfileID'/>
  <string_constant name='kPMCVColorSyncProfileIDStr' value='com.apple.print.ConverterSetup.PMProfileID'/>
  <string_constant name='kPMCollateAEProp' value='collating'/>
  <string_constant name='kPMColorDeviceIDKey' nsstring='true' value='com.apple.print.PrinterInfo.PMColorDeviceID'/>
  <string_constant name='kPMColorDeviceIDStr' value='com.apple.print.PrinterInfo.PMColorDeviceID'/>
  <string_constant name='kPMColorMatchingModeKey' nsstring='true' value='AP_ColorMatchingMode'/>
  <string_constant name='kPMColorMatchingModeStr' value='AP_ColorMatchingMode'/>
  <string_constant name='kPMColorModeKey' nsstring='true' value='com.apple.print.PrintSettings.PMColorMode'/>
  <string_constant name='kPMColorModeStr' value='com.apple.print.PrintSettings.PMColorMode'/>
  <string_constant name='kPMColorSpaceModelKey' nsstring='true' value='com.apple.print.PrintSettings.PMColorSpaceModel'/>
  <string_constant name='kPMColorSpaceModelStr' value='com.apple.print.PrintSettings.PMColorSpaceModel'/>
  <string_constant name='kPMColorSyncMatching' nsstring='true' value='AP_ColorSyncColorMatching'/>
  <string_constant name='kPMColorSyncMatchingStr' value='AP_ColorSyncColorMatching'/>
  <string_constant name='kPMColorSyncProfileIDKey' nsstring='true' value='com.apple.print.PrintSettings.PMColorSyncProfileID'/>
  <string_constant name='kPMColorSyncProfileIDStr' value='com.apple.print.PrintSettings.PMColorSyncProfileID'/>
  <string_constant name='kPMColorSyncProfilesKey' nsstring='true' value='com.apple.print.PrinterInfo.PMColorSyncProfiles'/>
  <string_constant name='kPMColorSyncProfilesStr' value='com.apple.print.PrinterInfo.PMColorSyncProfiles'/>
  <string_constant name='kPMCompiledPPDKey' nsstring='true' value='com.apple.print.PrinterInfo.PMCompiledPPD'/>
  <string_constant name='kPMCompiledPPDStr' value='com.apple.print.PrinterInfo.PMCompiledPPD'/>
  <string_constant name='kPMConstrainedPaperKey' nsstring='true' value='com.apple.print.PaperInfo.PMConstrainedPaper'/>
  <string_constant name='kPMConstrainedPaperStr' value='com.apple.print.PaperInfo.PMConstrainedPaper'/>
  <string_constant name='kPMConverterResHorizontalKey' nsstring='true' value='com.apple.print.ConverterSetup.PMConversionResHorizontal'/>
  <string_constant name='kPMConverterResHorizontalStr' value='com.apple.print.ConverterSetup.PMConversionResHorizontal'/>
  <string_constant name='kPMConverterResVerticalKey' nsstring='true' value='com.apple.print.ConverterSetup.PMConversionResVertcial'/>
  <string_constant name='kPMConverterResVerticalStr' value='com.apple.print.ConverterSetup.PMConversionResVertcial'/>
  <string_constant name='kPMConverterSetupPrelude' value='com.apple.print.ConverterSetup.'/>
  <string_constant name='kPMConverterSetupTicket' nsstring='true' value='com.apple.print.ConverterSetupTicket'/>
  <string_constant name='kPMCopiesAEProp' value='copies'/>
  <string_constant name='kPMCopiesKey' nsstring='true' value='com.apple.print.PrintSettings.PMCopies'/>
  <string_constant name='kPMCopiesStr' value='com.apple.print.PrintSettings.PMCopies'/>
  <string_constant name='kPMCopyCollateKey' nsstring='true' value='com.apple.print.PrintSettings.PMCopyCollate'/>
  <string_constant name='kPMCopyCollateStr' value='com.apple.print.PrintSettings.PMCopyCollate'/>
  <string_constant name='kPMCoverPageKey' nsstring='true' value='com.apple.print.PrintSettings.PMCoverPage'/>
  <string_constant name='kPMCoverPageSourceKey' nsstring='true' value='com.apple.print.PrintSettings.PMCoverPageSource'/>
  <string_constant name='kPMCoverPageSourceStr' value='com.apple.print.PrintSettings.PMCoverPageSource'/>
  <string_constant name='kPMCoverPageStr' value='com.apple.print.PrintSettings.PMCoverPage'/>
  <string_constant name='kPMCustomPageHeightKey' nsstring='true' value='com.apple.print.TemplateSpecific.CustomPaperHeight'/>
  <string_constant name='kPMCustomPageHeightStr' value='com.apple.print.TemplateSpecific.CustomPaperHeight'/>
  <string_constant name='kPMCustomPageMarginsKey' nsstring='true' value='com.apple.print.TemplateSpecific.PMCustomPageMargins'/>
  <string_constant name='kPMCustomPageMarginsStr' value='com.apple.print.TemplateSpecific.PMCustomPageMargins'/>
  <string_constant name='kPMCustomPageWidthKey' nsstring='true' value='com.apple.print.TemplateSpecific.CustomPaperWidth'/>
  <string_constant name='kPMCustomPageWidthStr' value='com.apple.print.TemplateSpecific.CustomPaperWidth'/>
  <string_constant name='kPMCustomPaperKey' nsstring='true' value='com.apple.print.PaperInfo.PMCustomPaper'/>
  <string_constant name='kPMCustomPaperStr' value='com.apple.print.PaperInfo.PMCustomPaper'/>
  <string_constant name='kPMDNSSDConnection' nsstring='true' value='DNSSD'/>
  <string_constant name='kPMDataFormatRaster' nsstring='true' value='application/vnd.apple.printing-raster'/>
  <string_constant name='kPMDefaultReverseOutputOrderKey' nsstring='true' value='com.apple.print.TemplateSpecific.PMDefaultReverseOutputOrder'/>
  <string_constant name='kPMDefaultReverseOutputOrderStr' value='com.apple.print.TemplateSpecific.PMDefaultReverseOutputOrder'/>
  <string_constant name='kPMDepthSwitchingEnabledKey' nsstring='true' value='com.apple.print.ConverterSetup.PMDepthSwitching'/>
  <string_constant name='kPMDepthSwitchingEnabledStr' value='com.apple.print.ConverterSetup.PMDepthSwitching'/>
  <string_constant name='kPMDescriptionFileKey' nsstring='true' value='com.apple.print.PrinterInfo.PMDescriptionFile'/>
  <string_constant name='kPMDescriptionFileStr' value='com.apple.print.PrinterInfo.PMDescriptionFile'/>
  <string_constant name='kPMDestinationPrinterIDKey' nsstring='true' value='DestinationPrinterID'/>
  <string_constant name='kPMDestinationPrinterIDStr' value='DestinationPrinterID'/>
  <string_constant name='kPMDestinationTicket' nsstring='true' value='com.apple.print.DestinationTicket'/>
  <string_constant name='kPMDestinationTypeKey' nsstring='true' value='com.apple.print.PrintSettings.PMDestinationType'/>
  <string_constant name='kPMDestinationTypeStr' value='com.apple.print.PrintSettings.PMDestinationType'/>
  <string_constant name='kPMDirServicesConnection' nsstring='true' value='Directory Services'/>
  <string_constant name='kPMDocumentFormatDefault' nsstring='true' value='com.apple.documentformat.default'/>
  <string_constant name='kPMDocumentFormatPDF' nsstring='true' value='application/pdf'/>
  <string_constant name='kPMDocumentFormatPICT' nsstring='true' value='application/vnd.apple.printing-pict'/>
  <string_constant name='kPMDocumentFormatPICTPS' nsstring='true' value='application/vnd.apple.printing-pict-ps'/>
  <string_constant name='kPMDocumentFormatPICTPSwPSNormalizer' nsstring='true' value='application/vnd.apple.printing-pict-ps-viapsnormalizer'/>
  <string_constant name='kPMDocumentFormatPostScript' nsstring='true' value='application/postscript'/>
  <string_constant name='kPMDocumentTicket' nsstring='true' value='com.apple.print.DocumentTicket'/>
  <string_constant name='kPMDocumentTicketPrelude' value='com.apple.print.DocumentTicket.'/>
  <string_constant name='kPMDoesCopiesKey' nsstring='true' value='com.apple.print.PrinterInfo.PMDoesCopies'/>
  <string_constant name='kPMDoesCopiesStr' value='com.apple.print.PrinterInfo.PMDoesCopies'/>
  <string_constant name='kPMDoesCopyCollateKey' nsstring='true' value='com.apple.print.PrinterInfo.PMDoesCopyCollate'/>
  <string_constant name='kPMDoesCopyCollateStr' value='com.apple.print.PrinterInfo.PMDoesCopyCollate'/>
  <string_constant name='kPMDoesReverseOrderKey' nsstring='true' value='com.apple.print.PrinterInfo.PMDoesReverseOrder'/>
  <string_constant name='kPMDoesReverseOrderStr' value='com.apple.print.PrinterInfo.PMDoesReverseOrder'/>
  <string_constant name='kPMDrawingResHorizontalKey' nsstring='true' value='com.apple.print.PageFormat.PMHorizontalRes'/>
  <string_constant name='kPMDrawingResHorizontalStr' value='com.apple.print.PageFormat.PMHorizontalRes'/>
  <string_constant name='kPMDrawingResVerticalKey' nsstring='true' value='com.apple.print.PageFormat.PMVerticalRes'/>
  <string_constant name='kPMDrawingResVerticalStr' value='com.apple.print.PageFormat.PMVerticalRes'/>
  <string_constant name='kPMDriverCreatorKey' nsstring='true' value='com.apple.print.PrinterInfo.PMDriverCreator'/>
  <string_constant name='kPMDriverCreatorStr' value='com.apple.print.PrinterInfo.PMDriverCreator'/>
  <string_constant name='kPMDuplexingKey' nsstring='true' value='com.apple.print.PrintSettings.PMDuplexing'/>
  <string_constant name='kPMDuplexingRequiresFlippedMarginAdjustKey' nsstring='true' value='com.apple.print.PrintSettings.PMDuplexingRequiresFlippedMargins'/>
  <string_constant name='kPMDuplexingRequiresFlippedMarginAdjustStr' value='com.apple.print.PrintSettings.PMDuplexingRequiresFlippedMargins'/>
  <string_constant name='kPMDuplexingStr' value='com.apple.print.PrintSettings.PMDuplexing'/>
  <string_constant name='kPMErrorCodeKey' nsstring='true' value='com.apple.printing.ErrorCode'/>
  <string_constant name='kPMErrorExplanationKey' nsstring='true' value='com.apple.printing.ErrorExplanation'/>
  <string_constant name='kPMErrorHandlingAEProp' value='error handling'/>
  <string_constant name='kPMErrorTextKey' nsstring='true' value='com.apple.printing.ErrorText'/>
  <string_constant name='kPMEventCodeKey' nsstring='true' value='com.apple.printing.EventCode'/>
  <string_constant name='kPMEventContextKey' nsstring='true' value='com.apple.printing.EventContext'/>
  <string_constant name='kPMFaxCoverSheetKey' nsstring='true' value='faxCoverSheet'/>
  <string_constant name='kPMFaxCoverSheetMessageKey' nsstring='true' value='faxCoverSheetMessage'/>
  <string_constant name='kPMFaxCoverSheetMessageStr' value='faxCoverSheetMessage'/>
  <string_constant name='kPMFaxCoverSheetStr' value='faxCoverSheet'/>
  <string_constant name='kPMFaxDateLabelKey' nsstring='true' value='faxDateLabel'/>
  <string_constant name='kPMFaxDateLabelStr' value='faxDateLabel'/>
  <string_constant name='kPMFaxFromLabelKey' nsstring='true' value='faxFromLabel'/>
  <string_constant name='kPMFaxFromLabelStr' value='faxFromLabel'/>
  <string_constant name='kPMFaxNumberAEProp' value='fax number'/>
  <string_constant name='kPMFaxNumberKey' nsstring='true' value='phone'/>
  <string_constant name='kPMFaxNumberStr' value='phone'/>
  <string_constant name='kPMFaxPrefixKey' nsstring='true' value='faxPrefix'/>
  <string_constant name='kPMFaxPrefixStr' value='faxPrefix'/>
  <string_constant name='kPMFaxSheetsLabelKey' nsstring='true' value='faxSheetsLabel'/>
  <string_constant name='kPMFaxSheetsLabelStr' value='faxSheetsLabel'/>
  <string_constant name='kPMFaxSubjectKey' nsstring='true' value='faxSubject'/>
  <string_constant name='kPMFaxSubjectLabelKey' nsstring='true' value='faxSubjectLabel'/>
  <string_constant name='kPMFaxSubjectLabelStr' value='faxSubjectLabel'/>
  <string_constant name='kPMFaxSubjectStr' value='faxSubject'/>
  <string_constant name='kPMFaxToKey' nsstring='true' value='faxTo'/>
  <string_constant name='kPMFaxToLabelKey' nsstring='true' value='faxToLabel'/>
  <string_constant name='kPMFaxToLabelStr' value='faxToLabel'/>
  <string_constant name='kPMFaxToStr' value='faxTo'/>
  <string_constant name='kPMFaxToneDialingKey' nsstring='true' value='faxToneDialing'/>
  <string_constant name='kPMFaxToneDialingStr' value='faxToneDialing'/>
  <string_constant name='kPMFaxUseSoundKey' nsstring='true' value='faxUseSound'/>
  <string_constant name='kPMFaxUseSoundStr' value='faxUseSound'/>
  <string_constant name='kPMFaxWaitForDialToneKey' nsstring='true' value='faxWaitForDialTone'/>
  <string_constant name='kPMFaxWaitForDialToneStr' value='faxWaitForDialTone'/>
  <string_constant name='kPMFeatureAEProp' value='printer features'/>
  <string_constant name='kPMFirstPageAEProp' value='starting page'/>
  <string_constant name='kPMFirstPageKey' nsstring='true' value='com.apple.print.PrintSettings.PMFirstPage'/>
  <string_constant name='kPMFirstPageStr' value='com.apple.print.PrintSettings.PMFirstPage'/>
  <string_constant name='kPMFormattingPrinterKey' nsstring='true' value='com.apple.print.PageFormat.FormattingPrinter'/>
  <string_constant name='kPMFormattingPrinterStr' value='com.apple.print.PageFormat.FormattingPrinter'/>
  <string_constant name='kPMGraphicsContextCoreGraphics' nsstring='true' value='com.apple.graphicscontext.coregraphics'/>
  <string_constant name='kPMGraphicsContextDefault' nsstring='true' value='com.apple.graphicscontext.default'/>
  <string_constant name='kPMGraphicsContextQuickdraw' nsstring='true' value='com.apple.graphicscontext.quickdraw'/>
  <string_constant name='kPMHasCustomDuplexPDEKey' nsstring='true' value='com.apple.print.PrintSettings.HasCustomDuplexPDE'/>
  <string_constant name='kPMHasCustomDuplexPDEStr' value='com.apple.print.PrintSettings.HasCustomDuplexPDE'/>
  <string_constant name='kPMInputFileTypeListKey' nsstring='true' value='com.apple.print.PrinterInfo.PMInputFileTypeList'/>
  <string_constant name='kPMInputFileTypeListStr' value='com.apple.print.PrinterInfo.PMInputFileTypeList'/>
  <string_constant name='kPMInstallableOptionKey' nsstring='true' value='com.apple.print.PrinterInfo.PMInstallableOption'/>
  <string_constant name='kPMInstallableOptionStr' value='com.apple.print.PrinterInfo.PMInstallableOption'/>
  <string_constant name='kPMIsBinaryOKKey' nsstring='true' value='com.apple.print.PrinterInfo.PMIsBinaryOK'/>
  <string_constant name='kPMIsBinaryOKStr' value='com.apple.print.PrinterInfo.PMIsBinaryOK'/>
  <string_constant name='kPMJobHoldUntilTimeKey' nsstring='true' value='com.apple.print.PrintSettings.PMJobHoldUntilTime'/>
  <string_constant name='kPMJobHoldUntilTimeStr' value='com.apple.print.PrintSettings.PMJobHoldUntilTime'/>
  <string_constant name='kPMJobIDAttr' nsstring='true' value='Supports JobID'/>
  <string_constant name='kPMJobNameKey' nsstring='true' value='com.apple.print.JobInfo.PMJobName'/>
  <string_constant name='kPMJobNameStr' value='com.apple.print.JobInfo.PMJobName'/>
  <string_constant name='kPMJobOwnerKey' nsstring='true' value='com.apple.print.JobInfo.PMJobOwner'/>
  <string_constant name='kPMJobOwnerStr' value='com.apple.print.JobInfo.PMJobOwner'/>
  <string_constant name='kPMJobPriorityKey' nsstring='true' value='com.apple.print.PrintSettings.PMJobPriority'/>
  <string_constant name='kPMJobPriorityStr' value='com.apple.print.PrintSettings.PMJobPriority'/>
  <string_constant name='kPMJobStateKey' nsstring='true' value='com.apple.print.PrintSettings.PMJobState'/>
  <string_constant name='kPMJobStateStr' value='com.apple.print.PrintSettings.PMJobState'/>
  <string_constant name='kPMJobTemplateKey' nsstring='true' value='com.apple.print.JobInfo.PMJobTemplate'/>
  <string_constant name='kPMJobTemplateStr' value='com.apple.print.JobInfo.PMJobTemplate'/>
  <string_constant name='kPMJobTicket' nsstring='true' value='com.apple.print.JobTicket'/>
  <string_constant name='kPMJobTicketPrelude' value='com.apple.print.JobInfo.'/>
  <string_constant name='kPMLPRConnection' nsstring='true' value='LPR'/>
  <string_constant name='kPMLastErrorStrAttr' nsstring='true' value='Last Error'/>
  <string_constant name='kPMLastPageAEProp' value='ending page'/>
  <string_constant name='kPMLastPageKey' nsstring='true' value='com.apple.print.PrintSettings.PMLastPage'/>
  <string_constant name='kPMLastPageStr' value='com.apple.print.PrintSettings.PMLastPage'/>
  <string_constant name='kPMLayoutAcrossAEProp' value='pages across'/>
  <string_constant name='kPMLayoutColumnsKey' nsstring='true' value='com.apple.print.PrintSettings.PMLayoutColumns'/>
  <string_constant name='kPMLayoutColumnsStr' value='com.apple.print.PrintSettings.PMLayoutColumns'/>
  <string_constant name='kPMLayoutDirectionKey' nsstring='true' value='com.apple.print.PrintSettings.PMLayoutDirection'/>
  <string_constant name='kPMLayoutDirectionStr' value='com.apple.print.PrintSettings.PMLayoutDirection'/>
  <string_constant name='kPMLayoutDownAEProp' value='pages down'/>
  <string_constant name='kPMLayoutNUpKey' nsstring='true' value='com.apple.print.PrintSettings.PMLayoutNUp'/>
  <string_constant name='kPMLayoutNUpStr' value='com.apple.print.PrintSettings.PMLayoutNUp'/>
  <string_constant name='kPMLayoutRowsKey' nsstring='true' value='com.apple.print.PrintSettings.PMLayoutRows'/>
  <string_constant name='kPMLayoutRowsStr' value='com.apple.print.PrintSettings.PMLayoutRows'/>
  <string_constant name='kPMLayoutTileOrientationKey' nsstring='true' value='com.apple.print.PrintSettings.PMLayoutTileOrientation'/>
  <string_constant name='kPMLayoutTileOrientationStr' value='com.apple.print.PrintSettings.PMLayoutTileOrientation'/>
  <string_constant name='kPMMakeAndModelNameKey' nsstring='true' value='com.apple.print.PrinterInfo.PMMakeAndModelName'/>
  <string_constant name='kPMMakeAndModelNameStr' value='com.apple.print.PrinterInfo.PMMakeAndModelName'/>
  <string_constant name='kPMMatchPaperKey' nsstring='true' value='com.apple.print.PaperInfo.PMMatchPaper'/>
  <string_constant name='kPMMatchPaperStr' value='com.apple.print.PaperInfo.PMMatchPaper'/>
  <string_constant name='kPMModuleInfoTicket' nsstring='true' value='com.apple.print.ModuleInfoTicket'/>
  <string_constant name='kPMOutputFilenameKey' nsstring='true' value='com.apple.print.PrintSettings.PMOutputFilename'/>
  <string_constant name='kPMOutputFilenameStr' value='com.apple.print.PrintSettings.PMOutputFilename'/>
  <string_constant name='kPMOutputOrderKey' nsstring='true' value='OutputOrder'/>
  <string_constant name='kPMOutputOrderStr' value='OutputOrder'/>
  <string_constant name='kPMOutputTypeKey' nsstring='true' value='com.apple.print.JobInfo.PMOutputType'/>
  <string_constant name='kPMOutputTypeListKey' nsstring='true' value='com.apple.print.PrinterInfo.PMOutputTypeList'/>
  <string_constant name='kPMOutputTypeListStr' value='com.apple.print.PrinterInfo.PMOutputTypeList'/>
  <string_constant name='kPMOutputTypeStr' value='com.apple.print.JobInfo.PMOutputType'/>
  <string_constant name='kPMPPDDescriptionType' nsstring='true' value='PMPPDDescriptionType'/>
  <string_constant name='kPMPPDNameKey' nsstring='true' value='com.apple.print.PrinterInfo.PPD'/>
  <string_constant name='kPMPPDNameStr' value='com.apple.print.PrinterInfo.PPD'/>
  <string_constant name='kPMPPDPaperNameKey' nsstring='true' value='com.apple.print.PaperInfo.ppd.PMPaperName'/>
  <string_constant name='kPMPPDPaperNameStr' value='com.apple.print.PaperInfo.ppd.PMPaperName'/>
  <string_constant name='kPMPSErrorHandlerKey' nsstring='true' value='com.apple.print.PrintSettings.PMPSErrorHandler'/>
  <string_constant name='kPMPSErrorHandlerStr' value='com.apple.print.PrintSettings.PMPSErrorHandler'/>
  <string_constant name='kPMPSErrorOnScreenKey' nsstring='true' value='com.apple.print.PrintSettings.PMPSErrorOnScreen'/>
  <string_constant name='kPMPSErrorOnScreenStr' value='com.apple.print.PrintSettings.PMPSErrorOnScreen'/>
  <string_constant name='kPMPSTraySwitchKey' nsstring='true' value='com.apple.print.PrintSettings.PMPSTraySwitch'/>
  <string_constant name='kPMPSTraySwitchStr' value='com.apple.print.PrintSettings.PMPSTraySwitch'/>
  <string_constant name='kPMPageBackupRecordDataKey' nsstring='true' value='com.apple.print.PageFormat.BackupPrintRecord'/>
  <string_constant name='kPMPageBackupRecordDataStr' value='com.apple.print.PageFormat.BackupPrintRecord'/>
  <string_constant name='kPMPageBackupRecordHdlKey' nsstring='true' value='com.apple.print.PageFormat.BackupPrintRecordHandle'/>
  <string_constant name='kPMPageBackupRecordHdlStr' value='com.apple.print.PageFormat.BackupPrintRecordHandle'/>
  <string_constant name='kPMPageCustomDialogHdlKey' nsstring='true' value='com.apple.print.PageFormat.CustomDialogRecord'/>
  <string_constant name='kPMPageCustomDialogHdlStr' value='com.apple.print.PageFormat.CustomDialogRecord'/>
  <string_constant name='kPMPageFormatPrelude' value='com.apple.print.PageFormat.'/>
  <string_constant name='kPMPageFormatTicket' nsstring='true' value='com.apple.print.PageFormatTicket'/>
  <string_constant name='kPMPageOrientationKey' nsstring='true' value='com.apple.print.PageFormat.PMOrientation'/>
  <string_constant name='kPMPageOrientationStr' value='com.apple.print.PageFormat.PMOrientation'/>
  <string_constant name='kPMPageRangeKey' nsstring='true' value='com.apple.print.PrintSettings.PMPageRange'/>
  <string_constant name='kPMPageRangeStr' value='com.apple.print.PrintSettings.PMPageRange'/>
  <string_constant name='kPMPageScalingHorizontalKey' nsstring='true' value='com.apple.print.PageFormat.PMScaling'/>
  <string_constant name='kPMPageScalingHorizontalStr' value='com.apple.print.PageFormat.PMScaling'/>
  <string_constant name='kPMPageScalingVerticalKey' nsstring='true' value='com.apple.print.PageFormat.PMVerticalScaling'/>
  <string_constant name='kPMPageScalingVerticalStr' value='com.apple.print.PageFormat.PMVerticalScaling'/>
  <string_constant name='kPMPageSetKey' nsstring='true' value='page-set'/>
  <string_constant name='kPMPageSetStr' value='page-set'/>
  <string_constant name='kPMPageTicket' nsstring='true' value='com.apple.print.PageTicket'/>
  <string_constant name='kPMPageTicketPrelude' value='com.apple.print.PageTicket.'/>
  <string_constant name='kPMPageToPaperMappingAllowScalingUpKey' nsstring='true' value='com.apple.print.PageToPaperMappingAllowScalingUp'/>
  <string_constant name='kPMPageToPaperMappingAllowScalingUpStr' value='com.apple.print.PageToPaperMappingAllowScalingUp'/>
  <string_constant name='kPMPageToPaperMappingTypeKey' nsstring='true' value='com.apple.print.PageToPaperMappingType'/>
  <string_constant name='kPMPageToPaperMappingTypeStr' value='com.apple.print.PageToPaperMappingType'/>
  <string_constant name='kPMPageToPaperMediaNameKey' nsstring='true' value='com.apple.print.PageToPaperMappingMediaName'/>
  <string_constant name='kPMPageToPaperMediaNameStr' value='com.apple.print.PageToPaperMappingMediaName'/>
  <string_constant name='kPMPaperInfoList' nsstring='true' value='com.apple.print.TemplateSpecific.PMTemplatePaperInfoTicket'/>
  <string_constant name='kPMPaperInfoListStr' value='com.apple.print.TemplateSpecific.PMTemplatePaperInfoTicket'/>
  <string_constant name='kPMPaperInfoPrelude' value='com.apple.print.PaperInfo.'/>
  <string_constant name='kPMPaperInfoTicket' nsstring='true' value='com.apple.print.PaperInfoTicket'/>
  <string_constant name='kPMPaperNameKey' nsstring='true' value='com.apple.print.PaperInfo.PMPaperName'/>
  <string_constant name='kPMPaperNameStr' value='com.apple.print.PaperInfo.PMPaperName'/>
  <string_constant name='kPMPaperSourceKey' nsstring='true' value='com.apple.print.PrintSettings.PMPaperSource'/>
  <string_constant name='kPMPaperSourceStr' value='com.apple.print.PrintSettings.PMPaperSource'/>
  <string_constant name='kPMPaperTypeKey' nsstring='true' value='com.apple.print.PrintSettings.PMPaperType'/>
  <string_constant name='kPMPaperTypeStr' value='com.apple.print.PrintSettings.PMPaperType'/>
  <string_constant name='kPMPhaseKey' nsstring='true' value='com.apple.print.JobInfo.PMPrintingPhase'/>
  <string_constant name='kPMPhaseStr' value='com.apple.print.JobInfo.PMPrintingPhase'/>
  <string_constant name='kPMPostScriptLevelKey' nsstring='true' value='com.apple.print.PrinterInfo.PMPostScriptLevel'/>
  <string_constant name='kPMPostScriptLevelStr' value='com.apple.print.PrinterInfo.PMPostScriptLevel'/>
  <string_constant name='kPMPostScriptRevisionKey' nsstring='true' value='com.apple.print.PrinterInfo.PMPSRevision'/>
  <string_constant name='kPMPostScriptRevisionStr' value='com.apple.print.PrinterInfo.PMPSRevision'/>
  <string_constant name='kPMPostScriptTrueTypeFontRasterizerKey' nsstring='true' value='com.apple.print.PrinterInfo.PMPSTTRasterizer'/>
  <string_constant name='kPMPostScriptTrueTypeFontRasterizerStr' value='com.apple.print.PrinterInfo.PMPSTTRasterizer'/>
  <string_constant name='kPMPostScriptVersionKey' nsstring='true' value='com.apple.print.PrinterInfo.PMPSVersion'/>
  <string_constant name='kPMPostScriptVersionStr' value='com.apple.print.PrinterInfo.PMPSVersion'/>
  <string_constant name='kPMPreviewKey' nsstring='true' value='com.apple.print.PrintSettings.PMPreview'/>
  <string_constant name='kPMPreviewStr' value='com.apple.print.PrintSettings.PMPreview'/>
  <string_constant name='kPMPrimaryPaperFeedKey' nsstring='true' value='com.apple.print.PrintSettings.PMPrimaryPaperFeed'/>
  <string_constant name='kPMPrimaryPaperFeedStr' value='com.apple.print.PrintSettings.PMPrimaryPaperFeed'/>
  <string_constant name='kPMPrintBackupRecordDataKey' nsstring='true' value='com.apple.print.PrintSettings.BackupPrintRecord'/>
  <string_constant name='kPMPrintBackupRecordDataStr' value='com.apple.print.PrintSettings.BackupPrintRecord'/>
  <string_constant name='kPMPrintBackupRecordHdlKey' nsstring='true' value='com.apple.print.PrintSettings.BackupPrintRecordHandle'/>
  <string_constant name='kPMPrintBackupRecordHdlStr' value='com.apple.print.PrintSettings.BackupPrintRecordHandle'/>
  <string_constant name='kPMPrintCustomDialogHdlKey' nsstring='true' value='com.apple.print.PrintSettings.CustomDialogRecord'/>
  <string_constant name='kPMPrintCustomDialogHdlStr' value='com.apple.print.PrintSettings.CustomDialogRecord'/>
  <string_constant name='kPMPrintOrientationKey' nsstring='true' value='com.apple.print.PrintSettings.PMOrientation'/>
  <string_constant name='kPMPrintOrientationStr' value='com.apple.print.PrintSettings.PMOrientation'/>
  <string_constant name='kPMPrintScalingAlignmentKey' nsstring='true' value='com.apple.print.PrintSettings.PMScalingAlignment'/>
  <string_constant name='kPMPrintScalingAlignmentStr' value='com.apple.print.PrintSettings.PMScalingAlignment'/>
  <string_constant name='kPMPrintScalingHorizontalKey' nsstring='true' value='com.apple.print.PrintSettings.PMScaling'/>
  <string_constant name='kPMPrintScalingHorizontalStr' value='com.apple.print.PrintSettings.PMScaling'/>
  <string_constant name='kPMPrintScalingVerticalKey' nsstring='true' value='com.apple.print.PrintSettings.PMVerticalScaling'/>
  <string_constant name='kPMPrintScalingVerticalStr' value='com.apple.print.PrintSettings.PMVerticalScaling'/>
  <string_constant name='kPMPrintSettingsPrelude' value='com.apple.print.PrintSettings.'/>
  <string_constant name='kPMPrintSettingsTicket' nsstring='true' value='com.apple.print.PrintSettingsTicket'/>
  <string_constant name='kPMPrintTimeAEProp' value='requested print time'/>
  <string_constant name='kPMPrinterAddressKey' nsstring='true' value='com.apple.print.PrinterInfo.PMPrinterAddress'/>
  <string_constant name='kPMPrinterAddressStr' value='com.apple.print.PrinterInfo.PMPrinterAddress'/>
  <string_constant name='kPMPrinterBrowserDeviceIDKey' nsstring='true' value='Printer Browser DeviceID'/>
  <string_constant name='kPMPrinterBrowserIconsKey' nsstring='true' value='Printer Browser Icons'/>
  <string_constant name='kPMPrinterBrowserInfoKey' nsstring='true' value='Printer Browser Info'/>
  <string_constant name='kPMPrinterBrowserKindKey' nsstring='true' value='Printer Browser Kind'/>
  <string_constant name='kPMPrinterFontKey' nsstring='true' value='com.apple.print.PrinterInfo.Printer Fonts'/>
  <string_constant name='kPMPrinterFontStr' value='com.apple.print.PrinterInfo.Printer Fonts'/>
  <string_constant name='kPMPrinterInfoPrelude' value='com.apple.print.PrinterInfo.'/>
  <string_constant name='kPMPrinterInfoTicket' nsstring='true' value='com.apple.print.PrinterInfoTicket'/>
  <string_constant name='kPMPrinterIsPostScriptDriverKey' nsstring='true' value='com.apple.print.PrinterInfo.PMIsPostScriptDriver'/>
  <string_constant name='kPMPrinterIsPostScriptDriverStr' value='com.apple.print.PrinterInfo.PMIsPostScriptDriver'/>
  <string_constant name='kPMPrinterLongNameKey' nsstring='true' value='com.apple.print.PrinterInfo.PMPrinterLongName'/>
  <string_constant name='kPMPrinterLongNameStr' value='com.apple.print.PrinterInfo.PMPrinterLongName'/>
  <string_constant name='kPMPrinterMaxResKey' nsstring='true' value='com.apple.print.PrinterInfo.PMPrinterMaxRes'/>
  <string_constant name='kPMPrinterMaxResStr' value='com.apple.print.PrinterInfo.PMPrinterMaxRes'/>
  <string_constant name='kPMPrinterMinResKey' nsstring='true' value='com.apple.print.PrinterInfo.PMPrinterMinRes'/>
  <string_constant name='kPMPrinterMinResStr' value='com.apple.print.PrinterInfo.PMPrinterMinRes'/>
  <string_constant name='kPMPrinterModuleFormatKey' nsstring='true' value='com.apple.print.DocumentTicket.PMDocPMInputFormat'/>
  <string_constant name='kPMPrinterModuleFormatStr' value='com.apple.print.DocumentTicket.PMDocPMInputFormat'/>
  <string_constant name='kPMPrinterShortNameKey' nsstring='true' value='com.apple.print.PrinterInfo.PMPrinterShortName'/>
  <string_constant name='kPMPrinterShortNameStr' value='com.apple.print.PrinterInfo.PMPrinterShortName'/>
  <string_constant name='kPMPrinterSuggestedResKey' nsstring='true' value='com.apple.print.PrinterInfo.PMPrinterSuggestedRes'/>
  <string_constant name='kPMPrinterSuggestedResStr' value='com.apple.print.PrinterInfo.PMPrinterSuggestedRes'/>
  <string_constant name='kPMPrinterURI' nsstring='true' value='Printer URI'/>
  <string_constant name='kPMQualityKey' nsstring='true' value='com.apple.print.PrintSettings.PMQuality'/>
  <string_constant name='kPMQualityStr' value='com.apple.print.PrintSettings.PMQuality'/>
  <string_constant name='kPMRequestedPixelFormatKey' nsstring='true' value='com.apple.print.ConverterSetup.PMPixelFormat'/>
  <string_constant name='kPMRequestedPixelFormatStr' value='com.apple.print.ConverterSetup.PMPixelFormat'/>
  <string_constant name='kPMRequestedPixelLayoutKey' nsstring='true' value='com.apple.print.ConverterSetup.PMPixelLayout'/>
  <string_constant name='kPMRequestedPixelLayoutStr' value='com.apple.print.ConverterSetup.PMPixelLayout'/>
  <string_constant name='kPMRequiredBandHeightKey' nsstring='true' value='com.apple.print.ConverterSetup.PMRequiredBandHeight'/>
  <string_constant name='kPMRequiredBandHeightStr' value='com.apple.print.ConverterSetup.PMRequiredBandHeight'/>
  <string_constant name='kPMSecondaryPaperFeedKey' nsstring='true' value='com.apple.print.PrintSettings.PMSecondaryPaperFeed'/>
  <string_constant name='kPMSecondaryPaperFeedStr' value='com.apple.print.PrintSettings.PMSecondaryPaperFeed'/>
  <string_constant name='kPMSpoolFormatKey' nsstring='true' value='com.apple.print.DocumentTicket.PMSpoolFormat'/>
  <string_constant name='kPMSpoolFormatStr' value='com.apple.print.DocumentTicket.PMSpoolFormat'/>
  <string_constant name='kPMSupportsColorKey' nsstring='true' value='com.apple.print.PrinterInfo.PMSupportsColor'/>
  <string_constant name='kPMSupportsColorStr' value='com.apple.print.PrinterInfo.PMSupportsColor'/>
  <string_constant name='kPMSupportsVendorMatchingModeKey' nsstring='true' value='APSupportsCustomColorMatching'/>
  <string_constant name='kPMSupportsVendorMatchingModeStr' value='APSupportsCustomColorMatching'/>
  <string_constant name='kPMTStatusAttr' nsstring='true' value='Supports T Status Request'/>
  <string_constant name='kPMTargetPrinterAEProp' value='target printer'/>
  <string_constant name='kPMTemplatePrelude' value='com.apple.print.TemplateSpecific.'/>
  <string_constant name='kPMTicketList' nsstring='true' value='com.apple.print.TicketList'/>
  <string_constant name='kPMTicketListPrelude' value='com.apple.print.TicketList.'/>
  <string_constant name='kPMTimeoutAttr' nsstring='true' value='Supports Timeout'/>
  <string_constant name='kPMTotalBeginPagesKey' nsstring='true' value='com.apple.print.PrintSettings.PMTotalBeginPages'/>
  <string_constant name='kPMTotalBeginPagesStr' value='com.apple.print.PrintSettings.PMTotalBeginPages'/>
  <string_constant name='kPMTotalMemAvailableKey' nsstring='true' value='com.apple.print.PrinterInfo.PMTotalMemAvailable'/>
  <string_constant name='kPMTotalMemAvailableStr' value='com.apple.print.PrinterInfo.PMTotalMemAvailable'/>
  <string_constant name='kPMTotalMemInstalledKey' nsstring='true' value='com.apple.print.PrinterInfo.PMTotalMemInstalled'/>
  <string_constant name='kPMTotalMemInstalledStr' value='com.apple.print.PrinterInfo.PMTotalMemInstalled'/>
  <string_constant name='kPMTotalSidesImagedKey' nsstring='true' value='com.apple.print.PrintSettings.PMTotalSidesImaged'/>
  <string_constant name='kPMTotalSidesImagedStr' value='com.apple.print.PrintSettings.PMTotalSidesImaged'/>
  <string_constant name='kPMTransparentByteRange' nsstring='true' value='Supports Transparent Byte Range'/>
  <string_constant name='kPMTransparentCommKey' nsstring='true' value='com.apple.print.PrinterInfo.PMTransparentComm'/>
  <string_constant name='kPMTransparentCommStr' value='com.apple.print.PrinterInfo.PMTransparentComm'/>
  <string_constant name='kPMUSBConnection' nsstring='true' value='USB'/>
  <string_constant name='kPMUnadjustedPageRectKey' nsstring='true' value='com.apple.print.PaperInfo.PMUnadjustedPageRect'/>
  <string_constant name='kPMUnadjustedPageRectStr' value='com.apple.print.PaperInfo.PMUnadjustedPageRect'/>
  <string_constant name='kPMUnadjustedPaperRectKey' nsstring='true' value='com.apple.print.PaperInfo.PMUnadjustedPaperRect'/>
  <string_constant name='kPMUnadjustedPaperRectStr' value='com.apple.print.PaperInfo.PMUnadjustedPaperRect'/>
  <string_constant name='kPMUserLanguageKey' nsstring='true' value='com.apple.print.JobInfo.PMUserLanguage'/>
  <string_constant name='kPMUserLanguageStr' value='com.apple.print.JobInfo.PMUserLanguage'/>
  <string_constant name='kPMVendorColorMatching' nsstring='true' value='AP_VendorColorMatching'/>
  <string_constant name='kPMVendorColorMatchingStr' value='AP_VendorColorMatching'/>
  <string_constant name='kPMWhiteSkippingEnabledKey' nsstring='true' value='com.apple.print.ConverterSetup.PMWhiteSpaceSkipping'/>
  <string_constant name='kPMWhiteSkippingEnabledStr' value='com.apple.print.ConverterSetup.PMWhiteSpaceSkipping'/>
  <string_constant name='kPModuleIntfIDStr' value='5EDEC4FA-D5B5-11D3-AAF2-00050209D9C1'/>
  <string_constant name='kPModuleTypeIDStr' value='5D69ED5E-D5B5-11D3-9EFF-00050209D9C1'/>
  <string_constant name='kPSInjectionPageKey' nsstring='true' value='page'/>
  <string_constant name='kPSInjectionPlacementKey' nsstring='true' value='place'/>
  <string_constant name='kPSInjectionPostScriptKey' nsstring='true' value='psdata'/>
  <string_constant name='kPSInjectionSectionKey' nsstring='true' value='section'/>
  <string_constant name='kPSInjectionSubSectionKey' nsstring='true' value='subsection'/>
  <enum name='PM_USE_SESSION_APIS' value='1'/>
  <enum name='kAllPPDDomains' value='1'/>
  <enum name='kCUPSPPDDomain' value='6'/>
  <enum name='kDoManual' value='4051'/>
  <enum name='kIOMBaseVersionMajor' value='1'/>
  <enum name='kIOMBaseVersionMinor' value='0'/>
  <enum name='kIOMBuildVersionMajor' value='1'/>
  <enum name='kIOMBuildVersionMinor' value='0'/>
  <enum name='kInjectionSectCoverPage' value='2'/>
  <enum name='kInjectionSectJob' value='1'/>
  <enum name='kInjectionSubBeginDefaults' value='12'/>
  <enum name='kInjectionSubBeginFont' value='25'/>
  <enum name='kInjectionSubBeginPageSetup' value='30'/>
  <enum name='kInjectionSubBeginProlog' value='8'/>
  <enum name='kInjectionSubBeginResource' value='27'/>
  <enum name='kInjectionSubBeginSetup' value='10'/>
  <enum name='kInjectionSubBoundingBox' value='3'/>
  <enum name='kInjectionSubDocCustomColors' value='19'/>
  <enum name='kInjectionSubDocFonts' value='14'/>
  <enum name='kInjectionSubDocNeededFonts' value='15'/>
  <enum name='kInjectionSubDocNeededRes' value='17'/>
  <enum name='kInjectionSubDocProcessColors' value='20'/>
  <enum name='kInjectionSubDocSuppliedFonts' value='16'/>
  <enum name='kInjectionSubDocSuppliedRes' value='18'/>
  <enum name='kInjectionSubEOF' value='24'/>
  <enum name='kInjectionSubEndComments' value='4'/>
  <enum name='kInjectionSubEndDefaults' value='13'/>
  <enum name='kInjectionSubEndFont' value='26'/>
  <enum name='kInjectionSubEndPageSetup' value='31'/>
  <enum name='kInjectionSubEndProlog' value='9'/>
  <enum name='kInjectionSubEndResource' value='28'/>
  <enum name='kInjectionSubEndSetup' value='11'/>
  <enum name='kInjectionSubOrientation' value='5'/>
  <enum name='kInjectionSubPSAdobe' value='1'/>
  <enum name='kInjectionSubPSAdobeEPS' value='2'/>
  <enum name='kInjectionSubPage' value='29'/>
  <enum name='kInjectionSubPageOrder' value='7'/>
  <enum name='kInjectionSubPageTrailer' value='22'/>
  <enum name='kInjectionSubPages' value='6'/>
  <enum name='kInjectionSubPlateColor' value='21'/>
  <enum name='kInjectionSubTrailer' value='23'/>
  <enum name='kLocalPPDDomain' value='3'/>
  <enum name='kNetworkPPDDomain' value='4'/>
  <enum name='kPMAllocationFailure' value='-108'/>
  <enum name='kPMBaseVersionMajor' value='1'/>
  <enum name='kPMBaseVersionMinor' value='0'/>
  <enum name='kPMBlackAndWhite' value='1'/>
  <enum name='kPMBorderDoubleHairline' value='2'/>
  <enum name='kPMBorderDoubleThickline' value='4'/>
  <enum name='kPMBorderSingleHairline' value='1'/>
  <enum name='kPMBorderSingleThickline' value='3'/>
  <enum name='kPMBrowserInfoNumValues' value='4'/>
  <enum name='kPMBuildVersionMajor' value='1'/>
  <enum name='kPMBuildVersionMinor' value='0'/>
  <enum name='kPMCMYKColorSpaceModel' value='3'/>
  <enum name='kPMCMYK_32' value='128'/>
  <enum name='kPMCVMSymbolNotFound' value='-9662'/>
  <enum name='kPMCancel' value='128'/>
  <enum name='kPMCloseFailed' value='-9785'/>
  <enum name='kPMCollateAEKey' value='1819763564'/>
  <enum name='kPMCollateAEType' value='1651470188'/>
  <enum name='kPMColor' value='3'/>
  <enum name='kPMColorIntentAbsColor' value='16'/>
  <enum name='kPMColorIntentAutomatic' value='1'/>
  <enum name='kPMColorIntentBusiness' value='4'/>
  <enum name='kPMColorIntentPhoto' value='2'/>
  <enum name='kPMColorIntentRelColor' value='8'/>
  <enum name='kPMColorIntentUndefined' value='0'/>
  <enum name='kPMColorIntentUnused' value='65504'/>
  <enum name='kPMColorModeDuotone' value='4'/>
  <enum name='kPMColorModeSpecialColor' value='5'/>
  <enum name='kPMColorSpaceModelCount' value='4'/>
  <enum name='kPMConstraintList' value='2'/>
  <enum name='kPMConstraintPrivate' value='3'/>
  <enum name='kPMConstraintRange' value='1'/>
  <enum name='kPMConstraintUndefined' value='0'/>
  <enum name='kPMConverterSetupTicketType' value='8'/>
  <enum name='kPMCopieAEType' value='1819242087'/>
  <enum name='kPMCopiesAEKey' value='1819763568'/>
  <enum name='kPMCopyCollateDefault' value='1'/>
  <enum name='kPMCoverPageAfter' value='3'/>
  <enum name='kPMCoverPageBefore' value='2'/>
  <enum name='kPMCoverPageDefault' value='1'/>
  <enum name='kPMCoverPageNone' value='1'/>
  <enum name='kPMCreateMessageFailed' value='-9620'/>
  <enum name='kPMCurrentValue' value='1668641394'/>
  <enum name='kPMDataChunky' value='2'/>
  <enum name='kPMDataPlanar' value='1'/>
  <enum name='kPMDataUnused' value='65532'/>
  <enum name='kPMDefaultResolution' value='1684436082'/>
  <enum name='kPMDefaultValue' value='1684434036'/>
  <enum name='kPMDeleteSubTicketFailed' value='-9585'/>
  <enum name='kPMDestinationFax' value='3'/>
  <enum name='kPMDestinationFile' value='2'/>
  <enum name='kPMDestinationInvalid' value='0'/>
  <enum name='kPMDestinationPreview' value='4'/>
  <enum name='kPMDestinationPrinter' value='1'/>
  <enum name='kPMDestinationProcessPDF' value='5'/>
  <enum name='kPMDestinationTicketType' value='7'/>
  <enum name='kPMDestinationTypeDefault' value='1'/>
  <enum name='kPMDevNColorSpaceModel' value='4'/>
  <enum name='kPMDocumentNotFound' value='-9644'/>
  <enum name='kPMDocumentTicketType' value='2'/>
  <enum name='kPMDontSwitchPDEError' value='-9531'/>
  <enum name='kPMDuplexBindingLeftRight' value='1'/>
  <enum name='kPMDuplexBindingTopDown' value='2'/>
  <enum name='kPMDuplexDefault' value='1'/>
  <enum name='kPMDuplexNoTumble' value='2'/>
  <enum name='kPMDuplexNone' value='1'/>
  <enum name='kPMDuplexTumble' value='3'/>
  <enum name='kPMEditRequestFailed' value='-9544'/>
  <enum name='kPMErrorHandlingAEKey' value='1819764072'/>
  <enum name='kPMErrorHandlingAEType' value='1701737837'/>
  <enum name='kPMErrorHandlingDetailedEnum' value='1819763828'/>
  <enum name='kPMErrorHandlingStandardEnum' value='1819767668'/>
  <enum name='kPMEventErrorOccurred' value='4001'/>
  <enum name='kPMEventPrinterStatus' value='4000'/>
  <enum name='kPMEventRecoverableErrorCleared' value='4003'/>
  <enum name='kPMEventRecoverableErrorOccurred' value='4002'/>
  <enum name='kPMFaxNumberAEKey' value='1717663854'/>
  <enum name='kPMFaxNumberAEType' value='1413830740'/>
  <enum name='kPMFeatureAEKey' value='1819766886'/>
  <enum name='kPMFeatureAEType' value='1818850164'/>
  <enum name='kPMFeatureNotInstalled' value='-9533'/>
  <enum name='kPMFileOrDirOperationFailed' value='-9634'/>
  <enum name='kPMFirstBand' value='0'/>
  <enum name='kPMFirstPageAEKey' value='1819764336'/>
  <enum name='kPMFirstPageAEType' value='1819242087'/>
  <enum name='kPMFontNameTooLong' value='-9704'/>
  <enum name='kPMFontNotFound' value='-9703'/>
  <enum name='kPMGeneralCGError' value='-9705'/>
  <enum name='kPMGeneralError' value='-30870'/>
  <enum name='kPMGray' value='2'/>
  <enum name='kPMGrayColorSpaceModel' value='1'/>
  <enum name='kPMGray_1' value='1'/>
  <enum name='kPMGray_8' value='2'/>
  <enum name='kPMIOAttrNotAvailable' value='-9787'/>
  <enum name='kPMIOMSymbolNotFound' value='-9661'/>
  <enum name='kPMInternalError' value='-30870'/>
  <enum name='kPMInvalidAllocator' value='-30890'/>
  <enum name='kPMInvalidCVMContext' value='-9665'/>
  <enum name='kPMInvalidCalibrationTarget' value='-30898'/>
  <enum name='kPMInvalidConnection' value='-30887'/>
  <enum name='kPMInvalidFileType' value='-30895'/>
  <enum name='kPMInvalidIOMContext' value='-9664'/>
  <enum name='kPMInvalidIndex' value='-30882'/>
  <enum name='kPMInvalidItem' value='-30892'/>
  <enum name='kPMInvalidJobID' value='-9666'/>
  <enum name='kPMInvalidJobTemplate' value='-30885'/>
  <enum name='kPMInvalidKey' value='-30888'/>
  <enum name='kPMInvalidLookupSpec' value='-9542'/>
  <enum name='kPMInvalidObject' value='-30896'/>
  <enum name='kPMInvalidPBMRef' value='-9540'/>
  <enum name='kPMInvalidPDEContext' value='-9530'/>
  <enum name='kPMInvalidPMContext' value='-9663'/>
  <enum name='kPMInvalidPageFormat' value='-30876'/>
  <enum name='kPMInvalidPaper' value='-30897'/>
  <enum name='kPMInvalidParameter' value='-50'/>
  <enum name='kPMInvalidPreset' value='-30882'/>
  <enum name='kPMInvalidPrintSession' value='-30879'/>
  <enum name='kPMInvalidPrintSettings' value='-30875'/>
  <enum name='kPMInvalidPrinter' value='-30880'/>
  <enum name='kPMInvalidPrinterAddress' value='-9780'/>
  <enum name='kPMInvalidPrinterInfo' value='-30886'/>
  <enum name='kPMInvalidReply' value='-30894'/>
  <enum name='kPMInvalidState' value='-9706'/>
  <enum name='kPMInvalidSubTicket' value='-9584'/>
  <enum name='kPMInvalidTicket' value='-30891'/>
  <enum name='kPMInvalidType' value='-30893'/>
  <enum name='kPMInvalidValue' value='-30889'/>
  <enum name='kPMItemBooleanType' value='3'/>
  <enum name='kPMItemCStrListType' value='4'/>
  <enum name='kPMItemCStringType' value='1'/>
  <enum name='kPMItemInvalidType' value='0'/>
  <enum name='kPMItemIsLocked' value='-9586'/>
  <enum name='kPMItemPMRectListType' value='7'/>
  <enum name='kPMItemPMRectType' value='5'/>
  <enum name='kPMItemSInt32ListType' value='6'/>
  <enum name='kPMItemSInt32Type' value='2'/>
  <enum name='kPMJobBusy' value='-9642'/>
  <enum name='kPMJobCanceled' value='-9643'/>
  <enum name='kPMJobGetTicketBadFormatError' value='-9672'/>
  <enum name='kPMJobGetTicketReadError' value='-9673'/>
  <enum name='kPMJobManagerAborted' value='-9671'/>
  <enum name='kPMJobNotFound' value='-9641'/>
  <enum name='kPMJobStreamEndError' value='-9670'/>
  <enum name='kPMJobStreamOpenFailed' value='-9668'/>
  <enum name='kPMJobStreamReadFailed' value='-9669'/>
  <enum name='kPMJobTicketType' value='1'/>
  <enum name='kPMKeyNotFound' value='-9589'/>
  <enum name='kPMKeyNotUnique' value='-9590'/>
  <enum name='kPMKeyOrValueNotFound' value='-9623'/>
  <enum name='kPMLandscape' value='2'/>
  <enum name='kPMLastBand' value='2'/>
  <enum name='kPMLastErrorCodeToMakeMaintenanceOfThisListEasier' value='-9799'/>
  <enum name='kPMLastPageAEKey' value='1819765872'/>
  <enum name='kPMLastPageAEType' value='1819242087'/>
  <enum name='kPMLayoutAcrossAEKey' value='1819765857'/>
  <enum name='kPMLayoutAcrossAEType' value='1819242087'/>
  <enum name='kPMLayoutBottomTopLeftRight' value='7'/>
  <enum name='kPMLayoutBottomTopRightLeft' value='8'/>
  <enum name='kPMLayoutDownAEKey' value='1819765860'/>
  <enum name='kPMLayoutDownAEType' value='1819242087'/>
  <enum name='kPMLayoutLeftRightBottomTop' value='2'/>
  <enum name='kPMLayoutLeftRightTopBottom' value='1'/>
  <enum name='kPMLayoutRightLeftBottomTop' value='4'/>
  <enum name='kPMLayoutRightLeftTopBottom' value='3'/>
  <enum name='kPMLayoutTopBottomLeftRight' value='5'/>
  <enum name='kPMLayoutTopBottomRightLeft' value='6'/>
  <enum name='kPMLockIgnored' value='-30878'/>
  <enum name='kPMLocked' value='1'/>
  <enum name='kPMLoneBand' value='3'/>
  <enum name='kPMMaxRange' value='1836610151'/>
  <enum name='kPMMaxSquareResolution' value='1835104371'/>
  <enum name='kPMMaximumValue' value='1835104374'/>
  <enum name='kPMMessagingError' value='-9624'/>
  <enum name='kPMMiddleBand' value='1'/>
  <enum name='kPMMinRange' value='1835954791'/>
  <enum name='kPMMinSquareResolution' value='1835626099'/>
  <enum name='kPMMinimumValue' value='1835626102'/>
  <enum name='kPMModuleInfoTicketType' value='9'/>
  <enum name='kPMNoDefaultItem' value='-9500'/>
  <enum name='kPMNoDefaultPrinter' value='-30872'/>
  <enum name='kPMNoDefaultSettings' value='-9501'/>
  <enum name='kPMNoError' value='0'/>
  <enum name='kPMNoPrinterJobID' value='-9667'/>
  <enum name='kPMNoSelectedPrinters' value='-9541'/>
  <enum name='kPMNoSuchEntry' value='-30874'/>
  <enum name='kPMNotImplemented' value='-30873'/>
  <enum name='kPMObjectInUse' value='-30881'/>
  <enum name='kPMOpenFailed' value='-9781'/>
  <enum name='kPMOutOfScope' value='-30871'/>
  <enum name='kPMPMSymbolNotFound' value='-9660'/>
  <enum name='kPMPSTTRasterizerAccept68K' value='2'/>
  <enum name='kPMPSTTRasterizerNone' value='1'/>
  <enum name='kPMPSTTRasterizerType42' value='3'/>
  <enum name='kPMPSTTRasterizerUnknown' value='0'/>
  <enum name='kPMPSTargetLanguageLevel1' value='1'/>
  <enum name='kPMPSTargetLanguageLevel1and2' value='-2'/>
  <enum name='kPMPSTargetLanguageLevel2' value='2'/>
  <enum name='kPMPSTargetLanguageLevel2and3' value='-3'/>
  <enum name='kPMPSTargetLanguageLevel3' value='3'/>
  <enum name='kPMPSTargetLanguageLevelDefault' value='-1'/>
  <enum name='kPMPSTargetLanguageLevelUnknown' value='-1'/>
  <enum name='kPMPageFormatTicketType' value='4'/>
  <enum name='kPMPageTicketType' value='3'/>
  <enum name='kPMPageToPaperMappingNone' value='1'/>
  <enum name='kPMPageToPaperMappingScaleToFit' value='2'/>
  <enum name='kPMPaperInfoTicketType' value='11'/>
  <enum name='kPMPaperTypeCoated' value='2'/>
  <enum name='kPMPaperTypeGlossy' value='4'/>
  <enum name='kPMPaperTypePlain' value='1'/>
  <enum name='kPMPaperTypePremium' value='3'/>
  <enum name='kPMPaperTypeTShirt' value='6'/>
  <enum name='kPMPaperTypeTransparency' value='5'/>
  <enum name='kPMPaperTypeUnknown' value='0'/>
  <enum name='kPMPermissionError' value='-9636'/>
  <enum name='kPMPhaseAppDrawing' value='5'/>
  <enum name='kPMPhaseConverting' value='8'/>
  <enum name='kPMPhaseDialogsUp' value='2'/>
  <enum name='kPMPhasePostAppDrawing' value='6'/>
  <enum name='kPMPhasePostConversion' value='9'/>
  <enum name='kPMPhasePostDialogs' value='3'/>
  <enum name='kPMPhasePreAppDrawing' value='4'/>
  <enum name='kPMPhasePreConversion' value='7'/>
  <enum name='kPMPhasePreDialog' value='1'/>
  <enum name='kPMPhasePrinting' value='10'/>
  <enum name='kPMPhaseUnknown' value='0'/>
  <enum name='kPMPluginNotFound' value='-9701'/>
  <enum name='kPMPluginRegisterationFailed' value='-9702'/>
  <enum name='kPMPortrait' value='1'/>
  <enum name='kPMPrBrowserNoUI' value='-9545'/>
  <enum name='kPMPrintAllPages' value='-1'/>
  <enum name='kPMPrintSettingsAEType' value='1886610804'/>
  <enum name='kPMPrintSettingsTicketType' value='5'/>
  <enum name='kPMPrintTimeAEKey' value='1819767156'/>
  <enum name='kPMPrintTimeAEType' value='1818522656'/>
  <enum name='kPMPrinterAEType' value='1953656946'/>
  <enum name='kPMPrinterIdle' value='3'/>
  <enum name='kPMPrinterInfoTicketType' value='6'/>
  <enum name='kPMPrinterProcessing' value='4'/>
  <enum name='kPMPrinterStopped' value='5'/>
  <enum name='kPMQualityBest' value='13'/>
  <enum name='kPMQualityDraft' value='4'/>
  <enum name='kPMQualityHighest' value='15'/>
  <enum name='kPMQualityInkSaver' value='1'/>
  <enum name='kPMQualityLowest' value='0'/>
  <enum name='kPMQualityNormal' value='8'/>
  <enum name='kPMQualityPhoto' value='11'/>
  <enum name='kPMQueueAlreadyExists' value='-9639'/>
  <enum name='kPMQueueJobFailed' value='-9640'/>
  <enum name='kPMQueueNotFound' value='-9638'/>
  <enum name='kPMRGBColorSpaceModel' value='2'/>
  <enum name='kPMRGBX_32' value='32'/>
  <enum name='kPMRGBX_32_Sep_Gray_8' value='64'/>
  <enum name='kPMRGB_16' value='4'/>
  <enum name='kPMRGB_24' value='8'/>
  <enum name='kPMReadFailed' value='-9782'/>
  <enum name='kPMReadGotZeroData' value='-9788'/>
  <enum name='kPMReverseLandscape' value='4'/>
  <enum name='kPMReversePortrait' value='3'/>
  <enum name='kPMScalingCenterOnImgArea' value='6'/>
  <enum name='kPMScalingCenterOnPaper' value='5'/>
  <enum name='kPMScalingPinBottomLeft' value='3'/>
  <enum name='kPMScalingPinBottomRight' value='4'/>
  <enum name='kPMScalingPinTopLeft' value='1'/>
  <enum name='kPMScalingPinTopRight' value='2'/>
  <enum name='kPMServerAlreadyRunning' value='-9631'/>
  <enum name='kPMServerAttributeRestricted' value='-9633'/>
  <enum name='kPMServerCommunicationFailed' value='-9621'/>
  <enum name='kPMServerNotFound' value='-9630'/>
  <enum name='kPMServerSuspended' value='-9632'/>
  <enum name='kPMShowPrintDialogAEType' value='1885629543'/>
  <enum name='kPMSimplexTumble' value='4'/>
  <enum name='kPMSourceProfile' value='1936876400'/>
  <enum name='kPMStatusFailed' value='-9784'/>
  <enum name='kPMStringConversionFailure' value='-30883'/>
  <enum name='kPMSubTicketNotFound' value='-9583'/>
  <enum name='kPMSyncRequestFailed' value='-9543'/>
  <enum name='kPMTargetPrinterAEKey' value='1953656946'/>
  <enum name='kPMTargetPrinterAEType' value='1413830740'/>
  <enum name='kPMTemplateIsLocked' value='-9588'/>
  <enum name='kPMTicketIsLocked' value='-9587'/>
  <enum name='kPMTicketListType' value='10'/>
  <enum name='kPMTicketTypeNotFound' value='-9580'/>
  <enum name='kPMTicketTypeUnknown' value='-1'/>
  <enum name='kPMTopLevel' value='0'/>
  <enum name='kPMUnableToFindProcess' value='-9532'/>
  <enum name='kPMUnknownColorSpaceModel' value='0'/>
  <enum name='kPMUnknownDataType' value='-9591'/>
  <enum name='kPMUnknownMessage' value='-9637'/>
  <enum name='kPMUnlocked' value='0'/>
  <enum name='kPMUnsupportedConnection' value='-9786'/>
  <enum name='kPMUnused' value='65280'/>
  <enum name='kPMUpdateTicketFailed' value='-9581'/>
  <enum name='kPMUserOrGroupNotFound' value='-9635'/>
  <enum name='kPMValidateTicketFailed' value='-9582'/>
  <enum name='kPMValueArray' value='12'/>
  <enum name='kPMValueBoolean' value='1'/>
  <enum name='kPMValueData' value='2'/>
  <enum name='kPMValueDate' value='11'/>
  <enum name='kPMValueDict' value='13'/>
  <enum name='kPMValueDouble' value='8'/>
  <enum name='kPMValueDoubleRange' value='9'/>
  <enum name='kPMValueOutOfRange' value='-30877'/>
  <enum name='kPMValuePMRect' value='10'/>
  <enum name='kPMValueSInt32' value='4'/>
  <enum name='kPMValueSInt32Range' value='5'/>
  <enum name='kPMValueString' value='3'/>
  <enum name='kPMValueTicket' value='14'/>
  <enum name='kPMValueUInt32' value='6'/>
  <enum name='kPMValueUInt32Range' value='7'/>
  <enum name='kPMValueUndefined' value='0'/>
  <enum name='kPMWriteFailed' value='-9783'/>
  <enum name='kPMXMLParseError' value='-30884'/>
  <enum name='kPMXRGB_32' value='16'/>
  <enum name='kPPDInvalidIndex' value='0'/>
  <enum name='kPSErrorHandler' value='1'/>
  <enum name='kPSInjectionAfterSubsection' value='2'/>
  <enum name='kPSInjectionBeforeSubsection' value='1'/>
  <enum name='kPSInjectionMaxDictSize' value='5'/>
  <enum name='kPSInjectionReplaceSubsection' value='3'/>
  <enum name='kPSNoErrorHandler' value='0'/>
  <enum name='kPSPageInjectAllPages' value='-1'/>
  <enum name='kSizeOfTPrint' value='120'/>
  <enum name='kSystemPPDDomain' value='2'/>
  <enum name='kUIHeaderVersion' value='1'/>
  <enum name='kUIOptionVersion' value='1'/>
  <enum name='kUserPPDDomain' value='5'/>
  <enum name='ppdErrForbidden' value='-2'/>
  <enum name='ppdErrNotFound' value='-1'/>
  <function name='DisposePMIdleUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='PMIdleUPP' type='^?'>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='InvokePMIdleUPP'>
    <arg name='userUPP' function_pointer='true' declared_type='PMIdleUPP' type='^?'>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='NewPMIdleUPP'>
    <arg name='userRoutine' function_pointer='true' declared_type='PMIdleProcPtr' type='^?'>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval function_pointer='true' declared_type='PMIdleUPP' type='^?'>
      <retval declared_type='void' type='v'/>
    </retval>
  </function>
  <function name='PMCGImageCreateWithEPSDataProvider'>
    <arg name='epsDataProvider' declared_type='CGDataProviderRef' type='^{CGDataProvider=}'/>
    <arg name='epsPreview' declared_type='CGImageRef' type='^{CGImage=}'/>
    <retval declared_type='CGImageRef' already_retained='true' type='^{CGImage=}'/>
  </function>
  <function name='PMCopyAvailablePPDs'>
    <arg name='domain' declared_type='PMPPDDomain' type='S'/>
    <arg name='ppds' declared_type='CFArrayRef*' type='^^{__CFArray}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMCopyLocalizedPPD'>
    <arg name='ppd' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <arg name='localizedPPD' declared_type='CFURLRef*' type='^^{__CFURL}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMCopyPPDData'>
    <arg name='ppd' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <arg name='data' declared_type='CFDataRef*' type='^^{__CFData}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMCopyPageFormat'>
    <arg name='formatSrc' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='formatDest' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMCopyPrintSettings'>
    <arg name='settingSrc' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='settingDest' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMCreatePageFormat'>
    <arg name='pageFormat' declared_type='PMPageFormat*' type='^^{OpaquePMPageFormat}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMCreatePageFormatWithPMPaper'>
    <arg name='pageFormat' declared_type='PMPageFormat*' type='^^{OpaquePMPageFormat}'/>
    <arg name='paper' declared_type='PMPaper' type='^{OpaquePMPaper=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMCreatePrintSettings'>
    <arg name='printSettings' declared_type='PMPrintSettings*' type='^^{OpaquePMPrintSettings}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMCreateSession'>
    <arg name='printSession' declared_type='PMPrintSession*' type='^^{OpaquePMPrintSession}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMFlattenPageFormat'>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='flatFormat' declared_type='Handle*' type='^^*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMFlattenPageFormatToCFData'>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='flatFormat' declared_type='CFDataRef*' type='^^{__CFData}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMFlattenPageFormatToURL'>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='flattenFileURL' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMFlattenPrintSettings'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='flatSettings' declared_type='Handle*' type='^^*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMFlattenPrintSettingsToCFData'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='flatSetting' declared_type='CFDataRef*' type='^^{__CFData}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMFlattenPrintSettingsToURL'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='flattenFileURL' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetAdjustedPageRect'>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='pageRect' declared_type='PMRect*' type='^{PMRect=dddd}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetAdjustedPaperRect'>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='paperRect' declared_type='PMRect*' type='^{PMRect=dddd}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetCollate'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='collate' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetColorMode'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='colorMode' declared_type='PMColorMode*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetCopies'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='copies' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetDestination'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='destType' declared_type='PMDestinationType*' type='^S'/>
    <arg name='fileURL' declared_type='CFURLRef*' type='^^{__CFURL}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetDuplex'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='duplexSetting' declared_type='PMDuplexMode*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetFirstPage'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='first' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetJobName'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='name' declared_type='StringPtr' type='*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetJobNameCFString'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='name' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetLastPage'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='last' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetOrientation'>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='orientation' declared_type='PMOrientation*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetPageFormatExtendedData'>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='dataID' declared_type='OSType' type='L' type64='I'/>
    <arg name='size' declared_type='UInt32*' type='^I'/>
    <arg name='extendedData' declared_type='void*' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetPageFormatPaper'>
    <arg name='format' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='paper' declared_type='PMPaper*' type='^^{OpaquePMPaper}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetPageRange'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='minPage' declared_type='UInt32*' type='^I'/>
    <arg name='maxPage' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetPhysicalPageSize'>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='pageSize' declared_type='PMRect*' type='^{PMRect=dddd}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetPhysicalPaperSize'>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='paperSize' declared_type='PMRect*' type='^{PMRect=dddd}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetPrintSettingsExtendedData'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='dataID' declared_type='OSType' type='L' type64='I'/>
    <arg name='size' declared_type='UInt32*' type='^I'/>
    <arg name='extendedData' declared_type='void*' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetResolution'>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='res' declared_type='PMResolution*' type='^{PMResolution=dd}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetScale'>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='scale' declared_type='double*' type='^d'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetUnadjustedPageRect'>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='pageRect' declared_type='PMRect*' type='^{PMRect=dddd}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMGetUnadjustedPaperRect'>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='paperRect' declared_type='PMRect*' type='^{PMRect=dddd}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPaperCreate'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='id' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='width' declared_type='double' type='d'/>
    <arg name='height' declared_type='double' type='d'/>
    <arg name='margins' declared_type='PMPaperMargins*' type='^{PMRect=dddd}' const='true'/>
    <arg name='paperP' declared_type='PMPaper*' type='^^{OpaquePMPaper}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPaperGetHeight'>
    <arg name='paper' declared_type='PMPaper' type='^{OpaquePMPaper=}'/>
    <arg name='paperHeight' declared_type='double*' type='^d'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPaperGetID'>
    <arg name='paper' declared_type='PMPaper' type='^{OpaquePMPaper=}'/>
    <arg name='paperID' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPaperGetMargins'>
    <arg name='paper' declared_type='PMPaper' type='^{OpaquePMPaper=}'/>
    <arg name='paperMargins' declared_type='PMPaperMargins*' type='^{PMRect=dddd}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPaperGetName'>
    <arg name='paper' declared_type='PMPaper' type='^{OpaquePMPaper=}'/>
    <arg name='paperName' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPaperGetWidth'>
    <arg name='paper' declared_type='PMPaper' type='^{OpaquePMPaper=}'/>
    <arg name='paperWidth' declared_type='double*' type='^d'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPresetCopyName'>
    <arg name='preset' declared_type='PMPreset' type='^{OpaquePMPreset=}'/>
    <arg name='name' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPresetCreatePrintSettings'>
    <arg name='preset' declared_type='PMPreset' type='^{OpaquePMPreset=}'/>
    <arg name='session' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='printSettings' declared_type='PMPrintSettings*' type='^^{OpaquePMPrintSettings}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPresetGetAttributes'>
    <arg name='preset' declared_type='PMPreset' type='^{OpaquePMPreset=}'/>
    <arg name='attributes' declared_type='CFDictionaryRef*' type='^^{__CFDictionary}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrintSettingsGetJobName'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='name' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrintSettingsGetValue'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='CFTypeRef*' type='^^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrintSettingsSetJobName'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrintSettingsSetValue'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='CFTypeRef' type='@'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrintSettingsToOptions'>
    <arg name='settings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='options' declared_type='char**' type='^*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrinterCopyDescriptionURL'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='descriptionType' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='fileURL' declared_type='CFURLRef*' type='^^{__CFURL}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrinterCopyDeviceURI'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='deviceURI' declared_type='CFURLRef*' type='^^{__CFURL}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrinterCopyHostName'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='hostNameP' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrinterCopyPresets'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='presetList' declared_type='CFArrayRef*' type='^^{__CFArray}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrinterCreateFromPrinterID'>
    <arg name='printerID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
  </function>
  <function name='PMPrinterGetCommInfo'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='supportsTransparentP' declared_type='Boolean*' type='^B'/>
    <arg name='supportsEightBitP' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrinterGetDescriptionURL'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='descriptionType' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='fileURL' declared_type='CFURLRef*' type='^^{__CFURL}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrinterGetDeviceURI'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='deviceURI' declared_type='CFURLRef*' type='^^{__CFURL}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrinterGetDriverCreator'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='creator' declared_type='OSType*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrinterGetDriverReleaseInfo'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='release' declared_type='VersRec*' type='^{VersRec={NumVersion=CCCC}s[256C][256C]}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrinterGetID'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='PMPrinterGetIndexedPrinterResolution'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='index' declared_type='UInt32' type='L' type64='I'/>
    <arg name='res' declared_type='PMResolution*' type='^{PMResolution=dd}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrinterGetLanguageInfo'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='info' declared_type='PMLanguageInfo*' type='^{PMLanguageInfo=[33C][33C][33C]}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrinterGetLocation'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='PMPrinterGetMakeAndModelName'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='makeAndModel' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrinterGetMimeTypes'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='settings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='mimeTypes' declared_type='CFArrayRef*' type='^^{__CFArray}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrinterGetName'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <retval declared_type='CFStringRef' type='^{__CFString=}'/>
  </function>
  <function name='PMPrinterGetPaperList'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='paperList' declared_type='CFArrayRef*' type='^^{__CFArray}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrinterGetPrinterResolution'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='tag' declared_type='PMTag' type='L' type64='I'/>
    <arg name='res' declared_type='PMResolution*' type='^{PMResolution=dd}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrinterGetPrinterResolutionCount'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='count' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrinterGetState'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='state' declared_type='PMPrinterState*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrinterIsDefault'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='PMPrinterIsFavorite'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='PMPrinterIsPostScriptCapable'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='PMPrinterIsRemote'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='isRemoteP' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrinterPrintWithFile'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='settings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='format' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='mimeType' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='fileURL' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMPrinterPrintWithProvider'>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='settings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='format' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='mimeType' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='provider' declared_type='CGDataProviderRef' type='^{CGDataProvider=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMRelease'>
    <arg name='object' declared_type='PMObject' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMRetain'>
    <arg name='object' declared_type='PMObject' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMServerCreatePrinterList'>
    <arg name='server' declared_type='PMServer' type='^{OpaquePMServer=}'/>
    <arg name='printerList' declared_type='CFArrayRef*' type='^^{__CFArray}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionBeginCGDocumentNoDialog'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionBeginDocumentNoDialog'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionBeginPageNoDialog'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='pageFrame' declared_type='PMRect*' type='^{PMRect=dddd}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionConvertOldPrintRecord'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='printRecordHandle' declared_type='Handle' type='^*'/>
    <arg name='printSettings' declared_type='PMPrintSettings*' type='^^{OpaquePMPrintSettings}'/>
    <arg name='pageFormat' declared_type='PMPageFormat*' type='^^{OpaquePMPageFormat}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionCopyDestinationFormat'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='destFormatP' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionCopyDestinationLocation'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='destLocationP' declared_type='CFURLRef*' type='^^{__CFURL}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionCopyOutputFormatList'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='destType' declared_type='PMDestinationType' type='S'/>
    <arg name='documentFormatP' declared_type='CFArrayRef*' type='^^{__CFArray}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionCreatePageFormatList'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <arg name='pageFormatList' declared_type='CFArrayRef*' type='^^{__CFArray}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionCreatePrinterList'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='printerList' declared_type='CFArrayRef*' type='^^{__CFArray}'/>
    <arg name='currentIndex' declared_type='CFIndex*' type='^i'/>
    <arg name='currentPrinter' declared_type='PMPrinter*' type='^^{OpaquePMPrinter}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionDefaultPageFormat'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionDefaultPrintSettings'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionDisableColorSync'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionEnableColorSync'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionEndDocumentNoDialog'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionEndPageNoDialog'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionError'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionGeneral'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='pData' declared_type='Ptr' type='*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionGetCGGraphicsContext'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='context' declared_type='CGContextRef*' type='^^{CGContext}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionGetCurrentPrinter'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='currentPrinter' declared_type='PMPrinter*' type='^^{OpaquePMPrinter}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionGetDataFromSession'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='data' declared_type='CFTypeRef*' type='^^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionGetDestinationType'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='destTypeP' declared_type='PMDestinationType*' type='^S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionGetDocumentFormatGeneration'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='docFormats' declared_type='CFArrayRef*' type='^^{__CFArray}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionGetDocumentFormatSupported'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='docFormats' declared_type='CFArrayRef*' type='^^{__CFArray}'/>
    <arg name='limit' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionGetGraphicsContext'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='graphicsContextType' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='graphicsContext' declared_type='void**' type='^^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionGetTemplateFromSession'>
    <arg name='session' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='theTemplate' declared_type='PMTemplateRef*' type='^^{OpaquePMTemplateRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionGetTicketFromSession'>
    <arg name='session' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='theTicket' declared_type='PMTicketRef*' type='^^{OpaquePMTicketRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionIsDocumentFormatSupported'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='docFormat' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='supported' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionMakeOldPrintRecord'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='printRecordHandle' declared_type='Handle*' type='^^*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionPostScriptBegin'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionPostScriptData'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='psPtr' declared_type='Ptr' type='*'/>
    <arg name='len' declared_type='Size' type='l' type64='q'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionPostScriptEnd'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionPostScriptFile'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='psFile' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionPostScriptHandle'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='psHandle' declared_type='Handle' type='^*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionSetCurrentPMPrinter'>
    <arg name='session' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='printer' declared_type='PMPrinter' type='^{OpaquePMPrinter=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionSetCurrentPrinter'>
    <arg name='session' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='printerName' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionSetDataInSession'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='data' declared_type='CFTypeRef' type='@'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionSetDestination'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='destType' declared_type='PMDestinationType' type='S'/>
    <arg name='destFormat' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='destLocation' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionSetDocumentFormatGeneration'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='docFormat' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='graphicsContextTypes' declared_type='CFArrayRef' type='^{__CFArray=}'/>
    <arg name='options' declared_type='CFTypeRef' type='@'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionSetError'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='printError' declared_type='OSStatus' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionSetIdleProc'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='idleProc' function_pointer='true' declared_type='PMIdleUPP' type='^?'>
      <retval declared_type='void' type='v'/>
    </arg>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionSetPSInjectionData'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='injectionDictArray' declared_type='CFArrayRef' type='^{__CFArray=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionValidatePageFormat'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='result' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSessionValidatePrintSettings'>
    <arg name='printSession' declared_type='PMPrintSession' type='^{OpaquePMPrintSession=}'/>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='result' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSetAdjustedPageRect'>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='pageRect' declared_type='PMRect*' type='^{PMRect=dddd}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSetCollate'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='collate' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSetColorMode'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='colorMode' declared_type='PMColorMode' type='S'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSetCopies'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='copies' declared_type='UInt32' type='L' type64='I'/>
    <arg name='lock' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSetDuplex'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='duplexSetting' declared_type='PMDuplexMode' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSetFirstPage'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='first' declared_type='UInt32' type='L' type64='I'/>
    <arg name='lock' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSetJobName'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='name' declared_type='StringPtr' type='*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSetJobNameCFString'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSetLastPage'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='last' declared_type='UInt32' type='L' type64='I'/>
    <arg name='lock' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSetOrientation'>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='orientation' declared_type='PMOrientation' type='S'/>
    <arg name='lock' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSetPageFormatExtendedData'>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='dataID' declared_type='OSType' type='L' type64='I'/>
    <arg name='size' declared_type='UInt32' type='L' type64='I'/>
    <arg name='extendedData' declared_type='void*' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSetPageRange'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='minPage' declared_type='UInt32' type='L' type64='I'/>
    <arg name='maxPage' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSetPhysicalPaperSize'>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='paperSize' declared_type='PMRect*' type='^{PMRect=dddd}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSetPrintSettingsExtendedData'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='dataID' declared_type='OSType' type='L' type64='I'/>
    <arg name='size' declared_type='UInt32' type='L' type64='I'/>
    <arg name='extendedData' declared_type='void*' type='^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSetProfile'>
    <arg name='printSettings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='tag' declared_type='PMTag' type='L' type64='I'/>
    <arg name='profile' declared_type='CMProfileLocation*' type='^{CMProfileLocation=s(CMProfLoc={CMFileLocation={FSSpec=sl[64C]}}{CMHandleLocation=^*}{CMPtrLocation=*}{CMProcedureLocation=^?^v}{CMPathLocation=[256c]}{CMBufferLocation=^vI})}' type64='^{CMProfileLocation=s(CMProfLoc={CMFileLocation={FSSpec=sq[64C]}}{CMHandleLocation=^*}{CMPtrLocation=*}{CMProcedureLocation=^?^v}{CMPathLocation=[256c]}{CMBufferLocation=^vI})}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSetResolution'>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='res' declared_type='PMResolution*' type='^{PMResolution=dd}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSetScale'>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='scale' declared_type='double' type='d'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMSetUnadjustedPaperRect'>
    <arg name='pageFormat' declared_type='PMPageFormat' type='^{OpaquePMPageFormat=}'/>
    <arg name='paperRect' declared_type='PMRect*' type='^{PMRect=dddd}' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateCreate'>
    <arg name='newTemplate' declared_type='PMTemplateRef*' type='^^{OpaquePMTemplateRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateCreateXML'>
    <arg name='srcTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='xmlData' declared_type='CFDataRef*' type='^^{__CFData}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateDelete'>
    <arg name='oldTemplate' declared_type='PMTemplateRef*' type='^^{OpaquePMTemplateRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetBooleanDefaultValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='defaultValue' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetCFArrayConstraintValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='constraintValue' declared_type='CFArrayRef*' type='^^{__CFArray}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetCFDataDefaultValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='defaultValue' declared_type='CFDataRef*' type='^^{__CFData}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetCFDefaultValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='defaultValue' declared_type='CFTypeRef*' type='^^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetCFRangeConstraintValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='min' declared_type='CFTypeRef*' type='^^v'/>
    <arg name='max' declared_type='CFTypeRef*' type='^^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetConstraintType'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='constraintType' declared_type='PMConstraintType*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetDoubleDefaultValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='defaultValue' declared_type='double*' type='^d'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetDoubleListConstraintValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='listSize' declared_type='int*' type='^i'/>
    <arg name='doubleList' declared_type='double*' type='^d'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetDoubleRangeConstraintValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='min' declared_type='double*' type='^d'/>
    <arg name='max' declared_type='double*' type='^d'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetDoubleRangeDefaultValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='min' declared_type='double*' type='^d'/>
    <arg name='max' declared_type='double*' type='^d'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetDoubleRangesConstraintValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='minForMin' declared_type='double*' type='^d'/>
    <arg name='maxForMin' declared_type='double*' type='^d'/>
    <arg name='minForMax' declared_type='double*' type='^d'/>
    <arg name='maxForMax' declared_type='double*' type='^d'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetListTicketConstraintValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='listTicket' declared_type='PMTicketRef*' type='^^{OpaquePMTicketRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetPMRectDefaultValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='defaultValue' declared_type='PMRect*' type='^{PMRect=dddd}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetPMRectListConstraintValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='listSize' declared_type='int*' type='^i'/>
    <arg name='rectList' declared_type='PMRect*' type='^{PMRect=dddd}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetPMTicketDefaultValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='defaultValue' declared_type='PMTicketRef*' type='^^{OpaquePMTicketRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetSInt32DefaultValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='defaultValue' declared_type='SInt32*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetSInt32ListConstraintValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='listSize' declared_type='int*' type='^i'/>
    <arg name='sint32List' declared_type='SInt32*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetSInt32RangeConstraintValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='min' declared_type='SInt32*' type='^i'/>
    <arg name='max' declared_type='SInt32*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetSInt32RangeDefaultValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='min' declared_type='SInt32*' type='^i'/>
    <arg name='max' declared_type='SInt32*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetSInt32RangesConstraintValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='minForMin' declared_type='SInt32*' type='^i'/>
    <arg name='maxForMin' declared_type='SInt32*' type='^i'/>
    <arg name='minForMax' declared_type='SInt32*' type='^i'/>
    <arg name='maxForMax' declared_type='SInt32*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateGetValueType'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='valueType' declared_type='PMValueType*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateIsLocked'>
    <arg name='srcTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='locked' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateLoadFromXML'>
    <arg name='srcData' declared_type='CFDataRef' type='^{__CFData=}'/>
    <arg name='destTemplate' declared_type='PMTemplateRef*' type='^^{OpaquePMTemplateRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateMakeEntry'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='valueType' declared_type='PMValueType' type='l' type64='i'/>
    <arg name='constraintType' declared_type='PMConstraintType' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateMakeFullEntry'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='valueType' declared_type='PMValueType' type='l' type64='i'/>
    <arg name='constraintType' declared_type='PMConstraintType' type='l' type64='i'/>
    <arg name='defaultValue' declared_type='CFTypeRef' type='@'/>
    <arg name='constraintValue' declared_type='CFTypeRef' type='@'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateMergeTemplates'>
    <arg name='sourceTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='destTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateRemoveEntry'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateSetBooleanDefaultValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='defaultValue' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateSetCFArrayConstraintValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='constraintValue' declared_type='CFArrayRef' type='^{__CFArray=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateSetCFDataDefaultValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='defaultValue' declared_type='CFDataRef' type='^{__CFData=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateSetCFDefaultValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='defaultValue' declared_type='CFTypeRef' type='@'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateSetCFRangeConstraint'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='min' declared_type='CFTypeRef' type='@'/>
    <arg name='max' declared_type='CFTypeRef' type='@'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateSetDoubleDefaultValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='defaultValue' declared_type='double' type='d'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateSetDoubleListConstraint'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='listSize' declared_type='int' type='i'/>
    <arg name='doubleList' declared_type='double*' type='^d'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateSetDoubleRangeConstraint'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='min' declared_type='double' type='d'/>
    <arg name='max' declared_type='double' type='d'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateSetDoubleRangeDefaultValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='min' declared_type='double' type='d'/>
    <arg name='max' declared_type='double' type='d'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateSetDoubleRangesConstraint'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='minForMin' declared_type='double' type='d'/>
    <arg name='maxForMin' declared_type='double' type='d'/>
    <arg name='minForMax' declared_type='double' type='d'/>
    <arg name='maxForMax' declared_type='double' type='d'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateSetPMRectDefaultValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='defaultValue' declared_type='PMRect*' type='^{PMRect=dddd}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateSetPMRectListConstraint'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='listSize' declared_type='int' type='i'/>
    <arg name='rectList' declared_type='PMRect*' type='^{PMRect=dddd}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateSetPMTicketDefaultValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='defaultValue' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateSetPMTicketListConstraint'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='listTicket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateSetSInt32DefaultValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='defaultValue' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateSetSInt32ListConstraint'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='listSize' declared_type='int' type='i'/>
    <arg name='sint32List' declared_type='SInt32*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateSetSInt32RangeConstraint'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='min' declared_type='SInt32' type='l' type64='i'/>
    <arg name='max' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateSetSInt32RangeDefaultValue'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='min' declared_type='SInt32' type='l' type64='i'/>
    <arg name='max' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateSetSInt32RangesConstraint'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='minForMin' declared_type='SInt32' type='l' type64='i'/>
    <arg name='maxForMin' declared_type='SInt32' type='l' type64='i'/>
    <arg name='minForMax' declared_type='SInt32' type='l' type64='i'/>
    <arg name='maxForMax' declared_type='SInt32' type='l' type64='i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateValidateItem'>
    <arg name='pmTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='CFTypeRef' type='@'/>
    <arg name='validationResults' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTemplateWriteXML'>
    <arg name='srcTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='file' declared_type='FILE*' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketConfirmTicket'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketContainsItem'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='PMTicketContainsTicket'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='requestedType' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='index' declared_type='UInt32' type='L' type64='I'/>
    <arg name='exists' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketCopy'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='sourceTicket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='destinationTicket' declared_type='PMTicketRef*' type='^^{OpaquePMTicketRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketCopyItem'>
    <arg name='sourceTicket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='destTicket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketCreate'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='ticketType' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='newTicket' declared_type='PMTicketRef*' type='^^{OpaquePMTicketRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketCreateDict'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <retval declared_type='CFDictionaryRef' already_retained='true' type='^{__CFDictionary=}'/>
  </function>
  <function name='PMTicketCreateTemplate'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='PMTemplateRef*' type='^^{OpaquePMTemplateRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketDeleteItem'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketFillFromArray'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='items' declared_type='PMTicketItemStruct*' type='^{PMTicketItemStruct=*SB(?=^v*iI^{CStrList}^{PMRect}^{SInt32List}^{PMRectList})}' const='true'/>
    <arg name='itemCount' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetAPIVersion'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='apiVersion' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetAllocator'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='allocator' declared_type='CFAllocatorRef*' type='^^{__CFAllocator}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetBoolean'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetBytes'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='data' declared_type='UInt8*' type='*'/>
    <arg name='size' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetCFArray'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='CFArrayRef*' type='^^{__CFArray}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetCFBoolean'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='CFBooleanRef*' type='^^{__CFBoolean}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetCFData'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='CFDataRef*' type='^^{__CFData}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetCFDate'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='CFDateRef*' type='^^{__CFDate}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetCFDictionary'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='CFDictionaryRef*' type='^^{__CFDictionary}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetCFNumber'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='CFNumberRef*' type='^^{__CFNumber}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetCFString'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetCString'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='bufferSize' declared_type='UInt32' type='L' type64='I'/>
    <arg name='encoding' declared_type='CFStringEncoding' type='L' type64='I'/>
    <arg name='value' declared_type='char*' type='*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetDouble'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='double*' type='^d'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetEnumType'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='ticketType' declared_type='PMTicketType*' type='^s'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetIndexPMResolution'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='index' declared_type='UInt32' type='L' type64='I'/>
    <arg name='res' declared_type='PMResolution*' type='^{PMResolution=dd}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetItem'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='CFTypeRef*' type='^^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetLockedState'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='lockedState' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetMetaItem'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='CFTypeRef*' type='^^v'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetPMRect'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='PMRect*' type='^{PMRect=dddd}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetPMResolution'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='res' declared_type='PMResolution*' type='^{PMResolution=dd}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetPPDDict'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='dict' declared_type='CFMutableDictionaryRef*' type='^^{__CFDictionary}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetPString'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='bufferSize' declared_type='UInt32' type='L' type64='I'/>
    <arg name='encoding' declared_type='CFStringEncoding' type='L' type64='I'/>
    <arg name='value' declared_type='StringPtr' type='*'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetRetainCount'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='retainCount' declared_type='CFIndex*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetSInt32'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='SInt32*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetTicket'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='requestedType' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='index' declared_type='UInt32' type='L' type64='I'/>
    <arg name='retrievedTicket' declared_type='PMTicketRef*' type='^^{OpaquePMTicketRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetType'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='ticketType' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketGetUInt32'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='nodeIndex1' declared_type='UInt32' type='L' type64='I'/>
    <arg name='nodeIndex2' declared_type='UInt32' type='L' type64='I'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='UInt32*' type='^I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketHasEqualValues'>
    <arg name='ticket1' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='ticket2' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='PMTicketIsItemLocked'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='locked' declared_type='Boolean*' type='^B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketLockItem'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketReadXMLFromFile'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='path' declared_type='char*' type='*' const='true'/>
    <arg name='ticket' declared_type='PMTicketRef*' type='^^{OpaquePMTicketRef}'/>
    <arg name='errorString' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketRelease'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketReleaseAndClear'>
    <arg name='ticket' declared_type='PMTicketRef*' type='^^{OpaquePMTicketRef}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketReleaseItem'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketRemoveTicket'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='typeToRemove' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='index' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketRetain'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetBoolean'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='Boolean' type='B'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetBytes'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='data' declared_type='UInt8*' type='*' const='true'/>
    <arg name='size' declared_type='UInt32' type='L' type64='I'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetCFArray'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='CFArrayRef' type='^{__CFArray=}'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetCFBoolean'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='CFBooleanRef' type='^{__CFBoolean=}'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetCFData'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='CFDataRef' type='^{__CFData=}'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetCFDate'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='CFDateRef' type='^{__CFDate=}'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetCFDictionary'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetCFNumber'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='CFNumberRef' type='^{__CFNumber=}'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetCFString'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetCString'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='char*' type='*' const='true'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetCStringArray'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='cStringArray' declared_type='char**' type='^*' const='true'/>
    <arg name='count' declared_type='UInt32' type='L' type64='I'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetDouble'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='double' type='d'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetDoubleArray'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='array' declared_type='double*' type='^d' const='true'/>
    <arg name='count' declared_type='UInt32' type='L' type64='I'/>
    <arg name='changeable' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetItem'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='CFTypeRef' type='@'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetMetaItem'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='CFTypeRef' type='@'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetPMRect'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='PMRect*' type='^{PMRect=dddd}'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetPMRectArray'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='pmRectArray' declared_type='PMRect*' type='^{PMRect=dddd}'/>
    <arg name='count' declared_type='UInt32' type='L' type64='I'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetPMResolution'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='PMResolution*' type='^{PMResolution=dd}'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetPMResolutionArray'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='pmResolutionArray' declared_type='PMResolution*' type='^{PMResolution=dd}'/>
    <arg name='count' declared_type='UInt32' type='L' type64='I'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetPString'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='ConstStringPtr' type='*'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetSInt32'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='SInt32' type='l' type64='i'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetSInt32Array'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='sInt32Array' declared_type='SInt32*' type='^i' const='true'/>
    <arg name='count' declared_type='UInt32' type='L' type64='I'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetTemplate'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='item' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetTicket'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='ticketToAdd' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='index' declared_type='UInt32' type='L' type64='I'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetUInt32'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='value' declared_type='UInt32' type='L' type64='I'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketSetUInt32Array'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='uInt32Array' declared_type='UInt32*' type='^I' const='true'/>
    <arg name='count' declared_type='UInt32' type='L' type64='I'/>
    <arg name='locked' declared_type='Boolean' type='B'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketToXML'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='anXMLTicket' declared_type='CFDataRef*' type='^^{__CFData}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketToXMLURL'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='anXMLFileURL' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <arg name='format' declared_type='CFPropertyListFormat' type='i'/>
    <arg name='errorString' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketUnlockItem'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='clientID' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketValidate'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='verifyingTemplate' declared_type='PMTemplateRef' type='^{OpaquePMTemplateRef=}'/>
    <arg name='invalidItems' declared_type='CFArrayRef*' type='^^{__CFArray}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketWriteXML'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='file' declared_type='FILE*' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMTicketWriteXMLToFile'>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='path' declared_type='char*' type='*' const='true'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMUnflattenPageFormat'>
    <arg name='flatFormat' declared_type='Handle' type='^*'/>
    <arg name='pageFormat' declared_type='PMPageFormat*' type='^^{OpaquePMPageFormat}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMUnflattenPageFormatWithCFData'>
    <arg name='flattenCFData' declared_type='CFDataRef' type='^{__CFData=}'/>
    <arg name='pageFormat' declared_type='PMPageFormat*' type='^^{OpaquePMPageFormat}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMUnflattenPageFormatWithURL'>
    <arg name='flattenFileURL' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <arg name='pageFormat' declared_type='PMPageFormat*' type='^^{OpaquePMPageFormat}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMUnflattenPrintSettings'>
    <arg name='flatSettings' declared_type='Handle' type='^*'/>
    <arg name='printSettings' declared_type='PMPrintSettings*' type='^^{OpaquePMPrintSettings}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMUnflattenPrintSettingsWithCFData'>
    <arg name='flattenCFData' declared_type='CFDataRef' type='^{__CFData=}'/>
    <arg name='printSettings' declared_type='PMPrintSettings*' type='^^{OpaquePMPrintSettings}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMUnflattenPrintSettingsWithURL'>
    <arg name='flattenFileURL' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <arg name='printSettings' declared_type='PMPrintSettings*' type='^^{OpaquePMPrintSettings}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMWorkflowCopyItems'>
    <arg name='workflowItems' declared_type='CFArrayRef*' type='^^{__CFArray}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMWorkflowSubmitPDFWithOptions'>
    <arg name='workflowItem' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <arg name='title' declared_type='CFStringRef' type='^{__CFString=}'/>
    <arg name='options' declared_type='char*' type='*' const='true'/>
    <arg name='pdfFile' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMWorkflowSubmitPDFWithSettings'>
    <arg name='workflowItem' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <arg name='settings' declared_type='PMPrintSettings' type='^{OpaquePMPrintSettings=}'/>
    <arg name='pdfFile' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMXMLToTicket'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='anXMLTicket' declared_type='CFDataRef' type='^{__CFData=}'/>
    <arg name='ticket' declared_type='PMTicketRef*' type='^^{OpaquePMTicketRef}'/>
    <arg name='conversionError' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PMXMLURLToTicket'>
    <arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
    <arg name='anXMLURL' declared_type='CFURLRef' type='^{__CFURL=}'/>
    <arg name='ticket' declared_type='PMTicketRef*' type='^^{OpaquePMTicketRef}'/>
    <arg name='format' declared_type='CFPropertyListFormat*' type='^i'/>
    <arg name='errorString' declared_type='CFStringRef*' type='^^{__CFString}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PPDAddFeatureEntries'>
    <arg name='jobTicket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='psContextDictRef' declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='PPDAddFeatureEntriesFromPPDContext'>
    <arg name='jobTicket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='psContextDictRef' declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='getUIConstraintListH'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <retval declared_type='UIConstraintListH' type='^^{UIConstraintList}'/>
  </function>
  <function name='ppdApplyConstraints'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='ppdCheckConstraints'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='mainkey1' declared_type='Mindex*' type='^s'/>
    <arg name='optkey1' declared_type='Oindex*' type='^s'/>
    <arg name='mainkey2' declared_type='Mindex*' type='^s'/>
    <arg name='optkey2' declared_type='Oindex*' type='^s'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='ppdCheckDates'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <retval declared_type='int' type='i'/>
  </function>
  <function name='ppdClearOptions'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='mainKey' declared_type='Mindex' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='ppdCloseCompiledPPDFromTicket'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='tempPPDFileSpecP' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ppdCloseContext'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='ppdCountUIHeaders'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <retval declared_type='short' type='s'/>
  </function>
  <function name='ppdCountUIOptions'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='mainkey' declared_type='Mindex' type='s'/>
    <retval declared_type='short' type='s'/>
  </function>
  <function name='ppdCreateInstallableOptionsData'>
    <arg name='ppdSpec' declared_type='FSSpec' type='{FSSpec=sl[64C]}' type64='{FSSpec=sq[64C]}'/>
    <arg name='data' declared_type='char**' type='^*'/>
    <arg name='optionKeyWords' declared_type='CFMutableArrayRef' type='^{__CFArray=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ppdFindFile'>
    <arg name='base' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}'/>
    <arg name='name' declared_type='StringPtr' type='*'/>
    <arg name='useBase' declared_type='Boolean' type='B'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ppdGetAllOptions'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='addPair' function_pointer='true' declared_type='recordOptionPairProc' type='^?'>
      <arg declared_type='PPDContext' type='^{PPDContextViel=}'/>
      <arg declared_type='Mindex' type='s'/>
      <arg declared_type='Oindex' type='s'/>
      <arg declared_type='long' type='l' type64='q'/>
      <retval declared_type='OSErr' type='s'/>
    </arg>
    <arg name='refCon' declared_type='long' type='l' type64='q'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ppdGetCompiledPPDData'>
    <arg name='printerInfoTicket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='ppdData' declared_type='CFDataRef*' type='^^{__CFData}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ppdGetFolder'>
    <arg name='ppdFolder' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ppdGetGenericPPDName'>
    <arg name='genericPPDName' declared_type='unsigned char*' type='*'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ppdGetGroupAlias'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='groupKeyIndex' declared_type='Oindex' type='s'/>
    <arg name='buf' declared_type='Byte*' type='*'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='ppdGetIndUIHeader'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='index' declared_type='short' type='s'/>
    <arg name='p' declared_type='xUIHeaderP' type='^{xUIHeader=lsssssss}' type64='^{xUIHeader=qsssssss}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='ppdGetIndUIOption'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='mainKey' declared_type='Mindex' type='s'/>
    <arg name='index' declared_type='short' type='s'/>
    <arg name='p' declared_type='xUIOptionP' type='^{xUIOption=lssBB{InvocationLocator=issll}}' type64='^{xUIOption=qssBB{InvocationLocator=issqq}}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='ppdGetInvocation'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='invocation' declared_type='InvocationLocator*' type='^{InvocationLocator=issll}' type64='^{InvocationLocator=issqq}'/>
    <arg name='offset' declared_type='long*' type='^l' type64='^q'/>
    <arg name='count' declared_type='long*' type='^l' type64='^q'/>
    <arg name='buffer' declared_type='Ptr' type='*'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ppdGetInvocationFile'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='invocationType' declared_type='short' type='s'/>
    <arg name='theFile' declared_type='PPDFileSpec*' type='^{PPDFileSpec={FSSpec=sl[64C]}sl[64C]^^{AliasRecord}}' type64='^{PPDFileSpec={FSSpec=sq[64C]}sq[64C]^^{AliasRecord}}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ppdGetInvocationLocator'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='mainkey' declared_type='Mindex' type='s'/>
    <arg name='optionkey' declared_type='Oindex' type='s'/>
    <arg name='invocation' declared_type='InvocationLocator*' type='^{InvocationLocator=issll}' type64='^{InvocationLocator=issqq}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ppdGetInvocationString'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='mindex' declared_type='Mindex' type='s'/>
    <arg name='oindex' declared_type='Oindex' type='s'/>
    <arg name='data' declared_type='StringPtr' type='*'/>
    <arg name='maxLength' declared_type='short' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ppdGetInvocationStruct'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='mindex' declared_type='Mindex' type='s'/>
    <arg name='oindex' declared_type='Oindex' type='s'/>
    <arg name='data' declared_type='void*' type='^v'/>
    <arg name='size' declared_type='short' type='s'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ppdGetMainAlias'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='mainkey' declared_type='Mindex' type='s'/>
    <arg name='buffer' declared_type='StringPtr' type='*'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='ppdGetMainIndex'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='keyword' declared_type='StringPtr' type='*' const='true'/>
    <retval declared_type='Mindex' type='s'/>
  </function>
  <function name='ppdGetMainString'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='mainkey' declared_type='Mindex' type='s'/>
    <arg name='buffer' declared_type='StringPtr' type='*'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='ppdGetMessageTranslateList'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <retval declared_type='StrList**' type='^^{StrList}'/>
  </function>
  <function name='ppdGetOptionAlias'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='mainkey' declared_type='Mindex' type='s'/>
    <arg name='optionkey' declared_type='Oindex' type='s'/>
    <arg name='buffer' declared_type='StringPtr' type='*'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='ppdGetOptionIndex'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='keyword' declared_type='StringPtr' type='*' const='true'/>
    <retval declared_type='Oindex' type='s'/>
  </function>
  <function name='ppdGetOptionString'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='optionkey' declared_type='Oindex' type='s'/>
    <arg name='buffer' declared_type='StringPtr' type='*'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='ppdGetParseFolder'>
    <arg name='parseFolder' declared_type='FSSpecPtr' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ppdGetUIHeader'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='mainkey' declared_type='Mindex' type='s'/>
    <arg name='p' declared_type='xUIHeaderP' type='^{xUIHeader=lsssssss}' type64='^{xUIHeader=qsssssss}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='ppdGetUIKeyType'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='mainkey' declared_type='Mindex' type='s'/>
    <retval declared_type='short' type='s'/>
  </function>
  <function name='ppdGetUIOption'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='mainkey' declared_type='Mindex' type='s'/>
    <arg name='optionkey' declared_type='Oindex' type='s'/>
    <arg name='p' declared_type='xUIOptionP' type='^{xUIOption=lssBB{InvocationLocator=issll}}' type64='^{xUIOption=qssBB{InvocationLocator=issqq}}'/>
    <retval declared_type='Boolean' type='B'/>
  </function>
  <function name='ppdMatchPrinter'>
    <arg name='desc' declared_type='PPDPrinterDesc*' type='^{PPDPrinterDesc=***B}'/>
    <arg name='matchesP' declared_type='PPDMatchHandle*' type='^^^{?}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ppdOpenAndParsePPDAutoSetup'>
    <arg name='prInfo' declared_type='Collection' type='^{OpaqueCollection=}'/>
    <arg name='ppdContextP' declared_type='PPDContext*' type='^^{PPDContextViel}'/>
    <arg name='resFRefP' declared_type='short*' type='^s'/>
    <arg name='errInfoP' declared_type='PPDParseErr*' type='^{_PPDParseErr=[256C][256C]l}' type64='^{_PPDParseErr=[256C][256C]q}'/>
    <arg name='lastErr' declared_type='OSStatus*' type='^i'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ppdOpenCompiledPPDFromTicket'>
    <arg name='printerInfoTicket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <arg name='ppdContextP' declared_type='PPDContext*' type='^^{PPDContextViel}'/>
    <arg name='tempFSSpecP' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
  <function name='ppdOpenContext'>
    <arg name='compiledPPDRef' declared_type='short' type='s'/>
    <arg name='ppdContext' declared_type='PPDContext*' type='^^{PPDContextViel}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ppdParseFile'>
    <arg name='ppdFileSpec' declared_type='FSSpec*' type='^{FSSpec=sl[64C]}' type64='^{FSSpec=sq[64C]}' const='true'/>
    <arg name='compiledRef' declared_type='short' type='s'/>
    <arg name='compiledResFRef' declared_type='short' type='s'/>
    <arg name='errInfoP' declared_type='PPDParseErr*' type='^{_PPDParseErr=[256C][256C]l}' type64='^{_PPDParseErr=[256C][256C]q}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ppdParseHandle'>
    <arg name='ppdHandle' declared_type='Handle' type='^*'/>
    <arg name='compiledRef' declared_type='short' type='s'/>
    <arg name='compiledResFRef' declared_type='short' type='s'/>
    <arg name='errInfoP' declared_type='PPDParseErr*' type='^{_PPDParseErr=[256C][256C]l}' type64='^{_PPDParseErr=[256C][256C]q}'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='ppdSetDefaultOptions'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='groupIndex' declared_type='Oindex' type='s'/>
    <retval declared_type='void' type='v'/>
  </function>
  <function name='ppdSetSelection'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='mainKey' declared_type='Mindex' type='s'/>
    <arg name='optionKey' declared_type='Oindex' type='s'/>
    <arg name='setOrClear' declared_type='Boolean' type='B'/>
    <retval declared_type='OSErr' type='s'/>
  </function>
  <function name='setInstallableOptions'>
    <arg name='ppdContext' declared_type='PPDContext' type='^{PPDContextViel=}'/>
    <arg name='ticket' declared_type='PMTicketRef' type='^{OpaquePMTicketRef=}'/>
    <retval declared_type='OSStatus' type='l' type64='i'/>
  </function>
</signatures>
